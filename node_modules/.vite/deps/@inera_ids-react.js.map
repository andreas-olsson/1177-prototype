{
  "version": 3,
  "sources": ["../../@inera/ids-react/components/form/checkbox/checkbox.js", "../../@lit-labs/react/src/create-component.ts", "../../tslib/tslib.es6.js", "../../@lit/reactive-element/src/css-tag.ts", "../../@lit/reactive-element/src/reactive-element.ts", "../../lit-html/src/lit-html.ts", "../../lit-element/src/lit-element.ts", "../../@lit/reactive-element/src/decorators/property.ts", "../../@lit/reactive-element/src/decorators/state.ts", "../../@lit/reactive-element/src/decorators/query-assigned-elements.ts", "../../@inera/ids-core/utilities/utils.js", "../../@inera/ids-core/components/form/controller/BaseController.js", "../../@inera/ids-core/components/form/controller/AriaController.js", "../../@inera/ids-core/components/form/controller/DisabledController.js", "../../@inera/ids-core/components/form/base/form-base-styles.js", "../../@inera/ids-core/components/form/controller/ErrorController.js", "../../@inera/ids-core/components/form/base/form-base-element.js", "../../@inera/ids-core/components/form/checkbox/checkbox-styles.js", "../../@inera/ids-core/components/form/checkbox/checkbox-element.js", "../../@inera/ids-core/components/icons/icon-styles.js", "../../@inera/ids-core/components/icons/icon-base-element.js", "../../@inera/ids-core/components/icons/check/icon-check-element.js", "../../@inera/ids-core/components/icons/check/register.js", "../../@inera/ids-core/components/form/checkbox/register.js", "../../@inera/ids-react/components/form/checkbox/checkbox-group.js", "../../@inera/ids-core/components/form/controller/GroupErrorController.js", "../../@inera/ids-core/components/form/error-message/error-message-styles.js", "../../@inera/ids-core/components/form/error-message/error-message-element.js", "../../@inera/ids-core/components/icons/warning/icon-warning-element.js", "../../@inera/ids-core/components/icons/warning/register.js", "../../@inera/ids-core/components/form/error-message/register.js", "../../@inera/ids-core/components/form/group/group-styles.js", "../../@inera/ids-core/components/form/group/group-base-element.js", "../../@inera/ids-core/components/form/checkbox-group/checkbox-group-element.js", "../../@inera/ids-core/components/form/checkbox-group/register.js", "../../@inera/ids-react/components/form/input/input.js", "../../@inera/ids-core/components/form/input/input-styles.js", "../../@inera/ids-core/components/form/input/input-element.js", "../../@inera/ids-core/components/icons/search/icon-search-element.js", "../../@inera/ids-core/components/icons/search/register.js", "../../@inera/ids-core/components/icons/close-bold/icon-close-bold-element.js", "../../@inera/ids-core/components/icons/close-bold/register.js", "../../@inera/ids-core/components/form/input/register.js", "../../@inera/ids-react/components/form/radio/radio.js", "../../@inera/ids-core/components/form/radio/radio-styles.js", "../../@inera/ids-core/components/form/radio/radio-element.js", "../../@inera/ids-core/components/form/radio/radio-group-element.js", "../../@inera/ids-core/components/form/radio/register.js", "../../@inera/ids-react/components/form/radio/radio-group.js", "../../@inera/ids-react/components/form/textarea/textarea.js", "../../@inera/ids-core/components/form/textarea/textarea-styles.js", "../../@inera/ids-core/components/form/textarea/textarea-element.js", "../../@inera/ids-core/components/form/textarea/register.js", "../../@inera/ids-react/components/form/range/range.js", "../../@inera/ids-core/components/form/range/range-styles.js", "../../@inera/ids-core/components/form/range/range-element.js", "../../@inera/ids-core/components/form/range/register.js", "../../@inera/ids-react/components/form/select/select.js", "../../@inera/ids-core/components/form/select/select-styles.js", "../../@inera/ids-core/components/form/select/select-element.js", "../../@inera/ids-core/components/icons/chevron-bold/icon-chevron-bold-element.js", "../../@inera/ids-core/components/icons/chevron-bold/register.js", "../../@inera/ids-core/components/form/select/register.js", "../../@inera/ids-react/components/form/selectmultiple/select-multiple.js", "../../@inera/ids-core/components/form/select-multiple/select-multiple-styles.js", "../../@inera/ids-core/components/styles/global-styles.js", "../../@inera/ids-core/components/form/select-multiple/select-multiple-element.js", "../../@inera/ids-core/components/form/select-multiple/register.js", "../../@inera/ids-react/components/form/errormessage/error-message.js", "../../@inera/ids-react/components/form/time/time.js", "../../@inera/ids-core/components/form/time/time-styles.js", "../../@inera/ids-core/components/form/time/time-element.js", "../../@inera/ids-core/components/icons/clock/icon-clock-element.js", "../../@inera/ids-core/components/icons/clock/register.js", "../../@inera/ids-core/components/form/time/register.js", "../../@inera/ids-react/components/form/spinner/spinner.js", "../../@inera/ids-core/components/form/spinner/spinner-styles.js", "../../@inera/ids-core/components/form/spinner/spinner-element.js", "../../@inera/ids-core/components/form/spinner/register.js", "../../@inera/ids-react/components/icon/icon.js", "../../@inera/ids-core/components/icon/icons/icons.js", "../../@inera/ids-core/components/icon/icon-styles.js", "../../@inera/ids-core/components/icon/icon-element.js", "../../@inera/ids-core/components/icon/register.js", "../../@inera/ids-react/components/button/button.js", "../../lit-html/src/directives/if-defined.ts", "../../@inera/ids-core/components/button/button-styles.js", "../../@inera/ids-design/components/button/button-lit.js", "../../@inera/ids-core/components/button/button-element.js", "../../@inera/ids-core/components/button/register.js", "../../@inera/ids-react/components/button/button-group.js", "../../@inera/ids-design/components/button-group/button-group-lit.js", "../../@inera/ids-core/components/button-group/button-group-element.js", "../../@inera/ids-core/components/button-group/register.js", "../../@inera/ids-react/components/layout/grid.js", "../../@inera/ids-core/components/grid/column/column-styles.js", "../../@inera/ids-core/components/grid/column/column-element.js", "../../@inera/ids-core/components/grid/column/register.js", "../../@inera/ids-core/components/grid/row/row-styles.js", "../../@inera/ids-core/components/grid/row/row-element.js", "../../@inera/ids-core/components/grid/row/register.js", "../../@inera/ids-core/components/grid/container/container-styles.js", "../../@inera/ids-core/components/grid/container/container-element.js", "../../@inera/ids-core/components/grid/container/register.js", "../../@inera/ids-react/components/alert/alert.js", "../../@inera/ids-design/components/alert/alert-lit.js", "../../@inera/ids-core/components/alert/alert-element.js", "../../@inera/ids-core/components/icons/attention/icon-attention-element.js", "../../@inera/ids-core/components/icons/attention/register.js", "../../@inera/ids-core/components/icons/success/icon-success-element.js", "../../@inera/ids-core/components/icons/success/register.js", "../../@inera/ids-core/components/icons/information/icon-information-element.js", "../../@inera/ids-core/components/icons/information/register.js", "../../@inera/ids-core/components/alert/register.js", "../../@inera/ids-react/components/alert-global/alert-global.js", "../../@inera/ids-design/components/alert-global/alert-global-lit.js", "../../@inera/ids-core/components/alert-global/alert-global-element.js", "../../@inera/ids-core/components/alert-global/register.js", "../../@inera/ids-react/components/header/header.js", "../../@inera/ids-core/components/header/header-styles.js", "../../@inera/ids-core/components/header/header-element.js", "../../@inera/ids-core/components/header/avatar/header-avatar-styles.js", "../../@inera/ids-core/components/header/avatar/header-avatar-element.js", "../../@inera/ids-core/components/header/item/header-item-styles.js", "../../@inera/ids-core/components/header/item/header-item-element.js", "../../@inera/ids-core/components/header/navigation/navigation-styles.js", "../../@inera/ids-core/components/header/navigation/navigation-element.js", "../../@inera/ids-core/components/header/navigation/item/navigation-item-styles.js", "../../@inera/ids-core/components/header/navigation/item/navigation-item-element.js", "../../@inera/ids-core/components/header/navigation/mobile-item/mobile-item-styles.js", "../../@inera/ids-core/components/header/navigation/mobile-item/mobile-item-element.js", "../../@inera/ids-core/components/header/mobile-menu/header-mobile-menu-styles.js", "../../@inera/ids-core/components/header/mobile-menu/header-mobile-menu-element.js", "../../@inera/ids-core/components/mobile/menu/avatar/mobile-menu-avatar-styles.js", "../../@inera/ids-core/components/mobile/menu/avatar/mobile-menu-avatar-element.js", "../../@inera/ids-core/components/icons/user/icon-user-element.js", "../../@inera/ids-core/components/icons/user/register.js", "../../@inera/ids-core/components/icons/1177/icon-1177-element.js", "../../@inera/ids-core/components/icons/1177/register.js", "../../@inera/ids-core/components/icons/inera/icon-inera-element.js", "../../@inera/ids-core/components/icons/inera/register.js", "../../@inera/ids-core/components/icons/inera-legacy/icon-inera-legacy-element.js", "../../@inera/ids-core/components/icons/inera-legacy/register.js", "../../@inera/ids-design/components/mobile-menu/mobile-menu-lit.js", "../../@inera/ids-core/components/mobile/menu/mobile-menu-element.js", "../../@inera/ids-core/components/mobile/menu/item/mobile-menu-item-styles.js", "../../@inera/ids-core/components/mobile/menu/item/mobile-menu-item-element.js", "../../@inera/ids-core/components/mobile/menu/register.js", "../../@inera/ids-core/components/header/register.js", "../../@inera/ids-react/components/header/item/header-item.js", "../../@inera/ids-react/components/header/avatar/header-avatar.js", "../../@inera/ids-react/components/header/navigation/navigation.js", "../../@inera/ids-react/components/header/navigation/item/nav-item.js", "../../@inera/ids-react/components/header/navigation/mobile-item/nav-mobile-item.js", "../../@inera/ids-react/components/header/mobile-menu/header-mobile-menu.js", "../../@inera/ids-react/components/mobile/menu/avatar/mobile-avatar.js", "../../@inera/ids-react/components/mobile/menu/item/mobile-item.js", "../../@inera/ids-react/components/mobile/menu/mobile-menu.js", "../../@inera/ids-react/components/link/link.js", "../../@inera/ids-core/components/link/link-styles.js", "../../@inera/ids-design/components/link/link-lit.js", "../../@inera/ids-core/components/link/link-element.js", "../../@inera/ids-core/components/link/register.js", "../../@inera/ids-react/components/footer/footer.js", "../../@inera/ids-core/components/footer/footer-styles.js", "../../@inera/ids-design/components/footer/footer-lit.js", "../../@inera/ids-core/components/footer/footer-element.js", "../../@inera/ids-core/components/footer/register.js", "../../@inera/ids-react/components/notification/badge/notification-badge.js", "../../@inera/ids-core/components/notification/badge/notification-badge-styles.js", "../../@inera/ids-core/components/notification/badge/notification-badge-element.js", "../../@inera/ids-core/components/notification/badge/register.js", "../../@inera/ids-react/components/tabs/tabs.js", "../../@inera/ids-core/components/tabs/tabs-styles.js", "../../@inera/ids-core/components/tabs/tabs-element.js", "../../@inera/ids-core/components/tabs/tab/tab-styles.js", "../../@inera/ids-core/components/tabs/tab/tab-element.js", "../../@inera/ids-core/components/tabs/panel/tab-panel-styles.js", "../../@inera/ids-core/components/tabs/panel/tab-panel-element.js", "../../@inera/ids-core/components/tabs/register.js", "../../@inera/ids-react/components/list/list.js", "../../@inera/ids-core/components/list/list-styles.js", "../../@inera/ids-core/components/list/list-element.js", "../../@inera/ids-core/components/list/item/list-item-styles.js", "../../@inera/ids-core/components/list/item/list-item-element.js", "../../@inera/ids-core/components/list/item/info/list-item-info-styles.js", "../../@inera/ids-core/components/list/item/info/list-item-info-element.js", "../../@inera/ids-design/components/date-label/date-label-lit.js", "../../@inera/ids-core/components/date-label/date-label-element.js", "../../@inera/ids-core/components/date-label/register.js", "../../@inera/ids-core/components/list/register.js", "../../@inera/ids-react/components/list/item/list-item.js", "../../@inera/ids-react/components/list/item/info/list-item-info.js", "../../@inera/ids-react/components/date-label/date-label.js", "../../@inera/ids-react/components/breadcrumbs/breacrumbs.js", "../../@inera/ids-design/components/breadcrumbs/breadcrumbs-lit.js", "../../@inera/ids-core/components/breadcrumbs/breadcrumbs-element.js", "../../@inera/ids-core/components/breadcrumbs/crumb/crumb-element.js", "../../@inera/ids-core/components/breadcrumbs/register.js", "../../@inera/ids-react/components/dialog/dialog.js", "../../@inera/ids-core/controllers/FocusTrapController.js", "../../@inera/ids-design/components/dialog/dialog-lit.js", "../../@inera/ids-core/components/dialog/dialog-element.js", "../../@inera/ids-core/components/icons/close/icon-close-element.js", "../../@inera/ids-core/components/icons/close/register.js", "../../@inera/ids-core/components/dialog/register.js", "../../@inera/ids-react/components/card/card.js", "../../@inera/ids-design/components/card/card-lit.js", "../../@inera/ids-core/components/card/card-element.js", "../../@inera/ids-core/components/card/register.js", "../../@inera/ids-react/components/agent/agent.js", "../../@inera/ids-core/components/agent/agent-styles.js", "../../@inera/ids-core/components/agent/agent-element.js", "../../@inera/ids-core/components/icons/agent/icon-agent-element.js", "../../@inera/ids-core/components/icons/agent/register.js", "../../@inera/ids-core/components/agent/register.js", "../../@inera/ids-react/components/expandable/expandable.js", "../../@inera/ids-design/components/expandable/expandable-lit.js", "../../@inera/ids-core/components/expandable/expandable-element.js", "../../@inera/ids-core/components/icons/plus/icon-plus-element.js", "../../@inera/ids-core/components/icons/plus/register.js", "../../@inera/ids-core/components/icons/minus/icon-minus-element.js", "../../@inera/ids-core/components/icons/minus/register.js", "../../@inera/ids-core/components/expandable/register.js", "../../@inera/ids-react/components/popover/popover.js", "../../@inera/ids-core/components/popover/popover-styles.js", "../../@inera/ids-core/components/popover/popover-element.js", "../../@inera/ids-core/components/popover/content/popover-content-styles.js", "../../@inera/ids-core/components/popover/content/popover-content-element.js", "../../@inera/ids-core/components/popover/register.js", "../../@inera/ids-react/components/progressbar/progressbar.js", "../../@inera/ids-design/components/progressbar/progressbar-lit.js", "../../@inera/ids-core/components/progressbar/progressbar-element.js", "../../@inera/ids-core/components/progressbar/register.js", "../../@inera/ids-react/components/badge/badge.js", "../../@inera/ids-design/components/badge/badge-lit.js", "../../@inera/ids-core/components/badge/badge-element.js", "../../@inera/ids-core/components/badge/register.js", "../../@inera/ids-react/components/tooltip/tooltip.js", "../../@inera/ids-core/components/tooltip/tooltip-styles.js", "../../@inera/ids-core/components/tooltip/tooltip-element.js", "../../@inera/ids-core/components/tooltip/register.js", "../../@inera/ids-react/components/navigation/content/navigation-content.js", "../../@inera/ids-core/components/navigation/content/navigation-content-styles.js", "../../@inera/ids-core/components/navigation/content/navigation-content-element.js", "../../@inera/ids-core/components/navigation/content/register.js", "../../@inera/ids-react/components/carousel/carousel.js", "../../@inera/ids-core/components/carousel/carousel-styles.js", "../../@inera/ids-core/components/carousel/carousel-element.js", "../../@inera/ids-core/components/carousel/carousel-item/carousel-item-styles.js", "../../@inera/ids-core/components/carousel/carousel-item/carousel-item-element.js", "../../@inera/ids-core/components/icons/chevron/icon-chevron-element.js", "../../@inera/ids-core/components/icons/chevron/register.js", "../../@inera/ids-core/components/carousel/register.js", "../../@inera/ids-react/components/tag/tag.js", "../../@inera/ids-design/components/tag/tag-lit.js", "../../@inera/ids-core/components/tag/tag-element.js", "../../@inera/ids-core/components/tag/register.js", "../../@inera/ids-react/components/stepper/stepper.js", "../../@inera/ids-core/components/stepper/stepper-element.js", "../../@inera/ids-core/components/stepper/step/step-styles.js", "../../@inera/ids-core/components/stepper/step/step-element.js", "../../@inera/ids-core/components/stepper/register.js", "../../@inera/ids-react/components/form/toggle/toggle.js", "../../@inera/ids-core/components/form/toggle/toggle-styles.js", "../../@inera/ids-core/components/form/toggle/toggle-element.js", "../../@inera/ids-core/components/form/toggle/register.js", "../../@inera/ids-react/components/icon-region/icon-region.js", "../../@inera/ids-core/components/icon-region/icon-region.styles.js", "../../@inera/ids-core/components/icon-region/icon-region-element.js", "../../@inera/ids-core/components/icons/blekinge/icon-blekinge-element.js", "../../@inera/ids-core/components/icons/blekinge/register.js", "../../@inera/ids-core/components/icons/gotland/icon-gotland-element.js", "../../@inera/ids-core/components/icons/gotland/register.js", "../../@inera/ids-core/components/icons/halland/icon-halland-element.js", "../../@inera/ids-core/components/icons/halland/register.js", "../../@inera/ids-core/components/icons/dalarna/icon-dalarna-element.js", "../../@inera/ids-core/components/icons/dalarna/register.js", "../../@inera/ids-core/components/icons/gavleborg/icon-gavleborg-element.js", "../../@inera/ids-core/components/icons/gavleborg/register.js", "../../@inera/ids-core/components/icons/jamtland-harjedalen/icon-jamtland-harjedalen-element.js", "../../@inera/ids-core/components/icons/jamtland-harjedalen/register.js", "../../@inera/ids-core/components/icons/jonkoping/icon-jonkoping-element.js", "../../@inera/ids-core/components/icons/jonkoping/register.js", "../../@inera/ids-core/components/icons/kalmar/icon-kalmar-element.js", "../../@inera/ids-core/components/icons/kalmar/register.js", "../../@inera/ids-core/components/icons/kronoberg/icon-kronoberg-element.js", "../../@inera/ids-core/components/icons/kronoberg/register.js", "../../@inera/ids-core/components/icons/norrbotten/icon-norrbotten-element.js", "../../@inera/ids-core/components/icons/norrbotten/register.js", "../../@inera/ids-core/components/icons/orebro/icon-orebro-element.js", "../../@inera/ids-core/components/icons/orebro/register.js", "../../@inera/ids-core/components/icons/ostergotland/icon-ostergotland-element.js", "../../@inera/ids-core/components/icons/ostergotland/register.js", "../../@inera/ids-core/components/icons/skane/icon-skane-element.js", "../../@inera/ids-core/components/icons/skane/register.js", "../../@inera/ids-core/components/icons/sormland/icon-sormland-element.js", "../../@inera/ids-core/components/icons/sormland/register.js", "../../@inera/ids-core/components/icons/stockholm/icon-stockholm-element.js", "../../@inera/ids-core/components/icons/stockholm/register.js", "../../@inera/ids-core/components/icons/uppsala/icon-uppsala-element.js", "../../@inera/ids-core/components/icons/uppsala/register.js", "../../@inera/ids-core/components/icons/vasternorrland/icon-vasternorrland-element.js", "../../@inera/ids-core/components/icons/vasternorrland/register.js", "../../@inera/ids-core/components/icons/varmland/icon-varmland-element.js", "../../@inera/ids-core/components/icons/varmland/register.js", "../../@inera/ids-core/components/icons/vasterbotten/icon-vasterbotten-element.js", "../../@inera/ids-core/components/icons/vasterbotten/register.js", "../../@inera/ids-core/components/icons/vastra-gotaland/icon-vastra-gotaland-element.js", "../../@inera/ids-core/components/icons/vastra-gotaland/register.js", "../../@inera/ids-core/components/icons/vastmanland/icon-vastmanland-element.js", "../../@inera/ids-core/components/icons/vastmanland/register.js", "../../@inera/ids-core/components/icon-region/register.js", "../../@inera/ids-react/components/navigation/local/navigation-local.js", "../../@inera/ids-core/components/navigation/local/navigation-local-styles.js", "../../@inera/ids-core/components/navigation/local/navigation-local-element.js", "../../@inera/ids-core/components/navigation/local/register.js", "../../@inera/ids-react/components/icons/icon-1177.js", "../../@inera/ids-react/components/icons/icon-agent.js", "../../@inera/ids-react/components/icons/icon-arrow.js", "../../@inera/ids-core/components/icons/arrow/icon-arrow-element.js", "../../@inera/ids-core/components/icons/arrow/register.js", "../../@inera/ids-react/components/icons/icon-attention.js", "../../@inera/ids-react/components/icons/icon-blekinge.js", "../../@inera/ids-react/components/icons/icon-bookmark.js", "../../@inera/ids-core/components/icons/bookmark/icon-bookmark-element.js", "../../@inera/ids-core/components/icons/bookmark/register.js", "../../@inera/ids-react/components/icons/icon-calendar.js", "../../@inera/ids-core/components/icons/calendar/icon-calendar-element.js", "../../@inera/ids-core/components/icons/calendar/register.js", "../../@inera/ids-react/components/icons/icon-call.js", "../../@inera/ids-core/components/icons/call/icon-call-element.js", "../../@inera/ids-core/components/icons/call/register.js", "../../@inera/ids-react/components/icons/icon-call-active.js", "../../@inera/ids-core/components/icons/call-active/icon-call-active-element.js", "../../@inera/ids-core/components/icons/call-active/register.js", "../../@inera/ids-react/components/icons/icon-camera-off.js", "../../@inera/ids-core/components/icons/camera-off/icon-camera-off-element.js", "../../@inera/ids-core/components/icons/camera-off/register.js", "../../@inera/ids-react/components/icons/icon-camera-on.js", "../../@inera/ids-core/components/icons/camera-on/icon-camera-on-element.js", "../../@inera/ids-core/components/icons/camera-on/register.js", "../../@inera/ids-react/components/icons/icon-camera-switch.js", "../../@inera/ids-core/components/icons/camera-switch/icon-camera-switch-element.js", "../../@inera/ids-core/components/icons/camera-switch/register.js", "../../@inera/ids-react/components/icons/icon-chart-bar.js", "../../@inera/ids-core/components/icons/chart-bar/icon-chart-bar-element.js", "../../@inera/ids-core/components/icons/chart-bar/register.js", "../../@inera/ids-react/components/icons/icon-chart-line.js", "../../@inera/ids-core/components/icons/chart-line/icon-chart-line-element.js", "../../@inera/ids-core/components/icons/chart-line/register.js", "../../@inera/ids-react/components/icons/icon-check.js", "../../@inera/ids-react/components/icons/icon-chevron.js", "../../@inera/ids-react/components/icons/icon-chevron-bold.js", "../../@inera/ids-react/components/icons/icon-clipboard.js", "../../@inera/ids-core/components/icons/clipboard/icon-clipboard-element.js", "../../@inera/ids-core/components/icons/clipboard/register.js", "../../@inera/ids-react/components/icons/icon-clipboard-cross.js", "../../@inera/ids-core/components/icons/clipboard-cross/icon-clipboard-cross-element.js", "../../@inera/ids-core/components/icons/clipboard-cross/register.js", "../../@inera/ids-react/components/icons/icon-clipboard-text.js", "../../@inera/ids-core/components/icons/clipboard-text/icon-clipboard-text-element.js", "../../@inera/ids-core/components/icons/clipboard-text/register.js", "../../@inera/ids-react/components/icons/icon-clock.js", "../../@inera/ids-react/components/icons/icon-close.js", "../../@inera/ids-react/components/icons/icon-close-bold.js", "../../@inera/ids-react/components/icons/icon-cog.js", "../../@inera/ids-core/components/icons/cog/icon-cog-element.js", "../../@inera/ids-core/components/icons/cog/register.js", "../../@inera/ids-react/components/icons/icon-computer.js", "../../@inera/ids-core/components/icons/computer/icon-computer-element.js", "../../@inera/ids-core/components/icons/computer/register.js", "../../@inera/ids-react/components/icons/icon-computer-inera.js", "../../@inera/ids-core/components/icons/computer-inera/icon-computer-inera-element.js", "../../@inera/ids-core/components/icons/computer-inera/register.js", "../../@inera/ids-react/components/icons/icon-copy-file.js", "../../@inera/ids-core/components/icons/copy-file/icon-copy-file-element.js", "../../@inera/ids-core/components/icons/copy-file/register.js", "../../@inera/ids-react/components/icons/icon-copy-link.js", "../../@inera/ids-core/components/icons/copy-link/icon-copy-link-element.js", "../../@inera/ids-core/components/icons/copy-link/register.js", "../../@inera/ids-react/components/icons/icon-dalarna.js", "../../@inera/ids-react/components/icons/icon-doctors-bag.js", "../../@inera/ids-core/components/icons/doctors-bag/icon-doctors-bag-element.js", "../../@inera/ids-core/components/icons/doctors-bag/register.js", "../../@inera/ids-react/components/icons/icon-drag-n-drop.js", "../../@inera/ids-core/components/icons/drag-n-drop/icon-drag-n-drop-element.js", "../../@inera/ids-core/components/icons/drag-n-drop/register.js", "../../@inera/ids-react/components/icons/icon-ear-hearing.js", "../../@inera/ids-core/components/icons/ear-hearing/icon-ear-hearing-element.js", "../../@inera/ids-core/components/icons/ear-hearing/register.js", "../../@inera/ids-react/components/icons/icon-edit.js", "../../@inera/ids-core/components/icons/edit/icon-edit-element.js", "../../@inera/ids-core/components/icons/edit/register.js", "../../@inera/ids-react/components/icons/icon-email.js", "../../@inera/ids-core/components/icons/email/icon-email-element.js", "../../@inera/ids-core/components/icons/email/register.js", "../../@inera/ids-react/components/icons/icon-expand.js", "../../@inera/ids-core/components/icons/expand/icon-expand-element.js", "../../@inera/ids-core/components/icons/expand/register.js", "../../@inera/ids-react/components/icons/icon-external.js", "../../@inera/ids-core/components/icons/external/icon-external-element.js", "../../@inera/ids-core/components/icons/external/register.js", "../../@inera/ids-react/components/icons/icon-facebook.js", "../../@inera/ids-core/components/icons/facebook/icon-facebook-element.js", "../../@inera/ids-core/components/icons/facebook/register.js", "../../@inera/ids-react/components/icons/icon-file-excel.js", "../../@inera/ids-core/components/icons/file-excel/icon-file-excel-element.js", "../../@inera/ids-core/components/icons/file-excel/register.js", "../../@inera/ids-react/components/icons/icon-file-other.js", "../../@inera/ids-core/components/icons/file-other/icon-file-other-element.js", "../../@inera/ids-core/components/icons/file-other/register.js", "../../@inera/ids-react/components/icons/icon-file-pdf.js", "../../@inera/ids-core/components/icons/file-pdf/icon-file-pdf-element.js", "../../@inera/ids-core/components/icons/file-pdf/register.js", "../../@inera/ids-react/components/icons/icon-file-picture.js", "../../@inera/ids-core/components/icons/file-picture/icon-file-picture-element.js", "../../@inera/ids-core/components/icons/file-picture/register.js", "../../@inera/ids-react/components/icons/icon-file-powerpoint.js", "../../@inera/ids-core/components/icons/file-powerpoint/icon-file-powerpoint-element.js", "../../@inera/ids-core/components/icons/file-powerpoint/register.js", "../../@inera/ids-react/components/icons/icon-file-word.js", "../../@inera/ids-core/components/icons/file-word/icon-file-word-element.js", "../../@inera/ids-core/components/icons/file-word/register.js", "../../@inera/ids-react/components/icons/icon-find-care.js", "../../@inera/ids-core/components/icons/find-care/icon-find-care-element.js", "../../@inera/ids-core/components/icons/find-care/register.js", "../../@inera/ids-react/components/icons/icon-find-region.js", "../../@inera/ids-core/components/icons/find-region/icon-find-region-element.js", "../../@inera/ids-core/components/icons/find-region/register.js", "../../@inera/ids-react/components/icons/icon-gavleborg.js", "../../@inera/ids-react/components/icons/icon-gotland.js", "../../@inera/ids-react/components/icons/icon-halland.js", "../../@inera/ids-react/components/icons/icon-house.js", "../../@inera/ids-core/components/icons/house/icon-house-element.js", "../../@inera/ids-core/components/icons/house/register.js", "../../@inera/ids-react/components/icons/icon-id-card.js", "../../@inera/ids-core/components/icons/id-card/icon-id-card-element.js", "../../@inera/ids-core/components/icons/id-card/register.js", "../../@inera/ids-react/components/icons/icon-id-card-locked.js", "../../@inera/ids-core/components/icons/id-card-locked/icon-id-card-locked-element.js", "../../@inera/ids-core/components/icons/id-card-locked/register.js", "../../@inera/ids-react/components/icons/icon-image.js", "../../@inera/ids-core/components/icons/image/icon-image-element.js", "../../@inera/ids-core/components/icons/image/register.js", "../../@inera/ids-react/components/icons/icon-inera.js", "../../@inera/ids-react/components/icons/icon-inera-legacy.js", "../../@inera/ids-react/components/icons/icon-information.js", "../../@inera/ids-react/components/icons/icon-jamtland-harjedalen.js", "../../@inera/ids-react/components/icons/icon-jonkoping.js", "../../@inera/ids-react/components/icons/icon-kalmar.js", "../../@inera/ids-react/components/icons/icon-kronoberg.js", "../../@inera/ids-react/components/icons/icon-lightbulb.js", "../../@inera/ids-core/components/icons/lightbulb/icon-lightbulb-element.js", "../../@inera/ids-core/components/icons/lightbulb/register.js", "../../@inera/ids-react/components/icons/icon-linkedin.js", "../../@inera/ids-core/components/icons/linkedin/icon-linkedin-element.js", "../../@inera/ids-core/components/icons/linkedin/register.js", "../../@inera/ids-react/components/icons/icon-list.js", "../../@inera/ids-core/components/icons/list/icon-list-element.js", "../../@inera/ids-core/components/icons/list/register.js", "../../@inera/ids-react/components/icons/icon-lock.js", "../../@inera/ids-core/components/icons/lock/icon-lock-element.js", "../../@inera/ids-core/components/icons/lock/register.js", "../../@inera/ids-react/components/icons/icon-lock-open.js", "../../@inera/ids-core/components/icons/lock-open/icon-lock-open-element.js", "../../@inera/ids-core/components/icons/lock-open/register.js", "../../@inera/ids-react/components/icons/icon-log.js", "../../@inera/ids-core/components/icons/log/icon-log-element.js", "../../@inera/ids-core/components/icons/log/register.js", "../../@inera/ids-react/components/icons/icon-log-locked.js", "../../@inera/ids-core/components/icons/log-locked/icon-log-locked-element.js", "../../@inera/ids-core/components/icons/log-locked/register.js", "../../@inera/ids-react/components/icons/icon-menu.js", "../../@inera/ids-core/components/icons/menu/icon-menu-element.js", "../../@inera/ids-core/components/icons/menu/register.js", "../../@inera/ids-react/components/icons/icon-minus.js", "../../@inera/ids-react/components/icons/icon-norrbotten.js", "../../@inera/ids-react/components/icons/icon-office-building.js", "../../@inera/ids-core/components/icons/office-building/icon-office-building-element.js", "../../@inera/ids-core/components/icons/office-building/register.js", "../../@inera/ids-react/components/icons/icon-orebro.js", "../../@inera/ids-react/components/icons/icon-organization.js", "../../@inera/ids-core/components/icons/organization/icon-organization-element.js", "../../@inera/ids-core/components/icons/organization/register.js", "../../@inera/ids-react/components/icons/icon-ostergotland.js", "../../@inera/ids-react/components/icons/icon-plus.js", "../../@inera/ids-react/components/icons/icon-print.js", "../../@inera/ids-core/components/icons/print/icon-print-element.js", "../../@inera/ids-core/components/icons/print/register.js", "../../@inera/ids-react/components/icons/icon-question.js", "../../@inera/ids-core/components/icons/question/icon-question-element.js", "../../@inera/ids-core/components/icons/question/register.js", "../../@inera/ids-react/components/icons/icon-reload.js", "../../@inera/ids-core/components/icons/reload/icon-reload-element.js", "../../@inera/ids-core/components/icons/reload/register.js", "../../@inera/ids-react/components/icons/icon-reply.js", "../../@inera/ids-core/components/icons/reply/icon-reply-element.js", "../../@inera/ids-core/components/icons/reply/register.js", "../../@inera/ids-react/components/icons/icon-search-inera.js", "../../@inera/ids-core/components/icons/search-inera/icon-search-inera-element.js", "../../@inera/ids-core/components/icons/search-inera/register.js", "../../@inera/ids-react/components/icons/icon-search.js", "../../@inera/ids-react/components/icons/icon-shield-locked-primary.js", "../../@inera/ids-core/components/icons/shield-locked-primary/icon-shield-locked-primary-element.js", "../../@inera/ids-core/components/icons/shield-locked-primary/register.js", "../../@inera/ids-react/components/icons/icon-shield-locked.js", "../../@inera/ids-core/components/icons/shield-locked/icon-shield-locked-element.js", "../../@inera/ids-core/components/icons/shield-locked/register.js", "../../@inera/ids-react/components/icons/icon-skane.js", "../../@inera/ids-react/components/icons/icon-sormland.js", "../../@inera/ids-react/components/icons/icon-star-filled.js", "../../@inera/ids-core/components/icons/star-filled/icon-star-filled-element.js", "../../@inera/ids-core/components/icons/star-filled/register.js", "../../@inera/ids-react/components/icons/icon-star.js", "../../@inera/ids-core/components/icons/star/icon-star-element.js", "../../@inera/ids-core/components/icons/star/register.js", "../../@inera/ids-react/components/icons/icon-stockholm.js", "../../@inera/ids-react/components/icons/icon-success.js", "../../@inera/ids-react/components/icons/icon-swap.js", "../../@inera/ids-core/components/icons/swap/icon-swap-element.js", "../../@inera/ids-core/components/icons/swap/register.js", "../../@inera/ids-react/components/icons/icon-telephone.js", "../../@inera/ids-core/components/icons/telephone/icon-telephone-element.js", "../../@inera/ids-core/components/icons/telephone/register.js", "../../@inera/ids-react/components/icons/icon-test-tube-analyze.js", "../../@inera/ids-core/components/icons/test-tube-analyze/icon-test-tube-analyze-element.js", "../../@inera/ids-core/components/icons/test-tube-analyze/register.js", "../../@inera/ids-react/components/icons/icon-test-tube-empty.js", "../../@inera/ids-core/components/icons/test-tube-empty/icon-test-tube-empty-element.js", "../../@inera/ids-core/components/icons/test-tube-empty/register.js", "../../@inera/ids-react/components/icons/icon-test-tube.js", "../../@inera/ids-core/components/icons/test-tube/icon-test-tube-element.js", "../../@inera/ids-core/components/icons/test-tube/register.js", "../../@inera/ids-react/components/icons/icon-toggle-card.js", "../../@inera/ids-core/components/icons/toggle-card/icon-toggle-card-element.js", "../../@inera/ids-core/components/icons/toggle-card/register.js", "../../@inera/ids-react/components/icons/icon-toggle-list.js", "../../@inera/ids-core/components/icons/toggle-list/icon-toggle-list-element.js", "../../@inera/ids-core/components/icons/toggle-list/register.js", "../../@inera/ids-react/components/icons/icon-trash.js", "../../@inera/ids-core/components/icons/trash/icon-trash-element.js", "../../@inera/ids-core/components/icons/trash/register.js", "../../@inera/ids-react/components/icons/icon-twitter.js", "../../@inera/ids-core/components/icons/twitter/icon-twitter-element.js", "../../@inera/ids-core/components/icons/twitter/register.js", "../../@inera/ids-react/components/icons/icon-uppsala.js", "../../@inera/ids-react/components/icons/icon-user.js", "../../@inera/ids-react/components/icons/icon-varmland.js", "../../@inera/ids-react/components/icons/icon-vasterbotten.js", "../../@inera/ids-react/components/icons/icon-vasternorrland.js", "../../@inera/ids-react/components/icons/icon-vastmanland.js", "../../@inera/ids-react/components/icons/icon-vastra-gotaland.js", "../../@inera/ids-react/components/icons/icon-video-off.js", "../../@inera/ids-core/components/icons/video-off/icon-video-off-element.js", "../../@inera/ids-core/components/icons/video-off/register.js", "../../@inera/ids-react/components/icons/icon-video-on.js", "../../@inera/ids-core/components/icons/video-on/icon-video-on-element.js", "../../@inera/ids-core/components/icons/video-on/register.js", "../../@inera/ids-react/components/icons/icon-video-switch.js", "../../@inera/ids-core/components/icons/video-switch/icon-video-switch-element.js", "../../@inera/ids-core/components/icons/video-switch/register.js", "../../@inera/ids-react/components/icons/icon-visibility-off.js", "../../@inera/ids-core/components/icons/visibility-off/icon-visibility-off-element.js", "../../@inera/ids-core/components/icons/visibility-off/register.js", "../../@inera/ids-react/components/icons/icon-visibility.js", "../../@inera/ids-core/components/icons/visibility/icon-visibility-element.js", "../../@inera/ids-core/components/icons/visibility/register.js", "../../@inera/ids-react/components/icons/icon-warning.js"],
  "sourcesContent": ["import * as React from 'react';\nimport { createComponent } from '@lit-labs/react';\nimport '@inera/ids-core/components/form/checkbox/register';\nimport { IDSCheckbox as IDSCheckbox$1 } from '@inera/ids-core/components/form/checkbox/checkbox-element';\n\nconst IDSCheckbox = createComponent(React, 'ids-checkbox', IDSCheckbox$1);\n\nexport { IDSCheckbox };\n", "/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nconst NODE_MODE = false;\n\n// Match a prop name to a typed event callback by\n// adding an Event type as an expected property on a string.\nexport type EventName<T extends Event = Event> = string & {\n  __event_type: T;\n};\n\n// A key value map matching React prop names to event names\ntype EventNames = Record<string, EventName | string>;\n\n// A map of expected event listener types based on EventNames\ntype EventListeners<R extends EventNames> = {\n  [K in keyof R]: R[K] extends EventName\n    ? (e: R[K]['__event_type']) => void\n    : (e: Event) => void;\n};\n\ntype ReactProps<I, E> = Omit<React.HTMLAttributes<I>, keyof E>;\ntype ElementWithoutPropsOrEventListeners<I, E> = Omit<\n  I,\n  keyof E | keyof ReactProps<I, E>\n>;\n\n// Props the user is allowed to use, includes standard attributes, children,\n// ref, as well as special event and element properties.\nexport type WebComponentProps<\n  I extends HTMLElement,\n  E extends EventNames = {}\n> = Partial<\n  ReactProps<I, E> &\n    ElementWithoutPropsOrEventListeners<I, E> &\n    EventListeners<E>\n>;\n\n// Props used by this component wrapper. This is the WebComponentProps and the\n// special `__forwardedRef` property. Note, this ref is special because\n// it's both needed in this component to get access to the rendered element\n// and must fulfill any ref passed by the user.\ntype ReactComponentProps<\n  I extends HTMLElement,\n  E extends EventNames = {}\n> = WebComponentProps<I, E> & {\n  __forwardedRef: React.Ref<I>;\n};\n\nexport type ReactWebComponent<\n  I extends HTMLElement,\n  E extends EventNames = {}\n> = React.ForwardRefExoticComponent<\n  React.PropsWithoutRef<WebComponentProps<I, E>> & React.RefAttributes<I>\n>;\n\ninterface Options<I extends HTMLElement, E extends EventNames = {}> {\n  tagName: string;\n  elementClass: Constructor<I>;\n  react: typeof window.React;\n  events?: E;\n  displayName?: string;\n}\n\ntype Constructor<T> = {new (): T};\n\nconst DEV_MODE = true;\n\nconst reservedReactProperties = new Set([\n  'children',\n  'localName',\n  'ref',\n  'style',\n  'className',\n]);\n\nconst listenedEvents: WeakMap<\n  Element,\n  Map<string, EventListenerObject>\n> = new WeakMap();\n\n/**\n * Adds an event listener for the specified event to the given node. In the\n * React setup, there should only ever be one event listener. Thus, for\n * efficiency only one listener is added and the handler for that listener is\n * updated to point to the given listener function.\n */\nconst addOrUpdateEventListener = (\n  node: Element,\n  event: string,\n  listener: (event?: Event) => void\n) => {\n  let events = listenedEvents.get(node);\n  if (events === undefined) {\n    listenedEvents.set(node, (events = new Map()));\n  }\n  let handler = events.get(event);\n  if (listener !== undefined) {\n    // If necessary, add listener and track handler\n    if (handler === undefined) {\n      events.set(event, (handler = {handleEvent: listener}));\n      node.addEventListener(event, handler);\n      // Otherwise just update the listener with new value\n    } else {\n      handler.handleEvent = listener;\n    }\n    // Remove listener if one exists and value is undefined\n  } else if (handler !== undefined) {\n    events.delete(event);\n    node.removeEventListener(event, handler);\n  }\n};\n\n/**\n * Sets properties and events on custom elements. These properties and events\n * have been pre-filtered so we know they should apply to the custom element.\n */\nconst setProperty = <E extends Element>(\n  node: E,\n  name: string,\n  value: unknown,\n  old: unknown,\n  events?: EventNames\n) => {\n  const event = events?.[name];\n  if (event !== undefined && value !== old) {\n    // Dirty check event value.\n    addOrUpdateEventListener(node, event, value as (e?: Event) => void);\n    return;\n  }\n\n  // Note, the attribute removal here for `undefined` and `null` values is done\n  // to match React's behavior on non-custom elements. It needs special\n  // handling because it does not match platform behavior.  For example,\n  // setting the `id` property to `undefined` sets the attribute to the string\n  // \"undefined.\" React \"fixes\" that odd behavior and the code here matches\n  // React's convention.\n  if (\n    (value === undefined || value === null) &&\n    name in HTMLElement.prototype\n  ) {\n    node.removeAttribute(name);\n    return;\n  }\n\n  // But don't dirty check properties; elements are assumed to do this.\n  node[name as keyof E] = value as E[keyof E];\n};\n\n// Set a React ref. Note, there are 2 kinds of refs and there's no built in\n// React API to set a ref.\nconst setRef = (ref: React.Ref<unknown>, value: Element | null) => {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else {\n    (ref as {current: Element | null}).current = value;\n  }\n};\n\n/**\n * Creates a React component for a custom element. Properties are distinguished\n * from attributes automatically, and events can be configured so they are\n * added to the custom element as event listeners.\n *\n * @param options An options bag containing the parameters needed to generate\n * a wrapped web component.\n *\n * @param options.react The React module, typically imported from the `react` npm\n * package.\n * @param options.tagName The custom element tag name registered via\n * `customElements.define`.\n * @param options.elementClass The custom element class registered via\n * `customElements.define`.\n * @param options.events An object listing events to which the component can listen. The\n * object keys are the event property names passed in via React props and the\n * object values are the names of the corresponding events generated by the\n * custom element. For example, given `{onactivate: 'activate'}` an event\n * function may be passed via the component's `onactivate` prop and will be\n * called when the custom element fires its `activate` event.\n * @param options.displayName A React component display name, used in debugging\n * messages. Default value is inferred from the name of custom element class\n * registered via `customElements.define`.\n */\nexport function createComponent<\n  I extends HTMLElement,\n  E extends EventNames = {}\n>(options: Options<I, E>): ReactWebComponent<I, E>;\n/**\n * @deprecated Use `createComponent(options)` instead of individual arguments.\n *\n * Creates a React component for a custom element. Properties are distinguished\n * from attributes automatically, and events can be configured so they are\n * added to the custom element as event listeners.\n *\n * @param React The React module, typically imported from the `react` npm\n * package.\n * @param tagName The custom element tag name registered via\n * `customElements.define`.\n * @param elementClass The custom element class registered via\n * `customElements.define`.\n * @param events An object listing events to which the component can listen. The\n * object keys are the event property names passed in via React props and the\n * object values are the names of the corresponding events generated by the\n * custom element. For example, given `{onactivate: 'activate'}` an event\n * function may be passed via the component's `onactivate` prop and will be\n * called when the custom element fires its `activate` event.\n * @param displayName A React component display name, used in debugging\n * messages. Default value is inferred from the name of custom element class\n * registered via `customElements.define`.\n */\nexport function createComponent<\n  I extends HTMLElement,\n  E extends EventNames = {}\n>(\n  ReactOrOptions: typeof window.React,\n  tagName: string,\n  elementClass: Constructor<I>,\n  events?: E,\n  displayName?: string\n): ReactWebComponent<I, E>;\nexport function createComponent<\n  I extends HTMLElement,\n  E extends EventNames = {}\n>(\n  ReactOrOptions: typeof window.React | Options<I, E> = window.React,\n  tagName?: string,\n  elementClass?: Constructor<I>,\n  events?: E,\n  displayName?: string\n): ReactWebComponent<I, E> {\n  // digest overloaded parameters\n  let React: typeof window.React;\n  let tag: string;\n  let element: Constructor<I>;\n  if (tagName === undefined) {\n    const options = ReactOrOptions as Options<I, E>;\n    ({tagName: tag, elementClass: element, events, displayName} = options);\n    React = options.react;\n  } else {\n    React = ReactOrOptions as typeof window.React;\n    element = elementClass as Constructor<I>;\n    tag = tagName;\n  }\n\n  // Warn users when web components use reserved React properties\n  if (DEV_MODE) {\n    for (const p of reservedReactProperties) {\n      if (p in element.prototype && !(p in HTMLElement.prototype)) {\n        // Note, this effectively warns only for `ref` since the other\n        // reserved props are on HTMLElement.prototype. To address this\n        // would require crawling down the prototype, which doesn't feel worth\n        // it since implementing these properties on an element is extremely\n        // rare.\n        console.warn(`${tagName} contains property ${p} which is a React\nreserved property. It will be used by React and not set on\nthe element.`);\n      }\n    }\n  }\n\n  const Component = React.Component;\n  const createElement = React.createElement;\n  const eventProps = new Set(Object.keys(events ?? {}));\n\n  type Props = ReactComponentProps<I, E>;\n\n  class ReactComponent extends Component<Props> {\n    private _element: I | null = null;\n    private _elementProps!: Record<string, unknown>;\n    private _forwardedRef?: React.Ref<I>;\n    private _ref?: React.RefCallback<I>;\n\n    static displayName = displayName ?? element.name;\n\n    private _updateElement(oldProps?: Props) {\n      if (this._element === null) {\n        return;\n      }\n      // Set element properties to the values in `this.props`\n      for (const prop in this._elementProps) {\n        setProperty(\n          this._element,\n          prop,\n          this.props[prop],\n          oldProps ? oldProps[prop] : undefined,\n          events\n        );\n      }\n      // Note, the spirit of React might be to \"unset\" any old values that\n      // are no longer included; however, there's no reasonable value to set\n      // them to so we just leave the previous state as is.\n    }\n\n    /**\n     * Updates element properties correctly setting properties\n     * on mount.\n     */\n    override componentDidMount() {\n      this._updateElement();\n      this._element?.removeAttribute('defer-hydration');\n    }\n\n    /**\n     * Updates element properties correctly setting properties\n     * on every update. Note, this does not include mount.\n     */\n    override componentDidUpdate(old: Props) {\n      this._updateElement(old);\n    }\n\n    /**\n     * Renders the custom element with a `ref` prop which allows this\n     * component to reference the custom element.\n     *\n     * Standard attributes are passed to React and element properties and events\n     * are updated in componentDidMount/componentDidUpdate.\n     *\n     */\n    override render() {\n      // Extract and remove __forwardedRef from userProps in a rename-safe way\n      const {__forwardedRef, ...userProps} = this.props;\n      // Since refs only get fulfilled once, pass a new one if the user's ref\n      // changed. This allows refs to be fulfilled as expected, going from\n      // having a value to null.\n      if (this._forwardedRef !== __forwardedRef) {\n        this._ref = (value: I | null) => {\n          if (__forwardedRef !== null) {\n            setRef(__forwardedRef, value);\n          }\n\n          this._element = value;\n          this._forwardedRef = __forwardedRef;\n        };\n      }\n      // Save element props while iterating to avoid the need to iterate again\n      // when setting properties.\n      this._elementProps = {};\n      const props: Record<string, unknown> = {ref: this._ref};\n      // Filters class properties and event properties out and passes the\n      // remaining attributes to React. This allows attributes to use framework\n      // rules for setting attributes and render correctly under SSR.\n      for (const [k, v] of Object.entries(userProps)) {\n        if (reservedReactProperties.has(k)) {\n          // React does *not* handle `className` for custom elements so\n          // coerce it to `class` so it's handled correctly.\n          props[k === 'className' ? 'class' : k] = v;\n          continue;\n        }\n\n        if (eventProps.has(k) || k in element.prototype) {\n          this._elementProps[k] = v;\n          continue;\n        }\n\n        props[k] = v;\n      }\n\n      // If component is to be server rendered with `@lit-labs/ssr-react` pass\n      // element properties in a special bag to be set by the server-side\n      // element renderer.\n      if (\n        NODE_MODE &&\n        createElement.name === 'litPatchedCreateElement' &&\n        Object.keys(this._elementProps).length\n      ) {\n        // This property needs to remain unminified.\n        props['_$litProps$'] = this._elementProps;\n        return createElement<React.HTMLAttributes<I>, I>(tag, props);\n      }\n\n      if (!NODE_MODE) {\n        // Suppress hydration warning for server-rendered attributes, including\n        // \"defer-hydration\"\n        props['suppressHydrationWarning'] = true;\n      }\n\n      return createElement<React.HTMLAttributes<I>, I>(tag, props);\n    }\n  }\n\n  const ForwardedComponent: ReactWebComponent<I, E> = React.forwardRef<\n    I,\n    WebComponentProps<I, E>\n  >((props, __forwardedRef) =>\n    createElement<Props, ReactComponent, typeof ReactComponent>(\n      ReactComponent,\n      {...props, __forwardedRef},\n      props?.children\n    )\n  );\n\n  // To ease debugging in the React Developer Tools\n  ForwardedComponent.displayName = ReactComponent.displayName;\n\n  return ForwardedComponent;\n}\n", "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n", "/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nconst NODE_MODE = false;\nconst global = NODE_MODE ? globalThis : window;\n\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets: boolean =\n  global.ShadowRoot &&\n  (global.ShadyCSS === undefined || global.ShadyCSS.nativeShadow) &&\n  'adoptedStyleSheets' in Document.prototype &&\n  'replace' in CSSStyleSheet.prototype;\n\n/**\n * A CSSResult or native CSSStyleSheet.\n *\n * In browsers that support constructible CSS style sheets, CSSStyleSheet\n * object can be used for styling along side CSSResult from the `css`\n * template tag.\n */\nexport type CSSResultOrNative = CSSResult | CSSStyleSheet;\n\nexport type CSSResultArray = Array<CSSResultOrNative | CSSResultArray>;\n\n/**\n * A single CSSResult, CSSStyleSheet, or an array or nested arrays of those.\n */\nexport type CSSResultGroup = CSSResultOrNative | CSSResultArray;\n\nconst constructionToken = Symbol();\n\nconst cssTagCache = new WeakMap<TemplateStringsArray, CSSStyleSheet>();\n\n/**\n * A container for a string of CSS text, that may be used to create a CSSStyleSheet.\n *\n * CSSResult is the return value of `css`-tagged template literals and\n * `unsafeCSS()`. In order to ensure that CSSResults are only created via the\n * `css` tag and `unsafeCSS()`, CSSResult cannot be constructed directly.\n */\nexport class CSSResult {\n  // This property needs to remain unminified.\n  ['_$cssResult$'] = true;\n  readonly cssText: string;\n  private _styleSheet?: CSSStyleSheet;\n  private _strings: TemplateStringsArray | undefined;\n\n  private constructor(\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ) {\n    if (safeToken !== constructionToken) {\n      throw new Error(\n        'CSSResult is not constructable. Use `unsafeCSS` or `css` instead.'\n      );\n    }\n    this.cssText = cssText;\n    this._strings = strings;\n  }\n\n  // This is a getter so that it's lazy. In practice, this means stylesheets\n  // are not created until the first element instance is made.\n  get styleSheet(): CSSStyleSheet | undefined {\n    // If `supportsAdoptingStyleSheets` is true then we assume CSSStyleSheet is\n    // constructable.\n    let styleSheet = this._styleSheet;\n    const strings = this._strings;\n    if (supportsAdoptingStyleSheets && styleSheet === undefined) {\n      const cacheable = strings !== undefined && strings.length === 1;\n      if (cacheable) {\n        styleSheet = cssTagCache.get(strings);\n      }\n      if (styleSheet === undefined) {\n        (this._styleSheet = styleSheet = new CSSStyleSheet()).replaceSync(\n          this.cssText\n        );\n        if (cacheable) {\n          cssTagCache.set(strings, styleSheet);\n        }\n      }\n    }\n    return styleSheet;\n  }\n\n  toString(): string {\n    return this.cssText;\n  }\n}\n\ntype ConstructableCSSResult = CSSResult & {\n  new (\n    cssText: string,\n    strings: TemplateStringsArray | undefined,\n    safeToken: symbol\n  ): CSSResult;\n};\n\nconst textFromCSSResult = (value: CSSResultGroup | number) => {\n  // This property needs to remain unminified.\n  if ((value as CSSResult)['_$cssResult$'] === true) {\n    return (value as CSSResult).cssText;\n  } else if (typeof value === 'number') {\n    return value;\n  } else {\n    throw new Error(\n      `Value passed to 'css' function must be a 'css' function result: ` +\n        `${value}. Use 'unsafeCSS' to pass non-literal values, but take care ` +\n        `to ensure page security.`\n    );\n  }\n};\n\n/**\n * Wrap a value for interpolation in a {@linkcode css} tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value: unknown) =>\n  new (CSSResult as ConstructableCSSResult)(\n    typeof value === 'string' ? value : String(value),\n    undefined,\n    constructionToken\n  );\n\n/**\n * A template literal tag which can be used with LitElement's\n * {@linkcode LitElement.styles} property to set element styles.\n *\n * For security reasons, only literal string values and number may be used in\n * embedded expressions. To incorporate non-literal values {@linkcode unsafeCSS}\n * may be used inside an expression.\n */\nexport const css = (\n  strings: TemplateStringsArray,\n  ...values: (CSSResultGroup | number)[]\n): CSSResult => {\n  const cssText =\n    strings.length === 1\n      ? strings[0]\n      : values.reduce(\n          (acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1],\n          strings[0]\n        );\n  return new (CSSResult as ConstructableCSSResult)(\n    cssText,\n    strings,\n    constructionToken\n  );\n};\n\n/**\n * Applies the given styles to a `shadowRoot`. When Shadow DOM is\n * available but `adoptedStyleSheets` is not, styles are appended to the\n * `shadowRoot` to [mimic spec behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n * Note, when shimming is used, any styles that are subsequently placed into\n * the shadowRoot should be placed *before* any shimmed adopted styles. This\n * will match spec behavior that gives adopted sheets precedence over styles in\n * shadowRoot.\n */\nexport const adoptStyles = (\n  renderRoot: ShadowRoot,\n  styles: Array<CSSResultOrNative>\n) => {\n  if (supportsAdoptingStyleSheets) {\n    (renderRoot as ShadowRoot).adoptedStyleSheets = styles.map((s) =>\n      s instanceof CSSStyleSheet ? s : s.styleSheet!\n    );\n  } else {\n    styles.forEach((s) => {\n      const style = document.createElement('style');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const nonce = (global as any)['litNonce'];\n      if (nonce !== undefined) {\n        style.setAttribute('nonce', nonce);\n      }\n      style.textContent = (s as CSSResult).cssText;\n      renderRoot.appendChild(style);\n    });\n  }\n};\n\nconst cssResultFromStyleSheet = (sheet: CSSStyleSheet) => {\n  let cssText = '';\n  for (const rule of sheet.cssRules) {\n    cssText += rule.cssText;\n  }\n  return unsafeCSS(cssText);\n};\n\nexport const getCompatibleStyle =\n  supportsAdoptingStyleSheets ||\n  (NODE_MODE && global.CSSStyleSheet === undefined)\n    ? (s: CSSResultOrNative) => s\n    : (s: CSSResultOrNative) =>\n        s instanceof CSSStyleSheet ? cssResultFromStyleSheet(s) : s;\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * Use this module if you want to create your own base class extending\n * {@link ReactiveElement}.\n * @packageDocumentation\n */\n\nimport {\n  getCompatibleStyle,\n  adoptStyles,\n  CSSResultGroup,\n  CSSResultOrNative,\n} from './css-tag.js';\nimport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\n// In the Node build, this import will be injected by Rollup:\n// import {HTMLElement, customElements} from '@lit-labs/ssr-dom-shim';\n\nexport * from './css-tag.js';\nexport type {\n  ReactiveController,\n  ReactiveControllerHost,\n} from './reactive-controller.js';\n\nconst NODE_MODE = false;\nconst global = NODE_MODE ? globalThis : window;\n\nif (NODE_MODE) {\n  global.customElements ??= customElements;\n}\n\nconst DEV_MODE = true;\n\nlet requestUpdateThenable: (name: string) => {\n  then: (\n    onfulfilled?: (value: boolean) => void,\n    _onrejected?: () => void\n  ) => void;\n};\n\nlet issueWarning: (code: string, warning: string) => void;\n\nconst trustedTypes = (global as unknown as {trustedTypes?: {emptyScript: ''}})\n  .trustedTypes;\n\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n  ? (trustedTypes.emptyScript as unknown as '')\n  : '';\n\nconst polyfillSupport = DEV_MODE\n  ? global.reactiveElementPolyfillSupportDevMode\n  : global.reactiveElementPolyfillSupport;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> = (global.litIssuedWarnings ??=\n    new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n\n  // Issue polyfill support warning.\n  if (global.ShadyDOM?.inUse && polyfillSupport === undefined) {\n    issueWarning(\n      'polyfill-support-missing',\n      `Shadow DOM is being polyfilled via \\`ShadyDOM\\` but ` +\n        `the \\`polyfill-support\\` module has not been loaded.`\n    );\n  }\n\n  requestUpdateThenable = (name) => ({\n    then: (\n      onfulfilled?: (value: boolean) => void,\n      _onrejected?: () => void\n    ) => {\n      issueWarning(\n        'request-update-promise',\n        `The \\`requestUpdate\\` method should no longer return a Promise but ` +\n          `does so on \\`${name}\\`. Use \\`updateComplete\\` instead.`\n      );\n      if (onfulfilled !== undefined) {\n        onfulfilled(false);\n      }\n    },\n  });\n}\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace ReactiveUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry = Update;\n    export interface Update {\n      kind: 'update';\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: ReactiveUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<ReactiveUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\n/*@__INLINE__*/\nconst JSCompiler_renameProperty = <P extends PropertyKey>(\n  prop: P,\n  _obj: unknown\n): P => prop;\n\n/**\n * Converts property values to and from attribute values.\n */\nexport interface ComplexAttributeConverter<Type = unknown, TypeHint = unknown> {\n  /**\n   * Called to convert an attribute value to a property\n   * value.\n   */\n  fromAttribute?(value: string | null, type?: TypeHint): Type;\n\n  /**\n   * Called to convert a property value to an attribute\n   * value.\n   *\n   * It returns unknown instead of string, to be compatible with\n   * https://github.com/WICG/trusted-types (and similar efforts).\n   */\n  toAttribute?(value: Type, type?: TypeHint): unknown;\n}\n\ntype AttributeConverter<Type = unknown, TypeHint = unknown> =\n  | ComplexAttributeConverter<Type>\n  | ((value: string | null, type?: TypeHint) => Type);\n\n/**\n * Defines options for a property accessor.\n */\nexport interface PropertyDeclaration<Type = unknown, TypeHint = unknown> {\n  /**\n   * When set to `true`, indicates the property is internal private state. The\n   * property should not be set by users. When using TypeScript, this property\n   * should be marked as `private` or `protected`, and it is also a common\n   * practice to use a leading `_` in the name. The property is not added to\n   * `observedAttributes`.\n   */\n  readonly state?: boolean;\n\n  /**\n   * Indicates how and whether the property becomes an observed attribute.\n   * If the value is `false`, the property is not added to `observedAttributes`.\n   * If true or absent, the lowercased property name is observed (e.g. `fooBar`\n   * becomes `foobar`). If a string, the string value is observed (e.g\n   * `attribute: 'foo-bar'`).\n   */\n  readonly attribute?: boolean | string;\n\n  /**\n   * Indicates the type of the property. This is used only as a hint for the\n   * `converter` to determine how to convert the attribute\n   * to/from a property.\n   */\n  readonly type?: TypeHint;\n\n  /**\n   * Indicates how to convert the attribute to/from a property. If this value\n   * is a function, it is used to convert the attribute value a the property\n   * value. If it's an object, it can have keys for `fromAttribute` and\n   * `toAttribute`. If no `toAttribute` function is provided and\n   * `reflect` is set to `true`, the property value is set directly to the\n   * attribute. A default `converter` is used if none is provided; it supports\n   * `Boolean`, `String`, `Number`, `Object`, and `Array`. Note,\n   * when a property changes and the converter is used to update the attribute,\n   * the property is never updated again as a result of the attribute changing,\n   * and vice versa.\n   */\n  readonly converter?: AttributeConverter<Type, TypeHint>;\n\n  /**\n   * Indicates if the property should reflect to an attribute.\n   * If `true`, when the property is set, the attribute is set using the\n   * attribute name determined according to the rules for the `attribute`\n   * property option and the value of the property converted using the rules\n   * from the `converter` property option.\n   */\n  readonly reflect?: boolean;\n\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n\n  /**\n   * Indicates whether an accessor will be created for this property. By\n   * default, an accessor will be generated for this property that requests an\n   * update when set. If this flag is `true`, no accessor will be created, and\n   * it will be the user's responsibility to call\n   * `this.requestUpdate(propertyName, oldValue)` to request an update when\n   * the property changes.\n   */\n  readonly noAccessor?: boolean;\n}\n\n/**\n * Map of properties to PropertyDeclaration options. For each property an\n * accessor is made, and the property is processed according to the\n * PropertyDeclaration options.\n */\nexport interface PropertyDeclarations {\n  readonly [key: string]: PropertyDeclaration;\n}\n\ntype PropertyDeclarationMap = Map<PropertyKey, PropertyDeclaration>;\n\ntype AttributeMap = Map<string, PropertyKey>;\n\n/**\n * A Map of property keys to values.\n *\n * Takes an optional type parameter T, which when specified as a non-any,\n * non-unknown type, will make the Map more strongly-typed, associating the map\n * keys with their corresponding value type on T.\n *\n * Use `PropertyValues<this>` when overriding ReactiveElement.update() and\n * other lifecycle methods in order to get stronger type-checking on keys\n * and values.\n */\n// This type is conditional so that if the parameter T is not specified, or\n// is `any`, the type will include `Map<PropertyKey, unknown>`. Since T is not\n// given in the uses of PropertyValues in this file, all uses here fallback to\n// meaning `Map<PropertyKey, unknown>`, but if a developer uses\n// `PropertyValues<this>` (or any other value for T) they will get a\n// strongly-typed Map type.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type PropertyValues<T = any> = T extends object\n  ? PropertyValueMap<T>\n  : Map<PropertyKey, unknown>;\n\n/**\n * Do not use, instead prefer {@linkcode PropertyValues}.\n */\n// This type must be exported such that JavaScript generated by the Google\n// Closure Compiler can import a type reference.\nexport interface PropertyValueMap<T> extends Map<PropertyKey, unknown> {\n  get<K extends keyof T>(k: K): T[K];\n  set<K extends keyof T>(key: K, value: T[K]): this;\n  has<K extends keyof T>(k: K): boolean;\n  delete<K extends keyof T>(k: K): boolean;\n}\n\nexport const defaultConverter: ComplexAttributeConverter = {\n  toAttribute(value: unknown, type?: unknown): unknown {\n    switch (type) {\n      case Boolean:\n        value = value ? emptyStringForBooleanAttribute : null;\n        break;\n      case Object:\n      case Array:\n        // if the value is `null` or `undefined` pass this through\n        // to allow removing/no change behavior.\n        value = value == null ? value : JSON.stringify(value);\n        break;\n    }\n    return value;\n  },\n\n  fromAttribute(value: string | null, type?: unknown) {\n    let fromValue: unknown = value;\n    switch (type) {\n      case Boolean:\n        fromValue = value !== null;\n        break;\n      case Number:\n        fromValue = value === null ? null : Number(value);\n        break;\n      case Object:\n      case Array:\n        // Do *not* generate exception when invalid JSON is set as elements\n        // don't normally complain on being mis-configured.\n        // TODO(sorvell): Do generate exception in *dev mode*.\n        try {\n          // Assert to adhere to Bazel's \"must type assert JSON parse\" rule.\n          fromValue = JSON.parse(value!) as unknown;\n        } catch (e) {\n          fromValue = null;\n        }\n        break;\n    }\n    return fromValue;\n  },\n};\n\nexport interface HasChanged {\n  (value: unknown, old: unknown): boolean;\n}\n\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual: HasChanged = (value: unknown, old: unknown): boolean => {\n  // This ensures (old==NaN, value==NaN) always returns false\n  return old !== value && (old === old || value === value);\n};\n\nconst defaultPropertyDeclaration: PropertyDeclaration = {\n  attribute: true,\n  type: String,\n  converter: defaultConverter,\n  reflect: false,\n  hasChanged: notEqual,\n};\n\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n\n/**\n * A string representing one of the supported dev mode warning categories.\n */\nexport type WarningKind = 'change-in-update' | 'migration';\n\nexport type Initializer = (element: ReactiveElement) => void;\n\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport abstract class ReactiveElement\n  // In the Node build, this `extends` clause will be substituted with\n  // `(globalThis.HTMLElement ?? HTMLElement)`.\n  //\n  // This way, we will first prefer any global `HTMLElement` polyfill that the\n  // user has assigned, and then fall back to the `HTMLElement` shim which has\n  // been imported (see note at the top of this file about how this import is\n  // generated by Rollup). Note that the `HTMLElement` variable has been\n  // shadowed by this import, so it no longer refers to the global.\n  extends HTMLElement\n  implements ReactiveControllerHost\n{\n  // Note: these are patched in only in DEV_MODE.\n  /**\n   * Read or set all the enabled warning categories for this class.\n   *\n   * This property is only used in development builds.\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enabledWarnings?: WarningKind[];\n\n  /**\n   * Enable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Enable for all ReactiveElement subclasses\n   * ReactiveElement.enableWarning?.('migration');\n   *\n   * // Enable for only MyElement and subclasses\n   * MyElement.enableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static enableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Disable the given warning category for this class.\n   *\n   * This method only exists in development builds, so it should be accessed\n   * with a guard like:\n   *\n   * ```ts\n   * // Disable for all ReactiveElement subclasses\n   * ReactiveElement.disableWarning?.('migration');\n   *\n   * // Disable for only MyElement and subclasses\n   * MyElement.disableWarning?.('migration');\n   * ```\n   *\n   * @nocollapse\n   * @category dev-mode\n   */\n  static disableWarning?: (warningKind: WarningKind) => void;\n\n  /**\n   * Adds an initializer function to the class that is called during instance\n   * construction.\n   *\n   * This is useful for code that runs against a `ReactiveElement`\n   * subclass, such as a decorator, that needs to do work for each\n   * instance, such as setting up a `ReactiveController`.\n   *\n   * ```ts\n   * const myDecorator = (target: typeof ReactiveElement, key: string) => {\n   *   target.addInitializer((instance: ReactiveElement) => {\n   *     // This is run during construction of the element\n   *     new MyController(instance);\n   *   });\n   * }\n   * ```\n   *\n   * Decorating a field will then cause each instance to run an initializer\n   * that adds a controller:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   @myDecorator foo;\n   * }\n   * ```\n   *\n   * Initializers are stored per-constructor. Adding an initializer to a\n   * subclass does not add it to a superclass. Since initializers are run in\n   * constructors, initializers will run in order of the class hierarchy,\n   * starting with superclasses and progressing to the instance's class.\n   *\n   * @nocollapse\n   */\n  static addInitializer(initializer: Initializer) {\n    this.finalize();\n    (this._initializers ??= []).push(initializer);\n  }\n\n  static _initializers?: Initializer[];\n\n  /*\n   * Due to closure compiler ES6 compilation bugs, @nocollapse is required on\n   * all static methods and properties with initializers.  Reference:\n   * - https://github.com/google/closure-compiler/issues/1776\n   */\n\n  /**\n   * Maps attribute names to properties; for example `foobar` attribute to\n   * `fooBar` property. Created lazily on user subclasses when finalizing the\n   * class.\n   * @nocollapse\n   */\n  private static __attributeToPropertyMap: AttributeMap;\n\n  /**\n   * Marks class as having finished creating properties.\n   */\n  protected static [finalized] = true;\n\n  /**\n   * Memoized list of all element properties, including any superclass properties.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category properties\n   */\n  static elementProperties: PropertyDeclarationMap = new Map();\n\n  /**\n   * User-supplied object that maps property names to `PropertyDeclaration`\n   * objects containing options for configuring reactive properties. When\n   * a reactive property is set the element will update and render.\n   *\n   * By default properties are public fields, and as such, they should be\n   * considered as primarily settable by element users, either via attribute or\n   * the property itself.\n   *\n   * Generally, properties that are changed by the element should be private or\n   * protected fields and should use the `state: true` option. Properties\n   * marked as `state` do not reflect from the corresponding attribute\n   *\n   * However, sometimes element code does need to set a public property. This\n   * should typically only be done in response to user interaction, and an event\n   * should be fired informing the user; for example, a checkbox sets its\n   * `checked` property when clicked and fires a `changed` event. Mutating\n   * public properties should typically not be done for non-primitive (object or\n   * array) properties. In other cases when an element needs to manage state, a\n   * private property set with the `state: true` option should be used. When\n   * needed, state properties can be initialized via public properties to\n   * facilitate complex interactions.\n   * @nocollapse\n   * @category properties\n   */\n  static properties: PropertyDeclarations;\n\n  /**\n   * Memoized list of all element styles.\n   * Created lazily on user subclasses when finalizing the class.\n   * @nocollapse\n   * @category styles\n   */\n  static elementStyles: Array<CSSResultOrNative> = [];\n\n  /**\n   * Array of styles to apply to the element. The styles should be defined\n   * using the {@linkcode css} tag function, via constructible stylesheets, or\n   * imported from native CSS module scripts.\n   *\n   * Note on Content Security Policy:\n   *\n   * Element styles are implemented with `<style>` tags when the browser doesn't\n   * support adopted StyleSheets. To use such `<style>` tags with the style-src\n   * CSP directive, the style-src value must either include 'unsafe-inline' or\n   * `nonce-<base64-value>` with `<base64-value>` replaced be a server-generated\n   * nonce.\n   *\n   * To provide a nonce to use on generated `<style>` elements, set\n   * `window.litNonce` to a server-generated nonce in your page's HTML, before\n   * loading application code:\n   *\n   * ```html\n   * <script>\n   *   // Generated and unique per request:\n   *   window.litNonce = 'a1b2c3d4';\n   * </script>\n   * ```\n   * @nocollapse\n   * @category styles\n   */\n  static styles?: CSSResultGroup;\n\n  /**\n   * The set of properties defined by this class that caused an accessor to be\n   * added during `createProperty`.\n   * @nocollapse\n   */\n  private static __reactivePropertyKeys?: Set<PropertyKey>;\n\n  /**\n   * Returns a list of attributes corresponding to the registered properties.\n   * @nocollapse\n   * @category attributes\n   */\n  static get observedAttributes() {\n    // note: piggy backing on this to ensure we're finalized.\n    this.finalize();\n    const attributes: string[] = [];\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    this.elementProperties.forEach((v, p) => {\n      const attr = this.__attributeNameForProperty(p, v);\n      if (attr !== undefined) {\n        this.__attributeToPropertyMap.set(attr, p);\n        attributes.push(attr);\n      }\n    });\n    return attributes;\n  }\n\n  /**\n   * Creates a property accessor on the element prototype if one does not exist\n   * and stores a {@linkcode PropertyDeclaration} for the property with the\n   * given options. The property setter calls the property's `hasChanged`\n   * property option or uses a strict identity check to determine whether or not\n   * to request an update.\n   *\n   * This method may be overridden to customize properties; however,\n   * when doing so, it's important to call `super.createProperty` to ensure\n   * the property is setup correctly. This method calls\n   * `getPropertyDescriptor` internally to get a descriptor to install.\n   * To customize what properties do when they are get or set, override\n   * `getPropertyDescriptor`. To customize the options for a property,\n   * implement `createProperty` like this:\n   *\n   * ```ts\n   * static createProperty(name, options) {\n   *   options = Object.assign(options, {myOption: true});\n   *   super.createProperty(name, options);\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  static createProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    // if this is a state property, force the attribute to false.\n    if (options.state) {\n      // Cast as any since this is readonly.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (options as any).attribute = false;\n    }\n    // Note, since this can be called by the `@property` decorator which\n    // is called before `finalize`, we ensure finalization has been kicked off.\n    this.finalize();\n    this.elementProperties.set(name, options);\n    // Do not generate an accessor if the prototype already has one, since\n    // it would be lost otherwise and that would never be the user's intention;\n    // Instead, we expect users to call `requestUpdate` themselves from\n    // user-defined accessors. Note that if the super has an accessor we will\n    // still overwrite it\n    if (!options.noAccessor && !this.prototype.hasOwnProperty(name)) {\n      const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n      const descriptor = this.getPropertyDescriptor(name, key, options);\n      if (descriptor !== undefined) {\n        Object.defineProperty(this.prototype, name, descriptor);\n        if (DEV_MODE) {\n          // If this class doesn't have its own set, create one and initialize\n          // with the values in the set from the nearest ancestor class, if any.\n          if (!this.hasOwnProperty('__reactivePropertyKeys')) {\n            this.__reactivePropertyKeys = new Set(\n              this.__reactivePropertyKeys ?? []\n            );\n          }\n          this.__reactivePropertyKeys!.add(name);\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns a property descriptor to be defined on the given named property.\n   * If no descriptor is returned, the property will not become an accessor.\n   * For example,\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   static getPropertyDescriptor(name, key, options) {\n   *     const defaultDescriptor =\n   *         super.getPropertyDescriptor(name, key, options);\n   *     const setter = defaultDescriptor.set;\n   *     return {\n   *       get: defaultDescriptor.get,\n   *       set(value) {\n   *         setter.call(this, value);\n   *         // custom action.\n   *       },\n   *       configurable: true,\n   *       enumerable: true\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * @nocollapse\n   * @category properties\n   */\n  protected static getPropertyDescriptor(\n    name: PropertyKey,\n    key: string | symbol,\n    options: PropertyDeclaration\n  ): PropertyDescriptor | undefined {\n    return {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      get(): any {\n        return (this as {[key: string]: unknown})[key as string];\n      },\n      set(this: ReactiveElement, value: unknown) {\n        const oldValue = (this as {} as {[key: string]: unknown})[\n          name as string\n        ];\n        (this as {} as {[key: string]: unknown})[key as string] = value;\n        (this as unknown as ReactiveElement).requestUpdate(\n          name,\n          oldValue,\n          options\n        );\n      },\n      configurable: true,\n      enumerable: true,\n    };\n  }\n\n  /**\n   * Returns the property options associated with the given property.\n   * These options are defined with a `PropertyDeclaration` via the `properties`\n   * object or the `@property` decorator and are registered in\n   * `createProperty(...)`.\n   *\n   * Note, this method should be considered \"final\" and not overridden. To\n   * customize the options for a given property, override\n   * {@linkcode createProperty}.\n   *\n   * @nocollapse\n   * @final\n   * @category properties\n   */\n  static getPropertyOptions(name: PropertyKey) {\n    return this.elementProperties.get(name) || defaultPropertyDeclaration;\n  }\n\n  /**\n   * Creates property accessors for registered properties, sets up element\n   * styling, and ensures any superclasses are also finalized. Returns true if\n   * the element was finalized.\n   * @nocollapse\n   */\n  protected static finalize() {\n    if (this.hasOwnProperty(finalized)) {\n      return false;\n    }\n    this[finalized] = true;\n    // finalize any superclasses\n    const superCtor = Object.getPrototypeOf(this) as typeof ReactiveElement;\n    superCtor.finalize();\n    // Create own set of initializers for this class if any exist on the\n    // superclass and copy them down. Note, for a small perf boost, avoid\n    // creating initializers unless needed.\n    if (superCtor._initializers !== undefined) {\n      this._initializers = [...superCtor._initializers];\n    }\n    this.elementProperties = new Map(superCtor.elementProperties);\n    // initialize Map populated in observedAttributes\n    this.__attributeToPropertyMap = new Map();\n    // make any properties\n    // Note, only process \"own\" properties since this element will inherit\n    // any properties defined on the superClass, and finalization ensures\n    // the entire prototype chain is finalized.\n    if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n      const props = this.properties;\n      // support symbols in properties (IE11 does not support this)\n      const propKeys = [\n        ...Object.getOwnPropertyNames(props),\n        ...Object.getOwnPropertySymbols(props),\n      ];\n      // This for/of is ok because propKeys is an array\n      for (const p of propKeys) {\n        // note, use of `any` is due to TypeScript lack of support for symbol in\n        // index types\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.createProperty(p, (props as any)[p]);\n      }\n    }\n    this.elementStyles = this.finalizeStyles(this.styles);\n    // DEV mode warnings\n    if (DEV_MODE) {\n      const warnRemovedOrRenamed = (name: string, renamed = false) => {\n        if (this.prototype.hasOwnProperty(name)) {\n          issueWarning(\n            renamed ? 'renamed-api' : 'removed-api',\n            `\\`${name}\\` is implemented on class ${this.name}. It ` +\n              `has been ${renamed ? 'renamed' : 'removed'} ` +\n              `in this version of LitElement.`\n          );\n        }\n      };\n      warnRemovedOrRenamed('initialize');\n      warnRemovedOrRenamed('requestUpdateInternal');\n      warnRemovedOrRenamed('_getUpdateComplete', true);\n    }\n    return true;\n  }\n\n  /**\n   * Options used when calling `attachShadow`. Set this property to customize\n   * the options for the shadowRoot; for example, to create a closed\n   * shadowRoot: `{mode: 'closed'}`.\n   *\n   * Note, these options are used in `createRenderRoot`. If this method\n   * is customized, options should be respected if possible.\n   * @nocollapse\n   * @category rendering\n   */\n  static shadowRootOptions: ShadowRootInit = {mode: 'open'};\n\n  /**\n   * Takes the styles the user supplied via the `static styles` property and\n   * returns the array of styles to apply to the element.\n   * Override this method to integrate into a style management system.\n   *\n   * Styles are deduplicated preserving the _last_ instance in the list. This\n   * is a performance optimization to avoid duplicated styles that can occur\n   * especially when composing via subclassing. The last item is kept to try\n   * to preserve the cascade order with the assumption that it's most important\n   * that last added styles override previous styles.\n   *\n   * @nocollapse\n   * @category styles\n   */\n  protected static finalizeStyles(\n    styles?: CSSResultGroup\n  ): Array<CSSResultOrNative> {\n    const elementStyles = [];\n    if (Array.isArray(styles)) {\n      // Dedupe the flattened array in reverse order to preserve the last items.\n      // Casting to Array<unknown> works around TS error that\n      // appears to come from trying to flatten a type CSSResultArray.\n      const set = new Set((styles as Array<unknown>).flat(Infinity).reverse());\n      // Then preserve original order by adding the set items in reverse order.\n      for (const s of set) {\n        elementStyles.unshift(getCompatibleStyle(s as CSSResultOrNative));\n      }\n    } else if (styles !== undefined) {\n      elementStyles.push(getCompatibleStyle(styles));\n    }\n    return elementStyles;\n  }\n\n  /**\n   * Node or ShadowRoot into which element DOM should be rendered. Defaults\n   * to an open shadowRoot.\n   * @category rendering\n   */\n  readonly renderRoot!: HTMLElement | ShadowRoot;\n\n  /**\n   * Returns the property name for the given attribute `name`.\n   * @nocollapse\n   */\n  private static __attributeNameForProperty(\n    name: PropertyKey,\n    options: PropertyDeclaration\n  ) {\n    const attribute = options.attribute;\n    return attribute === false\n      ? undefined\n      : typeof attribute === 'string'\n      ? attribute\n      : typeof name === 'string'\n      ? name.toLowerCase()\n      : undefined;\n  }\n\n  private __instanceProperties?: PropertyValues = new Map();\n  // Initialize to an unresolved Promise so we can make sure the element has\n  // connected before first update.\n  private __updatePromise!: Promise<boolean>;\n\n  /**\n   * True if there is a pending update as a result of calling `requestUpdate()`.\n   * Should only be read.\n   * @category updates\n   */\n  isUpdatePending = false;\n\n  /**\n   * Is set to `true` after the first update. The element code cannot assume\n   * that `renderRoot` exists before the element `hasUpdated`.\n   * @category updates\n   */\n  hasUpdated = false;\n\n  /**\n   * Map with keys for any properties that have changed since the last\n   * update cycle with previous values.\n   *\n   * @internal\n   */\n  _$changedProperties!: PropertyValues;\n\n  /**\n   * Map with keys of properties that should be reflected when updated.\n   */\n  private __reflectingProperties?: Map<PropertyKey, PropertyDeclaration>;\n\n  /**\n   * Name of currently reflecting property\n   */\n  private __reflectingProperty: PropertyKey | null = null;\n\n  /**\n   * Set of controllers.\n   */\n  private __controllers?: ReactiveController[];\n\n  constructor() {\n    super();\n    this.__initialize();\n  }\n\n  /**\n   * Internal only override point for customizing work done when elements\n   * are constructed.\n   */\n  private __initialize() {\n    this.__updatePromise = new Promise<boolean>(\n      (res) => (this.enableUpdating = res)\n    );\n    this._$changedProperties = new Map();\n    this.__saveInstanceProperties();\n    // ensures first update will be caught by an early access of\n    // `updateComplete`\n    this.requestUpdate();\n    (this.constructor as typeof ReactiveElement)._initializers?.forEach((i) =>\n      i(this)\n    );\n  }\n\n  /**\n   * Registers a `ReactiveController` to participate in the element's reactive\n   * update cycle. The element automatically calls into any registered\n   * controllers during its lifecycle callbacks.\n   *\n   * If the element is connected when `addController()` is called, the\n   * controller's `hostConnected()` callback will be immediately called.\n   * @category controllers\n   */\n  addController(controller: ReactiveController) {\n    (this.__controllers ??= []).push(controller);\n    // If a controller is added after the element has been connected,\n    // call hostConnected. Note, re-using existence of `renderRoot` here\n    // (which is set in connectedCallback) to avoid the need to track a\n    // first connected state.\n    if (this.renderRoot !== undefined && this.isConnected) {\n      controller.hostConnected?.();\n    }\n  }\n\n  /**\n   * Removes a `ReactiveController` from the element.\n   * @category controllers\n   */\n  removeController(controller: ReactiveController) {\n    // Note, if the indexOf is -1, the >>> will flip the sign which makes the\n    // splice do nothing.\n    this.__controllers?.splice(this.__controllers.indexOf(controller) >>> 0, 1);\n  }\n\n  /**\n   * Fixes any properties set on the instance before upgrade time.\n   * Otherwise these would shadow the accessor and break these properties.\n   * The properties are stored in a Map which is played back after the\n   * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n   * (<=41), properties created for native platform properties like (`id` or\n   * `name`) may not have default values set in the element constructor. On\n   * these browsers native properties appear on instances and therefore their\n   * default value will overwrite any element default (e.g. if the element sets\n   * this.id = 'id' in the constructor, the 'id' will become '' since this is\n   * the native platform default).\n   */\n  private __saveInstanceProperties() {\n    // Use forEach so this works even if for/of loops are compiled to for loops\n    // expecting arrays\n    (this.constructor as typeof ReactiveElement).elementProperties.forEach(\n      (_v, p) => {\n        if (this.hasOwnProperty(p)) {\n          this.__instanceProperties!.set(p, this[p as keyof this]);\n          delete this[p as keyof this];\n        }\n      }\n    );\n  }\n\n  /**\n   * Returns the node into which the element should render and by default\n   * creates and returns an open shadowRoot. Implement to customize where the\n   * element's DOM is rendered. For example, to render into the element's\n   * childNodes, return `this`.\n   *\n   * @return Returns a node into which to render.\n   * @category rendering\n   */\n  protected createRenderRoot(): Element | ShadowRoot {\n    const renderRoot =\n      this.shadowRoot ??\n      this.attachShadow(\n        (this.constructor as typeof ReactiveElement).shadowRootOptions\n      );\n    adoptStyles(\n      renderRoot,\n      (this.constructor as typeof ReactiveElement).elementStyles\n    );\n    return renderRoot;\n  }\n\n  /**\n   * On first connection, creates the element's renderRoot, sets up\n   * element styling, and enables updating.\n   * @category lifecycle\n   */\n  connectedCallback() {\n    // create renderRoot before first update.\n    if (this.renderRoot === undefined) {\n      (\n        this as {\n          renderRoot: Element | DocumentFragment;\n        }\n      ).renderRoot = this.createRenderRoot();\n    }\n    this.enableUpdating(true);\n    this.__controllers?.forEach((c) => c.hostConnected?.());\n  }\n\n  /**\n   * Note, this method should be considered final and not overridden. It is\n   * overridden on the element instance with a function that triggers the first\n   * update.\n   * @category updates\n   */\n  protected enableUpdating(_requestedUpdate: boolean) {}\n\n  /**\n   * Allows for `super.disconnectedCallback()` in extensions while\n   * reserving the possibility of making non-breaking feature additions\n   * when disconnecting at some point in the future.\n   * @category lifecycle\n   */\n  disconnectedCallback() {\n    this.__controllers?.forEach((c) => c.hostDisconnected?.());\n  }\n\n  /**\n   * Synchronizes property values when attributes change.\n   *\n   * Specifically, when an attribute is set, the corresponding property is set.\n   * You should rarely need to implement this callback. If this method is\n   * overridden, `super.attributeChangedCallback(name, _old, value)` must be\n   * called.\n   *\n   * See [using the lifecycle callbacks](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements#using_the_lifecycle_callbacks)\n   * on MDN for more information about the `attributeChangedCallback`.\n   * @category attributes\n   */\n  attributeChangedCallback(\n    name: string,\n    _old: string | null,\n    value: string | null\n  ) {\n    this._$attributeToProperty(name, value);\n  }\n\n  private __propertyToAttribute(\n    name: PropertyKey,\n    value: unknown,\n    options: PropertyDeclaration = defaultPropertyDeclaration\n  ) {\n    const attr = (\n      this.constructor as typeof ReactiveElement\n    ).__attributeNameForProperty(name, options);\n    if (attr !== undefined && options.reflect === true) {\n      const converter =\n        (options.converter as ComplexAttributeConverter)?.toAttribute !==\n        undefined\n          ? (options.converter as ComplexAttributeConverter)\n          : defaultConverter;\n      const attrValue = converter.toAttribute!(value, options.type);\n      if (\n        DEV_MODE &&\n        (this.constructor as typeof ReactiveElement).enabledWarnings!.indexOf(\n          'migration'\n        ) >= 0 &&\n        attrValue === undefined\n      ) {\n        issueWarning(\n          'undefined-attribute-value',\n          `The attribute value for the ${name as string} property is ` +\n            `undefined on element ${this.localName}. The attribute will be ` +\n            `removed, but in the previous version of \\`ReactiveElement\\`, ` +\n            `the attribute would not have changed.`\n        );\n      }\n      // Track if the property is being reflected to avoid\n      // setting the property again via `attributeChangedCallback`. Note:\n      // 1. this takes advantage of the fact that the callback is synchronous.\n      // 2. will behave incorrectly if multiple attributes are in the reaction\n      // stack at time of calling. However, since we process attributes\n      // in `update` this should not be possible (or an extreme corner case\n      // that we'd like to discover).\n      // mark state reflecting\n      this.__reflectingProperty = name;\n      if (attrValue == null) {\n        this.removeAttribute(attr);\n      } else {\n        this.setAttribute(attr, attrValue as string);\n      }\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /** @internal */\n  _$attributeToProperty(name: string, value: string | null) {\n    const ctor = this.constructor as typeof ReactiveElement;\n    // Note, hint this as an `AttributeMap` so closure clearly understands\n    // the type; it has issues with tracking types through statics\n    const propName = (ctor.__attributeToPropertyMap as AttributeMap).get(name);\n    // Use tracking info to avoid reflecting a property value to an attribute\n    // if it was just set because the attribute changed.\n    if (propName !== undefined && this.__reflectingProperty !== propName) {\n      const options = ctor.getPropertyOptions(propName);\n      const converter =\n        typeof options.converter === 'function'\n          ? {fromAttribute: options.converter}\n          : options.converter?.fromAttribute !== undefined\n          ? options.converter\n          : defaultConverter;\n      // mark state reflecting\n      this.__reflectingProperty = propName;\n      this[propName as keyof this] = converter.fromAttribute!(\n        value,\n        options.type\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      ) as any;\n      // mark state not reflecting\n      this.__reflectingProperty = null;\n    }\n  }\n\n  /**\n   * Requests an update which is processed asynchronously. This should be called\n   * when an element should update based on some state not triggered by setting\n   * a reactive property. In this case, pass no arguments. It should also be\n   * called when manually implementing a property setter. In this case, pass the\n   * property `name` and `oldValue` to ensure that any configured property\n   * options are honored.\n   *\n   * @param name name of requesting property\n   * @param oldValue old value of requesting property\n   * @param options property options to use instead of the previously\n   *     configured options\n   * @category updates\n   */\n  requestUpdate(\n    name?: PropertyKey,\n    oldValue?: unknown,\n    options?: PropertyDeclaration\n  ): void {\n    let shouldRequestUpdate = true;\n    // If we have a property key, perform property update steps.\n    if (name !== undefined) {\n      options =\n        options ||\n        (this.constructor as typeof ReactiveElement).getPropertyOptions(name);\n      const hasChanged = options.hasChanged || notEqual;\n      if (hasChanged(this[name as keyof this], oldValue)) {\n        if (!this._$changedProperties.has(name)) {\n          this._$changedProperties.set(name, oldValue);\n        }\n        // Add to reflecting properties set.\n        // Note, it's important that every change has a chance to add the\n        // property to `_reflectingProperties`. This ensures setting\n        // attribute + property reflects correctly.\n        if (options.reflect === true && this.__reflectingProperty !== name) {\n          if (this.__reflectingProperties === undefined) {\n            this.__reflectingProperties = new Map();\n          }\n          this.__reflectingProperties.set(name, options);\n        }\n      } else {\n        // Abort the request if the property should not be considered changed.\n        shouldRequestUpdate = false;\n      }\n    }\n    if (!this.isUpdatePending && shouldRequestUpdate) {\n      this.__updatePromise = this.__enqueueUpdate();\n    }\n    // Note, since this no longer returns a promise, in dev mode we return a\n    // thenable which warns if it's called.\n    return DEV_MODE\n      ? (requestUpdateThenable(this.localName) as unknown as void)\n      : undefined;\n  }\n\n  /**\n   * Sets up the element to asynchronously update.\n   */\n  private async __enqueueUpdate() {\n    this.isUpdatePending = true;\n    try {\n      // Ensure any previous update has resolved before updating.\n      // This `await` also ensures that property changes are batched.\n      await this.__updatePromise;\n    } catch (e) {\n      // Refire any previous errors async so they do not disrupt the update\n      // cycle. Errors are refired so developers have a chance to observe\n      // them, and this can be done by implementing\n      // `window.onunhandledrejection`.\n      Promise.reject(e);\n    }\n    const result = this.scheduleUpdate();\n    // If `scheduleUpdate` returns a Promise, we await it. This is done to\n    // enable coordinating updates with a scheduler. Note, the result is\n    // checked to avoid delaying an additional microtask unless we need to.\n    if (result != null) {\n      await result;\n    }\n    return !this.isUpdatePending;\n  }\n\n  /**\n   * Schedules an element update. You can override this method to change the\n   * timing of updates by returning a Promise. The update will await the\n   * returned Promise, and you should resolve the Promise to allow the update\n   * to proceed. If this method is overridden, `super.scheduleUpdate()`\n   * must be called.\n   *\n   * For instance, to schedule updates to occur just before the next frame:\n   *\n   * ```ts\n   * override protected async scheduleUpdate(): Promise<unknown> {\n   *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n   *   super.scheduleUpdate();\n   * }\n   * ```\n   * @category updates\n   */\n  protected scheduleUpdate(): void | Promise<unknown> {\n    return this.performUpdate();\n  }\n\n  /**\n   * Performs an element update. Note, if an exception is thrown during the\n   * update, `firstUpdated` and `updated` will not be called.\n   *\n   * Call `performUpdate()` to immediately process a pending update. This should\n   * generally not be needed, but it can be done in rare cases when you need to\n   * update synchronously.\n   *\n   * Note: To ensure `performUpdate()` synchronously completes a pending update,\n   * it should not be overridden. In LitElement 2.x it was suggested to override\n   * `performUpdate()` to also customizing update scheduling. Instead, you should now\n   * override `scheduleUpdate()`. For backwards compatibility with LitElement 2.x,\n   * scheduling updates via `performUpdate()` continues to work, but will make\n   * also calling `performUpdate()` to synchronously process updates difficult.\n   *\n   * @category updates\n   */\n  protected performUpdate(): void | Promise<unknown> {\n    // Abort any update if one is not pending when this is called.\n    // This can happen if `performUpdate` is called early to \"flush\"\n    // the update.\n    if (!this.isUpdatePending) {\n      return;\n    }\n    debugLogEvent?.({kind: 'update'});\n    // create renderRoot before first update.\n    if (!this.hasUpdated) {\n      // Produce warning if any class properties are shadowed by class fields\n      if (DEV_MODE) {\n        const shadowedProperties: string[] = [];\n        (\n          this.constructor as typeof ReactiveElement\n        ).__reactivePropertyKeys?.forEach((p) => {\n          if (this.hasOwnProperty(p) && !this.__instanceProperties?.has(p)) {\n            shadowedProperties.push(p as string);\n          }\n        });\n        if (shadowedProperties.length) {\n          throw new Error(\n            `The following properties on element ${this.localName} will not ` +\n              `trigger updates as expected because they are set using class ` +\n              `fields: ${shadowedProperties.join(', ')}. ` +\n              `Native class fields and some compiled output will overwrite ` +\n              `accessors used for detecting changes. See ` +\n              `https://lit.dev/msg/class-field-shadowing ` +\n              `for more information.`\n          );\n        }\n      }\n    }\n    // Mixin instance properties once, if they exist.\n    if (this.__instanceProperties) {\n      // Use forEach so this works even if for/of loops are compiled to for loops\n      // expecting arrays\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      this.__instanceProperties!.forEach((v, p) => ((this as any)[p] = v));\n      this.__instanceProperties = undefined;\n    }\n    let shouldUpdate = false;\n    const changedProperties = this._$changedProperties;\n    try {\n      shouldUpdate = this.shouldUpdate(changedProperties);\n      if (shouldUpdate) {\n        this.willUpdate(changedProperties);\n        this.__controllers?.forEach((c) => c.hostUpdate?.());\n        this.update(changedProperties);\n      } else {\n        this.__markUpdated();\n      }\n    } catch (e) {\n      // Prevent `firstUpdated` and `updated` from running when there's an\n      // update exception.\n      shouldUpdate = false;\n      // Ensure element can accept additional updates after an exception.\n      this.__markUpdated();\n      throw e;\n    }\n    // The update is no longer considered pending and further updates are now allowed.\n    if (shouldUpdate) {\n      this._$didUpdate(changedProperties);\n    }\n  }\n\n  /**\n   * Invoked before `update()` to compute values needed during the update.\n   *\n   * Implement `willUpdate` to compute property values that depend on other\n   * properties and are used in the rest of the update process.\n   *\n   * ```ts\n   * willUpdate(changedProperties) {\n   *   // only need to check changed properties for an expensive computation.\n   *   if (changedProperties.has('firstName') || changedProperties.has('lastName')) {\n   *     this.sha = computeSHA(`${this.firstName} ${this.lastName}`);\n   *   }\n   * }\n   *\n   * render() {\n   *   return html`SHA: ${this.sha}`;\n   * }\n   * ```\n   *\n   * @category updates\n   */\n  protected willUpdate(_changedProperties: PropertyValues): void {}\n\n  // Note, this is an override point for polyfill-support.\n  // @internal\n  _$didUpdate(changedProperties: PropertyValues) {\n    this.__controllers?.forEach((c) => c.hostUpdated?.());\n    if (!this.hasUpdated) {\n      this.hasUpdated = true;\n      this.firstUpdated(changedProperties);\n    }\n    this.updated(changedProperties);\n    if (\n      DEV_MODE &&\n      this.isUpdatePending &&\n      (this.constructor as typeof ReactiveElement).enabledWarnings!.indexOf(\n        'change-in-update'\n      ) >= 0\n    ) {\n      issueWarning(\n        'change-in-update',\n        `Element ${this.localName} scheduled an update ` +\n          `(generally because a property was set) ` +\n          `after an update completed, causing a new update to be scheduled. ` +\n          `This is inefficient and should be avoided unless the next update ` +\n          `can only be scheduled as a side effect of the previous update.`\n      );\n    }\n  }\n\n  private __markUpdated() {\n    this._$changedProperties = new Map();\n    this.isUpdatePending = false;\n  }\n\n  /**\n   * Returns a Promise that resolves when the element has completed updating.\n   * The Promise value is a boolean that is `true` if the element completed the\n   * update without triggering another update. The Promise result is `false` if\n   * a property was set inside `updated()`. If the Promise is rejected, an\n   * exception was thrown during the update.\n   *\n   * To await additional asynchronous work, override the `getUpdateComplete`\n   * method. For example, it is sometimes useful to await a rendered element\n   * before fulfilling this Promise. To do this, first await\n   * `super.getUpdateComplete()`, then any subsequent state.\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  get updateComplete(): Promise<boolean> {\n    return this.getUpdateComplete();\n  }\n\n  /**\n   * Override point for the `updateComplete` promise.\n   *\n   * It is not safe to override the `updateComplete` getter directly due to a\n   * limitation in TypeScript which means it is not possible to call a\n   * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n   * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n   * This method should be overridden instead. For example:\n   *\n   * ```ts\n   * class MyElement extends LitElement {\n   *   override async getUpdateComplete() {\n   *     const result = await super.getUpdateComplete();\n   *     await this._myChild.updateComplete;\n   *     return result;\n   *   }\n   * }\n   * ```\n   *\n   * @return A promise of a boolean that resolves to true if the update completed\n   *     without triggering another update.\n   * @category updates\n   */\n  protected getUpdateComplete(): Promise<boolean> {\n    return this.__updatePromise;\n  }\n\n  /**\n   * Controls whether or not `update()` should be called when the element requests\n   * an update. By default, this method always returns `true`, but this can be\n   * customized to control when to update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected shouldUpdate(_changedProperties: PropertyValues): boolean {\n    return true;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes.\n   * It can be overridden to render and keep updated element DOM.\n   * Setting properties inside this method will *not* trigger\n   * another update.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected update(_changedProperties: PropertyValues) {\n    if (this.__reflectingProperties !== undefined) {\n      // Use forEach so this works even if for/of loops are compiled to for\n      // loops expecting arrays\n      this.__reflectingProperties.forEach((v, k) =>\n        this.__propertyToAttribute(k, this[k as keyof this], v)\n      );\n      this.__reflectingProperties = undefined;\n    }\n    this.__markUpdated();\n  }\n\n  /**\n   * Invoked whenever the element is updated. Implement to perform\n   * post-updating tasks via DOM APIs, for example, focusing an element.\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected updated(_changedProperties: PropertyValues) {}\n\n  /**\n   * Invoked when the element is first updated. Implement to perform one time\n   * work on the element after update.\n   *\n   * ```ts\n   * firstUpdated() {\n   *   this.renderRoot.getElementById('my-text-area').focus();\n   * }\n   * ```\n   *\n   * Setting properties inside this method will trigger the element to update\n   * again after this update cycle completes.\n   *\n   * @param _changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected firstUpdated(_changedProperties: PropertyValues) {}\n}\n\n// Apply polyfills if available\npolyfillSupport?.({ReactiveElement});\n\n// Dev mode warnings...\nif (DEV_MODE) {\n  // Default warning set.\n  ReactiveElement.enabledWarnings = ['change-in-update'];\n  const ensureOwnWarnings = function (ctor: typeof ReactiveElement) {\n    if (\n      !ctor.hasOwnProperty(JSCompiler_renameProperty('enabledWarnings', ctor))\n    ) {\n      ctor.enabledWarnings = ctor.enabledWarnings!.slice();\n    }\n  };\n  ReactiveElement.enableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    if (this.enabledWarnings!.indexOf(warning) < 0) {\n      this.enabledWarnings!.push(warning);\n    }\n  };\n  ReactiveElement.disableWarning = function (\n    this: typeof ReactiveElement,\n    warning: WarningKind\n  ) {\n    ensureOwnWarnings(this);\n    const i = this.enabledWarnings!.indexOf(warning);\n    if (i >= 0) {\n      this.enabledWarnings!.splice(i, 1);\n    }\n  };\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for ReactiveElement usage.\n(global.reactiveElementVersions ??= []).push('1.6.3');\nif (DEV_MODE && global.reactiveElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n// IMPORTANT: these imports must be type-only\nimport type {Directive, DirectiveResult, PartInfo} from './directive.js';\n\nconst DEV_MODE = true;\nconst ENABLE_EXTRA_SECURITY_HOOKS = true;\nconst ENABLE_SHADYDOM_NOPATCH = true;\nconst NODE_MODE = false;\n// Use window for browser builds because IE11 doesn't have globalThis.\nconst global = NODE_MODE ? globalThis : window;\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace LitUnstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | TemplatePrep\n      | TemplateInstantiated\n      | TemplateInstantiatedAndUpdated\n      | TemplateUpdating\n      | BeginRender\n      | EndRender\n      | CommitPartEntry\n      | SetPartValue;\n    export interface TemplatePrep {\n      kind: 'template prep';\n      template: Template;\n      strings: TemplateStringsArray;\n      clonableTemplate: HTMLTemplateElement;\n      parts: TemplatePart[];\n    }\n    export interface BeginRender {\n      kind: 'begin render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart | undefined;\n    }\n    export interface EndRender {\n      kind: 'end render';\n      id: number;\n      value: unknown;\n      container: HTMLElement | DocumentFragment;\n      options: RenderOptions | undefined;\n      part: ChildPart;\n    }\n    export interface TemplateInstantiated {\n      kind: 'template instantiated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateInstantiatedAndUpdated {\n      kind: 'template instantiated and updated';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      fragment: Node;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface TemplateUpdating {\n      kind: 'template updating';\n      template: Template | CompiledTemplate;\n      instance: TemplateInstance;\n      options: RenderOptions | undefined;\n      parts: Array<Part | undefined>;\n      values: unknown[];\n    }\n    export interface SetPartValue {\n      kind: 'set part';\n      part: Part;\n      value: unknown;\n      valueIndex: number;\n      values: unknown[];\n      templateInstance: TemplateInstance;\n    }\n\n    export type CommitPartEntry =\n      | CommitNothingToChildEntry\n      | CommitText\n      | CommitNode\n      | CommitAttribute\n      | CommitProperty\n      | CommitBooleanAttribute\n      | CommitEventListener\n      | CommitToElementBinding;\n\n    export interface CommitNothingToChildEntry {\n      kind: 'commit nothing to child';\n      start: ChildNode;\n      end: ChildNode | null;\n      parent: Disconnectable | undefined;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitText {\n      kind: 'commit text';\n      node: Text;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitNode {\n      kind: 'commit node';\n      start: Node;\n      parent: Disconnectable | undefined;\n      value: Node;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitAttribute {\n      kind: 'commit attribute';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitProperty {\n      kind: 'commit property';\n      element: Element;\n      name: string;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitBooleanAttribute {\n      kind: 'commit boolean attribute';\n      element: Element;\n      name: string;\n      value: boolean;\n      options: RenderOptions | undefined;\n    }\n\n    export interface CommitEventListener {\n      kind: 'commit event listener';\n      element: Element;\n      name: string;\n      value: unknown;\n      oldListener: unknown;\n      options: RenderOptions | undefined;\n      // True if we're removing the old event listener (e.g. because settings changed, or value is nothing)\n      removeListener: boolean;\n      // True if we're adding a new event listener (e.g. because first render, or settings changed)\n      addListener: boolean;\n    }\n\n    export interface CommitToElementBinding {\n      kind: 'commit to element binding';\n      element: Element;\n      value: unknown;\n      options: RenderOptions | undefined;\n    }\n  }\n}\n\ninterface DebugLoggingWindow {\n  // Even in dev mode, we generally don't want to emit these events, as that's\n  // another level of cost, so only emit them when DEV_MODE is true _and_ when\n  // window.emitLitDebugEvents is true.\n  emitLitDebugLogEvents?: boolean;\n}\n\n/**\n * Useful for visualizing and logging insights into what the Lit template system is doing.\n *\n * Compiled out of prod mode builds.\n */\nconst debugLogEvent = DEV_MODE\n  ? (event: LitUnstable.DebugLog.Entry) => {\n      const shouldEmit = (global as unknown as DebugLoggingWindow)\n        .emitLitDebugLogEvents;\n      if (!shouldEmit) {\n        return;\n      }\n      global.dispatchEvent(\n        new CustomEvent<LitUnstable.DebugLog.Entry>('lit-debug', {\n          detail: event,\n        })\n      );\n    }\n  : undefined;\n// Used for connecting beginRender and endRender events when there are nested\n// renders when errors are thrown preventing an endRender event from being\n// called.\nlet debugLogRenderId = 0;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  global.litIssuedWarnings ??= new Set();\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += code\n      ? ` See https://lit.dev/msg/${code} for more information.`\n      : '';\n    if (!global.litIssuedWarnings!.has(warning)) {\n      console.warn(warning);\n      global.litIssuedWarnings!.add(warning);\n    }\n  };\n\n  issueWarning(\n    'dev-mode',\n    `Lit is in dev mode. Not recommended for production!`\n  );\n}\n\nconst wrap =\n  ENABLE_SHADYDOM_NOPATCH &&\n  global.ShadyDOM?.inUse &&\n  global.ShadyDOM?.noPatch === true\n    ? global.ShadyDOM!.wrap\n    : (node: Node) => node;\n\nconst trustedTypes = (global as unknown as Partial<Window>).trustedTypes;\n\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = trustedTypes\n  ? trustedTypes.createPolicy('lit-html', {\n      createHTML: (s) => s,\n    })\n  : undefined;\n\n/**\n * Used to sanitize any value before it is written into the DOM. This can be\n * used to implement a security policy of allowed and disallowed values in\n * order to prevent XSS attacks.\n *\n * One way of using this callback would be to check attributes and properties\n * against a list of high risk fields, and require that values written to such\n * fields be instances of a class which is safe by construction. Closure's Safe\n * HTML Types is one implementation of this technique (\n * https://github.com/google/safe-html-types/blob/master/doc/safehtml-types.md).\n * The TrustedTypes polyfill in API-only mode could also be used as a basis\n * for this technique (https://github.com/WICG/trusted-types).\n *\n * @param node The HTML node (usually either a #text node or an Element) that\n *     is being written to. Note that this is just an exemplar node, the write\n *     may take place against another instance of the same class of node.\n * @param name The name of an attribute or property (for example, 'href').\n * @param type Indicates whether the write that's about to be performed will\n *     be to a property or a node.\n * @return A function that will sanitize this class of writes.\n */\nexport type SanitizerFactory = (\n  node: Node,\n  name: string,\n  type: 'property' | 'attribute'\n) => ValueSanitizer;\n\n/**\n * A function which can sanitize values that will be written to a specific kind\n * of DOM sink.\n *\n * See SanitizerFactory.\n *\n * @param value The value to sanitize. Will be the actual value passed into\n *     the lit-html template literal, so this could be of any type.\n * @return The value to write to the DOM. Usually the same as the input value,\n *     unless sanitization is needed.\n */\nexport type ValueSanitizer = (value: unknown) => unknown;\n\nconst identityFunction: ValueSanitizer = (value: unknown) => value;\nconst noopSanitizer: SanitizerFactory = (\n  _node: Node,\n  _name: string,\n  _type: 'property' | 'attribute'\n) => identityFunction;\n\n/** Sets the global sanitizer factory. */\nconst setSanitizer = (newSanitizer: SanitizerFactory) => {\n  if (!ENABLE_EXTRA_SECURITY_HOOKS) {\n    return;\n  }\n  if (sanitizerFactoryInternal !== noopSanitizer) {\n    throw new Error(\n      `Attempted to overwrite existing lit-html security policy.` +\n        ` setSanitizeDOMValueFactory should be called at most once.`\n    );\n  }\n  sanitizerFactoryInternal = newSanitizer;\n};\n\n/**\n * Only used in internal tests, not a part of the public API.\n */\nconst _testOnlyClearSanitizerFactoryDoNotCallOrElse = () => {\n  sanitizerFactoryInternal = noopSanitizer;\n};\n\nconst createSanitizer: SanitizerFactory = (node, name, type) => {\n  return sanitizerFactoryInternal(node, name, type);\n};\n\n// Added to an attribute name to mark the attribute as bound so we can find\n// it easily.\nconst boundAttributeSuffix = '$lit$';\n\n// This marker is used in many syntactic positions in HTML, so it must be\n// a valid element name and attribute name. We don't support dynamic names (yet)\n// but this at least ensures that the parse tree is closer to the template\n// intention.\nconst marker = `lit$${String(Math.random()).slice(9)}$`;\n\n// String used to tell if a comment is a marker comment\nconst markerMatch = '?' + marker;\n\n// Text used to insert a comment marker node. We use processing instruction\n// syntax because it's slightly smaller, but parses as a comment node.\nconst nodeMarker = `<${markerMatch}>`;\n\nconst d =\n  NODE_MODE && global.document === undefined\n    ? ({\n        createTreeWalker() {\n          return {};\n        },\n      } as unknown as Document)\n    : document;\n\n// Creates a dynamic marker. We never have to search for these in the DOM.\nconst createMarker = () => d.createComment('');\n\n// https://tc39.github.io/ecma262/#sec-typeof-operator\ntype Primitive = null | undefined | boolean | number | string | symbol | bigint;\nconst isPrimitive = (value: unknown): value is Primitive =>\n  value === null || (typeof value != 'object' && typeof value != 'function');\nconst isArray = Array.isArray;\nconst isIterable = (value: unknown): value is Iterable<unknown> =>\n  isArray(value) ||\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  typeof (value as any)?.[Symbol.iterator] === 'function';\n\nconst SPACE_CHAR = `[ \\t\\n\\f\\r]`;\nconst ATTR_VALUE_CHAR = `[^ \\t\\n\\f\\r\"'\\`<>=]`;\nconst NAME_CHAR = `[^\\\\s\"'>=/]`;\n\n// These regexes represent the five parsing states that we care about in the\n// Template's HTML scanner. They match the *end* of the state they're named\n// after.\n// Depending on the match, we transition to a new state. If there's no match,\n// we stay in the same state.\n// Note that the regexes are stateful. We utilize lastIndex and sync it\n// across the multiple regexes used. In addition to the five regexes below\n// we also dynamically create a regex to find the matching end tags for raw\n// text elements.\n\n/**\n * End of text is: `<` followed by:\n *   (comment start) or (tag) or (dynamic tag binding)\n */\nconst textEndRegex = /<(?:(!--|\\/[^a-zA-Z])|(\\/?[a-zA-Z][^>\\s]*)|(\\/?$))/g;\nconst COMMENT_START = 1;\nconst TAG_NAME = 2;\nconst DYNAMIC_TAG_NAME = 3;\n\nconst commentEndRegex = /-->/g;\n/**\n * Comments not started with <!--, like </{, can be ended by a single `>`\n */\nconst comment2EndRegex = />/g;\n\n/**\n * The tagEnd regex matches the end of the \"inside an opening\" tag syntax\n * position. It either matches a `>`, an attribute-like sequence, or the end\n * of the string after a space (attribute-name position ending).\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\t\\n\\f\\r\" are HTML space characters:\n * https://infra.spec.whatwg.org/#ascii-whitespace\n *\n * So an attribute is:\n *  * The name: any character except a whitespace character, (\"), ('), \">\",\n *    \"=\", or \"/\". Note: this is different from the HTML spec which also excludes control characters.\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nconst tagEndRegex = new RegExp(\n  `>|${SPACE_CHAR}(?:(${NAME_CHAR}+)(${SPACE_CHAR}*=${SPACE_CHAR}*(?:${ATTR_VALUE_CHAR}|(\"|')|))|$)`,\n  'g'\n);\nconst ENTIRE_MATCH = 0;\nconst ATTRIBUTE_NAME = 1;\nconst SPACES_AND_EQUALS = 2;\nconst QUOTE_CHAR = 3;\n\nconst singleQuoteAttrEndRegex = /'/g;\nconst doubleQuoteAttrEndRegex = /\"/g;\n/**\n * Matches the raw text elements.\n *\n * Comments are not parsed within raw text elements, so we need to search their\n * text content for marker strings.\n */\nconst rawTextElement = /^(?:script|style|textarea|title)$/i;\n\n/** TemplateResult types */\nconst HTML_RESULT = 1;\nconst SVG_RESULT = 2;\n\ntype ResultType = typeof HTML_RESULT | typeof SVG_RESULT;\n\n// TemplatePart types\n// IMPORTANT: these must match the values in PartType\nconst ATTRIBUTE_PART = 1;\nconst CHILD_PART = 2;\nconst PROPERTY_PART = 3;\nconst BOOLEAN_ATTRIBUTE_PART = 4;\nconst EVENT_PART = 5;\nconst ELEMENT_PART = 6;\nconst COMMENT_PART = 7;\n\n/**\n * The return type of the template tag functions, {@linkcode html} and\n * {@linkcode svg}.\n *\n * A `TemplateResult` object holds all the information about a template\n * expression required to render it: the template strings, expression values,\n * and type of template (html or svg).\n *\n * `TemplateResult` objects do not create any DOM on their own. To create or\n * update DOM you need to render the `TemplateResult`. See\n * [Rendering](https://lit.dev/docs/components/rendering) for more information.\n *\n */\nexport type TemplateResult<T extends ResultType = ResultType> = {\n  // This property needs to remain unminified.\n  ['_$litType$']: T;\n  strings: TemplateStringsArray;\n  values: unknown[];\n};\n\nexport type HTMLTemplateResult = TemplateResult<typeof HTML_RESULT>;\n\nexport type SVGTemplateResult = TemplateResult<typeof SVG_RESULT>;\n\nexport interface CompiledTemplateResult {\n  // This is a factory in order to make template initialization lazy\n  // and allow ShadyRenderOptions scope to be passed in.\n  // This property needs to remain unminified.\n  ['_$litType$']: CompiledTemplate;\n  values: unknown[];\n}\n\nexport interface CompiledTemplate extends Omit<Template, 'el'> {\n  // el is overridden to be optional. We initialize it on first render\n  el?: HTMLTemplateElement;\n\n  // The prepared HTML string to create a template element from.\n  // The type is a TemplateStringsArray to guarantee that the value came from\n  // source code, preventing a JSON injection attack.\n  h: TemplateStringsArray;\n}\n\n/**\n * Generates a template literal tag function that returns a TemplateResult with\n * the given result type.\n */\nconst tag =\n  <T extends ResultType>(type: T) =>\n  (strings: TemplateStringsArray, ...values: unknown[]): TemplateResult<T> => {\n    // Warn against templates octal escape sequences\n    // We do this here rather than in render so that the warning is closer to the\n    // template definition.\n    if (DEV_MODE && strings.some((s) => s === undefined)) {\n      console.warn(\n        'Some template strings are undefined.\\n' +\n          'This is probably caused by illegal octal escape sequences.'\n      );\n    }\n    return {\n      // This property needs to remain unminified.\n      ['_$litType$']: type,\n      strings,\n      values,\n    };\n  };\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const header = (title: string) => html`<h1>${title}</h1>`;\n * ```\n *\n * The `html` tag returns a description of the DOM to render as a value. It is\n * lazy, meaning no work is done until the template is rendered. When rendering,\n * if a template comes from the same expression as a previously rendered result,\n * it's efficiently updated instead of replaced.\n */\nexport const html = tag(HTML_RESULT);\n\n/**\n * Interprets a template literal as an SVG fragment that can efficiently\n * render to and update a container.\n *\n * ```ts\n * const rect = svg`<rect width=\"10\" height=\"10\"></rect>`;\n *\n * const myImage = html`\n *   <svg viewBox=\"0 0 10 10\" xmlns=\"http://www.w3.org/2000/svg\">\n *     ${rect}\n *   </svg>`;\n * ```\n *\n * The `svg` *tag function* should only be used for SVG fragments, or elements\n * that would be contained **inside** an `<svg>` HTML element. A common error is\n * placing an `<svg>` *element* in a template tagged with the `svg` tag\n * function. The `<svg>` element is an HTML element and should be used within a\n * template tagged with the {@linkcode html} tag function.\n *\n * In LitElement usage, it's invalid to return an SVG fragment from the\n * `render()` method, as the SVG fragment will be contained within the element's\n * shadow root and thus cannot be used within an `<svg>` HTML element.\n */\nexport const svg = tag(SVG_RESULT);\n\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = Symbol.for('lit-noChange');\n\n/**\n * A sentinel value that signals a ChildPart to fully clear its content.\n *\n * ```ts\n * const button = html`${\n *  user.isAdmin\n *    ? html`<button>DELETE</button>`\n *    : nothing\n * }`;\n * ```\n *\n * Prefer using `nothing` over other falsy values as it provides a consistent\n * behavior between various expression binding contexts.\n *\n * In child expressions, `undefined`, `null`, `''`, and `nothing` all behave the\n * same and render no nodes. In attribute expressions, `nothing` _removes_ the\n * attribute, while `undefined` and `null` will render an empty string. In\n * property expressions `nothing` becomes `undefined`.\n */\nexport const nothing = Symbol.for('lit-nothing');\n\n/**\n * The cache of prepared templates, keyed by the tagged TemplateStringsArray\n * and _not_ accounting for the specific template tag used. This means that\n * template tags cannot be dynamic - the must statically be one of html, svg,\n * or attr. This restriction simplifies the cache lookup, which is on the hot\n * path for rendering.\n */\nconst templateCache = new WeakMap<TemplateStringsArray, Template>();\n\n/**\n * Object specifying options for controlling lit-html rendering. Note that\n * while `render` may be called multiple times on the same `container` (and\n * `renderBefore` reference node) to efficiently update the rendered content,\n * only the options passed in during the first render are respected during\n * the lifetime of renders to that unique `container` + `renderBefore`\n * combination.\n */\nexport interface RenderOptions {\n  /**\n   * An object to use as the `this` value for event listeners. It's often\n   * useful to set this to the host component rendering a template.\n   */\n  host?: object;\n  /**\n   * A DOM node before which to render content in the container.\n   */\n  renderBefore?: ChildNode | null;\n  /**\n   * Node used for cloning the template (`importNode` will be called on this\n   * node). This controls the `ownerDocument` of the rendered DOM, along with\n   * any inherited context. Defaults to the global `document`.\n   */\n  creationScope?: {importNode(node: Node, deep?: boolean): Node};\n  /**\n   * The initial connected state for the top-level part being rendered. If no\n   * `isConnected` option is set, `AsyncDirective`s will be connected by\n   * default. Set to `false` if the initial render occurs in a disconnected tree\n   * and `AsyncDirective`s should see `isConnected === false` for their initial\n   * render. The `part.setConnected()` method must be used subsequent to initial\n   * render to change the connected state of the part.\n   */\n  isConnected?: boolean;\n}\n\nconst walker = d.createTreeWalker(\n  d,\n  129 /* NodeFilter.SHOW_{ELEMENT|COMMENT} */,\n  null,\n  false\n);\n\nlet sanitizerFactoryInternal: SanitizerFactory = noopSanitizer;\n\n//\n// Classes only below here, const variable declarations only above here...\n//\n// Keeping variable declarations and classes together improves minification.\n// Interfaces and type aliases can be interleaved freely.\n//\n\n// Type for classes that have a `_directive` or `_directives[]` field, used by\n// `resolveDirective`\nexport interface DirectiveParent {\n  _$parent?: DirectiveParent;\n  _$isConnected: boolean;\n  __directive?: Directive;\n  __directives?: Array<Directive | undefined>;\n}\n\nfunction trustFromTemplateString(\n  tsa: TemplateStringsArray,\n  stringFromTSA: string\n): TrustedHTML {\n  // A security check to prevent spoofing of Lit template results.\n  // In the future, we may be able to replace this with Array.isTemplateObject,\n  // though we might need to make that check inside of the html and svg\n  // functions, because precompiled templates don't come in as\n  // TemplateStringArray objects.\n  if (!Array.isArray(tsa) || !tsa.hasOwnProperty('raw')) {\n    let message = 'invalid template strings array';\n    if (DEV_MODE) {\n      message = `\n          Internal Error: expected template strings to be an array\n          with a 'raw' field. Faking a template strings array by\n          calling html or svg like an ordinary function is effectively\n          the same as calling unsafeHtml and can lead to major security\n          issues, e.g. opening your code up to XSS attacks.\n          If you're using the html or svg tagged template functions normally\n          and still seeing this error, please file a bug at\n          https://github.com/lit/lit/issues/new?template=bug_report.md\n          and include information about your build tooling, if any.\n        `\n        .trim()\n        .replace(/\\n */g, '\\n');\n    }\n    throw new Error(message);\n  }\n  return policy !== undefined\n    ? policy.createHTML(stringFromTSA)\n    : (stringFromTSA as unknown as TrustedHTML);\n}\n\n/**\n * Returns an HTML string for the given TemplateStringsArray and result type\n * (HTML or SVG), along with the case-sensitive bound attribute names in\n * template order. The HTML contains comment markers denoting the `ChildPart`s\n * and suffixes on bound attributes denoting the `AttributeParts`.\n *\n * @param strings template strings array\n * @param type HTML or SVG\n * @return Array containing `[html, attrNames]` (array returned for terseness,\n *     to avoid object fields since this code is shared with non-minified SSR\n *     code)\n */\nconst getTemplateHtml = (\n  strings: TemplateStringsArray,\n  type: ResultType\n): [TrustedHTML, Array<string | undefined>] => {\n  // Insert makers into the template HTML to represent the position of\n  // bindings. The following code scans the template strings to determine the\n  // syntactic position of the bindings. They can be in text position, where\n  // we insert an HTML comment, attribute value position, where we insert a\n  // sentinel string and re-write the attribute name, or inside a tag where\n  // we insert the sentinel string.\n  const l = strings.length - 1;\n  // Stores the case-sensitive bound attribute names in the order of their\n  // parts. ElementParts are also reflected in this array as undefined\n  // rather than a string, to disambiguate from attribute bindings.\n  const attrNames: Array<string | undefined> = [];\n  let html = type === SVG_RESULT ? '<svg>' : '';\n\n  // When we're inside a raw text tag (not it's text content), the regex\n  // will still be tagRegex so we can find attributes, but will switch to\n  // this regex when the tag ends.\n  let rawTextEndRegex: RegExp | undefined;\n\n  // The current parsing state, represented as a reference to one of the\n  // regexes\n  let regex = textEndRegex;\n\n  for (let i = 0; i < l; i++) {\n    const s = strings[i];\n    // The index of the end of the last attribute name. When this is\n    // positive at end of a string, it means we're in an attribute value\n    // position and need to rewrite the attribute name.\n    // We also use a special value of -2 to indicate that we encountered\n    // the end of a string in attribute name position.\n    let attrNameEndIndex = -1;\n    let attrName: string | undefined;\n    let lastIndex = 0;\n    let match!: RegExpExecArray | null;\n\n    // The conditions in this loop handle the current parse state, and the\n    // assignments to the `regex` variable are the state transitions.\n    while (lastIndex < s.length) {\n      // Make sure we start searching from where we previously left off\n      regex.lastIndex = lastIndex;\n      match = regex.exec(s);\n      if (match === null) {\n        break;\n      }\n      lastIndex = regex.lastIndex;\n      if (regex === textEndRegex) {\n        if (match[COMMENT_START] === '!--') {\n          regex = commentEndRegex;\n        } else if (match[COMMENT_START] !== undefined) {\n          // We started a weird comment, like </{\n          regex = comment2EndRegex;\n        } else if (match[TAG_NAME] !== undefined) {\n          if (rawTextElement.test(match[TAG_NAME])) {\n            // Record if we encounter a raw-text element. We'll switch to\n            // this regex at the end of the tag.\n            rawTextEndRegex = new RegExp(`</${match[TAG_NAME]}`, 'g');\n          }\n          regex = tagEndRegex;\n        } else if (match[DYNAMIC_TAG_NAME] !== undefined) {\n          if (DEV_MODE) {\n            throw new Error(\n              'Bindings in tag names are not supported. Please use static templates instead. ' +\n                'See https://lit.dev/docs/templates/expressions/#static-expressions'\n            );\n          }\n          regex = tagEndRegex;\n        }\n      } else if (regex === tagEndRegex) {\n        if (match[ENTIRE_MATCH] === '>') {\n          // End of a tag. If we had started a raw-text element, use that\n          // regex\n          regex = rawTextEndRegex ?? textEndRegex;\n          // We may be ending an unquoted attribute value, so make sure we\n          // clear any pending attrNameEndIndex\n          attrNameEndIndex = -1;\n        } else if (match[ATTRIBUTE_NAME] === undefined) {\n          // Attribute name position\n          attrNameEndIndex = -2;\n        } else {\n          attrNameEndIndex = regex.lastIndex - match[SPACES_AND_EQUALS].length;\n          attrName = match[ATTRIBUTE_NAME];\n          regex =\n            match[QUOTE_CHAR] === undefined\n              ? tagEndRegex\n              : match[QUOTE_CHAR] === '\"'\n              ? doubleQuoteAttrEndRegex\n              : singleQuoteAttrEndRegex;\n        }\n      } else if (\n        regex === doubleQuoteAttrEndRegex ||\n        regex === singleQuoteAttrEndRegex\n      ) {\n        regex = tagEndRegex;\n      } else if (regex === commentEndRegex || regex === comment2EndRegex) {\n        regex = textEndRegex;\n      } else {\n        // Not one of the five state regexes, so it must be the dynamically\n        // created raw text regex and we're at the close of that element.\n        regex = tagEndRegex;\n        rawTextEndRegex = undefined;\n      }\n    }\n\n    if (DEV_MODE) {\n      // If we have a attrNameEndIndex, which indicates that we should\n      // rewrite the attribute name, assert that we're in a valid attribute\n      // position - either in a tag, or a quoted attribute value.\n      console.assert(\n        attrNameEndIndex === -1 ||\n          regex === tagEndRegex ||\n          regex === singleQuoteAttrEndRegex ||\n          regex === doubleQuoteAttrEndRegex,\n        'unexpected parse state B'\n      );\n    }\n\n    // We have four cases:\n    //  1. We're in text position, and not in a raw text element\n    //     (regex === textEndRegex): insert a comment marker.\n    //  2. We have a non-negative attrNameEndIndex which means we need to\n    //     rewrite the attribute name to add a bound attribute suffix.\n    //  3. We're at the non-first binding in a multi-binding attribute, use a\n    //     plain marker.\n    //  4. We're somewhere else inside the tag. If we're in attribute name\n    //     position (attrNameEndIndex === -2), add a sequential suffix to\n    //     generate a unique attribute name.\n\n    // Detect a binding next to self-closing tag end and insert a space to\n    // separate the marker from the tag end:\n    const end =\n      regex === tagEndRegex && strings[i + 1].startsWith('/>') ? ' ' : '';\n    html +=\n      regex === textEndRegex\n        ? s + nodeMarker\n        : attrNameEndIndex >= 0\n        ? (attrNames.push(attrName!),\n          s.slice(0, attrNameEndIndex) +\n            boundAttributeSuffix +\n            s.slice(attrNameEndIndex)) +\n          marker +\n          end\n        : s +\n          marker +\n          (attrNameEndIndex === -2 ? (attrNames.push(undefined), i) : end);\n  }\n\n  const htmlResult: string | TrustedHTML =\n    html + (strings[l] || '<?>') + (type === SVG_RESULT ? '</svg>' : '');\n\n  // Returned as an array for terseness\n  return [trustFromTemplateString(strings, htmlResult), attrNames];\n};\n\n/** @internal */\nexport type {Template};\nclass Template {\n  /** @internal */\n  el!: HTMLTemplateElement;\n\n  parts: Array<TemplatePart> = [];\n\n  constructor(\n    // This property needs to remain unminified.\n    {strings, ['_$litType$']: type}: TemplateResult,\n    options?: RenderOptions\n  ) {\n    let node: Node | null;\n    let nodeIndex = 0;\n    let attrNameIndex = 0;\n    const partCount = strings.length - 1;\n    const parts = this.parts;\n\n    // Create template element\n    const [html, attrNames] = getTemplateHtml(strings, type);\n    this.el = Template.createElement(html, options);\n    walker.currentNode = this.el.content;\n\n    // Reparent SVG nodes into template root\n    if (type === SVG_RESULT) {\n      const content = this.el.content;\n      const svgElement = content.firstChild!;\n      svgElement.remove();\n      content.append(...svgElement.childNodes);\n    }\n\n    // Walk the template to find binding markers and create TemplateParts\n    while ((node = walker.nextNode()) !== null && parts.length < partCount) {\n      if (node.nodeType === 1) {\n        if (DEV_MODE) {\n          const tag = (node as Element).localName;\n          // Warn if `textarea` includes an expression and throw if `template`\n          // does since these are not supported. We do this by checking\n          // innerHTML for anything that looks like a marker. This catches\n          // cases like bindings in textarea there markers turn into text nodes.\n          if (\n            /^(?:textarea|template)$/i!.test(tag) &&\n            (node as Element).innerHTML.includes(marker)\n          ) {\n            const m =\n              `Expressions are not supported inside \\`${tag}\\` ` +\n              `elements. See https://lit.dev/msg/expression-in-${tag} for more ` +\n              `information.`;\n            if (tag === 'template') {\n              throw new Error(m);\n            } else issueWarning('', m);\n          }\n        }\n        // TODO (justinfagnani): for attempted dynamic tag names, we don't\n        // increment the bindingIndex, and it'll be off by 1 in the element\n        // and off by two after it.\n        if ((node as Element).hasAttributes()) {\n          // We defer removing bound attributes because on IE we might not be\n          // iterating attributes in their template order, and would sometimes\n          // remove an attribute that we still need to create a part for.\n          const attrsToRemove = [];\n          for (const name of (node as Element).getAttributeNames()) {\n            // `name` is the name of the attribute we're iterating over, but not\n            // _necessarily_ the name of the attribute we will create a part\n            // for. They can be different in browsers that don't iterate on\n            // attributes in source order. In that case the attrNames array\n            // contains the attribute name we'll process next. We only need the\n            // attribute name here to know if we should process a bound attribute\n            // on this element.\n            if (\n              name.endsWith(boundAttributeSuffix) ||\n              name.startsWith(marker)\n            ) {\n              const realName = attrNames[attrNameIndex++];\n              attrsToRemove.push(name);\n              if (realName !== undefined) {\n                // Lowercase for case-sensitive SVG attributes like viewBox\n                const value = (node as Element).getAttribute(\n                  realName.toLowerCase() + boundAttributeSuffix\n                )!;\n                const statics = value.split(marker);\n                const m = /([.?@])?(.*)/.exec(realName)!;\n                parts.push({\n                  type: ATTRIBUTE_PART,\n                  index: nodeIndex,\n                  name: m[2],\n                  strings: statics,\n                  ctor:\n                    m[1] === '.'\n                      ? PropertyPart\n                      : m[1] === '?'\n                      ? BooleanAttributePart\n                      : m[1] === '@'\n                      ? EventPart\n                      : AttributePart,\n                });\n              } else {\n                parts.push({\n                  type: ELEMENT_PART,\n                  index: nodeIndex,\n                });\n              }\n            }\n          }\n          for (const name of attrsToRemove) {\n            (node as Element).removeAttribute(name);\n          }\n        }\n        // TODO (justinfagnani): benchmark the regex against testing for each\n        // of the 3 raw text element names.\n        if (rawTextElement.test((node as Element).tagName)) {\n          // For raw text elements we need to split the text content on\n          // markers, create a Text node for each segment, and create\n          // a TemplatePart for each marker.\n          const strings = (node as Element).textContent!.split(marker);\n          const lastIndex = strings.length - 1;\n          if (lastIndex > 0) {\n            (node as Element).textContent = trustedTypes\n              ? (trustedTypes.emptyScript as unknown as '')\n              : '';\n            // Generate a new text node for each literal section\n            // These nodes are also used as the markers for node parts\n            // We can't use empty text nodes as markers because they're\n            // normalized when cloning in IE (could simplify when\n            // IE is no longer supported)\n            for (let i = 0; i < lastIndex; i++) {\n              (node as Element).append(strings[i], createMarker());\n              // Walk past the marker node we just added\n              walker.nextNode();\n              parts.push({type: CHILD_PART, index: ++nodeIndex});\n            }\n            // Note because this marker is added after the walker's current\n            // node, it will be walked to in the outer loop (and ignored), so\n            // we don't need to adjust nodeIndex here\n            (node as Element).append(strings[lastIndex], createMarker());\n          }\n        }\n      } else if (node.nodeType === 8) {\n        const data = (node as Comment).data;\n        if (data === markerMatch) {\n          parts.push({type: CHILD_PART, index: nodeIndex});\n        } else {\n          let i = -1;\n          while ((i = (node as Comment).data.indexOf(marker, i + 1)) !== -1) {\n            // Comment node has a binding marker inside, make an inactive part\n            // The binding won't work, but subsequent bindings will\n            parts.push({type: COMMENT_PART, index: nodeIndex});\n            // Move to the end of the match\n            i += marker.length - 1;\n          }\n        }\n      }\n      nodeIndex++;\n    }\n    // We could set walker.currentNode to another node here to prevent a memory\n    // leak, but every time we prepare a template, we immediately render it\n    // and re-use the walker in new TemplateInstance._clone().\n    debugLogEvent?.({\n      kind: 'template prep',\n      template: this,\n      clonableTemplate: this.el,\n      parts: this.parts,\n      strings,\n    });\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @nocollapse */\n  static createElement(html: TrustedHTML, _options?: RenderOptions) {\n    const el = d.createElement('template');\n    el.innerHTML = html as unknown as string;\n    return el;\n  }\n}\n\nexport interface Disconnectable {\n  _$parent?: Disconnectable;\n  _$disconnectableChildren?: Set<Disconnectable>;\n  // Rather than hold connection state on instances, Disconnectables recursively\n  // fetch the connection state from the RootPart they are connected in via\n  // getters up the Disconnectable tree via _$parent references. This pushes the\n  // cost of tracking the isConnected state to `AsyncDirectives`, and avoids\n  // needing to pass all Disconnectables (parts, template instances, and\n  // directives) their connection state each time it changes, which would be\n  // costly for trees that have no AsyncDirectives.\n  _$isConnected: boolean;\n}\n\nfunction resolveDirective(\n  part: ChildPart | AttributePart | ElementPart,\n  value: unknown,\n  parent: DirectiveParent = part,\n  attributeIndex?: number\n): unknown {\n  // Bail early if the value is explicitly noChange. Note, this means any\n  // nested directive is still attached and is not run.\n  if (value === noChange) {\n    return value;\n  }\n  let currentDirective =\n    attributeIndex !== undefined\n      ? (parent as AttributePart).__directives?.[attributeIndex]\n      : (parent as ChildPart | ElementPart | Directive).__directive;\n  const nextDirectiveConstructor = isPrimitive(value)\n    ? undefined\n    : // This property needs to remain unminified.\n      (value as DirectiveResult)['_$litDirective$'];\n  if (currentDirective?.constructor !== nextDirectiveConstructor) {\n    // This property needs to remain unminified.\n    currentDirective?.['_$notifyDirectiveConnectionChanged']?.(false);\n    if (nextDirectiveConstructor === undefined) {\n      currentDirective = undefined;\n    } else {\n      currentDirective = new nextDirectiveConstructor(part as PartInfo);\n      currentDirective._$initialize(part, parent, attributeIndex);\n    }\n    if (attributeIndex !== undefined) {\n      ((parent as AttributePart).__directives ??= [])[attributeIndex] =\n        currentDirective;\n    } else {\n      (parent as ChildPart | Directive).__directive = currentDirective;\n    }\n  }\n  if (currentDirective !== undefined) {\n    value = resolveDirective(\n      part,\n      currentDirective._$resolve(part, (value as DirectiveResult).values),\n      currentDirective,\n      attributeIndex\n    );\n  }\n  return value;\n}\n\nexport type {TemplateInstance};\n/**\n * An updateable instance of a Template. Holds references to the Parts used to\n * update the template instance.\n */\nclass TemplateInstance implements Disconnectable {\n  _$template: Template;\n  _$parts: Array<Part | undefined> = [];\n\n  /** @internal */\n  _$parent: ChildPart;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  constructor(template: Template, parent: ChildPart) {\n    this._$template = template;\n    this._$parent = parent;\n  }\n\n  // Called by ChildPart parentNode getter\n  get parentNode() {\n    return this._$parent.parentNode;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  // This method is separate from the constructor because we need to return a\n  // DocumentFragment and we don't want to hold onto it with an instance field.\n  _clone(options: RenderOptions | undefined) {\n    const {\n      el: {content},\n      parts: parts,\n    } = this._$template;\n    const fragment = (options?.creationScope ?? d).importNode(content, true);\n    walker.currentNode = fragment;\n\n    let node = walker.nextNode()!;\n    let nodeIndex = 0;\n    let partIndex = 0;\n    let templatePart = parts[0];\n\n    while (templatePart !== undefined) {\n      if (nodeIndex === templatePart.index) {\n        let part: Part | undefined;\n        if (templatePart.type === CHILD_PART) {\n          part = new ChildPart(\n            node as HTMLElement,\n            node.nextSibling,\n            this,\n            options\n          );\n        } else if (templatePart.type === ATTRIBUTE_PART) {\n          part = new templatePart.ctor(\n            node as HTMLElement,\n            templatePart.name,\n            templatePart.strings,\n            this,\n            options\n          );\n        } else if (templatePart.type === ELEMENT_PART) {\n          part = new ElementPart(node as HTMLElement, this, options);\n        }\n        this._$parts.push(part);\n        templatePart = parts[++partIndex];\n      }\n      if (nodeIndex !== templatePart?.index) {\n        node = walker.nextNode()!;\n        nodeIndex++;\n      }\n    }\n    // We need to set the currentNode away from the cloned tree so that we\n    // don't hold onto the tree even if the tree is detached and should be\n    // freed.\n    walker.currentNode = d;\n    return fragment;\n  }\n\n  _update(values: Array<unknown>) {\n    let i = 0;\n    for (const part of this._$parts) {\n      if (part !== undefined) {\n        debugLogEvent?.({\n          kind: 'set part',\n          part,\n          value: values[i],\n          valueIndex: i,\n          values,\n          templateInstance: this,\n        });\n        if ((part as AttributePart).strings !== undefined) {\n          (part as AttributePart)._$setValue(values, part as AttributePart, i);\n          // The number of values the part consumes is part.strings.length - 1\n          // since values are in between template spans. We increment i by 1\n          // later in the loop, so increment it by part.strings.length - 2 here\n          i += (part as AttributePart).strings!.length - 2;\n        } else {\n          part._$setValue(values[i]);\n        }\n      }\n      i++;\n    }\n  }\n}\n\n/*\n * Parts\n */\ntype AttributeTemplatePart = {\n  readonly type: typeof ATTRIBUTE_PART;\n  readonly index: number;\n  readonly name: string;\n  readonly ctor: typeof AttributePart;\n  readonly strings: ReadonlyArray<string>;\n};\ntype ChildTemplatePart = {\n  readonly type: typeof CHILD_PART;\n  readonly index: number;\n};\ntype ElementTemplatePart = {\n  readonly type: typeof ELEMENT_PART;\n  readonly index: number;\n};\ntype CommentTemplatePart = {\n  readonly type: typeof COMMENT_PART;\n  readonly index: number;\n};\n\n/**\n * A TemplatePart represents a dynamic part in a template, before the template\n * is instantiated. When a template is instantiated Parts are created from\n * TemplateParts.\n */\ntype TemplatePart =\n  | ChildTemplatePart\n  | AttributeTemplatePart\n  | ElementTemplatePart\n  | CommentTemplatePart;\n\nexport type Part =\n  | ChildPart\n  | AttributePart\n  | PropertyPart\n  | BooleanAttributePart\n  | ElementPart\n  | EventPart;\n\nexport type {ChildPart};\nclass ChildPart implements Disconnectable {\n  readonly type = CHILD_PART;\n  readonly options: RenderOptions | undefined;\n  _$committedValue: unknown = nothing;\n  /** @internal */\n  __directive?: Directive;\n  /** @internal */\n  _$startNode: ChildNode;\n  /** @internal */\n  _$endNode: ChildNode | null;\n  private _textSanitizer: ValueSanitizer | undefined;\n  /** @internal */\n  _$parent: Disconnectable | undefined;\n  /**\n   * Connection state for RootParts only (i.e. ChildPart without _$parent\n   * returned from top-level `render`). This field is unsed otherwise. The\n   * intention would clearer if we made `RootPart` a subclass of `ChildPart`\n   * with this field (and a different _$isConnected getter), but the subclass\n   * caused a perf regression, possibly due to making call sites polymorphic.\n   * @internal\n   */\n  __isConnected: boolean;\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    // ChildParts that are not at the root should always be created with a\n    // parent; only RootChildNode's won't, so they return the local isConnected\n    // state\n    return this._$parent?._$isConnected ?? this.__isConnected;\n  }\n\n  // The following fields will be patched onto ChildParts when required by\n  // AsyncDirective\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n  /** @internal */\n  _$notifyConnectionChanged?(\n    isConnected: boolean,\n    removeFromParent?: boolean,\n    from?: number\n  ): void;\n  /** @internal */\n  _$reparentDisconnectables?(parent: Disconnectable): void;\n\n  constructor(\n    startNode: ChildNode,\n    endNode: ChildNode | null,\n    parent: TemplateInstance | ChildPart | undefined,\n    options: RenderOptions | undefined\n  ) {\n    this._$startNode = startNode;\n    this._$endNode = endNode;\n    this._$parent = parent;\n    this.options = options;\n    // Note __isConnected is only ever accessed on RootParts (i.e. when there is\n    // no _$parent); the value on a non-root-part is \"don't care\", but checking\n    // for parent would be more code\n    this.__isConnected = options?.isConnected ?? true;\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      // Explicitly initialize for consistent class shape.\n      this._textSanitizer = undefined;\n    }\n  }\n\n  /**\n   * The parent node into which the part renders its content.\n   *\n   * A ChildPart's content consists of a range of adjacent child nodes of\n   * `.parentNode`, possibly bordered by 'marker nodes' (`.startNode` and\n   * `.endNode`).\n   *\n   * - If both `.startNode` and `.endNode` are non-null, then the part's content\n   * consists of all siblings between `.startNode` and `.endNode`, exclusively.\n   *\n   * - If `.startNode` is non-null but `.endNode` is null, then the part's\n   * content consists of all siblings following `.startNode`, up to and\n   * including the last child of `.parentNode`. If `.endNode` is non-null, then\n   * `.startNode` will always be non-null.\n   *\n   * - If both `.endNode` and `.startNode` are null, then the part's content\n   * consists of all child nodes of `.parentNode`.\n   */\n  get parentNode(): Node {\n    let parentNode: Node = wrap(this._$startNode).parentNode!;\n    const parent = this._$parent;\n    if (\n      parent !== undefined &&\n      parentNode?.nodeType === 11 /* Node.DOCUMENT_FRAGMENT */\n    ) {\n      // If the parentNode is a DocumentFragment, it may be because the DOM is\n      // still in the cloned fragment during initial render; if so, get the real\n      // parentNode the part will be committed into by asking the parent.\n      parentNode = (parent as ChildPart | TemplateInstance).parentNode;\n    }\n    return parentNode;\n  }\n\n  /**\n   * The part's leading marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get startNode(): Node | null {\n    return this._$startNode;\n  }\n\n  /**\n   * The part's trailing marker node, if any. See `.parentNode` for more\n   * information.\n   */\n  get endNode(): Node | null {\n    return this._$endNode;\n  }\n\n  _$setValue(value: unknown, directiveParent: DirectiveParent = this): void {\n    if (DEV_MODE && this.parentNode === null) {\n      throw new Error(\n        `This \\`ChildPart\\` has no \\`parentNode\\` and therefore cannot accept a value. This likely means the element containing the part was manipulated in an unsupported way outside of Lit's control such that the part's marker nodes were ejected from DOM. For example, setting the element's \\`innerHTML\\` or \\`textContent\\` can do this.`\n      );\n    }\n    value = resolveDirective(this, value, directiveParent);\n    if (isPrimitive(value)) {\n      // Non-rendering child values. It's important that these do not render\n      // empty text nodes to avoid issues with preventing default <slot>\n      // fallback content.\n      if (value === nothing || value == null || value === '') {\n        if (this._$committedValue !== nothing) {\n          debugLogEvent?.({\n            kind: 'commit nothing to child',\n            start: this._$startNode,\n            end: this._$endNode,\n            parent: this._$parent,\n            options: this.options,\n          });\n          this._$clear();\n        }\n        this._$committedValue = nothing;\n      } else if (value !== this._$committedValue && value !== noChange) {\n        this._commitText(value);\n      }\n      // This property needs to remain unminified.\n    } else if ((value as TemplateResult)['_$litType$'] !== undefined) {\n      this._commitTemplateResult(value as TemplateResult);\n    } else if ((value as Node).nodeType !== undefined) {\n      if (DEV_MODE && this.options?.host === value) {\n        this._commitText(\n          `[probable mistake: rendered a template's host in itself ` +\n            `(commonly caused by writing \\${this} in a template]`\n        );\n        console.warn(\n          `Attempted to render the template host`,\n          value,\n          `inside itself. This is almost always a mistake, and in dev mode `,\n          `we render some warning text. In production however, we'll `,\n          `render it, which will usually result in an error, and sometimes `,\n          `in the element disappearing from the DOM.`\n        );\n        return;\n      }\n      this._commitNode(value as Node);\n    } else if (isIterable(value)) {\n      this._commitIterable(value);\n    } else {\n      // Fallback, will render the string representation\n      this._commitText(value);\n    }\n  }\n\n  private _insert<T extends Node>(node: T) {\n    return wrap(wrap(this._$startNode).parentNode!).insertBefore(\n      node,\n      this._$endNode\n    );\n  }\n\n  private _commitNode(value: Node): void {\n    if (this._$committedValue !== value) {\n      this._$clear();\n      if (\n        ENABLE_EXTRA_SECURITY_HOOKS &&\n        sanitizerFactoryInternal !== noopSanitizer\n      ) {\n        const parentNodeName = this._$startNode.parentNode?.nodeName;\n        if (parentNodeName === 'STYLE' || parentNodeName === 'SCRIPT') {\n          let message = 'Forbidden';\n          if (DEV_MODE) {\n            if (parentNodeName === 'STYLE') {\n              message =\n                `Lit does not support binding inside style nodes. ` +\n                `This is a security risk, as style injection attacks can ` +\n                `exfiltrate data and spoof UIs. ` +\n                `Consider instead using css\\`...\\` literals ` +\n                `to compose styles, and make do dynamic styling with ` +\n                `css custom properties, ::parts, <slot>s, ` +\n                `and by mutating the DOM rather than stylesheets.`;\n            } else {\n              message =\n                `Lit does not support binding inside script nodes. ` +\n                `This is a security risk, as it could allow arbitrary ` +\n                `code execution.`;\n            }\n          }\n          throw new Error(message);\n        }\n      }\n      debugLogEvent?.({\n        kind: 'commit node',\n        start: this._$startNode,\n        parent: this._$parent,\n        value: value,\n        options: this.options,\n      });\n      this._$committedValue = this._insert(value);\n    }\n  }\n\n  private _commitText(value: unknown): void {\n    // If the committed value is a primitive it means we called _commitText on\n    // the previous render, and we know that this._$startNode.nextSibling is a\n    // Text node. We can now just replace the text content (.data) of the node.\n    if (\n      this._$committedValue !== nothing &&\n      isPrimitive(this._$committedValue)\n    ) {\n      const node = wrap(this._$startNode).nextSibling as Text;\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(node, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n      }\n      debugLogEvent?.({\n        kind: 'commit text',\n        node,\n        value,\n        options: this.options,\n      });\n      (node as Text).data = value as string;\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        const textNode = d.createTextNode('');\n        this._commitNode(textNode);\n        // When setting text content, for security purposes it matters a lot\n        // what the parent is. For example, <style> and <script> need to be\n        // handled with care, while <span> does not. So first we need to put a\n        // text node into the document, then we can sanitize its content.\n        if (this._textSanitizer === undefined) {\n          this._textSanitizer = createSanitizer(textNode, 'data', 'property');\n        }\n        value = this._textSanitizer(value);\n        debugLogEvent?.({\n          kind: 'commit text',\n          node: textNode,\n          value,\n          options: this.options,\n        });\n        textNode.data = value as string;\n      } else {\n        this._commitNode(d.createTextNode(value as string));\n        debugLogEvent?.({\n          kind: 'commit text',\n          node: wrap(this._$startNode).nextSibling as Text,\n          value,\n          options: this.options,\n        });\n      }\n    }\n    this._$committedValue = value;\n  }\n\n  private _commitTemplateResult(\n    result: TemplateResult | CompiledTemplateResult\n  ): void {\n    // This property needs to remain unminified.\n    const {values, ['_$litType$']: type} = result;\n    // If $litType$ is a number, result is a plain TemplateResult and we get\n    // the template from the template cache. If not, result is a\n    // CompiledTemplateResult and _$litType$ is a CompiledTemplate and we need\n    // to create the <template> element the first time we see it.\n    const template: Template | CompiledTemplate =\n      typeof type === 'number'\n        ? this._$getTemplate(result as TemplateResult)\n        : (type.el === undefined &&\n            (type.el = Template.createElement(\n              trustFromTemplateString(type.h, type.h[0]),\n              this.options\n            )),\n          type);\n\n    if ((this._$committedValue as TemplateInstance)?._$template === template) {\n      debugLogEvent?.({\n        kind: 'template updating',\n        template,\n        instance: this._$committedValue as TemplateInstance,\n        parts: (this._$committedValue as TemplateInstance)._$parts,\n        options: this.options,\n        values,\n      });\n      (this._$committedValue as TemplateInstance)._update(values);\n    } else {\n      const instance = new TemplateInstance(template as Template, this);\n      const fragment = instance._clone(this.options);\n      debugLogEvent?.({\n        kind: 'template instantiated',\n        template,\n        instance,\n        parts: instance._$parts,\n        options: this.options,\n        fragment,\n        values,\n      });\n      instance._update(values);\n      debugLogEvent?.({\n        kind: 'template instantiated and updated',\n        template,\n        instance,\n        parts: instance._$parts,\n        options: this.options,\n        fragment,\n        values,\n      });\n      this._commitNode(fragment);\n      this._$committedValue = instance;\n    }\n  }\n\n  // Overridden via `litHtmlPolyfillSupport` to provide platform support.\n  /** @internal */\n  _$getTemplate(result: TemplateResult) {\n    let template = templateCache.get(result.strings);\n    if (template === undefined) {\n      templateCache.set(result.strings, (template = new Template(result)));\n    }\n    return template;\n  }\n\n  private _commitIterable(value: Iterable<unknown>): void {\n    // For an Iterable, we create a new InstancePart per item, then set its\n    // value to the item. This is a little bit of overhead for every item in\n    // an Iterable, but it lets us recurse easily and efficiently update Arrays\n    // of TemplateResults that will be commonly returned from expressions like:\n    // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n\n    // If value is an array, then the previous render was of an\n    // iterable and value will contain the ChildParts from the previous\n    // render. If value is not an array, clear this part and make a new\n    // array for ChildParts.\n    if (!isArray(this._$committedValue)) {\n      this._$committedValue = [];\n      this._$clear();\n    }\n\n    // Lets us keep track of how many items we stamped so we can clear leftover\n    // items from a previous render\n    const itemParts = this._$committedValue as ChildPart[];\n    let partIndex = 0;\n    let itemPart: ChildPart | undefined;\n\n    for (const item of value) {\n      if (partIndex === itemParts.length) {\n        // If no existing part, create a new one\n        // TODO (justinfagnani): test perf impact of always creating two parts\n        // instead of sharing parts between nodes\n        // https://github.com/lit/lit/issues/1266\n        itemParts.push(\n          (itemPart = new ChildPart(\n            this._insert(createMarker()),\n            this._insert(createMarker()),\n            this,\n            this.options\n          ))\n        );\n      } else {\n        // Reuse an existing part\n        itemPart = itemParts[partIndex];\n      }\n      itemPart._$setValue(item);\n      partIndex++;\n    }\n\n    if (partIndex < itemParts.length) {\n      // itemParts always have end nodes\n      this._$clear(\n        itemPart && wrap(itemPart._$endNode!).nextSibling,\n        partIndex\n      );\n      // Truncate the parts array so _value reflects the current state\n      itemParts.length = partIndex;\n    }\n  }\n\n  /**\n   * Removes the nodes contained within this Part from the DOM.\n   *\n   * @param start Start node to clear from, for clearing a subset of the part's\n   *     DOM (used when truncating iterables)\n   * @param from  When `start` is specified, the index within the iterable from\n   *     which ChildParts are being removed, used for disconnecting directives in\n   *     those Parts.\n   *\n   * @internal\n   */\n  _$clear(\n    start: ChildNode | null = wrap(this._$startNode).nextSibling,\n    from?: number\n  ) {\n    this._$notifyConnectionChanged?.(false, true, from);\n    while (start && start !== this._$endNode) {\n      const n = wrap(start!).nextSibling;\n      (wrap(start!) as Element).remove();\n      start = n;\n    }\n  }\n  /**\n   * Implementation of RootPart's `isConnected`. Note that this metod\n   * should only be called on `RootPart`s (the `ChildPart` returned from a\n   * top-level `render()` call). It has no effect on non-root ChildParts.\n   * @param isConnected Whether to set\n   * @internal\n   */\n  setConnected(isConnected: boolean) {\n    if (this._$parent === undefined) {\n      this.__isConnected = isConnected;\n      this._$notifyConnectionChanged?.(isConnected);\n    } else if (DEV_MODE) {\n      throw new Error(\n        'part.setConnected() may only be called on a ' +\n          'RootPart returned from render().'\n      );\n    }\n  }\n}\n\n/**\n * A top-level `ChildPart` returned from `render` that manages the connected\n * state of `AsyncDirective`s created throughout the tree below it.\n */\nexport interface RootPart extends ChildPart {\n  /**\n   * Sets the connection state for `AsyncDirective`s contained within this root\n   * ChildPart.\n   *\n   * lit-html does not automatically monitor the connectedness of DOM rendered;\n   * as such, it is the responsibility of the caller to `render` to ensure that\n   * `part.setConnected(false)` is called before the part object is potentially\n   * discarded, to ensure that `AsyncDirective`s have a chance to dispose of\n   * any resources being held. If a `RootPart` that was previously\n   * disconnected is subsequently re-connected (and its `AsyncDirective`s should\n   * re-connect), `setConnected(true)` should be called.\n   *\n   * @param isConnected Whether directives within this tree should be connected\n   * or not\n   */\n  setConnected(isConnected: boolean): void;\n}\n\nexport type {AttributePart};\nclass AttributePart implements Disconnectable {\n  readonly type = ATTRIBUTE_PART as\n    | typeof ATTRIBUTE_PART\n    | typeof PROPERTY_PART\n    | typeof BOOLEAN_ATTRIBUTE_PART\n    | typeof EVENT_PART;\n  readonly element: HTMLElement;\n  readonly name: string;\n  readonly options: RenderOptions | undefined;\n\n  /**\n   * If this attribute part represents an interpolation, this contains the\n   * static strings of the interpolation. For single-value, complete bindings,\n   * this is undefined.\n   */\n  readonly strings?: ReadonlyArray<string>;\n  /** @internal */\n  _$committedValue: unknown | Array<unknown> = nothing;\n  /** @internal */\n  __directives?: Array<Directive | undefined>;\n  /** @internal */\n  _$parent: Disconnectable;\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  protected _sanitizer: ValueSanitizer | undefined;\n\n  get tagName() {\n    return this.element.tagName;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this.element = element;\n    this.name = name;\n    this._$parent = parent;\n    this.options = options;\n    if (strings.length > 2 || strings[0] !== '' || strings[1] !== '') {\n      this._$committedValue = new Array(strings.length - 1).fill(new String());\n      this.strings = strings;\n    } else {\n      this._$committedValue = nothing;\n    }\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      this._sanitizer = undefined;\n    }\n  }\n\n  /**\n   * Sets the value of this part by resolving the value from possibly multiple\n   * values and static strings and committing it to the DOM.\n   * If this part is single-valued, `this._strings` will be undefined, and the\n   * method will be called with a single value argument. If this part is\n   * multi-value, `this._strings` will be defined, and the method is called\n   * with the value array of the part's owning TemplateInstance, and an offset\n   * into the value array from which the values should be read.\n   * This method is overloaded this way to eliminate short-lived array slices\n   * of the template instance values, and allow a fast-path for single-valued\n   * parts.\n   *\n   * @param value The part value, or an array of values for multi-valued parts\n   * @param valueIndex the index to start reading values from. `undefined` for\n   *   single-valued parts\n   * @param noCommit causes the part to not commit its value to the DOM. Used\n   *   in hydration to prime attribute parts with their first-rendered value,\n   *   but not set the attribute, and in SSR to no-op the DOM operation and\n   *   capture the value for serialization.\n   *\n   * @internal\n   */\n  _$setValue(\n    value: unknown | Array<unknown>,\n    directiveParent: DirectiveParent = this,\n    valueIndex?: number,\n    noCommit?: boolean\n  ) {\n    const strings = this.strings;\n\n    // Whether any of the values has changed, for dirty-checking\n    let change = false;\n\n    if (strings === undefined) {\n      // Single-value binding case\n      value = resolveDirective(this, value, directiveParent, 0);\n      change =\n        !isPrimitive(value) ||\n        (value !== this._$committedValue && value !== noChange);\n      if (change) {\n        this._$committedValue = value;\n      }\n    } else {\n      // Interpolation case\n      const values = value as Array<unknown>;\n      value = strings[0];\n\n      let i, v;\n      for (i = 0; i < strings.length - 1; i++) {\n        v = resolveDirective(this, values[valueIndex! + i], directiveParent, i);\n\n        if (v === noChange) {\n          // If the user-provided value is `noChange`, use the previous value\n          v = (this._$committedValue as Array<unknown>)[i];\n        }\n        change ||=\n          !isPrimitive(v) || v !== (this._$committedValue as Array<unknown>)[i];\n        if (v === nothing) {\n          value = nothing;\n        } else if (value !== nothing) {\n          value += (v ?? '') + strings[i + 1];\n        }\n        // We always record each value, even if one is `nothing`, for future\n        // change detection.\n        (this._$committedValue as Array<unknown>)[i] = v;\n      }\n    }\n    if (change && !noCommit) {\n      this._commitValue(value);\n    }\n  }\n\n  /** @internal */\n  _commitValue(value: unknown) {\n    if (value === nothing) {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    } else {\n      if (ENABLE_EXTRA_SECURITY_HOOKS) {\n        if (this._sanitizer === undefined) {\n          this._sanitizer = sanitizerFactoryInternal(\n            this.element,\n            this.name,\n            'attribute'\n          );\n        }\n        value = this._sanitizer(value ?? '');\n      }\n      debugLogEvent?.({\n        kind: 'commit attribute',\n        element: this.element,\n        name: this.name,\n        value,\n        options: this.options,\n      });\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        (value ?? '') as string\n      );\n    }\n  }\n}\n\nexport type {PropertyPart};\nclass PropertyPart extends AttributePart {\n  override readonly type = PROPERTY_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    if (ENABLE_EXTRA_SECURITY_HOOKS) {\n      if (this._sanitizer === undefined) {\n        this._sanitizer = sanitizerFactoryInternal(\n          this.element,\n          this.name,\n          'property'\n        );\n      }\n      value = this._sanitizer(value);\n    }\n    debugLogEvent?.({\n      kind: 'commit property',\n      element: this.element,\n      name: this.name,\n      value,\n      options: this.options,\n    });\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (this.element as any)[this.name] = value === nothing ? undefined : value;\n  }\n}\n\n// Temporary workaround for https://crbug.com/993268\n// Currently, any attribute starting with \"on\" is considered to be a\n// TrustedScript source. Such boolean attributes must be set to the equivalent\n// trusted emptyScript value.\nconst emptyStringForBooleanAttribute = trustedTypes\n  ? (trustedTypes.emptyScript as unknown as '')\n  : '';\n\nexport type {BooleanAttributePart};\nclass BooleanAttributePart extends AttributePart {\n  override readonly type = BOOLEAN_ATTRIBUTE_PART;\n\n  /** @internal */\n  override _commitValue(value: unknown) {\n    debugLogEvent?.({\n      kind: 'commit boolean attribute',\n      element: this.element,\n      name: this.name,\n      value: !!(value && value !== nothing),\n      options: this.options,\n    });\n    if (value && value !== nothing) {\n      (wrap(this.element) as Element).setAttribute(\n        this.name,\n        emptyStringForBooleanAttribute\n      );\n    } else {\n      (wrap(this.element) as Element).removeAttribute(this.name);\n    }\n  }\n}\n\ntype EventListenerWithOptions = EventListenerOrEventListenerObject &\n  Partial<AddEventListenerOptions>;\n\n/**\n * An AttributePart that manages an event listener via add/removeEventListener.\n *\n * This part works by adding itself as the event listener on an element, then\n * delegating to the value passed to it. This reduces the number of calls to\n * add/removeEventListener if the listener changes frequently, such as when an\n * inline function is used as a listener.\n *\n * Because event options are passed when adding listeners, we must take case\n * to add and remove the part as a listener when the event options change.\n */\nexport type {EventPart};\nclass EventPart extends AttributePart {\n  override readonly type = EVENT_PART;\n\n  constructor(\n    element: HTMLElement,\n    name: string,\n    strings: ReadonlyArray<string>,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    super(element, name, strings, parent, options);\n\n    if (DEV_MODE && this.strings !== undefined) {\n      throw new Error(\n        `A \\`<${element.localName}>\\` has a \\`@${name}=...\\` listener with ` +\n          'invalid content. Event listeners in templates must have exactly ' +\n          'one expression and no surrounding text.'\n      );\n    }\n  }\n\n  // EventPart does not use the base _$setValue/_resolveValue implementation\n  // since the dirty checking is more complex\n  /** @internal */\n  override _$setValue(\n    newListener: unknown,\n    directiveParent: DirectiveParent = this\n  ) {\n    newListener =\n      resolveDirective(this, newListener, directiveParent, 0) ?? nothing;\n    if (newListener === noChange) {\n      return;\n    }\n    const oldListener = this._$committedValue;\n\n    // If the new value is nothing or any options change we have to remove the\n    // part as a listener.\n    const shouldRemoveListener =\n      (newListener === nothing && oldListener !== nothing) ||\n      (newListener as EventListenerWithOptions).capture !==\n        (oldListener as EventListenerWithOptions).capture ||\n      (newListener as EventListenerWithOptions).once !==\n        (oldListener as EventListenerWithOptions).once ||\n      (newListener as EventListenerWithOptions).passive !==\n        (oldListener as EventListenerWithOptions).passive;\n\n    // If the new value is not nothing and we removed the listener, we have\n    // to add the part as a listener.\n    const shouldAddListener =\n      newListener !== nothing &&\n      (oldListener === nothing || shouldRemoveListener);\n\n    debugLogEvent?.({\n      kind: 'commit event listener',\n      element: this.element,\n      name: this.name,\n      value: newListener,\n      options: this.options,\n      removeListener: shouldRemoveListener,\n      addListener: shouldAddListener,\n      oldListener,\n    });\n    if (shouldRemoveListener) {\n      this.element.removeEventListener(\n        this.name,\n        this,\n        oldListener as EventListenerWithOptions\n      );\n    }\n    if (shouldAddListener) {\n      // Beware: IE11 and Chrome 41 don't like using the listener as the\n      // options object. Figure out how to deal w/ this in IE11 - maybe\n      // patch addEventListener?\n      this.element.addEventListener(\n        this.name,\n        this,\n        newListener as EventListenerWithOptions\n      );\n    }\n    this._$committedValue = newListener;\n  }\n\n  handleEvent(event: Event) {\n    if (typeof this._$committedValue === 'function') {\n      this._$committedValue.call(this.options?.host ?? this.element, event);\n    } else {\n      (this._$committedValue as EventListenerObject).handleEvent(event);\n    }\n  }\n}\n\nexport type {ElementPart};\nclass ElementPart implements Disconnectable {\n  readonly type = ELEMENT_PART;\n\n  /** @internal */\n  __directive?: Directive;\n\n  // This is to ensure that every Part has a _$committedValue\n  _$committedValue: undefined;\n\n  /** @internal */\n  _$parent!: Disconnectable;\n\n  /** @internal */\n  _$disconnectableChildren?: Set<Disconnectable> = undefined;\n\n  options: RenderOptions | undefined;\n\n  constructor(\n    public element: Element,\n    parent: Disconnectable,\n    options: RenderOptions | undefined\n  ) {\n    this._$parent = parent;\n    this.options = options;\n  }\n\n  // See comment in Disconnectable interface for why this is a getter\n  get _$isConnected() {\n    return this._$parent._$isConnected;\n  }\n\n  _$setValue(value: unknown): void {\n    debugLogEvent?.({\n      kind: 'commit to element binding',\n      element: this.element,\n      value,\n      options: this.options,\n    });\n    resolveDirective(this, value);\n  }\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LH object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-element, which re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LH = {\n  // Used in lit-ssr\n  _boundAttributeSuffix: boundAttributeSuffix,\n  _marker: marker,\n  _markerMatch: markerMatch,\n  _HTML_RESULT: HTML_RESULT,\n  _getTemplateHtml: getTemplateHtml,\n  // Used in tests and private-ssr-support\n  _TemplateInstance: TemplateInstance,\n  _isIterable: isIterable,\n  _resolveDirective: resolveDirective,\n  _ChildPart: ChildPart,\n  _AttributePart: AttributePart,\n  _BooleanAttributePart: BooleanAttributePart,\n  _EventPart: EventPart,\n  _PropertyPart: PropertyPart,\n  _ElementPart: ElementPart,\n};\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? global.litHtmlPolyfillSupportDevMode\n  : global.litHtmlPolyfillSupport;\npolyfillSupport?.(Template, ChildPart);\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n(global.litHtmlVersions ??= []).push('2.8.0');\nif (DEV_MODE && global.litHtmlVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. ` +\n      `Loading multiple versions is not recommended.`\n  );\n}\n\n/**\n * Renders a value, usually a lit-html TemplateResult, to the container.\n *\n * This example renders the text \"Hello, Zoe!\" inside a paragraph tag, appending\n * it to the container `document.body`.\n *\n * ```js\n * import {html, render} from 'lit';\n *\n * const name = \"Zoe\";\n * render(html`<p>Hello, ${name}!</p>`, document.body);\n * ```\n *\n * @param value Any [renderable\n *   value](https://lit.dev/docs/templates/expressions/#child-expressions),\n *   typically a {@linkcode TemplateResult} created by evaluating a template tag\n *   like {@linkcode html} or {@linkcode svg}.\n * @param container A DOM container to render to. The first render will append\n *   the rendered value to the container, and subsequent renders will\n *   efficiently update the rendered value if the same result type was\n *   previously rendered there.\n * @param options See {@linkcode RenderOptions} for options documentation.\n * @see\n * {@link https://lit.dev/docs/libraries/standalone-templates/#rendering-lit-html-templates| Rendering Lit HTML Templates}\n */\nexport const render = (\n  value: unknown,\n  container: HTMLElement | DocumentFragment,\n  options?: RenderOptions\n): RootPart => {\n  if (DEV_MODE && container == null) {\n    // Give a clearer error message than\n    //     Uncaught TypeError: Cannot read properties of null (reading\n    //     '_$litPart$')\n    // which reads like an internal Lit error.\n    throw new TypeError(`The container to render into may not be ${container}`);\n  }\n  const renderId = DEV_MODE ? debugLogRenderId++ : 0;\n  const partOwnerNode = options?.renderBefore ?? container;\n  // This property needs to remain unminified.\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let part: ChildPart = (partOwnerNode as any)['_$litPart$'];\n  debugLogEvent?.({\n    kind: 'begin render',\n    id: renderId,\n    value,\n    container,\n    options,\n    part,\n  });\n  if (part === undefined) {\n    const endNode = options?.renderBefore ?? null;\n    // This property needs to remain unminified.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (partOwnerNode as any)['_$litPart$'] = part = new ChildPart(\n      container.insertBefore(createMarker(), endNode),\n      endNode,\n      undefined,\n      options ?? {}\n    );\n  }\n  part._$setValue(value);\n  debugLogEvent?.({\n    kind: 'end render',\n    id: renderId,\n    value,\n    container,\n    options,\n    part,\n  });\n  return part as RootPart;\n};\n\nif (ENABLE_EXTRA_SECURITY_HOOKS) {\n  render.setSanitizer = setSanitizer;\n  render.createSanitizer = createSanitizer;\n  if (DEV_MODE) {\n    render._testOnlyClearSanitizerFactoryDoNotCallOrElse =\n      _testOnlyClearSanitizerFactoryDoNotCallOrElse;\n  }\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/**\n * The main LitElement module, which defines the {@linkcode LitElement} base\n * class and related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import {@linkcode LitElement} and {@linkcode html} from this module to\n * create a component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends {@linkcode ReactiveElement} and adds lit-html\n * templating. The `ReactiveElement` class is provided for users that want to\n * build their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport {PropertyValues, ReactiveElement} from '@lit/reactive-element';\nimport {render, RenderOptions, noChange, RootPart} from 'lit-html';\nexport * from '@lit/reactive-element';\nexport * from 'lit-html';\n\nimport {LitUnstable} from 'lit-html';\nimport {ReactiveUnstable} from '@lit/reactive-element';\n\n/**\n * Contains types that are part of the unstable debug API.\n *\n * Everything in this API is not stable and may change or be removed in the future,\n * even on patch releases.\n */\n// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace Unstable {\n  /**\n   * When Lit is running in dev mode and `window.emitLitDebugLogEvents` is true,\n   * we will emit 'lit-debug' events to window, with live details about the update and render\n   * lifecycle. These can be useful for writing debug tooling and visualizations.\n   *\n   * Please be aware that running with window.emitLitDebugLogEvents has performance overhead,\n   * making certain operations that are normally very cheap (like a no-op render) much slower,\n   * because we must copy data and dispatch events.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  export namespace DebugLog {\n    export type Entry =\n      | LitUnstable.DebugLog.Entry\n      | ReactiveUnstable.DebugLog.Entry;\n  }\n}\n\n// For backwards compatibility export ReactiveElement as UpdatingElement. Note,\n// IE transpilation requires exporting like this.\nexport const UpdatingElement = ReactiveElement;\n\nconst DEV_MODE = true;\n\nlet issueWarning: (code: string, warning: string) => void;\n\nif (DEV_MODE) {\n  // Ensure warnings are issued only 1x, even if multiple versions of Lit\n  // are loaded.\n  const issuedWarnings: Set<string | undefined> =\n    (globalThis.litIssuedWarnings ??= new Set());\n\n  // Issue a warning, if we haven't already.\n  issueWarning = (code: string, warning: string) => {\n    warning += ` See https://lit.dev/msg/${code} for more information.`;\n    if (!issuedWarnings.has(warning)) {\n      console.warn(warning);\n      issuedWarnings.add(warning);\n    }\n  };\n}\n\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the {@linkcode LitElement.properties properties} property or the\n * {@linkcode property} decorator.\n */\nexport class LitElement extends ReactiveElement {\n  /**\n   * Ensure this class is marked as `finalized` as an optimization ensuring\n   * it will not needlessly try to `finalize`.\n   *\n   * Note this property name is a string to prevent breaking Closure JS Compiler\n   * optimizations. See @lit/reactive-element for more information.\n   */\n  protected static override ['finalized'] = true;\n\n  // This property needs to remain unminified.\n  static ['_$litElement$'] = true;\n\n  /**\n   * @category rendering\n   */\n  readonly renderOptions: RenderOptions = {host: this};\n\n  private __childPart: RootPart | undefined = undefined;\n\n  /**\n   * @category rendering\n   */\n  protected override createRenderRoot() {\n    const renderRoot = super.createRenderRoot();\n    // When adoptedStyleSheets are shimmed, they are inserted into the\n    // shadowRoot by createRenderRoot. Adjust the renderBefore node so that\n    // any styles in Lit content render before adoptedStyleSheets. This is\n    // important so that adoptedStyleSheets have precedence over styles in\n    // the shadowRoot.\n    this.renderOptions.renderBefore ??= renderRoot!.firstChild as ChildNode;\n    return renderRoot;\n  }\n\n  /**\n   * Updates the element. This method reflects property values to attributes\n   * and calls `render` to render DOM via lit-html. Setting properties inside\n   * this method will *not* trigger another update.\n   * @param changedProperties Map of changed properties with old values\n   * @category updates\n   */\n  protected override update(changedProperties: PropertyValues) {\n    // Setting properties in `render` should not trigger an update. Since\n    // updates are allowed after super.update, it's important to call `render`\n    // before that.\n    const value = this.render();\n    if (!this.hasUpdated) {\n      this.renderOptions.isConnected = this.isConnected;\n    }\n    super.update(changedProperties);\n    this.__childPart = render(value, this.renderRoot, this.renderOptions);\n  }\n\n  /**\n   * Invoked when the component is added to the document's DOM.\n   *\n   * In `connectedCallback()` you should setup tasks that should only occur when\n   * the element is connected to the document. The most common of these is\n   * adding event listeners to nodes external to the element, like a keydown\n   * event handler added to the window.\n   *\n   * ```ts\n   * connectedCallback() {\n   *   super.connectedCallback();\n   *   addEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * Typically, anything done in `connectedCallback()` should be undone when the\n   * element is disconnected, in `disconnectedCallback()`.\n   *\n   * @category lifecycle\n   */\n  override connectedCallback() {\n    super.connectedCallback();\n    this.__childPart?.setConnected(true);\n  }\n\n  /**\n   * Invoked when the component is removed from the document's DOM.\n   *\n   * This callback is the main signal to the element that it may no longer be\n   * used. `disconnectedCallback()` should ensure that nothing is holding a\n   * reference to the element (such as event listeners added to nodes external\n   * to the element), so that it is free to be garbage collected.\n   *\n   * ```ts\n   * disconnectedCallback() {\n   *   super.disconnectedCallback();\n   *   window.removeEventListener('keydown', this._handleKeydown);\n   * }\n   * ```\n   *\n   * An element may be re-connected after being disconnected.\n   *\n   * @category lifecycle\n   */\n  override disconnectedCallback() {\n    super.disconnectedCallback();\n    this.__childPart?.setConnected(false);\n  }\n\n  /**\n   * Invoked on each update to perform rendering tasks. This method may return\n   * any value renderable by lit-html's `ChildPart` - typically a\n   * `TemplateResult`. Setting properties inside this method will *not* trigger\n   * the element to update.\n   * @category rendering\n   */\n  protected render(): unknown {\n    return noChange;\n  }\n}\n\n// Install hydration if available\nglobalThis.litElementHydrateSupport?.({LitElement});\n\n// Apply polyfills if available\nconst polyfillSupport = DEV_MODE\n  ? globalThis.litElementPolyfillSupportDevMode\n  : globalThis.litElementPolyfillSupport;\npolyfillSupport?.({LitElement});\n\n// DEV mode warnings\nif (DEV_MODE) {\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  // Note, for compatibility with closure compilation, this access\n  // needs to be as a string property index.\n  (LitElement as any)['finalize'] = function (this: typeof LitElement) {\n    const finalized = (ReactiveElement as any).finalize.call(this);\n    if (!finalized) {\n      return false;\n    }\n    const warnRemovedOrRenamed = (obj: any, name: string, renamed = false) => {\n      if (obj.hasOwnProperty(name)) {\n        const ctorName = (typeof obj === 'function' ? obj : obj.constructor)\n          .name;\n        issueWarning(\n          renamed ? 'renamed-api' : 'removed-api',\n          `\\`${name}\\` is implemented on class ${ctorName}. It ` +\n            `has been ${renamed ? 'renamed' : 'removed'} ` +\n            `in this version of LitElement.`\n        );\n      }\n    };\n    warnRemovedOrRenamed(this, 'render');\n    warnRemovedOrRenamed(this, 'getStyles', true);\n    warnRemovedOrRenamed((this as typeof LitElement).prototype, 'adoptStyles');\n    return true;\n  };\n  /* eslint-enable @typescript-eslint/no-explicit-any */\n}\n\n/**\n * END USERS SHOULD NOT RELY ON THIS OBJECT.\n *\n * Private exports for use by other Lit packages, not intended for use by\n * external users.\n *\n * We currently do not make a mangled rollup build of the lit-ssr code. In order\n * to keep a number of (otherwise private) top-level exports  mangled in the\n * client side code, we export a _$LE object containing those members (or\n * helper methods for accessing private fields of those members), and then\n * re-export them for use in lit-ssr. This keeps lit-ssr agnostic to whether the\n * client-side code is being used in `dev` mode or `prod` mode.\n *\n * This has a unique name, to disambiguate it from private exports in\n * lit-html, since this module re-exports all of lit-html.\n *\n * @private\n */\nexport const _$LE = {\n  _$attributeToProperty: (\n    el: LitElement,\n    name: string,\n    value: string | null\n  ) => {\n    // eslint-disable-next-line\n    (el as any)._$attributeToProperty(name, value);\n  },\n  // eslint-disable-next-line\n  _$changedProperties: (el: LitElement) => (el as any)._$changedProperties,\n};\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n(globalThis.litElementVersions ??= []).push('3.3.3');\nif (DEV_MODE && globalThis.litElementVersions.length > 1) {\n  issueWarning!(\n    'multiple-versions',\n    `Multiple versions of Lit loaded. Loading multiple versions ` +\n      `is not recommended.`\n  );\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\nimport {PropertyDeclaration, ReactiveElement} from '../reactive-element.js';\nimport {ClassElement} from './base.js';\n\nconst standardProperty = (\n  options: PropertyDeclaration,\n  element: ClassElement\n) => {\n  // When decorating an accessor, pass it through and add property metadata.\n  // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n  // stomp over the user's accessor.\n  if (\n    element.kind === 'method' &&\n    element.descriptor &&\n    !('value' in element.descriptor)\n  ) {\n    return {\n      ...element,\n      finisher(clazz: typeof ReactiveElement) {\n        clazz.createProperty(element.key, options);\n      },\n    };\n  } else {\n    // createProperty() takes care of defining the property, but we still\n    // must return some kind of descriptor, so return a descriptor for an\n    // unused prototype field. The finisher calls createProperty().\n    return {\n      kind: 'field',\n      key: Symbol(),\n      placement: 'own',\n      descriptor: {},\n      // store the original key so subsequent decorators have access to it.\n      originalKey: element.key,\n      // When @babel/plugin-proposal-decorators implements initializers,\n      // do this instead of the initializer below. See:\n      // https://github.com/babel/babel/issues/9260 extras: [\n      //   {\n      //     kind: 'initializer',\n      //     placement: 'own',\n      //     initializer: descriptor.initializer,\n      //   }\n      // ],\n      initializer(this: {[key: string]: unknown}) {\n        if (typeof element.initializer === 'function') {\n          this[element.key as string] = element.initializer.call(this);\n        }\n      },\n      finisher(clazz: typeof ReactiveElement) {\n        clazz.createProperty(element.key, options);\n      },\n    };\n  }\n};\n\nconst legacyProperty = (\n  options: PropertyDeclaration,\n  proto: Object,\n  name: PropertyKey\n) => {\n  (proto.constructor as typeof ReactiveElement).createProperty(name, options);\n};\n\n/**\n * A property decorator which creates a reactive property that reflects a\n * corresponding attribute value. When a decorated property is set\n * the element will update and render. A {@linkcode PropertyDeclaration} may\n * optionally be supplied to configure property features.\n *\n * This decorator should only be used for public fields. As public fields,\n * properties should be considered as primarily settable by element users,\n * either via attribute or the property itself.\n *\n * Generally, properties that are changed by the element should be private or\n * protected fields and should use the {@linkcode state} decorator.\n *\n * However, sometimes element code does need to set a public property. This\n * should typically only be done in response to user interaction, and an event\n * should be fired informing the user; for example, a checkbox sets its\n * `checked` property when clicked and fires a `changed` event. Mutating public\n * properties should typically not be done for non-primitive (object or array)\n * properties. In other cases when an element needs to manage state, a private\n * property decorated via the {@linkcode state} decorator should be used. When\n * needed, state properties can be initialized via public properties to\n * facilitate complex interactions.\n *\n * ```ts\n * class MyElement {\n *   @property({ type: Boolean })\n *   clicked = false;\n * }\n * ```\n * @category Decorator\n * @ExportDecoratedItems\n */\nexport function property(options?: PropertyDeclaration) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (protoOrDescriptor: Object | ClassElement, name?: PropertyKey): any =>\n    name !== undefined\n      ? legacyProperty(options!, protoOrDescriptor as Object, name)\n      : standardProperty(options!, protoOrDescriptor as ClassElement);\n}\n", "/**\n * @license\n * Copyright 2017 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {property} from './property.js';\n\nexport interface InternalPropertyDeclaration<Type = unknown> {\n  /**\n   * A function that indicates if a property should be considered changed when\n   * it is set. The function should take the `newValue` and `oldValue` and\n   * return `true` if an update should be requested.\n   */\n  hasChanged?(value: Type, oldValue: Type): boolean;\n}\n\n/**\n * Declares a private or protected reactive property that still triggers\n * updates to the element when it changes. It does not reflect from the\n * corresponding attribute.\n *\n * Properties declared this way must not be used from HTML or HTML templating\n * systems, they're solely for properties internal to the element. These\n * properties may be renamed by optimization tools like closure compiler.\n * @category Decorator\n */\nexport function state(options?: InternalPropertyDeclaration) {\n  return property({\n    ...options,\n    state: true,\n  });\n}\n", "/**\n * @license\n * Copyright 2021 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\n/*\n * IMPORTANT: For compatibility with tsickle and the Closure JS compiler, all\n * property decorators (but not class decorators) in this file that have\n * an @ExportDecoratedItems annotation must be defined as a regular function,\n * not an arrow function.\n */\n\nimport {decorateProperty} from './base.js';\n\nimport type {ReactiveElement} from '../reactive-element.js';\nimport type {QueryAssignedNodesOptions} from './query-assigned-nodes.js';\n\nconst NODE_MODE = false;\nconst global = NODE_MODE ? globalThis : window;\n\n/**\n * A tiny module scoped polyfill for HTMLSlotElement.assignedElements.\n */\nconst slotAssignedElements =\n  global.HTMLSlotElement?.prototype.assignedElements != null\n    ? (slot: HTMLSlotElement, opts?: AssignedNodesOptions) =>\n        slot.assignedElements(opts)\n    : (slot: HTMLSlotElement, opts?: AssignedNodesOptions) =>\n        slot\n          .assignedNodes(opts)\n          .filter(\n            (node): node is Element => node.nodeType === Node.ELEMENT_NODE\n          );\n\n/**\n * Options for the {@linkcode queryAssignedElements} decorator. Extends the\n * options that can be passed into\n * [HTMLSlotElement.assignedElements](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedElements).\n */\nexport interface QueryAssignedElementsOptions\n  extends QueryAssignedNodesOptions {\n  /**\n   * CSS selector used to filter the elements returned. For example, a selector\n   * of `\".item\"` will only include elements with the `item` class.\n   */\n  selector?: string;\n}\n\n/**\n * A property decorator that converts a class property into a getter that\n * returns the `assignedElements` of the given `slot`. Provides a declarative\n * way to use\n * [`HTMLSlotElement.assignedElements`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLSlotElement/assignedElements).\n *\n * Can be passed an optional {@linkcode QueryAssignedElementsOptions} object.\n *\n * Example usage:\n * ```ts\n * class MyElement {\n *   @queryAssignedElements({ slot: 'list' })\n *   listItems!: Array<HTMLElement>;\n *   @queryAssignedElements()\n *   unnamedSlotEls!: Array<HTMLElement>;\n *\n *   render() {\n *     return html`\n *       <slot name=\"list\"></slot>\n *       <slot></slot>\n *     `;\n *   }\n * }\n * ```\n *\n * Note, the type of this property should be annotated as `Array<HTMLElement>`.\n *\n * @category Decorator\n */\nexport function queryAssignedElements(options?: QueryAssignedElementsOptions) {\n  const {slot, selector} = options ?? {};\n  return decorateProperty({\n    descriptor: (_name: PropertyKey) => ({\n      get(this: ReactiveElement) {\n        const slotSelector = `slot${slot ? `[name=${slot}]` : ':not([name])'}`;\n        const slotEl =\n          this.renderRoot?.querySelector<HTMLSlotElement>(slotSelector);\n        const elements =\n          slotEl != null ? slotAssignedElements(slotEl, options) : [];\n        if (selector) {\n          return elements.filter((node) => node.matches(selector));\n        }\n        return elements;\n      },\n      enumerable: true,\n      configurable: true,\n    }),\n  });\n}\n", "const r=(r,s)=>{customElements.get(r)||customElements.define(r,s)},s=()=>`ids-${Math.random().toString(36).slice(2)}-${Math.random().toString(36).slice(2)}`,e=(r,s,e)=>{e&&r?.setAttribute(s,e)},t=(r,s,e)=>{e&&r.classList?.add(s)},n=(r,s)=>{console.warn(\"IDS - Warning - \",r,s)},u=(r,s)=>{console.error(\"IDS - Error - \",r,s)},i=r=>r>0?r<10?\"0\"+r:\"\"+r:\"\",a=(r,s)=>{switch(r){case 0:return\"Januari\".substring(0,s);case 1:return\"Februari\".substring(0,s);case 2:return\"Mars\".substring(0,s);case 3:return\"April\".substring(0,s);case 4:return\"Maj\".substring(0,s);case 5:return\"Juni\".substring(0,s);case 6:return\"Juli\".substring(0,s);case 7:return\"Augusti\".substring(0,s);case 8:return\"September\".substring(0,s);case 9:return\"Oktober\".substring(0,s);case 10:return\"November\".substring(0,s);case 11:return\"December\".substring(0,s);default:return\"\"}};export{s as generateId,i as getDayAsText,a as getMonthAsText,u as logError,n as logWarning,r as registerComponent,t as setClassOnTarget,e as setPotentialAttribute};\n", "class t{constructor(t){this.errorMessageId=\"\",this.host=t}get errorMessage(){return this.host.querySelector(\"ids-error-message\")}get inputField(){return this.input||this.textarea||this.select}get input(){return this.host.querySelector(\"input\")}get textarea(){return this.host.querySelector(\"textarea\")}get select(){return this.host.querySelector(\"select\")}get label(){return this.host.querySelector(\"label\")}get button(){return this.host.querySelector(\"ids-button\")}get icon(){return this.host.shadowRoot?.querySelector(\".ids-icon\")||this.host.querySelector(\".ids-icon\")}get hint(){return this.host.querySelector('[slot=\"hint\"]')}showErrorMessage(){this.errorMessage&&(this.errorMessage.style.display=\"block\")}hideErrorMessage(){this.errorMessage&&(this.errorMessage.style.display=\"none\")}dispatchValidationEvent(t){let e=new CustomEvent(\"onValidation\",{detail:{valid:t}});this.host.dispatchEvent(e)}setInputInvalid(t){this.errorMessage&&t.setAttribute(\"aria-describedby\",this.errorMessageId),t.setAttribute(\"aria-invalid\",\"true\"),this.host.setAttribute(\"valid\",\"false\"),this.dispatchValidationEvent(!1)}setInputValid(t){this.errorMessage&&t.removeAttribute(\"aria-describedby\"),t.removeAttribute(\"aria-invalid\"),this.host.setAttribute(\"valid\",\"true\"),this.dispatchValidationEvent(!0)}}export{t as BaseController};\n", "import{generateId as t}from\"../../../utilities/utils.js\";import{BaseController as i}from\"./BaseController.js\";class e extends i{constructor(t){super(t),this.setArias=async()=>{await this.host.updateComplete,this.setLabelFor(),this.setLabelledBy(),this.setRequired(),this.setDescribedBy()},this.host.addController(this)}hostConnected(){this.setArias()}setRequired(){this.inputField?.required&&this.inputField.setAttribute(\"aria-required\",\"true\")}setLabelFor(){let i=this.inputField?.getAttribute(\"id\")||t();this.inputField?.getAttribute(\"id\")||this.inputField?.setAttribute(\"id\",i),this.label&&this.label.setAttribute(\"for\",i)}setLabelledBy(){if(this.label){let i=this.label.getAttribute(\"id\")||t();this.label.getAttribute(\"id\")||this.label.setAttribute(\"id\",i),this.inputField&&this.inputField.setAttribute(\"aria-labelledby\",i)}else console.warn(\"Label missing for: \",this.inputField)}setDescribedBy(){if(this.hint){let i=this.hint.getAttribute(\"id\")||t();this.hint.getAttribute(\"id\")||this.hint.setAttribute(\"id\",i),this.inputField&&this.inputField.setAttribute(\"aria-describedby\",i)}}}export{e as AriaController};\n", "import{BaseController as s}from\"./BaseController.js\";class t extends s{constructor(s){super(s),this.host.addController(this)}setLabelClasses(){this.label&&(this.inputField?.disabled?(this.label.classList.add(\"ids-label-disabled\"),this.host.isDisabled=!0):(this.label.classList.remove(\"ids-label-disabled\"),this.host.isDisabled=!1))}setIconAttribute(){this.icon&&(this.inputField?.disabled?this.icon.isDisabled=!0:this.icon.isDisabled=!1)}hostConnected(){if(this.inputField){new MutationObserver((s=>{s.forEach((s=>{\"attributes\"==s.type&&(this.setLabelClasses(),this.setIconAttribute())}))})).observe(this.inputField,{attributes:!0})}}hostUpdated(){this.setLabelClasses(),this.setIconAttribute()}}export{t as DisabledController};\n", "import{css as t}from\"lit\";var o=t`:host{display:block;text-align:start;margin:12px 0}::slotted(label){display:block;font-family:var(--font-family_1);color:var(--label-color);line-height:1.5rem;font-size:1rem;margin-bottom:5px}:host([light]) .ids-checkbox__input,:host([light]) ::slotted(input){background-color:#fff}:host([light]) ::slotted(input),:host([light]) ::slotted(select),:host([light]) ::slotted(textarea),:host([light]) input{background-color:#fff}::slotted(input),::slotted(select),::slotted(textarea),input{font-family:var(--font-family_1)!important;padding:.75rem 1.25rem;background:var(--input_background);border:var(--input_border);border-bottom:var(--input_border-bottom);border-radius:var(--input_border-radius);font-size:16px;color:var(--input_color);display:block}::slotted(input)::placeholder,::slotted(select)::placeholder,::slotted(textarea)::placeholder,input::placeholder{color:var(--input-placeholder_color)}:host([valid=false]) ::slotted(input),:host([valid=false]) ::slotted(select),:host([valid=false]) ::slotted(textarea),:host([valid=false]) input{background-color:var(--input-error_background);border:var(--input-error_border);background-image:var(--IDS-FORM-INVALID_BACKGROUND-IMAGE);border-bottom:var(--input-error_border-bottom)}::slotted(input:disabled),::slotted(select:disabled),::slotted(textarea:disabled){color:var(--input-disabled_color);background-color:var(--IDS-FORM-DISABLED_BACKGROUND-COLOR)!important;border:var(--IDS-FORM-DISABLED_BORDER);font-style:italic!important;background-image:var(--IDS-FORM-DISABLED_BACKGROUND-IMAGE)}.ids-input__hint{margin-top:5px;font-family:var(--font-family_1);color:var(--label-color);display:flex;justify-content:end;line-height:1.5rem;font-size:1rem;font-style:italic}.ids input::placeholder{color:var(--input-placeholder_color);opacity:1}::slotted(.ids-label-disabled){font-style:italic;color:var(--label-color-disabled)}.ids-input-wrapper{position:relative}.ids-icon,::slotted(.ids-icon),::slotted([slot=append-icon]){pointer-events:none;position:absolute;top:50%;right:25px;transform:translateY(-50%)}`;export{o as default};\n", "import{BaseController as t}from\"./BaseController.js\";import{generateId as i}from\"../../../utilities/utils.js\";class e extends t{constructor(t){super(t),this.setupControllers=async()=>{await this.host.updateComplete,(this.isNotInGroup()||this.isInGroupWithoutSharedErrorMessage())&&this.setupIndividual(),this.host.getAttribute(\"valid\")&&\"true\"!==this.host.getAttribute(\"valid\")?this.inputField&&(this.setInputInvalid(this.inputField),this.showErrorMessage()):this.hideErrorMessage()},this.handleInputValidity=t=>{if(this.inputField){t.validity.valid?(this.setInputValid(this.inputField),this.hideErrorMessage()):(this.setInputInvalid(this.inputField),this.showErrorMessage())}},this.host.addController(this)}hostConnected(){this.setupControllers()}isNotInGroup(){return!this.getGroup()}isInGroupWithoutSharedErrorMessage(){return this.getGroup()&&!this.getGroupsSharedErrorMessage()}getGroupsSharedErrorMessage(){const t=this.getGroup()?.childNodes;return t?Array.from(t).find((t=>\"ids-error-message\"===t.nodeName.toLowerCase())):null}getGroup(){return this.host.closest(\"ids-select-multiple\")||this.host.closest(\"ids-radio-group\")||this.host.closest(\"ids-checkbox-group\")}setupIndividual(){this.errorMessageId=i(),this.errorMessage&&this.errorMessage.setAttribute(\"id\",this.errorMessageId),\"novalidation\"in this.host&&!this.host.novalidation&&this.setupValidationListener()}setupValidationListener(){this.inputField&&(this.inputField.addEventListener(\"invalid\",(t=>this.handleInputValidity(t.target))),this.inputField.addEventListener(\"blur\",(t=>this.handleInputValidity(t.target))),\"checkbox\"===this.inputField.getAttribute(\"type\")&&this.inputField.addEventListener(\"change\",(t=>this.handleInputValidity(t.target))))}hostDisconnected(){this.inputField&&(this.inputField.removeEventListener(\"invalid\",(t=>this.handleInputValidity(t.target))),this.inputField.removeEventListener(\"blur\",(t=>this.handleInputValidity(t.target))),\"checkbox\"===this.inputField.getAttribute(\"type\")&&this.inputField.removeEventListener(\"change\",(t=>this.handleInputValidity(t.target))))}}export{e as ErrorController};\n", "import{__decorate as t}from\"tslib\";import{LitElement as e,html as r}from\"lit\";import{state as s,property as o}from\"lit/decorators.js\";import{AriaController as i}from\"../controller/AriaController.js\";import{DisabledController as l}from\"../controller/DisabledController.js\";import n from\"./form-base-styles.js\";import{ErrorController as a}from\"../controller/ErrorController.js\";class u extends e{constructor(){super(...arguments),this.isDisabled=!1,this.autofocus=!1,this.light=!1,this.novalidation=!1,this.ariaController=new i(this),this.disabledController=new l(this),this.errorController=new a(this)}get input(){return this.querySelector(\"input\")}get textarea(){return this.querySelector(\"textarea\")}get select(){return this.querySelector(\"select\")}get errorMessage(){return this.querySelector(\"ids-error-message\")}get icon(){return this.querySelector(\".ids-icon\")}get button(){return this.querySelector(\"ids-button\")}get inputField(){return this.input||this.textarea||this.select}firstUpdated(t){super.firstUpdated(t),this.autofocus&&this.inputField?.focus(),this.icon&&this.icon.setAttribute(\"size\",\"s\"),this.setupSlots()}setupSlots(){this.assignSlot(this.querySelector(\"label\"),\"label\"),this.inputField&&this.assignSlot(this.inputField,this.inputField.tagName.toLowerCase()),this.assignSlot(this.errorMessage,\"error-msg\"),this.assignSlot(this.icon,\"icon\"),this.assignSlot(this.button,\"button\")}assignSlot(t,e){t&&this.shadowRoot?.querySelector(`slot[name=\"${e}\"]`)&&t.setAttribute(\"slot\",e)}renderHint(){if(this.querySelector('[slot=\"hint\"]'))return r`<div class=\"ids-input__hint\"><slot name=\"hint\"></slot></div>`}render(){return r`<slot></slot>`}}u.styles=[n],t([s()],u.prototype,\"isDisabled\",void 0),t([o({type:Boolean})],u.prototype,\"autofocus\",void 0),t([o({type:Boolean,reflect:!0})],u.prototype,\"light\",void 0),t([o({type:Boolean})],u.prototype,\"novalidation\",void 0);export{u as FormBaseElement};\n", "import{css as o}from\"lit\";var r=o`.ids-checkbox{display:flex;margin:.625rem}::slotted(input){position:absolute;opacity:0;pointer-events:none}::slotted(label){color:var(--label-color);font-family:var(--label-font-family);font-size:var(--label-font-size);font-style:normal;font-weight:var(--label-font-weight);letter-spacing:var(--label-letter-spacing);line-height:var(--label-line-height);transform:translateY(-.2rem);margin-left:.625rem}::slotted(label){margin-bottom:0}:host(:not([compact])){margin-bottom:25px}.ids-icon{position:static;transform:none}.ids-checkbox__input{cursor:pointer;align-items:center;background-color:var(--checkbox-background-color);border-bottom:var(--checkbox-border-bottom);border-left:var(--checkbox-border-left);border-radius:.25rem;border-right:var(--checkbox-border-right);border-top:var(--checkbox-border-top);border-radius:var(--checkbox-border-radius);box-sizing:border-box;display:flex;height:1.25rem;justify-content:center;width:1.25rem;min-width:1.25rem}:host([valid=false]) .ids-checkbox__input{background:var(--radio-invalid_background-color);border-color:var(--radio-invalid_border-color);border-style:var(--radio-invalid_border-style);background-image:var(--IDS-FORM-CHECKBOX-INVALID_BACKGROUND-IMAGE)}.ids-checbbox__input-focused{outline:var(--focus_outline);outline-offset:var(--focus_outline-offset)}.ids-checkbox__input--disabled{background-color:var(--IDS-FORM-DISABLED_BACKGROUND-COLOR);border:var(--IDS-FORM-DISABLED_BORDER);background-image:var(--IDS-FORM-CHECKBOX-DISABLED_BACKGROUND-IMAGE)}`;export{r as default};\n", "import{__decorate as e}from\"tslib\";import{html as t}from\"lit\";import{FormBaseElement as i}from\"../base/form-base-element.js\";import s from\"./checkbox-styles.js\";import{property as c,state as o}from\"lit/decorators.js\";class h extends i{constructor(){super(...arguments),this.compact=!1,this.valid=\"true\",this.isChecked=!1,this.isFocused=!1,this.updateIsChecked=()=>{this.isChecked=this.input?.checked},this.clickOnCheckbox=()=>{this.input?.click(),this.updateIsChecked()},this.focusCheckbox=()=>{this.isFocused=!0},this.blurCheckbox=()=>{this.isFocused=!1},this.handleKeyDown=e=>{this.dispatchEvent(new Event(\"keydown\",e))}}connectedCallback(){super.connectedCallback()}disconnectedCallback(){this.input?.removeEventListener(\"blur\",this.focusCheckbox),this.input?.removeEventListener(\"focus\",this.focusCheckbox),this.input?.removeEventListener(\"keydown\",this.handleKeyDown),this.input?.removeEventListener(\"change\",this.updateIsChecked),super.disconnectedCallback()}firstUpdated(e){super.firstUpdated(e),this.isChecked=this.input?.checked||!1,this.input?.addEventListener(\"blur\",this.blurCheckbox),this.input?.addEventListener(\"focus\",this.focusCheckbox),this.input?.addEventListener(\"keydown\",this.handleKeyDown),this.input?.addEventListener(\"change\",this.updateIsChecked),null!==this.input?.getAttribute(\"disabled\")&&this.shadowRoot.querySelector(\".ids-checkbox__input\")?.classList.add(\"ids-checkbox__input--disabled\")}renderCheckbox(){return this.isChecked&&\"false\"===this.valid?t`<ids-icon-check color=\"var(--checkbox-invalid-icon_color)\" height=\"11\" width=\"16\"></ids-icon-check>`:this.isChecked?t`<ids-icon-check height=\"11\" width=\"16\"></ids-icon-check>`:t``}render(){return t`<div class=\"ids-checkbox\"><div @click=\"${this.clickOnCheckbox}\" class=\"ids-checkbox__input${this.isFocused?\" ids-checbbox__input-focused\":\"\"}\">${this.renderCheckbox()}</div><slot></slot></div><slot name=\"error-msg\"></slot>`}}h.styles=[...i.styles,s],e([c({type:Boolean})],h.prototype,\"compact\",void 0),e([c({type:String,reflect:!0})],h.prototype,\"valid\",void 0),e([o()],h.prototype,\"isChecked\",void 0),e([o()],h.prototype,\"isFocused\",void 0);export{h as IDSCheckbox};\n", "import{css as i}from\"lit\";var l=i`:host{display:flex}:host([inline]){display:inline-flex}`;export{l as default};\n", "import{__decorate as t}from\"tslib\";import{LitElement as i,svg as e}from\"lit\";import{property as s,state as o}from\"lit/decorators.js\";import{generateId as r}from\"../../utilities/utils.js\";import h from\"./icon-styles.js\";class l extends i{constructor(){super(...arguments),this.title=\"\",this.colorpreset=-1,this.color=\"var(--icon-color)\",this.color2=\"var(--icon-color2)\",this.size=\"m\",this.width=\"\",this.height=\"\",this.rotate=\"\",this.inline=!1,this.isDisabled=!1,this.titleId=r(),this.medium={height:\"40\",width:\"40\"},this.small={height:\"20\",width:\"20\"},this.xsmall={height:\"12\",width:\"12\"},this.vbHeight=0,this.vbWidth=0}get dimensions(){if(this.width&&this.height)return{width:this.width,height:this.height};switch(this.size){case\"xs\":return this.xsmall;case\"s\":default:return this.small;case\"m\":return this.medium}}getDimensions(){if(this.width&&this.height)return{width:this.width,height:this.height};switch(this.size){case\"xs\":return this.xsmall;case\"s\":default:return this.small;case\"m\":return this.medium}}get colors(){if(this.isDisabled)return{color:\"var(--input-icon-disabled_fill)\",color2:\"var(--input-icon-disabled_fill)\"};const t={color:this.color,color2:this.color2};return!isNaN(this.colorpreset)&&this.colorpreset>0&&(t.color=`var(--icon-color-preset${this.colorpreset})`,t.color2=`var(--icon-color2-preset${this.colorpreset})`),t}connectedCallback(){super.connectedCallback(),this.classList.add(\"ids-icon\")}firstUpdated(t){super.firstUpdated(t),this.createTitle()}createTitle(){if(this.title){const t=document.createElement(\"title\");t.setAttribute(\"id\",this.titleId),t.innerText=`${this.title}`,this.shadowRoot.querySelector(\"svg\").prepend(t),this.shadowRoot.querySelector(\"svg\").setAttribute(\"aria-labelledby\",this.titleId)}else this.shadowRoot.querySelector(\"svg\").setAttribute(\"aria-hidden\",\"true\")}renderIcon(){return e``}render(){return e`<svg xmlns=\"http://www.w3.org/2000/svg\" role=\"img\" width=\"${this.dimensions.width}\" height=\"${this.dimensions.height}\" style=\"${this.rotate?`rotate: ${this.rotate}deg`:null}\" viewBox=\"0 0 ${this.vbWidth} ${this.vbHeight}\" fill=\"none\">${this.renderIcon()}</svg>`}}l.styles=[h],t([s({type:String})],l.prototype,\"title\",void 0),t([s({type:Number})],l.prototype,\"colorpreset\",void 0),t([s({type:String})],l.prototype,\"color\",void 0),t([s({type:String})],l.prototype,\"color2\",void 0),t([s({type:String,reflect:!0})],l.prototype,\"size\",void 0),t([s({type:String})],l.prototype,\"width\",void 0),t([s({type:String})],l.prototype,\"height\",void 0),t([s({type:String})],l.prototype,\"rotate\",void 0),t([s({type:Boolean,reflect:!0})],l.prototype,\"inline\",void 0),t([o()],l.prototype,\"isDisabled\",void 0);export{l as IDSIconBase};\n", "import{svg as e}from\"lit\";import{IDSIconBase as t}from\"../icon-base-element.js\";class r extends t{constructor(){super(),this.vbHeight=32,this.vbWidth=40}renderIcon(){return e`<path fill=\"${this.colors.color}\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M39.1772 0.674536C40.2151 1.62733 40.2798 3.23649 39.3218 4.26869L14.343 31.1817C13.8554 31.7071 13.1679 32.0041 12.4489 32C11.73 31.9958 11.046 31.6909 10.5646 31.1598L0.658175 20.2339C-0.287695 19.1907 -0.20415 17.5824 0.844778 16.6417C1.8937 15.7009 3.51081 15.784 4.45668 16.8273L12.4859 25.6828L35.5634 0.818302C36.5214 -0.213896 38.1394 -0.278263 39.1772 0.674536Z\"></path>`}}export{r as IDSIconCheck};\n", "import{IDSIconCheck as i}from\"./icon-check-element.js\";import{registerComponent as c}from\"../../../utilities/utils.js\";c(\"ids-icon-check\",i);\n", "import{IDSCheckbox as i}from\"./checkbox-element.js\";import{registerComponent as e}from\"../../../utilities/utils.js\";import\"../../icons/check/register.js\";e(\"ids-checkbox\",i);\n", "import React__default from 'react';\nimport { createComponent } from '@lit-labs/react';\nimport '@inera/ids-core/components/form/checkbox-group/register';\nimport { IDSCheckboxGroup as IDSCheckboxGroup$1 } from '@inera/ids-core/components/form/checkbox-group/checkbox-group-element';\n\nconst IDSCheckboxGroup = createComponent({\r\n    tagName: 'ids-checkbox-group',\r\n    elementClass: IDSCheckboxGroup$1,\r\n    react: React__default,\r\n});\n\nexport { IDSCheckboxGroup };\n", "import{BaseController as t}from\"./BaseController.js\";import{generateId as s}from\"../../../utilities/utils.js\";class e extends t{constructor(t){super(t),this.inputs=[],this.setupGroupErrorController=async()=>{await this.host.updateComplete,this.host.getAttribute(\"valid\")&&\"true\"!==this.host.getAttribute(\"valid\")||this.hideErrorMessage(),this.sharedErrorMessage&&(this.errorMessageId=s(),this.sharedErrorMessage.setAttribute(\"id\",this.errorMessageId),\"novalidation\"in this.host&&!this.host.novalidation&&this.setupGroupValidationListeners())},this.checkGroupValidity=()=>{if(this.isRadioGroup()){const t=void 0!==this.inputs.find((t=>t.checked));this.handleGroupValidity(t)}if(this.isCheckboxGroup()||this.isSelectMultiple()){const t=-1===this.inputs.filter((t=>t.required)).findIndex((t=>!t.checked));this.handleGroupValidity(t)}},this.handleGroupValidity=t=>{t?(this.inputs.forEach((t=>{this.getWrapper(t)?.setAttribute(\"valid\",\"true\"),this.setInputValid(t)})),this.hideErrorMessage()):(this.inputs.forEach((t=>{t.required&&!t.checked?(this.setInputInvalid(t),this.getWrapper(t)?.setAttribute(\"valid\",\"false\"),this.host.setAttribute(\"valid\",\"true\")):(this.setInputValid(t),this.getWrapper(t)?.setAttribute(\"valid\",\"true\"),this.host.setAttribute(\"valid\",\"false\"))})),this.showErrorMessage())},this.host.addController(this)}get sharedErrorMessage(){return Array.from(this.host.childNodes).find((t=>\"ids-error-message\"===t.nodeName.toLowerCase()))}hostConnected(){this.setupGroupErrorController()}isRadioGroup(){return this.host.tagName.includes(\"RADIO\")}isCheckboxGroup(){return this.host.tagName.includes(\"CHECKBOX\")}isSelectMultiple(){return this.host.tagName.includes(\"SELECT-MULTIPLE\")}getWrapper(t){if(this.isCheckboxGroup()||this.isSelectMultiple())return t.closest(\"ids-checkbox\");if(this.isRadioGroup())return t.closest(\"ids-radio\");throw new Error(\"Cant find checkbox nor radio input\")}showErrorMessage(){this.sharedErrorMessage&&(this.sharedErrorMessage.style.display=\"block\")}hideErrorMessage(){this.sharedErrorMessage&&(this.sharedErrorMessage.style.display=\"none\")}setupGroupValidationListeners(){this.inputs=Array.from(this.host.querySelectorAll(\"input\")),this.inputs.forEach((t=>{t.addEventListener(\"invalid\",(()=>this.handleGroupValidity(!1))),t.addEventListener(\"change\",this.checkGroupValidity)}))}hostDisconnected(){this.inputs&&this.sharedErrorMessage&&this.inputs.forEach((t=>{t.removeEventListener(\"invalid\",(()=>this.handleGroupValidity(!1))),t.removeEventListener(\"change\",this.checkGroupValidity)}))}}export{e as GroupErrorController};\n", "import{css as r}from\"lit\";var e=r`:host{margin-bottom:12px}.ids-icon{display:inline-flex;margin-right:5px}.ids-error-msg{background-color:var(--error-message_background-color);border-radius:var(--IDS_BORDER-RADIUS);border:var(--IDS-FORM-ERROR-MESSAGE_BORDER);margin-top:var(--error-message_margin-top);padding:var(--IDS-FORM-ERROR-MESSAGE_PADDING);position:relative;display:flex;justify-items:center;color:var(--error-message_color)}.ids-error-msg:after{content:var(--error-message_content);border-left:.5625rem solid transparent;border-right:.5625rem solid transparent;border-bottom:.5625rem solid #fff;display:block;height:0;left:41px;position:absolute;top:-.5625rem;width:0;z-index:9}.ids-error-msg:before{content:var(--error-message_content);border-left:.625rem solid transparent;border-right:.625rem solid transparent;border-bottom:.625rem solid var(--IDS-FORM-ERROR-MESSAGE_BORDER-COLOR);display:block;height:0;left:40px;position:absolute;top:-.625rem;width:0;z-index:9}`;export{e as default};\n", "import{LitElement as r,html as s}from\"lit\";import o from\"./error-message-styles.js\";class i extends r{render(){return s`<div class=\"ids-error-msg\"><ids-icon-warning color=\"var(--IDS-FORM-ERROR-MESSAGE-ICON_COLOR)\" color2=\"var(--IDS-FORM-ERROR-MESSAGE-ICON_COLOR2)\" width=\"20px\" height=\"100%\"></ids-icon-warning><slot></slot></div>`}}i.styles=[o];export{i as IDSErrorMessage};\n", "import{svg as C}from\"lit\";import{IDSIconBase as e}from\"../icon-base-element.js\";class l extends e{constructor(){super(),this.vbHeight=36,this.vbWidth=40}renderIcon(){return C`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.9999 2.31398L37.9855 33.8346C37.9893 33.8412 37.9948 33.8539 37.9978 33.874C37.9985 33.8783 37.999 33.8828 37.9994 33.8874H2.00072C2.00164 33.8765 2.0034 33.8665 2.00565 33.8578C2.00907 33.8446 2.0129 33.837 2.01425 33.8346L19.9999 2.31398ZM18.4886 0.92705C18.9305 0.152515 19.8811 -0.270482 20.7689 0.197422L20.8004 0.21401L20.9481 0.305845L20.9761 0.326051C21.1996 0.487354 21.3792 0.69569 21.5112 0.92705L39.7226 32.8434C40.2198 33.7147 40.0479 34.9453 39.1876 35.5662C38.9088 35.7674 38.5717 35.8874 38.2113 35.8874H1.78844C0.654035 35.8874 0 34.8337 0 33.9043C0 33.5363 0.0924355 33.1671 0.277146 32.8434L18.4886 0.92705Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.3811 24.1503C20.3554 24.3409 20.1928 24.4831 20.0005 24.4831C19.8078 24.4831 19.6449 24.3402 19.6197 24.1492L18.1062 12.664C18.0354 12.1484 18 11.7642 18 11.5113C18 10.8984 18.1976 10.4072 18.5929 10.0375C18.9882 9.66789 19.4631 9.48306 20.0177 9.48306C20.5723 9.48306 21.0413 9.66789 21.4248 10.0375C21.8083 10.4072 22 10.9568 22 11.6864C22 11.9198 21.9764 12.2457 21.9292 12.664L20.3811 24.1503ZM21.4144 30.8948C21.024 31.287 20.5526 31.4831 20 31.4831C19.4474 31.4831 18.976 31.287 18.5856 30.8948C18.1952 30.5027 18 30.0291 18 29.474C18 28.931 18.1952 28.4635 18.5856 28.0713C18.976 27.6791 19.4474 27.4831 20 27.4831C20.5526 27.4831 21.024 27.6791 21.4144 28.0713C21.8048 28.4635 22 28.931 22 29.474C22 30.0291 21.8048 30.5027 21.4144 30.8948Z\"></path>`}}export{l as IDSIconWarning};\n", "import{IDSIconWarning as i}from\"./icon-warning-element.js\";import{registerComponent as n}from\"../../../utilities/utils.js\";n(\"ids-icon-warning\",i);\n", "import{IDSErrorMessage as r}from\"./error-message-element.js\";import{registerComponent as e}from\"../../../utilities/utils.js\";import\"../../icons/warning/register.js\";e(\"ids-error-message\",r);\n", "import{css as o}from\"lit\";var r=o`legend{font-family:var(--font-family_1);color:var(--label-color)}fieldset{border:none;margin:0;padding:0}`;export{r as default};\n", "import{__decorate as t}from\"tslib\";import{LitElement as r,html as e}from\"lit\";import{property as o}from\"lit/decorators.js\";import{GroupErrorController as i}from\"../controller/GroupErrorController.js\";import\"../error-message/register.js\";import s from\"./group-styles.js\";class p extends r{constructor(){super(...arguments),this.name=\"\",this.required=!1,this.novalidation=!1,this.legend=\"\",this.inputs=[],this.inputSelector=\"\",this.groupErrorController=new i(this)}firstUpdated(t){super.firstUpdated(t),this.querySelectorAll(this.inputSelector).forEach((t=>{const r=t.querySelector(\"input\");r&&this.inputs.push(r)})),this.inputs.forEach((t=>{this.name&&t.setAttribute(\"name\",this.name),this.required&&t.setAttribute(\"required\",\"\")}))}render(){return e`<slot></slot>`}}p.styles=[s],t([o({type:String})],p.prototype,\"name\",void 0),t([o({type:Boolean})],p.prototype,\"required\",void 0),t([o({type:Boolean})],p.prototype,\"novalidation\",void 0),t([o({type:String})],p.prototype,\"legend\",void 0);export{p as IDSGroupBase};\n", "import{__decorate as e}from\"tslib\";import{html as t}from\"lit\";import{IDSGroupBase as r}from\"../group/group-base-element.js\";import\"../error-message/register.js\";import{property as o}from\"lit/decorators.js\";class s extends r{constructor(){super(...arguments),this.compact=!1}get checkboxes(){return this.querySelectorAll(\"ids-checkbox\")}connectedCallback(){this.inputSelector=\"ids-checkbox\",super.connectedCallback()}firstUpdated(e){super.firstUpdated(e),this.compact&&this.checkboxes.forEach((e=>e.setAttribute(\"compact\",\"true\")))}render(){return t`<fieldset><legend>${this.legend}</legend><slot></slot></fieldset>`}}e([o({type:Boolean})],s.prototype,\"compact\",void 0);export{s as IDSCheckboxGroup};\n", "import{IDSCheckboxGroup as o}from\"./checkbox-group-element.js\";import{registerComponent as i}from\"../../../utilities/utils.js\";i(\"ids-checkbox-group\",o);\n", "import * as React from 'react';\nimport { createComponent } from '@lit-labs/react';\nimport '@inera/ids-core/components/form/input/register';\nimport { IDSInput as IDSInput$1 } from '@inera/ids-core/components/form/input/input-element';\n\nconst IDSInput = createComponent({\r\n    tagName: 'ids-input',\r\n    elementClass: IDSInput$1,\r\n    react: React,\r\n});\n\nexport { IDSInput };\n", "import{css as t}from\"lit\";var e=t`:host{position:relative}::slotted(input){display:inline-block;width:100%}.icon-padding ::slotted(input){padding-right:50px}::slotted(input[type=search]){margin-top:0!important;margin-bottom:0!important;height:var(--input-search_height);padding-left:55px!important;font-size:18px!important}::slotted([slot=button]){margin-left:10px}::slotted([type=search]:focus){box-shadow:var(--input-search_box-shadow)!important}::slotted([type=search]:placeholder){padding-left:55px}@media only screen and (max-width:1024px){::slotted(input[type=search]){padding-left:20px!important;font-size:16px!important;margin-right:var(--input-search-mobile_margin-right);border-radius:var(--input-search_border-radius);height:var(--input-search-mobile_height)}::slotted(input[type=search][disabled]){height:var(--input-search-disabled-mobile_height)!important;border-right:var(--input-disabled-search_border-right)}}::slotted(input[type=search][disabled]){height:var(--input-search-disabled_height)}.close-btn-wrapper{width:0;overflow:visible}.close-btn{pointer-events:none;position:relative;right:var(--input-search-close-btn_right);width:20px;transform:translateY(-50%)}@media only screen and (max-width:1024px){.close-btn{right:var(--input-search-mobile-close-btn_right)}}.ids-input-wrapper{display:flex}.ids-input-slot{flex-grow:1}.search-icon{pointer-events:none;position:absolute;top:50%;left:20px;transform:translateY(-50%)}@media only screen and (max-width:1024px){.search-icon{display:none}}`;export{e as default};\n", "import{__decorate as e}from\"tslib\";import{html as t}from\"lit\";import s from\"./input-styles.js\";import{FormBaseElement as r}from\"../base/form-base-element.js\";import{state as i}from\"lit/decorators.js\";class o extends r{constructor(){super(...arguments),this.renderCloseIcon=!1,this.hasIcon=!1,this.checkLetters=()=>{this.renderCloseIcon=!this.inputField?.disabled&&Boolean(this.inputField?.value.length)}}firstUpdated(e){if(super.firstUpdated(e),\"search\"===this.inputField?.getAttribute(\"type\"))this.querySelector(\"ids-button\")?.setAttribute(\"search\",\"true\"),this.inputField.addEventListener(\"input\",this.checkLetters),this.checkLetters();else{const e=this.querySelector(\".ids-icon\");e&&(this.hasIcon=!0,e.setAttribute(\"slot\",\"append-icon\"))}}renderSearchIcon(){return\"search\"===this.inputField?.getAttribute(\"type\")?t`<ids-icon-search width=\"30\" height=\"30\" class=\"search-icon\" prepend></ids-icon-search>`:null}renderClearIcon(){return this.renderCloseIcon?t`<span class=\"close-btn-wrapper\"><ids-icon-close-bold class=\"close-btn\" size=\"s\" prepend></ids-icon-close-bold></span>`:null}render(){return t`<slot name=\"label\"></slot><div class=\"ids-input-wrapper ${this.hasIcon?\"icon-padding\":\"\"}\"><slot></slot><slot name=\"append-icon\"></slot>${this.renderClearIcon()} ${this.renderSearchIcon()}<slot name=\"button\"></slot></div>${this.renderHint()}<slot name=\"error-msg\"></slot>`}}o.styles=[...r.styles,s],e([i()],o.prototype,\"renderCloseIcon\",void 0),e([i()],o.prototype,\"hasIcon\",void 0);export{o as IDSInput};\n", "import{svg as e}from\"lit\";import{IDSIconBase as C}from\"../icon-base-element.js\";class l extends C{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return e`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.677 0C7.46653 0 0 7.46653 0 16.677C0 25.8874 7.46653 33.3539 16.677 33.3539C20.3741 33.3539 23.7902 32.1509 26.5552 30.1149L35.0905 38.6502C36.0747 39.6344 37.6614 39.6074 38.6344 38.6343C39.6074 37.6613 39.6344 36.0746 38.6503 35.0905L30.115 26.5551C32.1509 23.7901 33.3539 20.374 33.3539 16.677C33.3539 7.46653 25.8874 0 16.677 0ZM2 16.677C2 8.5711 8.5711 2 16.677 2C24.7828 2 31.3539 8.5711 31.3539 16.677C31.3539 24.7828 24.7828 31.3539 16.677 31.3539C8.5711 31.3539 2 24.7828 2 16.677ZM28.8294 28.098C28.5932 28.3493 28.3493 28.5932 28.0981 28.8294L36.5048 37.236C36.688 37.4193 37.0083 37.4321 37.2202 37.2201C37.4321 37.0082 37.4193 36.688 37.2361 36.5047L28.8294 28.098Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.05709 16.677C5.05709 10.2595 10.2595 5.05709 16.677 5.05709C17.2293 5.05709 17.677 5.5048 17.677 6.05709C17.677 6.60937 17.2293 7.05709 16.677 7.05709C11.3641 7.05709 7.05709 11.3641 7.05709 16.677C7.05709 21.9899 11.3641 26.2968 16.677 26.2968C21.9899 26.2968 26.2968 21.9899 26.2968 16.677C26.2968 16.1247 26.7446 15.677 27.2968 15.677C27.8491 15.677 28.2968 16.1247 28.2968 16.677C28.2968 23.0944 23.0944 28.2968 16.677 28.2968C10.2595 28.2968 5.05709 23.0944 5.05709 16.677Z\"></path>`}}export{l as IDSIconSearch};\n", "import{IDSIconSearch as i}from\"./icon-search-element.js\";import{registerComponent as s}from\"../../../utilities/utils.js\";s(\"ids-icon-search\",i);\n", "import{svg as t}from\"lit\";import{IDSIconBase as r}from\"../icon-base-element.js\";class o extends r{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return t`<path fill=\"${this.colors.color}\" xmlns=\"http://www.w3.org/2000/svg\" d=\"M4.26777 0.732233C3.29146 -0.244078 1.70854 -0.244078 0.732233 0.732233C-0.244078 1.70854 -0.244078 3.29146 0.732233 4.26777L16.4645 20L0.732233 35.7322C-0.244078 36.7085 -0.244078 38.2915 0.732233 39.2678C1.70854 40.2441 3.29146 40.2441 4.26777 39.2678L20 23.5355L35.7322 39.2678C36.7085 40.2441 38.2915 40.2441 39.2678 39.2678C40.2441 38.2915 40.2441 36.7085 39.2678 35.7322L23.5355 20L39.2678 4.26777C40.2441 3.29146 40.2441 1.70854 39.2678 0.732233C38.2915 -0.244078 36.7085 -0.244078 35.7322 0.732233L20 16.4645L4.26777 0.732233Z\"></path>`}}export{o as IDSIconCloseBold};\n", "import{IDSIconCloseBold as o}from\"./icon-close-bold-element.js\";import{registerComponent as i}from\"../../../utilities/utils.js\";i(\"ids-icon-close-bold\",o);\n", "import{IDSInput as i}from\"./input-element.js\";import{registerComponent as r}from\"../../../utilities/utils.js\";import\"../error-message/register.js\";import\"../../icons/search/register.js\";import\"../../icons/close-bold/register.js\";r(\"ids-input\",i);\n", "import * as React from 'react';\nimport { createComponent } from '@lit-labs/react';\nimport '@inera/ids-core/components/form/radio/register';\nimport { IDSRadio as IDSRadio$1 } from '@inera/ids-core/components/form/radio/radio-element';\n\nconst IDSRadio = createComponent({\r\n    tagName: 'ids-radio',\r\n    elementClass: IDSRadio$1,\r\n    react: React,\r\n});\n\nexport { IDSRadio };\n", "import{css as t}from\"lit\";var i=t`:host{display:flex;margin:.625rem}::slotted(input[type=radio]){display:inline-block;margin-right:10px;width:auto;position:absolute;opacity:0}::slotted(label){display:flex;align-items:start}`;export{i as default};\n", "import{__decorate as t}from\"tslib\";import r from\"./radio-styles.js\";import{FormBaseElement as s}from\"../base/form-base-element.js\";import{property as e}from\"lit/decorators.js\";class o extends s{constructor(){super(...arguments),this.valid=\"true\"}}o.styles=[...s.styles,r],t([e({type:String,reflect:!0})],o.prototype,\"valid\",void 0);export{o as IDSRadio};\n", "import{html as e}from\"lit\";import{IDSGroupBase as r}from\"../group/group-base-element.js\";import\"../error-message/register.js\";class t extends r{connectedCallback(){this.inputSelector=\"ids-radio\",super.connectedCallback()}render(){return e`<fieldset><legend>${this.legend}</legend><slot></slot></fieldset>`}}export{t as IDSRadioGroup};\n", "import{IDSRadio as r}from\"./radio-element.js\";import{IDSRadioGroup as i}from\"./radio-group-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";import\"../error-message/register.js\";o(\"ids-radio-group\",i),o(\"ids-radio\",r);\n", "import * as React from 'react';\nimport { createComponent } from '@lit-labs/react';\nimport '@inera/ids-core/components/form/radio/register';\nimport { IDSRadioGroup as IDSRadioGroup$1 } from '@inera/ids-core/components/form/radio/radio-group-element';\n\nconst IDSRadioGroup = createComponent(React, 'ids-radio-group', IDSRadioGroup$1);\n\nexport { IDSRadioGroup };\n", "import * as React from 'react';\nimport { createComponent } from '@lit-labs/react';\nimport '@inera/ids-core/components/form/textarea/register';\nimport { IDSTextarea as IDSTextarea$1 } from '@inera/ids-core/components/form/textarea/textarea-element';\n\nconst IDSTextarea = createComponent({\r\n    tagName: 'ids-textarea',\r\n    elementClass: IDSTextarea$1,\r\n    react: React,\r\n});\n\nexport { IDSTextarea };\n", "import{css as t}from\"lit\";var a=t`:host{margin-bottom:12px;display:inline-block}::slotted(label){display:block}::slotted(*){pointer-events:auto}.ids-textarea-wrap{pointer-events:none;position:relative}.ids-textarea-fade::after{content:\"\";display:block;position:absolute;width:inherit;left:0;right:0;height:40px;bottom:var(--textarea-fade_bottom);margin-left:10px;margin-right:40px;z-index:1;background:linear-gradient(transparent,var(--input_background))}:host([valid=false]) .ids-textarea-fade::after{background:linear-gradient(transparent,var(--input-error_background))}.fade-bottom{width:100%;height:10px;background:linear-gradient(transparent,var(--input_background))}`;export{a as default};\n", "import{__decorate as e}from\"tslib\";import{html as s}from\"lit\";import{property as t,state as i}from\"lit/decorators.js\";import{FormBaseElement as d}from\"../base/form-base-element.js\";import a from\"./textarea-styles.js\";class l extends d{constructor(){super(...arguments),this.nofade=!1,this.focused=!1,this.isFaded=!1,this.isResizing=!1,this.resizedCallback=null,this.handleResize=()=>{this.isResizing||(this.isResizing=!0,this.handleFocus()),clearTimeout(this.resizedCallback),this.resizedCallback=setTimeout((()=>{this.isResizing=!1,this.handleBlur()}),100)},this.handleBlur=()=>{this.focused=!1,this.nofade||this.addFadeClass()},this.handleFocus=()=>{this.focused=!0,this.nofade||(this.isFaded=!1)},this.addFadeClass=()=>{if(this.inputField){const e=this.inputField.clientHeight<this.inputField.scrollHeight;if(this.inputField.value.length>0&&!this.focused&&e){this.isFaded=!0;this.shadowRoot.querySelector(\".ids-textarea-wrap\").style.width=this.inputField.offsetWidth-20+\"px\"}}}}firstUpdated(e){super.firstUpdated(e),this.setupListeners(),new ResizeObserver(this.handleResize).observe(this.inputField)}setupListeners(){this.inputField?.addEventListener(\"blur\",this.handleBlur),this.inputField?.addEventListener(\"focus\",this.handleFocus)}disconnectedCallback(){this.nofade||(this.inputField?.removeEventListener(\"blur\",this.handleBlur),this.inputField?.removeEventListener(\"focus\",this.handleFocus)),super.disconnectedCallback()}render(){return s`<slot name=\"label\"></slot><span class=\"ids-textarea-wrap ${this.isFaded?\"ids-textarea-fade\":\"\"}\"><slot></slot><span class=\"fade-bottom\"></span> </span>${this.renderHint()}<slot name=\"error-msg\"></slot>`}}l.styles=[...d.styles,a],e([t({type:Boolean})],l.prototype,\"nofade\",void 0),e([i()],l.prototype,\"focused\",void 0),e([i()],l.prototype,\"isFaded\",void 0);export{l as IDSTextarea};\n", "import{IDSTextarea as e}from\"./textarea-element.js\";import{registerComponent as r}from\"../../../utilities/utils.js\";import\"../error-message/register.js\";r(\"ids-textarea\",e);\n", "import * as React from 'react';\nimport { createComponent } from '@lit-labs/react';\nimport '@inera/ids-core/components/form/range/register';\nimport { IDSRange as IDSRange$1 } from '@inera/ids-core/components/form/range/range-element';\n\nconst IDSRange = createComponent({\r\n    tagName: 'ids-range',\r\n    elementClass: IDSRange$1,\r\n    react: React,\r\n});\n\nexport { IDSRange };\n", "import{css as r}from\"lit\";var e=r`:host{width:100%;display:block}::slotted(input){-webkit-appearance:none;width:100%;height:8px;background-color:var(--range_background-color);background-image:linear-gradient(var(--range-selection_background-color),var(--range-selection_background-color));background-repeat:no-repeat;border:1px;padding:0;border-radius:16px}::slotted(input:disabled){-webkit-appearance:none;width:100%;height:8px;background-color:var(--range_background-color);background-image:linear-gradient(var(--range-selection-disabled_color),var(--range-selection-disabled_color));background-repeat:no-repeat;border:1px;padding:0;border-radius:16px}.ids-range{display:block}.ids-range-ticks{display:flex;justify-content:space-between;max-width:100%;margin-left:15px;margin-right:15px;margin-top:25px}.ids-range-ticks .ids-range-tick:first-child{margin-left:-4px}.ids-range-ticks .ids-range-tick:last-child{margin-right:-4px}.ids-range-tick{display:flex;justify-content:center;text-align:center;position:relative;width:1px;font-size:1rem;font-family:var(--font-family_1);color:var(--range-tick_color)}.ids-range-tick:before{content:\"\";position:absolute;width:1px;height:10px;display:block;background-color:var(--range-tick-line_color);margin:auto;top:-15px}`;export{e as default};\n", "import{__decorate as t}from\"tslib\";import{html as i}from\"lit\";import s from\"./range-styles.js\";import{property as e,state as n}from\"lit/decorators.js\";import{FormBaseElement as a}from\"../base/form-base-element.js\";import{logError as h,logWarning as p}from\"../../../utilities/utils.js\";class r extends a{constructor(){super(...arguments),this.showticks=!1,this.min=0,this.max=0,this.step=0,this.handleInputChange=()=>{if(this.input){const t=+this.input.value;this.input.style.backgroundSize=100*(t-this.min)/(this.max-this.min)+\"% 100%\",this.input.setAttribute(\"aria-valuenow\",this.input.value)}}}firstUpdated(t){super.firstUpdated(t),this.setupValues(),this.validateProps(),this.handleInputChange()}disconnectedCallback(){this.input&&this.input.addEventListener(\"input\",this.handleInputChange),super.disconnectedCallback()}setupValues(){this.input&&(this.min=+this.input.min,this.max=+this.input.max,this.step=+this.input.step,this.input.setAttribute(\"aria-valuemin\",\"\"+this.min),this.input.setAttribute(\"aria-valuemax\",\"\"+this.max),this.input.addEventListener(\"input\",this.handleInputChange))}validateProps(){this.min>this.max&&h(this,\"Max has to be larger than Min\"),this.max%this.step>0&&p(this,\"Step cant reach max\")}getRangeStep(t){return i`<div class=\"ids-range-tick\">${t}</div>`}getRangeSteps(){if(this.step>0){const t=[];for(let i=this.min;i<=this.max;i+=this.step)t.push(this.getRangeStep(Math.floor(i)));return t}return\"\"}render(){return i`<div class=\"ids-range\"><slot></slot>${this.showticks?i`<div class=\"ids-range-ticks\">${this.getRangeSteps()}</div>`:\"\"}</div>`}}r.styles=[...a.styles,s],t([e({type:Boolean})],r.prototype,\"showticks\",void 0),t([n()],r.prototype,\"min\",void 0),t([n()],r.prototype,\"max\",void 0),t([n()],r.prototype,\"step\",void 0);export{r as IDSRange};\n", "import{IDSRange as r}from\"./range-element.js\";import{registerComponent as e}from\"../../../utilities/utils.js\";import\"../error-message/register.js\";e(\"ids-range\",r);\n", "import * as React from 'react';\nimport { createComponent } from '@lit-labs/react';\nimport '@inera/ids-core/components/form/select/register';\nimport { IDSSelect as IDSSelect$1 } from '@inera/ids-core/components/form/select/select-element';\n\nconst IDSSelect = createComponent({\r\n    tagName: 'ids-select',\r\n    elementClass: IDSSelect$1,\r\n    react: React,\r\n});\n\nexport { IDSSelect };\n", "import{css as t}from\"lit\";var e=t`::slotted(select){-webkit-appearance:none!important;-moz-appearance:none!important;display:inline-block!important;padding-right:40px;overflow:hidden;text-overflow:ellipsis;border:var(--select_border);border-bottom:var(--input_border-bottom);width:100%!important}.ids-icon{transform:rotate(90deg) translatex(-50%)}`;export{e as default};\n", "import{html as s}from\"lit\";import{FormBaseElement as e}from\"../base/form-base-element.js\";import t from\"./select-styles.js\";class o extends e{render(){return s`<slot name=\"label\"></slot><div class=\"ids-input-wrapper\"><slot></slot><ids-icon-chevron-bold width=\"7\" height=\"12\"></div><slot name=\"error-msg\"></slot>`}}o.styles=[...e.styles,t];export{o as IDSSelect};\n", "import{svg as t}from\"lit\";import{IDSIconBase as r}from\"../icon-base-element.js\";class o extends r{constructor(){super(),this.vbHeight=12,this.vbWidth=7}renderIcon(){return t`<g><path fill=\"${this.colors.color}\" d=\"M4.1627 5.57692L0.292893 1.70711C-0.0976311 1.31658 -0.0976311 0.683418 0.292893 0.292893C0.683418 -0.0976311 1.31658 -0.0976311 1.70711 0.292893L6.28403 4.86982C6.67456 5.26034 6.67455 5.89351 6.28402 6.28404L1.7071 10.8609C1.31657 11.2514 0.683406 11.2514 0.292886 10.8608C-0.0976345 10.4703 -0.0976276 9.83715 0.292901 9.44663L4.1627 5.57692Z\"></path></g>`}}export{o as IDSIconChevronBold};\n", "import{IDSIconChevronBold as o}from\"./icon-chevron-bold-element.js\";import{registerComponent as i}from\"../../../utilities/utils.js\";i(\"ids-icon-chevron-bold\",o);\n", "import{IDSSelect as e}from\"./select-element.js\";import{registerComponent as i}from\"../../../utilities/utils.js\";import\"../../icons/chevron-bold/register.js\";i(\"ids-select\",e);\n", "import * as React from 'react';\nimport { createComponent } from '@lit-labs/react';\nimport '@inera/ids-core/components/form/select-multiple/register';\nimport { IDSSelectMultiple as IDSSelectMultiple$1 } from '@inera/ids-core/components/form/select-multiple/select-multiple-element';\n\nconst IDSSelectMultiple = createComponent({\r\n    tagName: 'ids-select-multiple',\r\n    elementClass: IDSSelectMultiple$1,\r\n    react: React,\r\n});\n\nexport { IDSSelectMultiple };\n", "import{css as o}from\"lit\";var r=o`:host{width:100%}input{font:inherit;width:100%;text-align:left;cursor:pointer;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;-o-box-sizing:border-box;-ms-box-sizing:border-box;box-sizing:border-box;padding-right:50px;overflow:hidden;text-overflow:ellipsis}.ids-icon{transform:rotate(90deg) translatex(-50%)}.ids-chevron-rotated{transform:rotate(270deg) translatex(50%)}#ids-dropdown-area-wrapper{position:relative}#ids-dropdown-area{background:#fff;box-shadow:0 0 6px rgba(0,0,0,.3);border-radius:var(--select-multiple-dropdown_border-radius);padding:10px;position:absolute;z-index:10;left:0;right:0}#ids-dropdown-area-inner{overflow-y:auto}.placeholder{color:var(--input-placeholder_color)}#ids-dropdown-area.hide{display:none}.ids-input-wrapper{padding:1px}label{font-family:var(--font-family_1);color:var(--label-color)}`;export{r as default};\n", "import{css as e}from\"lit\";var o=e`.clickable{cursor:pointer}.btn-no-styles{background:0 0;color:inherit;border:none;padding:0;font:inherit;cursor:pointer;outline:inherit}.btn-no-styles:focus,.focusable:focus{outline:var(--focus_outline);outline-offset:var(--focus_outline-offset)}.ids-scrollbar::-webkit-scrollbar{width:14px;position:absolute;margin-left:-20px}.ids-scrollbar::-webkit-scrollbar-track{background:var(--IDS-SCROLL_BACKGROUND-COLOR);margin-top:10px;margin-bottom:10px;border-radius:10px}.ids-scrollbar::-webkit-scrollbar-thumb{background:var(--IDS-SCROLL_COLOR);border-radius:10px}.ids-scrollbar::-webkit-scrollbar-thumb:hover{background:#555}.grid-spacer,.grid-spacer-desktop{flex-grow:1}.grid-spacer-mobile{display:none}@media only screen and (max-width:1024px){.grid-spacer-desktop{display:none}.grid-spacer-mobile{flex-grow:1}}.no-select{-moz-user-select:-moz-none;-khtml-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.hide{display:none}.hide-on-desktop{display:none}@media only screen and (max-width:1024px){.hide-on-mobile{display:none}.hide-on-m{display:none}.hide-on-desktop{display:block}}@media only screen and (max-width:1024px){.hide-on-s{display:none}}`;export{o as default};\n", "import{__decorate as e}from\"tslib\";import{html as t}from\"lit\";import{FormBaseElement as s}from\"../base/form-base-element.js\";import i from\"./select-multiple-styles.js\";import{property as l,state as r}from\"lit/decorators.js\";import{GroupErrorController as o}from\"../controller/GroupErrorController.js\";import d from\"../../styles/global-styles.js\";class h extends s{constructor(){super(...arguments),this.groupErrorController=new o(this),this.placeholder=\"\",this.maxheight=\"\",this.label=\"\",this.selectedlabel=\"vald\",this.multiselectedlabel=\"valda\",this.selectedValues=[],this.isDropdownVisible=!1,this.handleValueChange=e=>{e.currentTarget.querySelector(\"input\").setAttribute(\"aria-selected\",e.target.checked),e.currentTarget.querySelector(\"input\").setAttribute(\"aria-checked\",e.target.checked),this.setSelectedValues()},this.setSelectedValues=()=>{this.selectedValues=[],this.checkboxes.forEach((e=>{if(e.querySelector(\"input\")?.checked){const t=e.querySelector(\"label\")?.innerText;t&&this.selectedValues.push(t)}}));const e={composed:!0,bubbles:!0,detail:this.selectedValues};this.dispatchEvent(new CustomEvent(\"change\",e))},this.handleTab=e=>{\"Tab\"!==e.key||e.shiftKey||this.hideDropdown()},this.handleEscape=e=>{this.isDropdownVisible&&\"Escape\"===e.key&&this.hideDropdown()},this.toggleVisibility=()=>{this.isDropdownVisible?this.hideDropdown():this.showDropdown()},this.hideDropdown=()=>{this.isDropdownVisible=!1,this.dropdownArea?.classList.add(\"hide\")},this.showDropdown=()=>{this.isDropdownVisible=!0,this.dropdownArea?.classList.remove(\"hide\")},this.detectClickOutside=e=>{this.contains(e.target)||this.hideDropdown()}}get checkboxes(){return this.querySelectorAll(\"ids-checkbox\")}get dropdownArea(){return this.shadowRoot?.querySelector(\"#ids-dropdown-area\")}get checkboxInputs(){return this.querySelectorAll(\"input\")}firstUpdated(e){super.firstUpdated(e),this.setSelectedValues(),this.setupEventListeners()}disconnectedCallback(){this.removeEventListeners(),super.disconnectedCallback()}setupEventListeners(){document.addEventListener(\"click\",this.detectClickOutside),this.checkboxes.forEach((e=>{e.addEventListener(\"keydown\",this.handleEscape),e.addEventListener(\"change\",this.handleValueChange)})),this.checkboxes[this.checkboxes.length-1].addEventListener(\"keydown\",this.handleTab)}removeEventListeners(){document.removeEventListener(\"click\",this.detectClickOutside),this.checkboxes.forEach((e=>{e.removeEventListener(\"keydown\",this.handleEscape),e.removeEventListener(\"change\",this.handleValueChange)}))}renderLabel(){return this.label&&this.label.length>0?t`<div @click=\"${this.hideDropdown}\" id=\"ids-label-wrapper\"><label id=\"ids-multiselect-label\">${this.label}</label></div>`:\"\"}getValue(){if(Array.from(this.querySelectorAll(\"input\")).filter((e=>!e.checked&&e.required)).length>0)return this.placeholder;const e=this.selectedValues.length>1?this.multiselectedlabel:this.selectedlabel;return this.selectedValues.length>0?`${this.selectedValues.length} ${e}`:this.placeholder}render(){return t`${this.renderLabel()}<div class=\"ids-input-wrapper\"><input @click=\"${this.toggleVisibility}\" aria-expanded=\"${this.isDropdownVisible}\" aria-labelledby=\"ids-multiselect-label\" class=\"focusable ${0===this.selectedValues.length?\"placeholder\":\"\"}\" type=\"button\" .value=\"${this.getValue()}\"><ids-icon-chevron-bold class=\"ids-icon ${this.isDropdownVisible?\"ids-chevron-rotated\":\"\"}\" size=\"xs\"></div><div id=\"ids-dropdown-area-wrapper\"><div id=\"ids-dropdown-area\" class=\"hide\"><div id=\"ids-dropdown-area-inner\" style=\"max-height:${this.maxheight}\" class=\"ids-scrollbar\"><slot></slot></div></div></div><slot name=\"error-msg\"></slot>`}}h.styles=[d,...s.styles,i],e([l({type:String})],h.prototype,\"placeholder\",void 0),e([l({type:String})],h.prototype,\"maxheight\",void 0),e([l({type:String})],h.prototype,\"label\",void 0),e([l({type:String,reflect:!0})],h.prototype,\"selectedlabel\",void 0),e([l({type:String,reflect:!0})],h.prototype,\"multiselectedlabel\",void 0),e([r()],h.prototype,\"selectedValues\",void 0),e([r()],h.prototype,\"isDropdownVisible\",void 0);export{h as IDSSelectMultiple};\n", "import{IDSSelectMultiple as e}from\"./select-multiple-element.js\";import{registerComponent as i}from\"../../../utilities/utils.js\";import\"../../icons/chevron-bold/register.js\";import\"../checkbox-group/register.js\";i(\"ids-select-multiple\",e);\n", "import * as React from 'react';\nimport { createComponent } from '@lit-labs/react';\nimport '@inera/ids-core/components/form/error-message/register';\nimport { IDSErrorMessage as IDSErrorMessage$1 } from '@inera/ids-core/components/form/error-message/error-message-element';\n\nconst IDSErrorMessage = createComponent({\r\n    tagName: 'ids-error-message',\r\n    elementClass: IDSErrorMessage$1,\r\n    react: React,\r\n});\n\nexport { IDSErrorMessage };\n", "import * as React from 'react';\nimport { createComponent } from '@lit-labs/react';\nimport '@inera/ids-core/components/form/time/register';\nimport { IDSTime as IDSTime$1 } from '@inera/ids-core/components/form/time/time-element';\n\nconst IDSTime = createComponent({\r\n    tagName: 'ids-time',\r\n    elementClass: IDSTime$1,\r\n    react: React,\r\n});\n\nexport { IDSTime };\n", "import{css as t}from\"lit\";var e=t`::slotted(label){display:table}::slotted(input){-webkit-appearance:none;-moz-appearance:none;display:inline-block;box-sizing:border-box;border:var(--select_border);border-bottom:var(--input_border-bottom);width:var(--time-width);height:var(--time-height);padding-left:var(--time-padding-left);padding-top:var(--time-padding-top);padding-bottom:var(--time-padding-bottom)}@-moz-document url-prefix(){::slotted(input){padding-right:var(--time-moz-padding-right)}}`;export{e as default};\n", "import{FormBaseElement as s}from\"../base/form-base-element.js\";import{html as e}from\"lit\";import t from\"./time-styles.js\";class o extends s{render(){return e`<slot name=\"label\"></slot><div class=\"ids-input-wrapper\"><slot name=\"input\"></slot><ids-icon-clock size=\"s\"></ids-icon-clock></div><slot name=\"error-msg\"></slot>`}}o.styles=[...s.styles,t];export{o as IDSTime};\n", "import{svg as o}from\"lit\";import{IDSIconBase as t}from\"../icon-base-element.js\";class e extends t{constructor(){super(),this.vbHeight=24,this.vbWidth=24}renderIcon(){return o`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.149902 11.9999C0.149902 5.45533 5.45533 0.149902 11.9999 0.149902C18.5445 0.149902 23.8499 5.45533 23.8499 11.9999C23.8499 18.5445 18.5445 23.8499 11.9999 23.8499C5.45533 23.8499 0.149902 18.5445 0.149902 11.9999ZM22.9499 11.9999C22.9499 5.95238 18.0474 1.0499 11.9999 1.0499C5.95238 1.0499 1.0499 5.95238 1.0499 11.9999C1.0499 18.0474 5.95238 22.9499 11.9999 22.9499C18.0474 22.9499 22.9499 18.0474 22.9499 11.9999Z\"></path><path fill=\"${this.colors.color}\" d=\"M11.7001 4.5C12.0078 4.5 12.2614 4.73162 12.2961 5.03003L12.3001 5.1V12.651L16.1014 16.4528C16.3177 16.6691 16.3343 17.0094 16.1513 17.2448L16.1014 17.3013C15.8851 17.5176 15.5448 17.5342 15.3094 17.3512L15.2529 17.3013L11.2758 13.3243C11.1821 13.2305 11.1225 13.1089 11.1053 12.9789L11.1001 12.9V5.1C11.1001 4.76863 11.3687 4.5 11.7001 4.5Z\"></path>`}}export{e as IDSIconClock};\n", "import{IDSIconClock as i}from\"./icon-clock-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-clock\",i);\n", "import{IDSTime as i}from\"./time-element.js\";import{registerComponent as e}from\"../../../utilities/utils.js\";import\"../error-message/register.js\";import\"../../icons/clock/register.js\";e(\"ids-time\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/form/spinner/register';\nimport { IDSSpinner as IDSSpinner$1 } from '@inera/ids-core/components/form/spinner/spinner-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSSpinner = createComponent({\r\n    tagName: 'ids-spinner',\r\n    elementClass: IDSSpinner$1,\r\n    react: React,\r\n});\n\nexport { IDSSpinner };\n", "import{css as i}from\"lit\";var e=i`.ids-spinner{width:70px;text-align:center}.ids-spinner-sr{position:absolute;overflow:hidden;width:1px;height:1px;margin:-1px;padding:0;border:0}.ids-spinner>div{width:18px;height:18px;background-color:var(--spinner_color);border-radius:100%;display:inline-block;-webkit-animation:sk-bouncedelay 1.4s infinite ease-in-out both;animation:sk-bouncedelay 1.4s infinite ease-in-out both}.ids-spinner .ids-bounce-1{-webkit-animation-delay:-.32s;animation-delay:-.32s}.ids-spinner .ids-bounce-2{-webkit-animation-delay:-.16s;animation-delay:-.16s}@-webkit-keyframes sk-bouncedelay{0%,100%,80%{-webkit-transform:scale(0)}40%{-webkit-transform:scale(1)}}@keyframes sk-bouncedelay{0%,100%,80%{-webkit-transform:scale(0);transform:scale(0)}40%{-webkit-transform:scale(1);transform:scale(1)}}`;export{e as default};\n", "import{__decorate as s}from\"tslib\";import{LitElement as i,html as t}from\"lit\";import{property as r}from\"lit/decorators.js\";import e from\"./spinner-styles.js\";class o extends i{constructor(){super(...arguments),this.srtext=\"Laddar\",this.live=\"polite\"}render(){return t`<div role=\"alert\" .aria-live=\"${this.live}\" class=\"ids-spinner\"><p class=\"ids-spinner-sr\">${this.srtext}</p><div class=\"ids-bounce-1\"></div><div class=\"ids-bounce-2\"></div><div class=\"ids-bounce-3\"></div></div>`}}o.styles=[e],s([r({type:String})],o.prototype,\"srtext\",void 0),s([r({type:String})],o.prototype,\"live\",void 0);export{o as IDSSpinner};\n", "import{IDSSpinner as i}from\"./spinner-element.js\";import{registerComponent as s}from\"../../../utilities/utils.js\";s(\"ids-spinner\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icon/register';\nimport { IDSIcon as IDSIcon$1 } from '@inera/ids-core/components/icon/icon-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIcon = createComponent({\r\n    tagName: 'ids-icon',\r\n    elementClass: IDSIcon$1,\r\n    react: React,\r\n});\n\nexport { IDSIcon };\n", "import{html as C}from\"lit\";const l=()=>({getDefaultIconProps:()=>({width:\"41\",height:\"34\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 41 34\" fill=\"none\"><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.33424 5.88937C6.33424 5.47516 6.67002 5.13937 7.08424 5.13937H9.72424C10.1385 5.13937 10.4742 5.47516 10.4742 5.88937V8.47293H11.0437C11.4579 8.47293 11.7937 8.80872 11.7937 9.22293C11.7937 9.63714 11.4579 9.97293 11.0437 9.97293H9.72424C9.31003 9.97293 8.97424 9.63714 8.97424 9.22293V6.63937H7.08424C6.67002 6.63937 6.33424 6.30359 6.33424 5.88937Z\"/><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.6938 0.222656C6.28178 0.222656 3.3335 3.14401 3.3335 6.60716C3.3335 8.45673 4.08339 10.3246 5.19997 11.7314C6.30482 13.1233 7.9042 14.2226 9.6938 14.2226C11.665 14.2226 13.4153 13.2212 14.648 11.8162C15.8802 10.4119 16.6668 8.52858 16.6668 6.60716C16.6668 2.95335 13.5182 0.222656 9.6938 0.222656ZM5.3335 6.60716C5.3335 4.24911 7.38582 2.22266 9.6938 2.22266C12.6069 2.22266 14.6668 4.24177 14.6668 6.60716C14.6668 7.99731 14.0883 9.42168 13.1447 10.4972C12.2016 11.572 10.9654 12.2226 9.6938 12.2226C8.7356 12.2226 7.65483 11.6072 6.76648 10.488C5.88985 9.38355 5.3335 7.94375 5.3335 6.60716Z\"/><path fill=\"${l.color2}\" d=\"M10.3335 15.2229C7.07377 15.2229 4.64185 15.8577 2.98674 17.4554C1.8082 18.593 1.30331 19.7098 0.552809 22.2859L0.552517 22.2869L0.394597 22.825L0.394086 22.8267C0.264281 23.2631 0.162139 23.5882 0.0557032 23.8936C-0.0508641 24.1994 -0.0027492 24.5379 0.184815 24.8019C0.372379 25.0658 0.676169 25.2227 1.00001 25.2227H12.8604C13.1897 24.4069 13.5204 23.7749 13.9036 23.2227H5.86925L6.20042 21.8017C6.32578 21.2638 5.99137 20.7262 5.4535 20.6008C4.91563 20.4755 4.37798 20.8099 4.25262 21.3477L3.81565 23.2227H2.36223L2.47213 22.8483L2.4727 22.8463C3.20154 20.3444 3.58877 19.654 4.37578 18.8943C5.47948 17.8289 7.27486 17.2229 10.3335 17.2229C13.0794 17.2229 14.6838 17.8064 15.6863 18.8296C16.1372 19.2899 16.4572 19.7448 16.8055 20.6178C17.3631 20.3095 17.9745 20.0467 18.644 19.8282C18.2318 18.809 17.786 18.115 17.1149 17.4299C15.5687 15.8517 13.3176 15.2229 10.3335 15.2229Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M23.717 10.7273C23.717 10.3131 24.0528 9.97729 24.467 9.97729H27.7071C28.1213 9.97729 28.4571 10.3131 28.4571 10.7273V14.0685H29.3264C29.7406 14.0685 30.0764 14.4043 30.0764 14.8185C30.0764 15.2327 29.7406 15.5685 29.3264 15.5685H27.7071C27.2928 15.5685 26.9571 15.2327 26.9571 14.8185V11.4773H24.467C24.0528 11.4773 23.717 11.1415 23.717 10.7273Z\"/><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M27.6696 3.99997C23.6076 3.99997 20.0911 7.48357 20.0911 11.6082C20.0911 13.8199 20.9894 16.0636 22.3325 17.7557C23.6638 19.4331 25.5678 20.7271 27.6696 20.7271C30.0093 20.7271 32.099 19.538 33.579 17.8513C35.0584 16.1652 36.0001 13.9059 36.0001 11.6082C36.0001 7.27042 32.2596 3.99997 27.6696 3.99997ZM22.0911 11.6082C22.0911 8.58867 24.7116 5.99997 27.6696 5.99997C31.3483 5.99997 34.0001 8.55883 34.0001 11.6082C34.0001 13.3747 33.2665 15.1749 32.0756 16.5322C30.8853 17.8889 29.3097 18.7271 27.6696 18.7271C26.3992 18.7271 25.0138 17.9169 23.899 16.5123C22.7959 15.1225 22.0911 13.3069 22.0911 11.6082Z\" fill=\"#3B4266\"/><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.5961 24.8582C21.5647 22.9579 24.477 22.1821 28.4548 22.1821C32.0899 22.1821 34.7791 22.9486 36.615 24.8225C37.9061 26.1403 38.5022 27.4828 39.3818 30.5371L39.3821 30.5383L39.6181 31.3515L39.6185 31.3531C39.7725 31.8762 39.9025 32.2866 40.0363 32.6724C40.1422 32.9781 40.0938 33.3162 39.9061 33.5798C39.7185 33.8434 39.415 34 39.0914 34H17C16.6762 34 16.3724 33.8431 16.1848 33.5791C15.9972 33.3151 15.9491 32.9767 16.0557 32.6709C16.188 32.2912 16.3145 31.8884 16.4743 31.3511L16.4748 31.3494L16.669 30.6878C17.5876 27.5346 18.1942 26.2115 19.5961 24.8582ZM34.8779 29.5232C34.7526 28.9854 34.2149 28.651 33.677 28.7763C33.1392 28.9017 32.8048 29.4393 32.9301 29.9772L33.4016 32H22.6897L23.1611 29.9772C23.2865 29.4393 22.952 28.9017 22.4142 28.7763C21.8763 28.651 21.3387 28.9854 21.2133 29.5232L20.6361 32H18.3679L18.3919 31.9195L18.3929 31.9161L18.5886 31.2492L18.5892 31.2472C19.4862 28.1682 19.9748 27.2725 20.9851 26.2971C22.4023 24.9291 24.6781 24.1821 28.4548 24.1821C31.8517 24.1821 33.8943 24.9033 35.1864 26.2221C36.1118 27.1667 36.5984 28.0988 37.4602 31.0917L37.4608 31.0937L37.6984 31.9124L37.6994 31.916L37.7242 32H35.4552L34.8779 29.5232Z\"/></svg>`}),o=()=>({getDefaultIconProps:()=>({width:\"15\",height:\"10\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 15 10\" fill=\"none\"><path fill=\"${l.color}\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15 5.02632L10.2227 0.337087C9.84974 -0.0290291 9.245 -0.0290292 8.87201 0.337087C8.49902 0.703204 8.49902 1.2968 8.87201 1.66291L11.2813 4.0278L0.955102 4.0278C0.427614 4.0278 0 4.44754 0 4.9653C0 5.48307 0.427614 5.9028 0.955102 5.9028L11.4056 5.9028L8.87201 8.38972C8.49902 8.75584 8.49902 9.34943 8.87201 9.71554C9.245 10.0817 9.84974 10.0817 10.2227 9.71554L15 5.02632Z\"/></svg>`}),e=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"41\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 41\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20 38.8867C29.9411 38.8867 38 30.8278 38 20.8867C38 10.9456 29.9411 2.88672 20 2.88672C10.0589 2.88672 2 10.9456 2 20.8867C2 30.8278 10.0589 38.8867 20 38.8867ZM20 40.8867C31.0457 40.8867 40 31.9324 40 20.8867C40 9.84102 31.0457 0.886719 20 0.886719C8.9543 0.886719 0 9.84102 0 20.8867C0 31.9324 8.9543 40.8867 20 40.8867Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.3811 24.5539C20.3554 24.7445 20.1928 24.8867 20.0005 24.8867C19.8078 24.8867 19.6449 24.7439 19.6197 24.5528L18.1062 13.0677C18.0354 12.5521 18 12.1678 18 11.9149C18 11.3021 18.1976 10.8108 18.5929 10.4412C18.9882 10.0715 19.4631 9.88672 20.0177 9.88672C20.5723 9.88672 21.0413 10.0715 21.4248 10.4412C21.8083 10.8108 22 11.3605 22 12.09C22 12.3235 21.9764 12.6494 21.9292 13.0677L20.3811 24.5539ZM21.4144 31.2985C21.024 31.6906 20.5526 31.8867 20 31.8867C19.4474 31.8867 18.976 31.6906 18.5856 31.2985C18.1952 30.9063 18 30.4327 18 29.8777C18 29.3347 18.1952 28.8671 18.5856 28.475C18.976 28.0828 19.4474 27.8867 20 27.8867C20.5526 27.8867 21.024 28.0828 21.4144 28.475C21.8048 28.8671 22 29.3347 22 29.8777C22 30.4327 21.8048 30.9063 21.4144 31.2985Z\"/></svg>`}),d=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 3.06452C5 1.37203 6.34315 0 8 0H32C33.6569 0 35 1.37203 35 3.06452V37.9536C35 39.5758 33.2383 40.5509 31.9079 39.6652L20.546 32.1004C20.2142 31.8794 19.7858 31.8794 19.454 32.1004L8.09208 39.6652C6.76171 40.5509 5 39.5758 5 37.9536V3.06452ZM8 2.04301C7.44771 2.04301 7 2.50036 7 3.06452V37.9536L18.3619 30.3888C19.3575 29.7259 20.6425 29.7259 21.6381 30.3888L33 37.9536V3.06452C33 2.50036 32.5523 2.04301 32 2.04301H8Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8 9.69385C8 9.14156 8.44772 8.69385 9 8.69385H31C31.5523 8.69385 32 9.14156 32 9.69385C32 10.2461 31.5523 10.6938 31 10.6938H9C8.44772 10.6938 8 10.2461 8 9.69385Z\"/></svg>`}),i=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.96711 13.4737L12.4019 10.3661C12.5849 10.2005 12.6469 9.93624 12.5543 9.70437L9.66606 2.47589C9.55901 2.20796 9.27815 2.06012 9.00292 2.118L2.50909 3.4837C2.22554 3.54334 2.10705 3.7557 2.10603 3.90831C2.04766 12.6284 5.33688 21.3589 11.9732 28.0086C18.6399 34.6888 27.4005 37.9828 36.1392 37.893C36.283 37.8915 36.4965 37.7775 36.5572 37.4875L37.8818 31.1639C37.9413 30.8795 37.7877 30.5972 37.5248 30.4918L30.3004 27.5935C30.0744 27.5029 29.8152 27.5622 29.6503 27.7452L26.6476 31.0775C25.2891 32.5851 23.0202 33.1569 21.067 32.1416C18.3072 30.7071 15.7193 28.8306 13.4086 26.5152C11.1674 24.2695 9.33873 21.7629 7.92471 19.0916C6.8889 17.1347 7.45193 14.8445 8.96711 13.4737ZM13.8143 11.9272C14.6508 11.1705 14.9281 9.9716 14.5093 8.92324L11.621 1.69476C11.1354 0.47921 9.84849 -0.211141 8.56965 0.0578089L2.07582 1.42351C0.892101 1.67245 0.00892173 2.68229 0.000809994 3.89422C-0.0611618 13.1531 3.43291 22.4314 10.483 29.4958C17.5657 36.5928 26.8783 40.0936 36.1609 39.9981C37.367 39.9857 38.37 39.1019 38.6178 37.9191L39.9423 31.5955C40.2107 30.314 39.5218 29.0246 38.3087 28.5379L31.0842 25.6396C30.038 25.2199 28.8416 25.4978 28.0863 26.3359L25.0836 29.6682C24.3084 30.5286 23.0649 30.8075 22.038 30.2737C19.4676 28.9376 17.0553 27.189 14.8987 25.028C12.8071 22.9322 11.1027 20.5953 9.78538 18.1067C9.23934 17.0751 9.51461 15.8174 10.3795 15.0348L13.8143 11.9272Z\"/><path fill=\"${l.color}\" d=\"M7.51121 11.7571C7.72899 12.2961 8.34249 12.5565 8.88151 12.3388C9.42053 12.121 9.68095 11.5075 9.46317 10.9685L6.70291 4.13658C6.48514 3.59756 5.87163 3.33714 5.33261 3.55492C4.79359 3.7727 4.53317 4.38621 4.75095 4.92523L7.51121 11.7571Z\"/><path fill=\"${l.color}\" d=\"M35.1488 35.2593C35.6951 35.4582 36.2991 35.1765 36.498 34.6302C36.6968 34.0839 36.4151 33.4799 35.8688 33.281L28.9448 30.7609C28.3985 30.562 27.7945 30.8437 27.5956 31.39C27.3968 31.9363 27.6785 32.5403 28.2248 32.7392L35.1488 35.2593Z\"/></svg>`}),r=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.77708 14.0359L12.1391 10.9941C12.3182 10.8321 12.3789 10.5734 12.2882 10.3464L9.46121 3.27112C9.35643 3.00887 9.08153 2.86417 8.81213 2.92082L2.45592 4.25758C2.17837 4.31595 2.06239 4.52381 2.06139 4.67319C2.00426 13.2085 5.22378 21.7539 11.7194 28.2627C18.2449 34.8014 26.8198 38.0256 35.3734 37.9376C35.5141 37.9362 35.723 37.8246 35.7825 37.5407L37.079 31.3511C37.1372 31.0728 36.9869 30.7965 36.7296 30.6933L29.6582 27.8564C29.4371 27.7677 29.1833 27.8258 29.0219 28.0049L26.0829 31.2666C24.7532 32.7422 22.5324 33.3019 20.6206 32.3082C17.9192 30.904 15.3862 29.0673 13.1244 26.8009C10.9308 24.6029 9.14082 22.1494 7.75677 19.5347C6.7429 17.6193 7.294 15.3777 8.77708 14.0359ZM13.5216 12.5222C14.3403 11.7814 14.6118 10.608 14.2018 9.58183L11.3748 2.50655C10.8994 1.31676 9.63978 0.641036 8.38804 0.904287L2.03183 2.24104C0.873195 2.48471 0.00873265 3.47315 0.000792828 4.6594C-0.0598656 13.722 3.36016 22.8037 10.2609 29.7184C17.1935 36.665 26.3087 40.0916 35.3945 39.9981C36.5751 39.986 37.5569 39.1209 37.7994 37.9632L39.0958 31.7736C39.3586 30.5193 38.6842 29.2572 37.4968 28.7808L30.4255 25.9439C29.4014 25.5331 28.2303 25.8051 27.4911 26.6255L24.5521 29.8871C23.7932 30.7293 22.5761 31.0023 21.571 30.4798C19.055 29.172 16.6938 27.4605 14.583 25.3453C12.5357 23.2939 10.8674 21.0066 9.578 18.5707C9.04354 17.561 9.31297 16.3299 10.1596 15.5639L13.5216 12.5222Z\"/><path fill=\"${l.color}\" d=\"M7.35192 12.3558C7.56508 12.8834 8.16558 13.1383 8.69318 12.9251C9.22078 12.7119 9.47568 12.1114 9.26252 11.5838L6.56075 4.89674C6.34759 4.36915 5.74708 4.11425 5.21949 4.32741C4.69189 4.54057 4.43699 5.14108 4.65015 5.66868L7.35192 12.3558Z\"/><path fill=\"${l.color}\" d=\"M34.404 35.3598C34.9387 35.5544 35.5299 35.2787 35.7245 34.744C35.9192 34.2093 35.6435 33.618 35.1087 33.4234L28.3314 30.9567C27.7967 30.7621 27.2055 31.0378 27.0108 31.5725C26.8162 32.1072 27.0919 32.6984 27.6266 32.8931L34.404 35.3598Z\"/><path fill=\"${l.color}\" d=\"M38.3881 18.5458C38.9571 18.5458 39.4184 18.0845 39.4184 17.5155C39.4184 7.84196 31.5765 0 21.9029 0C21.3339 0 20.8726 0.461292 20.8726 1.03032C20.8726 1.59936 21.3339 2.06065 21.9029 2.06065C30.4384 2.06065 37.3578 8.98002 37.3578 17.5155C37.3578 18.0845 37.8191 18.5458 38.3881 18.5458Z\"/><path fill=\"${l.color}\" d=\"M32.108 18.5458C32.6771 18.5458 33.1384 18.0845 33.1384 17.5155C33.1384 11.3103 28.1081 6.28007 21.9029 6.28007C21.3339 6.28007 20.8726 6.74136 20.8726 7.31039C20.8726 7.87942 21.3339 8.34071 21.9029 8.34071C26.97 8.34071 31.0777 12.4484 31.0777 17.5155C31.0777 18.0845 31.539 18.5458 32.108 18.5458Z\"/><path fill=\"${l.color}\" d=\"M26.8583 17.5155C26.8583 18.0845 26.397 18.5458 25.828 18.5458C25.2589 18.5458 24.7976 18.0845 24.7976 17.5155C24.7976 15.9168 23.5016 14.6208 21.9029 14.6208C21.3339 14.6208 20.8726 14.1595 20.8726 13.5905C20.8726 13.0214 21.3339 12.5601 21.9029 12.5601C24.6397 12.5601 26.8583 14.7787 26.8583 17.5155Z\"/></svg>`}),c=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3 0C1.34315 0 0 1.34314 0 3V37C0 38.6569 1.34314 40 3 40H37C38.6569 40 40 38.6569 40 37V3C40 1.34315 38.6569 0 37 0H3ZM2 3C2 2.44771 2.44771 2 3 2H37C37.5523 2 38 2.44771 38 3V6.47217H2V3ZM2 8.47217V37C2 37.5523 2.44771 38 3 38H37C37.5523 38 38 37.5523 38 37V8.47217H2Z\" fill=\"#3B4266\"/><path fill=\"${l.color}\" d=\"M7 13.9722H10V16.9722H7V13.9722Z\"/><path fill=\"${l.color}\" d=\"M30 13.9722H27V16.9722H30V13.9722Z\"/><path fill=\"${l.color}\" d=\"M34 13.9722H31V16.9722H34V13.9722Z\"/><path fill=\"${l.color}\" d=\"M27 17.9722H30V20.9722H27V17.9722Z\"/><path fill=\"${l.color}\" d=\"M34 17.9722H31V20.9722H34V17.9722Z\"/><path fill=\"${l.color}\" d=\"M27 21.9722H30V24.9722H27V21.9722Z\"/><path fill=\"${l.color}\" d=\"M34 21.9722H31V24.9722H34V21.9722Z\"/><path fill=\"${l.color}\" d=\"M27 25.9722H30V28.9722H27V25.9722Z\"/><path fill=\"${l.color}\" d=\"M34 25.9722H31V28.9722H34V25.9722Z\"/><path fill=\"${l.color}\" d=\"M14 13.9722H11V16.9722H14V13.9722Z\"/><path fill=\"${l.color}\" d=\"M15 13.9722H18V16.9722H15V13.9722Z\"/><path fill=\"${l.color}\" d=\"M22 13.9722H19V16.9722H22V13.9722Z\"/><path fill=\"${l.color}\" d=\"M23 13.9722H26V16.9722H23V13.9722Z\"/><path fill=\"${l.color}\" d=\"M10 17.9722H7V20.9722H10V17.9722Z\"/><path fill=\"${l.color}\" d=\"M11 17.9722H14V20.9722H11V17.9722Z\"/><path fill=\"${l.color}\" d=\"M18 17.9722H15V20.9722H18V17.9722Z\"/><path fill=\"${l.color}\" d=\"M19 17.9722H22V20.9722H19V17.9722Z\"/><path fill=\"${l.color}\" d=\"M26 17.9722H23V20.9722H26V17.9722Z\"/><path fill=\"${l.color}\" d=\"M7 21.9722H10V24.9722H7V21.9722Z\"/><path fill=\"${l.color}\" d=\"M14 21.9722H11V24.9722H14V21.9722Z\"/><path fill=\"${l.color}\" d=\"M15 21.9722H18V24.9722H15V21.9722Z\"/><path fill=\"${l.color}\" d=\"M22 21.9722H19V24.9722H22V21.9722Z\"/><path fill=\"${l.color}\" d=\"M23 21.9722H26V24.9722H23V21.9722Z\"/><path fill=\"${l.color}\" d=\"M10 25.9722H7V28.9722H10V25.9722Z\"/><path fill=\"${l.color}\" d=\"M11 25.9722H14V28.9722H11V25.9722Z\"/><path fill=\"${l.color}\" d=\"M18 25.9722H15V28.9722H18V25.9722Z\"/><path fill=\"${l.color}\" d=\"M19 25.9722H22V28.9722H19V25.9722Z\"/><path fill=\"${l.color}\" d=\"M26 25.9722H23V28.9722H26V25.9722Z\"/><path fill=\"${l.color}\" d=\"M7 29.9722H10V32.9722H7V29.9722Z\"/><path fill=\"${l.color}\" d=\"M14 29.9722H11V32.9722H14V29.9722Z\"/><path fill=\"${l.color}\" d=\"M15 29.9722H18V32.9722H15V29.9722Z\"/><path fill=\"${l.color}\" d=\"M22 29.9722H19V32.9722H22V29.9722Z\"/></svg>`}),t=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color2}\" d=\"M15.2538 2.64445C15.4342 2.32273 15.7744 2.12352 16.1432 2.12352H24.6317C25.0005 2.12352 25.3407 2.32273 25.5211 2.64445L26.8592 5.03033C26.8963 5.09651 26.9244 5.16196 26.9451 5.22597L27.1728 5.93321H34.6642C35.2274 5.93321 35.684 6.38978 35.684 6.95298V26.3806L37.7235 27.9252V6.95298C37.7235 5.26337 36.3538 3.89368 34.6642 3.89368H28.5601L27.3 1.64678C26.7587 0.681597 25.7383 0.0839844 24.6317 0.0839844H16.1432C15.0366 0.0839844 14.0162 0.681598 13.4749 1.64678L12.2148 3.89368H6.11072C6.07155 3.89368 6.03255 3.89441 5.99373 3.89587L8.68396 5.93321H13.6021L13.8298 5.22597C13.8504 5.16196 13.8786 5.09651 13.9157 5.03033L15.2538 2.64445Z\"/><path fill=\"${l.color2}\" d=\"M5.09096 10.8874L3.05142 9.34281V29.6573C3.05142 31.3469 4.42112 32.7166 6.11072 32.7166H33.9156L31.2225 30.677H6.11072C5.54752 30.677 5.09096 30.2205 5.09096 29.6573V10.8874Z\"/><path fill=\"${l.color2}\" d=\"M13.3649 17.1532C13.2889 17.5705 13.2492 18.0005 13.2492 18.4398C13.2492 22.3822 16.4452 25.5782 20.3876 25.5782C21.5152 25.5782 22.5817 25.3168 23.5298 24.8512L21.6039 23.3927C21.2141 23.4881 20.8068 23.5387 20.3876 23.5387C17.6293 23.5387 15.3826 21.3485 15.2916 18.6124L13.3649 17.1532Z\"/><path fill=\"${l.color}\" d=\"M25.482 18.6544C25.4849 18.5833 25.4864 18.5117 25.4864 18.4398C25.4864 15.6238 23.2036 13.341 20.3876 13.341C19.8329 13.341 19.2989 13.4295 18.799 13.5933L16.9416 12.1868C17.9633 11.6225 19.1379 11.3014 20.3876 11.3014C24.33 11.3014 27.526 14.4974 27.526 18.4398C27.526 18.9979 27.4619 19.541 27.3408 20.0621L25.482 18.6544Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.594567 3.64459C0.934585 3.19561 1.5742 3.10728 2.02318 3.4473L39.9835 32.195C40.4325 32.5351 40.5208 33.1747 40.1808 33.6237C39.8408 34.0726 39.2012 34.161 38.7522 33.821L0.791862 5.0732C0.342881 4.73318 0.254548 4.09357 0.594567 3.64459Z\"/></svg>`}),h=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"38\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 38\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.1036 2.35294C14.678 2.35294 14.2856 2.58276 14.0774 2.95392L12.5337 5.70642C12.4909 5.78278 12.4585 5.85829 12.4347 5.93213L12.172 6.74805H3.52941C2.87966 6.74805 2.35294 7.27477 2.35294 7.92452V34.1176C2.35294 34.7674 2.87966 35.2941 3.52941 35.2941H36.4706C37.1203 35.2941 37.6471 34.7674 37.6471 34.1176V7.92452C37.6471 7.27477 37.1203 6.74805 36.4706 6.74805H27.8279L27.5653 5.93213C27.5415 5.85828 27.509 5.78278 27.4662 5.70642L25.9225 2.95392C25.7143 2.58276 25.3219 2.35294 24.8964 2.35294H15.1036ZM12.0252 1.80294C12.6497 0.689446 13.8269 0 15.1036 0H24.8964C26.1731 0 27.3502 0.689445 27.9747 1.80295L29.4285 4.39511H36.4706C38.4198 4.39511 40 5.97528 40 7.92452V34.1176C40 36.0669 38.4198 37.647 36.4706 37.647H3.52941C1.58017 37.647 0 36.0669 0 34.1176V7.92452C0 5.97528 1.58017 4.39511 3.52941 4.39511H10.5714L12.0252 1.80294Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20 15.2941C16.7513 15.2941 14.1176 17.9277 14.1176 21.1765C14.1176 24.4252 16.7513 27.0588 20 27.0588C23.2487 27.0588 25.8824 24.4252 25.8824 21.1765C25.8824 17.9277 23.2487 15.2941 20 15.2941ZM11.7647 21.1765C11.7647 16.6282 15.4518 12.9412 20 12.9412C24.5482 12.9412 28.2353 16.6282 28.2353 21.1765C28.2353 25.7247 24.5482 29.4118 20 29.4118C15.4518 29.4118 11.7647 25.7247 11.7647 21.1765Z\"/></svg>`}),n=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"38\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.1036 2.35294C14.678 2.35294 14.2856 2.58276 14.0774 2.95392L12.5337 5.70642C12.4909 5.78278 12.4585 5.85829 12.4347 5.93213L12.172 6.74805H3.52941C2.87966 6.74805 2.35294 7.27477 2.35294 7.92452V34.1176C2.35294 34.7674 2.87966 35.2941 3.52941 35.2941H36.4706C37.1203 35.2941 37.6471 34.7674 37.6471 34.1176V7.92452C37.6471 7.27477 37.1203 6.74805 36.4706 6.74805H27.8279L27.5653 5.93213C27.5415 5.85828 27.509 5.78278 27.4662 5.70642L25.9225 2.95392C25.7143 2.58276 25.3219 2.35294 24.8964 2.35294H15.1036ZM12.0252 1.80294C12.6497 0.689446 13.8269 0 15.1036 0H24.8964C26.1731 0 27.3502 0.689445 27.9747 1.80295L29.4285 4.39511H36.4706C38.4198 4.39511 40 5.97528 40 7.92452V34.1176C40 36.0669 38.4198 37.647 36.4706 37.647H3.52941C1.58017 37.647 0 36.0669 0 34.1176V7.92452C0 5.97528 1.58017 4.39511 3.52941 4.39511H10.5714L12.0252 1.80294Z\"/><path fill=\"${l.color}\" d=\"M14.8614 17.2566C15.8511 15.2423 18.0034 13.8237 20.53 13.8237C23.496 13.8237 25.9463 15.7788 26.6053 18.3574C26.7259 18.8296 27.2065 19.1145 27.6786 18.9938C28.1508 18.8732 28.4357 18.3926 28.315 17.9205C27.449 14.532 24.2723 12.059 20.53 12.059C17.5987 12.059 15.0145 13.5762 13.6159 15.8621V13.8076C13.6159 13.3203 13.2208 12.9252 12.7335 12.9252C12.2462 12.9252 11.8512 13.3203 11.8512 13.8076V18.139C11.8512 18.6263 12.2462 19.0213 12.7335 19.0213H13.5811C13.594 19.0216 13.6069 19.0216 13.6197 19.0213H17.0649C17.5522 19.0213 17.9472 18.6263 17.9472 18.139C17.9472 17.6516 17.5522 17.2566 17.0649 17.2566H14.8614Z\"/><path fill=\"${l.color}\" d=\"M26.5739 22.1835H23.1287C22.6414 22.1835 22.2464 22.5785 22.2464 23.0658C22.2464 23.5531 22.6414 23.9482 23.1287 23.9482H25.3322C24.3425 25.9624 22.1902 27.3811 19.6636 27.3811C16.6976 27.3811 14.2473 25.426 13.5883 22.8473C13.4676 22.3752 12.9871 22.0903 12.5149 22.2109C12.0428 22.3316 11.7579 22.8122 11.8786 23.2843C12.7446 26.6728 15.9213 29.1458 19.6636 29.1458C22.5949 29.1458 25.1791 27.6286 26.5777 25.3427V27.3972C26.5777 27.8845 26.9728 28.2795 27.4601 28.2795C27.9474 28.2795 28.3424 27.8845 28.3424 27.3972V23.0658C28.3424 22.5785 27.9474 22.1835 27.4601 22.1835H26.6125C26.5996 22.1832 26.5867 22.1832 26.5739 22.1835Z\"/></svg>`}),v=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1 0.193359C1.55228 0.193359 2 0.641075 2 1.19336V38.1934H39C39.5523 38.1934 40 38.6411 40 39.1934C40 39.7456 39.5523 40.1934 39 40.1934H0V1.19336C0 0.641075 0.447715 0.193359 1 0.193359Z\"/><path fill=\"${l.color}\" d=\"M18 7.88135C18 7.32906 18.4477 6.88135 19 6.88135H21C21.5523 6.88135 22 7.32906 22 7.88135V31.8813C22 32.4336 21.5523 32.8813 21 32.8813H19C18.4477 32.8813 18 32.4336 18 31.8813V7.88135Z\"/><path fill=\"${l.color}\" d=\"M9 21.8813C9 21.3291 9.44772 20.8813 10 20.8813H12C12.5523 20.8813 13 21.3291 13 21.8813V31.8813C13 32.4336 12.5523 32.8813 12 32.8813H10C9.44772 32.8813 9 32.4336 9 31.8813V21.8813Z\"/><path fill=\"${l.color}\" d=\"M28 14.8813C27.4477 14.8813 27 15.3291 27 15.8813V31.8813C27 32.4336 27.4477 32.8813 28 32.8813H30C30.5523 32.8813 31 32.4336 31 31.8813V15.8813C31 15.3291 30.5523 14.8813 30 14.8813H28Z\"/></svg>`}),a=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"41\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 41\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1 0.193359C1.55228 0.193359 2 0.641075 2 1.19336V38.1934H39C39.5523 38.1934 40 38.6411 40 39.1934C40 39.7456 39.5523 40.1934 39 40.1934H0V1.19336C0 0.641075 0.447715 0.193359 1 0.193359Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M34.6915 11.1963C35.2421 11.6128 35.3509 12.3967 34.9345 12.9473L26.0492 24.6968C25.8415 24.9715 25.5297 25.1483 25.1874 25.1855C24.8451 25.2228 24.5026 25.1172 24.2407 24.8937L17.038 18.7466L7.92801 30.5809C7.50689 31.1279 6.72205 31.23 6.17501 30.8089C5.62796 30.3878 5.52588 29.6029 5.94699 29.0559L15.8589 16.1799C16.0678 15.9085 16.3789 15.7347 16.7195 15.6992C17.0601 15.6636 17.4004 15.7693 17.6609 15.9916L24.855 22.1313L32.9405 11.4394C33.3569 10.8888 34.1408 10.7799 34.6915 11.1963Z\"/></svg>`}),H=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"32\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg class=\"ids-check\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 32\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><path fill=\"${l.color}\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M39.1772 0.674536C40.2151 1.62733 40.2798 3.23649 39.3218 4.26869L14.343 31.1817C13.8554 31.7071 13.1679 32.0041 12.4489 32C11.73 31.9958 11.046 31.6909 10.5646 31.1598L0.658175 20.2339C-0.287695 19.1907 -0.20415 17.5824 0.844778 16.6417C1.8937 15.7009 3.51081 15.784 4.45668 16.8273L12.4859 25.6828L35.5634 0.818302C36.5214 -0.213896 38.1394 -0.278263 39.1772 0.674536Z\"/></svg>`}),p=()=>({getDefaultIconProps:()=>({width:\"7\",height:\"12\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg class=\"ids-chevron\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 7 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g><path fill=\"${l.color}\" class=\"ids-chevron-path\" d=\"M4.1627 5.57692L0.292893 1.70711C-0.0976311 1.31658 -0.0976311 0.683418 0.292893 0.292893C0.683418 -0.0976311 1.31658 -0.0976311 1.70711 0.292893L6.28403 4.86982C6.67456 5.26034 6.67455 5.89351 6.28402 6.28404L1.7071 10.8609C1.31657 11.2514 0.683406 11.2514 0.292886 10.8608C-0.0976345 10.4703 -0.0976276 9.83715 0.292901 9.44663L4.1627 5.57692Z\"/></g></svg>`}),V=()=>({getDefaultIconProps:()=>({width:\"6\",height:\"10\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 6 10\" fill=\"none\"><path fill=\"${l.color}\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.45327 4.54673C5.70361 4.79706 5.70361 5.20294 5.45327 5.45327L1.0943 9.81225C0.843963 10.0626 0.438088 10.0626 0.187752 9.81225C-0.062584 9.56191 -0.062584 9.15604 0.187752 8.9057L4.09345 5L0.187752 1.0943C-0.0625836 0.843963 -0.0625836 0.438088 0.187752 0.187752C0.438089 -0.062584 0.843963 -0.062584 1.0943 0.187752L5.45327 4.54673Z\"/></svg>`}),f=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"41\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 41\" fill=\"none\"><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 3.75C12 2.09315 13.3431 0.75 15 0.75H25C26.6569 0.75 28 2.09315 28 3.75V5.75C28 7.40685 26.6569 8.75 25 8.75H15C13.3431 8.75 12 7.40685 12 5.75V3.75ZM15 2.75C14.4477 2.75 14 3.19772 14 3.75V5.75C14 6.30228 14.4477 6.75 15 6.75H25C25.5523 6.75 26 6.30228 26 5.75V3.75C26 3.19772 25.5523 2.75 25 2.75H15Z\"/><path fill=\"${l.color2}\" d=\"M11 4H3C1.34315 4 0 5.34315 0 7V38C0 39.6569 1.34314 41 3 41H37C38.6569 41 40 39.6569 40 38V7C40 5.34315 38.6569 4 37 4H29V6H37C37.5523 6 38 6.44771 38 7V38C38 38.5523 37.5523 39 37 39H3C2.44772 39 2 38.5523 2 38V7C2 6.44772 2.44772 6 3 6H11V4Z\"/></svg>`}),L=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"41\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 41\" fill=\"none\"><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22 22V17H18V22H13V26H18V31H22V26H27V22H22ZM16 20H12C11.4477 20 11 20.4477 11 21V27C11 27.5523 11.4477 28 12 28H16V32C16 32.5523 16.4477 33 17 33H23C23.5523 33 24 32.5523 24 32V28H28C28.5523 28 29 27.5523 29 27V21C29 20.4477 28.5523 20 28 20H24V16C24 15.4477 23.5523 15 23 15H17C16.4477 15 16 15.4477 16 16V20Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 3.75C12 2.09315 13.3431 0.75 15 0.75H25C26.6569 0.75 28 2.09315 28 3.75V5.75C28 7.40685 26.6569 8.75 25 8.75H15C13.3431 8.75 12 7.40685 12 5.75V3.75ZM15 2.75C14.4477 2.75 14 3.19772 14 3.75V5.75C14 6.30228 14.4477 6.75 15 6.75H25C25.5523 6.75 26 6.30228 26 5.75V3.75C26 3.19772 25.5523 2.75 25 2.75H15Z\"/><path fill=\"${l.color2}\" d=\"M11 4H3C1.34315 4 0 5.34315 0 7V38C0 39.6569 1.34314 41 3 41H37C38.6569 41 40 39.6569 40 38V7C40 5.34315 38.6569 4 37 4H29V6H37C37.5523 6 38 6.44771 38 7V38C38 38.5523 37.5523 39 37 39H3C2.44772 39 2 38.5523 2 38V7C2 6.44772 2.44772 6 3 6H11V4Z\"/></svg>`}),s=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"41\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 41\" fill=\"none\"><path fill=\"${l.color}\" d=\"M11 16C11 15.4477 11.4477 15 12 15H28C28.5523 15 29 15.4477 29 16C29 16.5523 28.5523 17 28 17H12C11.4477 17 11 16.5523 11 16Z\"/><path fill=\"${l.color}\" d=\"M11 23C11 22.4477 11.4477 22 12 22H28C28.5523 22 29 22.4477 29 23C29 23.5523 28.5523 24 28 24H12C11.4477 24 11 23.5523 11 23Z\"/><path fill=\"${l.color}\" d=\"M12 29C11.4477 29 11 29.4477 11 30C11 30.5523 11.4477 31 12 31H20C20.5523 31 21 30.5523 21 30C21 29.4477 20.5523 29 20 29H12Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 3.75C12 2.09315 13.3431 0.75 15 0.75H25C26.6569 0.75 28 2.09315 28 3.75V5.75C28 7.40685 26.6569 8.75 25 8.75H15C13.3431 8.75 12 7.40685 12 5.75V3.75ZM15 2.75C14.4477 2.75 14 3.19772 14 3.75V5.75C14 6.30228 14.4477 6.75 15 6.75H25C25.5523 6.75 26 6.30228 26 5.75V3.75C26 3.19772 25.5523 2.75 25 2.75H15Z\"/><path fill=\"${l.color2}\" d=\"M11 4H3C1.34315 4 0 5.34315 0 7V38C0 39.6569 1.34314 41 3 41H37C38.6569 41 40 39.6569 40 38V7C40 5.34315 38.6569 4 37 4H29V6H37C37.5523 6 38 6.44771 38 7V38C38 38.5523 37.5523 39 37 39H3C2.44772 39 2 38.5523 2 38V7C2 6.44772 2.44772 6 3 6H11V4Z\"/></svg>`}),u=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color}\" xmlns=\"http://www.w3.org/2000/svg\" d=\"M4.26777 0.732233C3.29146 -0.244078 1.70854 -0.244078 0.732233 0.732233C-0.244078 1.70854 -0.244078 3.29146 0.732233 4.26777L16.4645 20L0.732233 35.7322C-0.244078 36.7085 -0.244078 38.2915 0.732233 39.2678C1.70854 40.2441 3.29146 40.2441 4.26777 39.2678L20 23.5355L35.7322 39.2678C36.7085 40.2441 38.2915 40.2441 39.2678 39.2678C40.2441 38.2915 40.2441 36.7085 39.2678 35.7322L23.5355 20L39.2678 4.26777C40.2441 3.29146 40.2441 1.70854 39.2678 0.732233C38.2915 -0.244078 36.7085 -0.244078 35.7322 0.732233L20 16.4645L4.26777 0.732233Z\"/></svg>`}),M=()=>({getDefaultIconProps:()=>({width:\"24\",height:\"24\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.149902 11.9999C0.149902 5.45533 5.45533 0.149902 11.9999 0.149902C18.5445 0.149902 23.8499 5.45533 23.8499 11.9999C23.8499 18.5445 18.5445 23.8499 11.9999 23.8499C5.45533 23.8499 0.149902 18.5445 0.149902 11.9999ZM22.9499 11.9999C22.9499 5.95238 18.0474 1.0499 11.9999 1.0499C5.95238 1.0499 1.0499 5.95238 1.0499 11.9999C1.0499 18.0474 5.95238 22.9499 11.9999 22.9499C18.0474 22.9499 22.9499 18.0474 22.9499 11.9999Z\"/><path fill=\"${l.color}\" d=\"M11.7001 4.5C12.0078 4.5 12.2614 4.73162 12.2961 5.03003L12.3001 5.1V12.651L16.1014 16.4528C16.3177 16.6691 16.3343 17.0094 16.1513 17.2448L16.1014 17.3013C15.8851 17.5176 15.5448 17.5342 15.3094 17.3512L15.2529 17.3013L11.2758 13.3243C11.1821 13.2305 11.1225 13.1089 11.1053 12.9789L11.1001 12.9V5.1C11.1001 4.76863 11.3687 4.5 11.7001 4.5Z\"/></svg>`}),Z=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 20 20\" fill=\"none\"><path fill=\"${l.color}\" d=\"M1.44621 0.397052L1.53033 0.46967L10 8.939L18.4697 0.46967C18.7626 0.176777 19.2374 0.176777 19.5303 0.46967C19.7966 0.735936 19.8208 1.1526 19.6029 1.44621L19.5303 1.53033L11.061 10L19.5303 18.4697C19.8232 18.7626 19.8232 19.2374 19.5303 19.5303C19.2641 19.7966 18.8474 19.8208 18.5538 19.6029L18.4697 19.5303L10 11.061L1.53033 19.5303C1.23744 19.8232 0.762563 19.8232 0.46967 19.5303C0.203403 19.2641 0.179197 18.8474 0.397052 18.5538L0.46967 18.4697L8.939 10L0.46967 1.53033C0.176777 1.23744 0.176777 0.762563 0.46967 0.46967C0.706351 0.232989 1.06186 0.187565 1.34416 0.333399L1.44621 0.397052Z\"/></svg>`}),g=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20 14C16.6863 14 14 16.6863 14 20C14 23.3137 16.6863 26 20 26C23.3137 26 26 23.3137 26 20C26 16.6863 23.3137 14 20 14ZM12 20C12 15.5817 15.5817 12 20 12C24.4183 12 28 15.5817 28 20C28 24.4183 24.4183 28 20 28C15.5817 28 12 24.4183 12 20Z\"/><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20 2C18.3488 2 16.9869 3.2427 16.8012 4.8429L16.7233 5.5137L16.072 5.69208C14.8676 6.02191 13.7242 6.4999 12.6625 7.10515L12.0759 7.43953L11.5466 7.02048C10.2826 6.01997 8.43991 6.10424 7.27208 7.27208C6.10424 8.43991 6.02 10.2826 7.02072 11.5464L7.43999 12.0759L7.10538 12.6626C6.49986 13.7243 6.02182 14.8678 5.6917 16.0711L5.51324 16.7215L4.8433 16.7997C3.24272 16.9866 2 18.3489 2 20C2 21.6512 3.2427 23.0131 4.8429 23.1988L5.5137 23.2767L5.69208 23.928C6.02191 25.1324 6.4999 26.2758 7.10515 27.3375L7.43953 27.9241L7.02048 28.4534C6.01997 29.7174 6.10424 31.5601 7.27208 32.7279C8.43991 33.8958 10.2826 33.98 11.5464 32.9793L12.0759 32.56L12.6626 32.8946C13.7243 33.5001 14.8678 33.9782 16.0711 34.3083L16.7215 34.4868L16.7997 35.1567C16.9866 36.7573 18.3489 38 20 38C21.6512 38 23.0131 36.7573 23.1988 35.1571L23.2767 34.4863L23.928 34.3079C25.1324 33.9781 26.2758 33.5001 27.3375 32.8949L27.9241 32.5605L28.4534 32.9795C29.7174 33.98 31.5601 33.8958 32.7279 32.7279C33.8958 31.5601 33.98 29.7174 32.9793 28.4536L32.56 27.9241L32.8946 27.3374C33.5001 26.2757 33.9782 25.1322 34.3083 23.9289L34.4868 23.2785L35.1567 23.2003C36.7573 23.0134 38 21.6511 38 20C38 18.3488 36.7573 16.9869 35.1571 16.8012L34.4863 16.7233L34.3079 16.072C33.9781 14.8676 33.5001 13.7242 32.8949 12.6625L32.5605 12.0759L32.9795 11.5466C33.98 10.2826 33.8958 8.43991 32.7279 7.27208C31.5601 6.10424 29.7174 6.02 28.4536 7.02072L27.9241 7.43999L27.3374 7.10538C26.2757 6.49986 25.1322 6.02182 23.9289 5.6917L23.2785 5.51324L23.2003 4.8433C23.0134 3.24272 21.6511 2 20 2ZM14.9372 3.94159C15.5077 1.67593 17.5577 0 20 0C22.4426 0 24.4924 1.67621 25.0638 3.9415C26.005 4.23834 26.9111 4.61559 27.7733 5.06524C29.7792 3.86636 32.4147 4.13039 34.1421 5.85786C35.8697 7.58538 36.1336 10.2208 34.935 12.2268C35.3844 13.089 35.7617 13.9952 36.0584 14.9373C38.3241 15.5077 40 17.5577 40 20C40 22.4426 38.3238 24.4924 36.0585 25.0638C35.7617 26.005 35.3844 26.9111 34.9348 27.7733C36.1336 29.7792 35.8696 32.4147 34.1421 34.1421C32.4146 35.8697 29.7792 36.1336 27.7732 34.935C26.911 35.3844 26.0048 35.7617 25.0627 36.0584C24.4923 38.3241 22.4423 40 20 40C17.5574 40 15.5076 38.3238 14.9362 36.0585C13.995 35.7617 13.0889 35.3844 12.2267 34.9348C10.2208 36.1336 7.58534 35.8696 5.85786 34.1421C4.13035 32.4146 3.86638 29.7792 5.06501 27.7732C4.61555 26.911 4.23832 26.0048 3.94159 25.0628C1.67593 24.4923 0 22.4423 0 20C0 17.5574 1.67621 15.5076 3.9415 14.9362C4.23834 13.995 4.61559 13.0889 5.06524 12.2267C3.86636 10.2208 4.13039 7.58534 5.85786 5.85786C7.58538 4.13035 10.2208 3.86638 12.2268 5.06501C13.089 4.61555 13.9952 4.23832 14.9372 3.94159Z\"/></svg>`}),w=()=>({getDefaultIconProps:()=>({width:\"33\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 33 40\" fill=\"none\"><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.7931 2C2.35317 2 2 2.35537 2 2.78947V30.2105C2 30.6446 2.35317 31 2.7931 31C3.34539 31 3.7931 31.4477 3.7931 32C3.7931 32.5523 3.34539 33 2.7931 33C1.25243 33 0 31.753 0 30.2105V2.78947C0 1.24698 1.25243 0 2.7931 0H22.3103C23.851 0 25.1034 1.24698 25.1034 2.78947C25.1034 3.34176 24.6557 3.78947 24.1034 3.78947C23.5512 3.78947 23.1034 3.34176 23.1034 2.78947C23.1034 2.35537 22.7503 2 22.3103 2H2.7931Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.7931 7C7.35317 7 7 7.35537 7 7.78947V37.2105C7 37.6446 7.35317 38 7.7931 38H29.3103C29.7503 38 30.1034 37.6446 30.1034 37.2105V7.78947C30.1034 7.35537 29.7503 7 29.3103 7H7.7931ZM5 7.78947C5 6.24698 6.25243 5 7.7931 5H29.3103C30.851 5 32.1034 6.24698 32.1034 7.78947V37.2105C32.1034 38.753 30.851 40 29.3103 40H7.7931C6.25243 40 5 38.753 5 37.2105V7.78947Z\"/></svg>`}),$=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color}\" d=\"M16.8237 23.1763C14.3482 20.7007 14.3263 16.9472 16.4857 14.7878L26.6754 4.59811C28.8347 2.43876 32.5883 2.46064 35.0638 4.93617C37.5394 7.4117 37.5612 11.1653 35.4019 13.3246L30.307 18.4195C29.7163 19.0102 29.7163 19.9681 30.307 20.5588C30.8978 21.1496 31.8556 21.1496 32.4464 20.5588L37.5412 15.464C41.0095 11.9957 40.7287 6.32234 37.2032 2.79683C33.6777 -0.728682 28.0043 -1.00951 24.536 2.45877L14.3463 12.6485C10.8781 16.1168 11.1589 21.7901 14.6844 25.3156C15.2752 25.9064 16.233 25.9064 16.8237 25.3156C17.4145 24.7249 17.4145 23.767 16.8237 23.1763Z\"/><path fill=\"${l.color}\" d=\"M23.1763 16.8243C25.6518 19.2998 25.6737 23.0534 23.5143 25.2127L13.3246 35.4025C11.1653 37.5618 7.4117 37.5399 4.93618 35.0644C2.46065 32.5889 2.43876 28.8353 4.59811 26.676L9.69297 21.5811C10.2837 20.9903 10.2837 20.0325 9.69298 19.4418C9.10221 18.851 8.14439 18.851 7.55363 19.4418L2.45877 24.5366C-1.00951 28.0049 -0.728681 33.6782 2.79683 37.2037C6.32234 40.7293 11.9957 41.0101 15.464 37.5418L25.6537 27.3521C29.122 23.8838 28.8411 18.2105 25.3156 14.685C24.7249 14.0942 23.767 14.0942 23.1763 14.685C22.5855 15.2757 22.5855 16.2335 23.1763 16.8243Z\"/></svg>`}),m=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color}\" d=\"M4.44458 4C3.8923 4 3.44458 4.44772 3.44458 5C3.44458 5.55228 3.8923 6 4.44458 6H35.5557C36.108 6 36.5557 5.55228 36.5557 5C36.5557 4.44772 36.108 4 35.5557 4H4.44458Z\"/><path fill=\"${l.color2}\" d=\"M4 22C3.44772 22 3 22.4477 3 23C3 23.5523 3.44772 24 4 24H36C36.5523 24 37 23.5523 37 23C37 22.4477 36.5523 22 36 22H4Z\"/><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3 0C1.34315 0 0 1.34315 0 3V25C0 26.6569 1.34314 28 3 28H17V38H10.4546C9.90231 38 9.45459 38.4477 9.45459 39C9.45459 39.5523 9.90231 40 10.4546 40H29.5455C30.0978 40 30.5455 39.5523 30.5455 39C30.5455 38.4477 30.0978 38 29.5455 38H22.8V28H37C38.6569 28 40 26.6569 40 25V3C40 1.34315 38.6569 0 37 0H3ZM20.8 28H19V38H20.8V28ZM2 3C2 2.44772 2.44772 2 3 2H37C37.5523 2 38 2.44771 38 3V25C38 25.5523 37.5523 26 37 26H3C2.44771 26 2 25.5523 2 25V3Z\"/></svg>`}),x=()=>({getDefaultIconProps:()=>({width:\"30\",height:\"30\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 30 30\" fill=\"none\"><g clip-path=\"url(#clip0_5334_50802)\"><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11.1045 17C14.1421 17 16.6045 14.5376 16.6045 11.5C16.6045 8.46243 14.1421 6 11.1045 6C8.06692 6 5.60449 8.46243 5.60449 11.5C5.60449 14.5376 8.06692 17 11.1045 17ZM11.1045 13.5403C12.2313 13.5403 13.1448 12.6268 13.1448 11.5C13.1448 10.3732 12.2313 9.45968 11.1045 9.45968C9.97765 9.45968 9.06417 10.3732 9.06417 11.5C9.06417 12.6268 9.97765 13.5403 11.1045 13.5403Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.875 13.5C22.5674 13.5 24.75 11.3174 24.75 8.625C24.75 5.93261 22.5674 3.75 19.875 3.75C17.1826 3.75 15 5.93261 15 8.625C15 11.3174 17.1826 13.5 19.875 13.5ZM19.875 10.4335C20.8738 10.4335 21.6835 9.6238 21.6835 8.625C21.6835 7.6262 20.8738 6.81653 19.875 6.81653C18.8762 6.81653 18.0665 7.6262 18.0665 8.625C18.0665 9.6238 18.8762 10.4335 19.875 10.4335Z\"/><rect x=\"0.75\" y=\"0.75\" width=\"28.5\" height=\"19.5\" rx=\"2\" stroke=\"${l.color2}\" stroke-width=\"2\"/><path d=\"M7.84091 29.25H22.1591\" stroke=\"${l.color2}\" stroke-width=\"2\" stroke-linecap=\"round\"/><path d=\"M13.5 28.875V21.375\" stroke=\"${l.color2}\" stroke-width=\"2\" stroke-linecap=\"square\"/><path d=\"M16.3496 28.875V21.375\" stroke=\"${l.color2}\" stroke-width=\"2\" stroke-linecap=\"square\"/></g><defs><clipPath id=\"clip0_5334_50802\"><rect width=\"30\" height=\"30\" fill=\"white\"/></clipPath></defs></svg>`}),k=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.width}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color}\" d=\"M15 0C13.3431 0 12 1.34315 12 3V7H14V3C14 2.44772 14.4477 2 15 2H25C25.5523 2 26 2.44772 26 3V7H28V3C28 1.34315 26.6569 0 25 0H15Z\"/><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 11C0 9.34315 1.34315 8 3 8H37C38.6569 8 40 9.34315 40 11V37C40 38.6569 38.6569 40 37 40H3C1.34314 40 0 38.6569 0 37V11ZM3 10C2.44772 10 2 10.4477 2 11V37C2 37.5523 2.44771 38 3 38H37C37.5523 38 38 37.5523 38 37V11C38 10.4477 37.5523 10 37 10H3Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22 22V17H18V22H13V26H18V31H22V26H27V22H22ZM16 20H12C11.4477 20 11 20.4477 11 21V27C11 27.5523 11.4477 28 12 28H16V32C16 32.5523 16.4477 33 17 33H23C23.5523 33 24 32.5523 24 32V28H28C28.5523 28 29 27.5523 29 27V21C29 20.4477 28.5523 20 28 20H24V16C24 15.4477 23.5523 15 23 15H17C16.4477 15 16 15.4477 16 16V20Z\"/></svg>`}),b=()=>({getDefaultIconProps:()=>({width:\"39\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.width}\" viewBox=\"0 0 39 40\" fill=\"none\"><path fill=\"${l.color}\" d=\"M1.66667 13.3333C0.746192 13.3333 0 14.0795 0 15C0 15.9205 0.746192 16.6667 1.66667 16.6667H37.2222C38.1427 16.6667 38.8889 15.9205 38.8889 15C38.8889 14.0795 38.1427 13.3333 37.2222 13.3333H1.66667Z\"/><path fill=\"${l.color}\" d=\"M1.66667 23.3333C0.746192 23.3333 0 24.0795 0 25C0 25.9205 0.746192 26.6667 1.66667 26.6667H37.2222C38.1427 26.6667 38.8889 25.9205 38.8889 25C38.8889 24.0795 38.1427 23.3333 37.2222 23.3333H1.66667Z\"/><path fill=\"${l.color2}\" d=\"M20.2301 0.325437C19.7962 -0.108479 19.0927 -0.108479 18.6588 0.325437L14.2143 4.76988C13.7804 5.2038 13.7804 5.90731 14.2143 6.34123C14.6482 6.77515 15.3518 6.77515 15.7857 6.34123L19.4444 2.68246L23.1032 6.34123C23.5371 6.77515 24.2407 6.77515 24.6746 6.34123C25.1085 5.90731 25.1085 5.2038 24.6746 4.76988L20.2301 0.325437Z\"/><path fill=\"${l.color2}\" d=\"M14.2143 35.2301L18.6588 39.6746C19.0927 40.1085 19.7962 40.1085 20.2301 39.6746L24.6746 35.2301C25.1085 34.7962 25.1085 34.0927 24.6746 33.6588C24.2406 33.2249 23.5371 33.2249 23.1032 33.6588L19.4444 37.3175L15.7857 33.6588C15.3518 33.2249 14.6482 33.2249 14.2143 33.6588C13.7804 34.0927 13.7804 34.7962 14.2143 35.2301Z\"/></svg>`}),_=()=>({getDefaultIconProps:()=>({width:\"31\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 31 40\" fill=\"none\"><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.1551 13.6929C14.7315 10.5156 11.4535 8.36695 8.6469 9.48358C7.16035 10.075 6.0203 11.1166 5.36331 12.1604C5.035 12.6819 4.84551 13.175 4.77699 13.5832C4.70765 13.9963 4.77065 14.2565 4.85271 14.3991C4.87492 14.4377 4.89218 14.4602 4.90272 14.4722C4.90241 14.4722 4.90301 14.4722 4.90272 14.4722C5.01516 14.482 5.17343 14.4485 5.57955 14.3481C5.5888 14.3458 5.59828 14.3434 5.60798 14.341C5.91812 14.2641 6.4572 14.1305 6.99847 14.236C7.68077 14.369 8.1899 14.8242 8.505 15.521C8.8472 16.2777 8.81466 17.0152 8.43067 17.6576C8.10085 18.2093 7.56126 18.5986 7.11721 18.883C6.89248 19.0268 6.6541 19.1665 6.43158 19.2969L6.40253 19.314C6.16519 19.4531 5.94265 19.584 5.73053 19.7205C5.29787 19.9987 4.98428 20.2534 4.78593 20.5178C4.45449 20.9595 3.82767 21.049 3.3859 20.7175C2.94413 20.3861 2.85469 19.7593 3.18614 19.3175C3.59994 18.766 4.15304 18.3571 4.64869 18.0383C4.90072 17.8762 5.15773 17.7253 5.39122 17.5885L5.4057 17.58C5.63989 17.4427 5.84796 17.3208 6.03877 17.1986C6.45329 16.9332 6.64092 16.7536 6.71403 16.6313C6.71547 16.6289 6.71706 16.6265 6.71874 16.6239C6.73914 16.5924 6.77175 16.542 6.68268 16.3451C6.64428 16.2601 6.61333 16.2162 6.59717 16.1965C6.53438 16.1909 6.40032 16.2054 6.05941 16.2897C6.03496 16.2957 6.00855 16.3024 5.98036 16.3095C5.68803 16.3835 5.20416 16.506 4.73045 16.4648C4.43987 16.4395 4.12691 16.3546 3.82816 16.1628C3.53105 15.972 3.29841 15.7079 3.11936 15.3968C2.73873 14.7356 2.68425 13.969 2.80459 13.2521C2.92575 12.5303 3.23309 11.7902 3.67072 11.0949C4.54561 9.70503 6.01384 8.37869 7.90755 7.62526C12.1252 5.94722 16.5716 9.18398 17.1375 13.4286C17.3639 15.1265 16.9325 16.4543 15.9846 17.6287C15.097 18.7283 13.7556 19.688 12.2383 20.7396C11.7354 21.0881 11.3072 21.5986 10.8786 22.2297C10.6772 22.5262 10.4867 22.8324 10.2875 23.1524C10.2758 23.1712 10.2641 23.19 10.2523 23.2089C10.0451 23.5419 9.82603 23.8921 9.59559 24.2202C9.14611 24.8602 8.56822 25.5453 7.75495 25.9225C6.88436 26.3262 5.90925 26.3064 4.83312 25.8681C4.32164 25.6598 4.07588 25.0763 4.2842 24.5648C4.49253 24.0533 5.07605 23.8075 5.58754 24.0159C6.26814 24.2931 6.65208 24.2293 6.91356 24.1081C7.23237 23.9602 7.55956 23.6394 7.95889 23.0708C8.15285 22.7946 8.34415 22.4898 8.55446 22.152C8.56775 22.1306 8.58111 22.1091 8.59454 22.0875C8.78906 21.7749 8.9994 21.4369 9.2241 21.106C9.70243 20.4017 10.2956 19.6526 11.0991 19.0957C12.6675 18.0088 13.754 17.2079 14.4283 16.3725C15.0422 15.6119 15.3067 14.8305 15.1551 13.6929Z\"/><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14.2041 2.29701C9.572 1.28835 4.40189 2.82418 1.84977 6.9358C1.55851 7.40504 0.942 7.54932 0.472761 7.25806C0.00352237 6.9668 -0.140757 6.35029 0.150504 5.88105C3.25196 0.884429 9.37848 -0.800661 14.6296 0.3428C19.9298 1.49695 24.5934 5.59217 24.5934 12.3505C24.5934 16.8535 22.3101 19.5114 19.9536 21.4012C19.229 21.9823 18.4405 22.5318 17.7328 23.025C17.3454 23.295 16.9822 23.5481 16.667 23.7802C15.6897 24.5 15.0886 25.0721 14.8253 25.6356C14.6529 26.0046 14.4695 26.4885 14.2512 27.0812C14.2207 27.1639 14.1896 27.2485 14.158 27.3347C13.9682 27.8515 13.7572 28.4261 13.5213 29.013C12.9741 30.3744 12.2571 31.8968 11.2334 33.1226C10.1943 34.3668 8.79618 35.3532 6.9188 35.5107C5.07139 35.6657 2.94006 35.0016 0.447438 33.3485C-0.0128256 33.0433 -0.138491 32.4227 0.166756 31.9625C0.472003 31.5022 1.09257 31.3765 1.55284 31.6818C3.8409 33.1992 5.52169 33.6209 6.7516 33.5177C7.95154 33.4171 8.89592 32.8014 9.69834 31.8406C10.5161 30.8614 11.1396 29.5758 11.6656 28.2671C11.8893 27.7107 12.0888 27.1674 12.279 26.6496C12.311 26.5623 12.3428 26.4757 12.3744 26.3899C12.5884 25.8091 12.7995 25.2466 13.0134 24.789C13.5122 23.7214 14.5015 22.8912 15.481 22.1699C15.8854 21.8719 16.2875 21.5925 16.6913 21.312C17.3513 20.8533 18.0157 20.3916 18.7024 19.8409C20.8018 18.1573 22.5934 16.0153 22.5934 12.3505C22.5934 6.72492 18.7871 3.29498 14.2041 2.29701Z\"/><path fill=\"${l.color2}\" d=\"M29.1884 26.2363C29.7406 26.2363 30.1884 26.684 30.1884 27.2363C30.1884 34.2841 24.475 39.9974 17.4272 39.9974C16.875 39.9974 16.4272 39.5497 16.4272 38.9974C16.4272 38.4452 16.875 37.9974 17.4272 37.9974C23.3704 37.9974 28.1884 33.1795 28.1884 27.2363C28.1884 26.684 28.6361 26.2363 29.1884 26.2363Z\"/><path fill=\"${l.color2}\" d=\"M24.7079 26.2363C25.2602 26.2363 25.7079 26.684 25.7079 27.2363C25.7079 31.8096 22.0005 35.517 17.4272 35.517C16.875 35.517 16.4272 35.0693 16.4272 34.517C16.4272 33.9647 16.875 33.517 17.4272 33.517C20.896 33.517 23.7079 30.7051 23.7079 27.2363C23.7079 26.684 24.1556 26.2363 24.7079 26.2363Z\"/><path fill=\"${l.color2}\" d=\"M21.2275 27.2363C21.2275 26.684 20.7798 26.2363 20.2275 26.2363C19.6752 26.2363 19.2275 26.684 19.2275 27.2363C19.2275 28.2306 18.4215 29.0366 17.4272 29.0366C16.875 29.0366 16.4272 29.4843 16.4272 30.0366C16.4272 30.5889 16.875 31.0366 17.4272 31.0366C19.5261 31.0366 21.2275 29.3352 21.2275 27.2363Z\"/></svg>`}),B=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"30\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 30\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 3C0 1.34315 1.34315 0 3 0H36.912C38.5688 0 39.912 1.34315 39.912 3V26.0222C39.912 27.6791 38.5688 29.0222 36.912 29.0222H3C1.34314 29.0222 0 27.6791 0 26.0222V3ZM3 2C2.44772 2 2 2.44772 2 3V26.0222C2 26.5745 2.44771 27.0222 3 27.0222H36.912C37.4643 27.0222 37.912 26.5745 37.912 26.0222V3C37.912 2.44771 37.4643 2 36.912 2H3Z\"/><path fill=\"${l.color}\" d=\"M1.5904 0.739441L19.2676 15.439C19.6382 15.7472 20.1758 15.7472 20.5464 15.439L38.2236 0.739441L39.5024 2.27723L26.5404 13.0558L39.0926 26.7865L37.6164 28.136L25.0009 14.336L21.8251 16.9768C20.7135 17.9013 19.1006 17.9013 17.9889 16.9768L14.8688 14.3823L2.2957 28.136L0.819551 26.7865L13.3293 13.1022L0.311646 2.27723L1.5904 0.739441Z\"/><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.00012207 3.00195C0.00012207 1.3451 1.34327 0.00195312 3.00012 0.00195312H36.9121C38.5689 0.00195312 39.9121 1.3451 39.9121 3.00195V26.0242C39.9121 27.681 38.5689 29.0242 36.9121 29.0242H3.00012C1.34327 29.0242 0.00012207 27.681 0.00012207 26.0242V3.00195ZM3.00012 2.00195C2.44784 2.00195 2.00012 2.44967 2.00012 3.00195V26.0242C2.00012 26.5765 2.44784 27.0242 3.00012 27.0242H36.9121C37.4644 27.0242 37.9121 26.5765 37.9121 26.0242V3.00195C37.9121 2.44967 37.4644 2.00195 36.9121 2.00195H3.00012Z\"/></svg>`}),D=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color}\" d=\"M4.18517 31.7221L8.36187 35.8988L9.77608 34.4846L5.59939 30.3079L4.18517 31.7221Z\"/><path fill=\"${l.color}\" d=\"M24.1669 11.7404L28.3436 15.917L29.7578 14.5028L25.5811 10.3261L24.1669 11.7404Z\"/><path fill=\"${l.color}\" d=\"M26.5878 9.31945L30.7645 13.4962L32.1787 12.0819L28.002 7.90524L26.5878 9.31945Z\"/><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.24331 30.8356L31.8383 1.24062C33.258 -0.179164 35.56 -0.179164 36.9797 1.24062L38.8434 3.10425C40.2632 4.52404 40.2632 6.82596 38.8434 8.24574L9.24843 37.8407L0.526367 39.5576L2.24331 30.8356ZM4.08805 31.8192L3.06435 37.0196L8.26475 35.9959L37.4292 6.83153C38.0679 6.19279 38.0679 5.1572 37.4292 4.51847L35.5655 2.65483C34.9268 2.0161 33.8912 2.0161 33.2525 2.65483L4.08805 31.8192Z\"/></svg>`}),P=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 22 21\" fill=\"none\"><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.7148 0.294795L13.3448 0L13.2133 0.00290097C12.6951 0.0468076 12.2785 0.470821 12.2572 1.00397L12.2601 1.13548C12.304 1.65373 12.728 2.07029 13.2611 2.09161L17.2765 2.25145L12.0724 7.45698L11.9911 7.54827C11.6658 7.9591 11.6929 8.55761 12.0724 8.93715C12.4812 9.3459 13.1439 9.34589 13.5526 8.93715L18.7582 3.73014L18.918 7.74844L18.9314 7.8793C19.0165 8.39238 19.4725 8.77374 20.0056 8.75241C20.5832 8.72931 21.0327 8.24236 21.0096 7.66477L20.7148 0.294795ZM9.48647 11.5231C9.10693 11.1436 8.50841 11.1165 8.09759 11.4418L8.00629 11.5231L2.80076 16.7286L2.64093 12.7118L2.62913 12.5909C2.55492 12.1157 2.16318 11.7513 1.6848 11.7108L1.55329 11.7079L1.43232 11.7197C0.957154 11.7939 0.592747 12.1856 0.552217 12.664L0.549316 12.7955L0.844112 20.1655L8.21409 20.4603L8.33633 20.4581C8.85887 20.4185 9.28028 19.9926 9.30173 19.4563C9.32305 18.9231 8.94169 18.4672 8.42861 18.382L8.29775 18.3687L4.28094 18.2088L9.48647 13.0033L9.57354 12.9047C9.89279 12.4941 9.86377 11.9004 9.48647 11.5231Z\"/></svg>`}),I=()=>({getDefaultIconProps:()=>({width:\"41\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 41 40\" fill=\"none\"><path fill=\"${l.color}\" d=\"M0.5 20C0.5 8.95431 9.45431 0 20.5 0C21.3497 0 22.0385 0.688793 22.0385 1.53846C22.0385 2.38813 21.3497 3.07692 20.5 3.07692C11.1536 3.07692 3.57692 10.6536 3.57692 20C3.57692 29.3464 11.1536 36.9231 20.5 36.9231C29.8464 36.9231 37.4231 29.3464 37.4231 20C37.4231 19.1503 38.1119 18.4615 38.9615 18.4615C39.8112 18.4615 40.5 19.1503 40.5 20C40.5 31.0457 31.5457 40 20.5 40C9.45431 40 0.5 31.0457 0.5 20Z\"/><path fill=\"${l.color}\" d=\"M39.9908 0.51282L39.9908 8.20513C39.9908 9.0548 39.302 9.74359 38.4523 9.74359C37.6027 9.74359 36.9139 9.0548 36.9139 8.20513V5.89124L21.8884 20.9167C21.2876 21.5175 20.3135 21.5175 19.7127 20.9167C19.1119 20.3159 19.1119 19.3418 19.7127 18.741L34.8639 3.58974L32.295 3.58974C31.4453 3.58974 30.7565 2.90095 30.7565 2.05128C30.7565 1.20161 31.4453 0.51282 32.295 0.51282L39.9908 0.51282Z\"/></svg>`}),y=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"41\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 41\" fill=\"none\"><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.0007 0.902954C8.95339 0.902954 0 9.85635 0 20.9023C0 31.9482 8.95339 40.903 20.0007 40.903C31.0466 40.903 40 31.9482 40 20.9023C40 9.85635 31.0466 0.902954 20.0007 0.902954Z\"/><path d=\"M22.3949 40.7611V26.6954H27.1295L27.8399 21.1966H22.3949V17.6944C22.3949 16.1054 22.8362 15.0237 25.1127 15.0237H28V10.1182C27.4981 10.051 25.7746 9.90295 23.7699 9.90295C19.5843 9.90295 16.7185 12.4579 16.7185 17.1495V21.1966H12V26.6954H16.7185V40.635C17.7864 40.8113 18.8828 40.903 20.0007 40.903C20.8109 40.903 21.6099 40.8548 22.3949 40.7611Z\" fill=\"white\"/></svg>`}),U=()=>({getDefaultIconProps:()=>({width:\"37\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 37 40\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.25 2C8.69771 2 8.25 2.44772 8.25 3V7C8.25 7.55228 7.80228 8 7.25 8C6.69772 8 6.25 7.55228 6.25 7V3C6.25 1.34315 7.59315 0 9.25 0H33.25C34.9069 0 36.25 1.34315 36.25 3V37C36.25 38.6569 34.9069 40 33.25 40H9.25C7.59315 40 6.25 38.6569 6.25 37V33C6.25 32.4477 6.69772 32 7.25 32C7.80228 32 8.25 32.4477 8.25 33V37C8.25 37.5523 8.69771 38 9.25 38H33.25C33.8023 38 34.25 37.5523 34.25 37V3C34.25 2.44772 33.8023 2 33.25 2H9.25Z\"/><path fill=\"${l.color}\" d=\"M2.25 30C1.14543 30 0.25 29.1046 0.25 28V12C0.25 10.8954 1.14543 10 2.25 10H28.25C29.3546 10 30.25 10.8954 30.25 12V28C30.25 29.1046 29.3546 30 28.25 30H2.25Z\"/><path d=\"M6.25 17.4805C7.35457 17.4805 8.25 16.585 8.25 15.4805C8.25 14.3759 7.35457 13.4805 6.25 13.4805C5.14543 13.4805 4.25 14.3759 4.25 15.4805C4.25 16.585 5.14543 17.4805 6.25 17.4805Z\" fill=\"white\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M26.7217 26.165L17.9785 14.1272L12.8357 21.4055L10.1631 17.7282L3.73584 26.165H26.7217ZM12.8529 23.9806L17.9953 16.7028L23.7784 24.665H6.76425L10.1348 20.2406L12.8529 23.9806Z\" fill=\"white\"/></svg>`}),z=()=>({getDefaultIconProps:()=>({width:\"36\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 36 40\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.99994 2C8.44765 2 7.99994 2.44772 7.99994 3V7C7.99994 7.55228 7.55222 8 6.99994 8C6.44765 8 5.99994 7.55228 5.99994 7V3C5.99994 1.34315 7.34308 0 8.99994 0H32.9999C34.6568 0 35.9999 1.34315 35.9999 3V37C35.9999 38.6569 34.6568 40 32.9999 40H8.99994C7.34308 40 5.99994 38.6569 5.99994 37V33C5.99994 32.4477 6.44765 32 6.99994 32C7.55222 32 7.99994 32.4477 7.99994 33V37C7.99994 37.5523 8.44765 38 8.99994 38H32.9999C33.5522 38 33.9999 37.5523 33.9999 37V3C33.9999 2.44772 33.5522 2 32.9999 2H8.99994Z\"/><path fill=\"${l.color}\" d=\"M1.99994 30C0.895369 30 -6.10352e-05 29.1046 -6.10352e-05 28V12C-6.10352e-05 10.8954 0.89537 10 1.99994 10H27.9999C29.1045 10 29.9999 10.8954 29.9999 12V28C29.9999 29.1046 29.1045 30 27.9999 30H1.99994Z\"/></svg>`}),O=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color2}\" d=\"M35 0.25C36.4625 0.25 37.6584 1.3917 37.745 2.83248L37.75 3V37C37.75 38.4625 36.6083 39.6584 35.1675 39.745L35 39.75H11C9.53747 39.75 8.3416 38.6083 8.25502 37.1675L8.25 37V33C8.25 32.5858 8.58579 32.25 9 32.25C9.3797 32.25 9.69349 32.5322 9.74315 32.8982L9.75 33V37C9.75 37.6472 10.2419 38.1795 10.8722 38.2435L11 38.25H35C35.6472 38.25 36.1795 37.7581 36.2435 37.1278L36.25 37V3C36.25 2.35279 35.7581 1.82047 35.1278 1.75645L35 1.75H11C10.3528 1.75 9.82047 2.24187 9.75645 2.87219L9.75 3V7C9.75 7.41421 9.41421 7.75 9 7.75C8.6203 7.75 8.30651 7.46785 8.25685 7.10177L8.25 7V3C8.25 1.53747 9.3917 0.341596 10.8325 0.255019L11 0.25H35Z\"/><rect fill=\"${l.color}\" x=\"3\" y=\"30\" width=\"20\" height=\"30\" rx=\"2\" transform=\"rotate(-90 3 30)\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M28.0664 21.6991C28.0626 23.0698 26.9805 24 25.1162 24C23.3051 24 22.1546 23.1305 22.0977 21.5852H23.4835C23.5405 22.4015 24.2239 22.7964 25.1048 22.7964C26.0237 22.7964 26.6539 22.3522 26.6577 21.6877C26.6539 21.084 26.0996 20.822 25.2605 20.6094L24.3758 20.3816C23.0963 20.0513 22.3027 19.4096 22.3027 18.2933C22.2989 16.9188 23.5253 16 25.158 16C26.8134 16 27.9335 16.9302 27.9601 18.2439H26.6046C26.5324 17.5833 25.9781 17.1922 25.139 17.1922C24.2581 17.1922 23.7341 17.6213 23.7303 18.206C23.7227 18.8552 24.4138 19.1248 25.0517 19.2767L25.7807 19.4589C26.9501 19.7361 28.0626 20.3512 28.0664 21.6991ZM9.67187 24.1094L11.4531 21.1992H11.5156L13.2969 24.1094H14.9766L12.4727 20.1094L14.9375 16.1094H13.2852L11.5156 19.0391H11.4531L9.6914 16.1094H8.03125L10.5273 20.1094L8 24.1094H9.67187ZM21.0469 24.1094V22.8945H17.5234V16.1094H16.0742V24.1094H21.0469Z\" fill=\"white\"/></svg>`}),S=()=>({getDefaultIconProps:()=>({width:\"37\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 37 40\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.5 2C8.94771 2 8.5 2.44772 8.5 3V7C8.5 7.55228 8.05228 8 7.5 8C6.94772 8 6.5 7.55228 6.5 7V3C6.5 1.34315 7.84315 0 9.5 0H33.5C35.1569 0 36.5 1.34315 36.5 3V37C36.5 38.6569 35.1569 40 33.5 40H9.5C7.84315 40 6.5 38.6569 6.5 37V33C6.5 32.4477 6.94772 32 7.5 32C8.05228 32 8.5 32.4477 8.5 33V37C8.5 37.5523 8.94771 38 9.5 38H33.5C34.0523 38 34.5 37.5523 34.5 37V3C34.5 2.44772 34.0523 2 33.5 2H9.5Z\"/><path fill=\"${l.color}\" d=\"M2.5 30C1.39543 30 0.5 29.1046 0.5 28V12C0.5 10.8954 1.39543 10 2.5 10H28.5C29.6046 10 30.5 10.8954 30.5 12V28C30.5 29.1046 29.6046 30 28.5 30H2.5Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.94922 24V21.2969H8.48047C10.3281 21.2969 11.3203 20.1875 11.3203 18.6484C11.3203 17.1211 10.3398 16 8.5 16H5.5V24H6.94922ZM8.28515 20.1055H6.94922V17.2109H8.27734C9.36328 17.2109 9.84375 17.7969 9.84375 18.6484C9.84375 19.5 9.36328 20.1055 8.28515 20.1055ZM19.1719 19.9922C19.1719 22.4922 17.7266 24 15.2891 24H12.5781V16H15.3437C17.7266 16 19.1719 17.5 19.1719 19.9922ZM15.2187 22.7461H14.0273V17.2539H15.2617C16.8867 17.2539 17.7344 18.1602 17.7344 19.9922C17.7344 21.832 16.8867 22.7461 15.2187 22.7461ZM21.9961 20.6016V24H20.5469V16H25.6719V17.2148H21.9961V19.3867H25.3203V20.6016H21.9961Z\" fill=\"white\"/></svg>`}),A=()=>({getDefaultIconProps:()=>({width:\"36\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 36 40\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9 2C8.44771 2 8 2.44772 8 3V7C8 7.55228 7.55228 8 7 8C6.44772 8 6 7.55228 6 7V3C6 1.34315 7.34315 0 9 0H33C34.6569 0 36 1.34315 36 3V37C36 38.6569 34.6569 40 33 40H9C7.34315 40 6 38.6569 6 37V33C6 32.4477 6.44772 32 7 32C7.55228 32 8 32.4477 8 33V37C8 37.5523 8.44771 38 9 38H33C33.5523 38 34 37.5523 34 37V3C34 2.44772 33.5523 2 33 2H9Z\"/><path fill=\"${l.color}\" d=\"M2 30C0.89543 30 0 29.1046 0 28V12C0 10.8954 0.895431 10 2 10H28C29.1046 10 30 10.8954 30 12V28C30 29.1046 29.1046 30 28 30H2Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.44922 24V21.2969H7.98047C9.82812 21.2969 10.8203 20.1875 10.8203 18.6484C10.8203 17.1211 9.83984 16 8 16H5V24H6.44922ZM7.78515 20.1055H6.44922V17.2109H7.77734C8.86328 17.2109 9.34375 17.7969 9.34375 18.6484C9.34375 19.5 8.86328 20.1055 7.78515 20.1055ZM13.5273 21.2969V24H12.0781V16H15.0781C16.918 16 17.8984 17.1211 17.8984 18.6484C17.8984 20.1875 16.9062 21.2969 15.0586 21.2969H13.5273ZM14.8633 20.1055H13.5273V17.2109H14.8555C15.9414 17.2109 16.4219 17.7969 16.4219 18.6484C16.4219 19.5 15.9414 20.1055 14.8633 20.1055ZM22.7148 17.2148V24H21.2773V17.2148H18.8047V16H25.1875V17.2148H22.7148Z\" fill=\"white\"/></svg>`}),F=()=>({getDefaultIconProps:()=>({width:\"36\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 36 40\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9 2C8.44771 2 8 2.44772 8 3V7C8 7.55228 7.55228 8 7 8C6.44772 8 6 7.55228 6 7V3C6 1.34315 7.34315 0 9 0H33C34.6569 0 36 1.34315 36 3V37C36 38.6569 34.6569 40 33 40H9C7.34315 40 6 38.6569 6 37V33C6 32.4477 6.44772 32 7 32C7.55228 32 8 32.4477 8 33V37C8 37.5523 8.44771 38 9 38H33C33.5523 38 34 37.5523 34 37V3C34 2.44772 33.5523 2 33 2H9Z\"/><path fill=\"${l.color}\" d=\"M2 30C0.89543 30 0 29.1046 0 28V12C0 10.8954 0.895431 10 2 10H28C29.1046 10 30 10.8954 30 12V28C30 29.1046 29.1046 30 28 30H2Z\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M18.7148 20C18.7148 22.5171 17.1787 24 15.1369 24C13.0913 24 11.5589 22.5133 11.5589 20C11.5589 17.4829 13.0913 16 15.1369 16C17.1787 16 18.7148 17.4829 18.7148 20ZM6.63878 23.8935C9.01141 23.8935 10.4183 22.4259 10.4183 19.9924C10.4183 17.5665 9.01141 16.1065 6.69202 16.1065H4V23.8935H6.63878ZM6.57034 22.673H5.41065V17.327H6.61217C8.19392 17.327 9.01901 18.2091 9.01901 19.9924C9.01901 21.7833 8.19392 22.673 6.57034 22.673ZM15.1369 22.7338C13.8707 22.7338 12.9772 21.7719 12.9772 20C12.9772 18.2281 13.8707 17.2662 15.1369 17.2662C16.4069 17.2662 17.2966 18.2281 17.2966 20C17.2966 21.7719 16.4069 22.7338 15.1369 22.7338ZM26.7186 21.3156C26.5019 22.8023 25.2738 24 23.4221 24C21.3688 24 19.8555 22.5133 19.8555 20C19.8555 17.4829 21.3878 16 23.4221 16C25.1483 16 26.4791 17.0038 26.7186 18.7338H25.2966C25.1331 17.8023 24.3916 17.2662 23.4449 17.2662C22.1711 17.2662 21.2738 18.2433 21.2738 20C21.2738 21.7871 22.1787 22.7338 23.4411 22.7338C24.3726 22.7338 25.1179 22.2205 25.2966 21.308L26.7186 21.3156Z\" fill=\"white\"/></svg>`}),G=()=>({getDefaultIconProps:()=>({width:\"32\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 32 40\" fill=\"none\"><path fill=\"${l.color2}\" d=\"M24.9055 23.4242C25.1398 22.9241 24.9243 22.3288 24.4242 22.0944C23.9241 21.8601 23.3287 22.0756 23.0944 22.5757C22.3241 24.2199 21.1645 25.9614 19.6832 27.7514C18.6676 28.9787 17.5759 30.1375 16.4819 31.191L16.0344 31.6156L15.9997 31.6476L15.9649 31.6156L15.5174 31.191C14.4235 30.1375 13.3317 28.9787 12.3161 27.7514C10.8351 25.9617 9.67576 24.2207 8.90545 22.5768C8.67111 22.0767 8.07572 21.8612 7.57562 22.0956C7.07552 22.3299 6.86008 22.9253 7.09442 23.4254C7.95665 25.2655 9.22196 27.1494 10.7753 29.0265C11.8452 30.3194 12.9902 31.5341 14.1328 32.6342L14.5936 33.0714L14.6044 33.0816L15.0292 33.4729L15.3322 33.7446C15.712 34.0851 16.2873 34.0851 16.6672 33.7446L16.9602 33.482L17.3949 33.0816L17.4058 33.0714L17.8613 32.6392L17.8665 32.6342C19.0091 31.5341 20.1542 30.3194 21.2241 29.0265C22.7777 27.149 24.0432 25.2647 24.9055 23.4242Z\"/><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.9999 0C7.20399 0 -6.10352e-05 6.95258 -6.10352e-05 15.5561C-6.10352e-05 16.8017 0.183647 18.0878 0.53278 19.406C1.62168 23.5173 4.28393 27.8774 7.94867 32.2301C9.68229 34.2892 11.5391 36.2253 13.3933 37.9799C14.0422 38.594 14.6456 39.1426 15.188 39.6184C15.2424 39.6662 15.2942 39.7114 15.3433 39.7542C15.7197 40.0819 16.2802 40.0819 16.6566 39.7542C16.7057 39.7114 16.7575 39.6662 16.8119 39.6184C17.3543 39.1426 17.9577 38.594 18.6066 37.9799C20.4608 36.2253 22.3176 34.2892 24.0512 32.2301C27.716 27.8774 30.3782 23.5173 31.4671 19.406C31.8162 18.0878 31.9999 16.8017 31.9999 15.5561C31.9999 7.07725 24.5907 0 15.9999 0ZM1.99994 15.5561C1.99994 8.11301 8.25186 2 15.9999 2C23.549 2 29.9999 8.24367 29.9999 15.5561C29.9999 16.6051 29.8452 17.7182 29.5338 18.894C28.5521 22.6005 26.096 26.6962 22.5213 30.942C20.8419 32.9366 19.038 34.8181 17.2319 36.5272C16.7975 36.9384 16.3851 37.3182 15.9999 37.6646C15.6148 37.3182 15.2024 36.9384 14.768 36.5272C12.9619 34.8181 11.158 32.9366 9.47861 30.942C5.90384 26.6962 3.44781 22.6005 2.46612 18.894C2.15471 17.7182 1.99994 16.6051 1.99994 15.5561Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.9999 8.38889C12.9999 7.8366 13.4476 7.38889 13.9999 7.38889H17.9999C18.5522 7.38889 18.9999 7.8366 18.9999 8.38889V11.3889H21.9999C22.5522 11.3889 22.9999 11.8366 22.9999 12.3889V16.3889C22.9999 16.9412 22.5522 17.3889 21.9999 17.3889H18.9999V20.3889C18.9999 20.9412 18.5522 21.3889 17.9999 21.3889H13.9999C13.4476 21.3889 12.9999 20.9412 12.9999 20.3889V17.3889H9.99993C9.44764 17.3889 8.99993 16.9412 8.99993 16.3889V12.3889C8.99993 11.8366 9.44764 11.3889 9.99993 11.3889H12.9999V8.38889ZM14.9999 9.38889V12.3889C14.9999 12.9412 14.5522 13.3889 13.9999 13.3889H10.9999V15.3889H13.9999C14.5522 15.3889 14.9999 15.8366 14.9999 16.3889V19.3889H16.9999V16.3889C16.9999 15.8366 17.4476 15.3889 17.9999 15.3889H20.9999V13.3889H17.9999C17.4476 13.3889 16.9999 12.9412 16.9999 12.3889V9.38889H14.9999Z\"/></svg>`}),E=()=>({getDefaultIconProps:()=>({width:\"32\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 32 40\" fill=\"none\"><path fill=\"${l.color2}\" d=\"M24.9055 23.4242C25.1398 22.9241 24.9243 22.3288 24.4242 22.0944C23.9241 21.8601 23.3287 22.0756 23.0944 22.5757C22.3241 24.2199 21.1645 25.9614 19.6832 27.7514C18.6676 28.9787 17.5759 30.1375 16.4819 31.191L16.0344 31.6156L15.9997 31.6476L15.9649 31.6156L15.5174 31.191C14.4235 30.1375 13.3317 28.9787 12.3161 27.7514C10.8351 25.9617 9.67576 24.2207 8.90545 22.5768C8.67111 22.0767 8.07572 21.8612 7.57562 22.0956C7.07552 22.3299 6.86008 22.9253 7.09442 23.4254C7.95665 25.2655 9.22196 27.1494 10.7753 29.0265C11.8452 30.3194 12.9902 31.5341 14.1328 32.6342L14.5936 33.0714L14.6044 33.0816L15.0292 33.4729L15.3322 33.7446C15.712 34.0851 16.2873 34.0851 16.6672 33.7446L16.9602 33.482L17.3949 33.0816L17.4058 33.0714L17.8613 32.6392L17.8665 32.6342C19.0091 31.5341 20.1542 30.3194 21.2241 29.0265C22.7777 27.149 24.0432 25.2647 24.9055 23.4242Z\"/><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.9999 0C7.20399 0 -6.10352e-05 6.95258 -6.10352e-05 15.5561C-6.10352e-05 16.8017 0.183647 18.0878 0.53278 19.406C1.62168 23.5173 4.28393 27.8774 7.94867 32.2301C9.68229 34.2892 11.5391 36.2253 13.3933 37.9799C14.0422 38.594 14.6456 39.1426 15.188 39.6184C15.2424 39.6662 15.2942 39.7114 15.3433 39.7542C15.7197 40.0819 16.2802 40.0819 16.6566 39.7542C16.7057 39.7114 16.7575 39.6662 16.8119 39.6184C17.3543 39.1426 17.9577 38.594 18.6066 37.9799C20.4608 36.2253 22.3176 34.2892 24.0512 32.2301C27.716 27.8774 30.3782 23.5173 31.4671 19.406C31.8162 18.0878 31.9999 16.8017 31.9999 15.5561C31.9999 7.07725 24.5907 0 15.9999 0ZM1.99994 15.5561C1.99994 8.11301 8.25186 2 15.9999 2C23.549 2 29.9999 8.24367 29.9999 15.5561C29.9999 16.6051 29.8452 17.7182 29.5338 18.894C28.5521 22.6005 26.096 26.6962 22.5213 30.942C20.8419 32.9366 19.038 34.8181 17.2319 36.5272C16.7975 36.9384 16.3851 37.3182 15.9999 37.6646C15.6148 37.3182 15.2024 36.9384 14.768 36.5272C12.9619 34.8181 11.158 32.9366 9.47861 30.942C5.90384 26.6962 3.44781 22.6005 2.46612 18.894C2.15471 17.7182 1.99994 16.6051 1.99994 15.5561Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.9999 10C13.7908 10 11.9999 11.7909 11.9999 14C11.9999 16.2091 13.7908 18 15.9999 18C18.2091 18 19.9999 16.2091 19.9999 14C19.9999 11.7909 18.2091 10 15.9999 10ZM9.99994 14C9.99994 10.6863 12.6862 8 15.9999 8C19.3136 8 21.9999 10.6863 21.9999 14C21.9999 17.3137 19.3136 20 15.9999 20C12.6862 20 9.99994 17.3137 9.99994 14Z\"/></svg>`}),q=()=>({getDefaultIconProps:()=>({width:\"38\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 38 40\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.7554 2.28588C19.3665 1.90471 18.7442 1.90471 18.3553 2.28588L2.50402 17.8243H6.05536V37.514C6.05536 37.5589 6.07358 37.624 6.15147 37.6932C6.23119 37.7641 6.3618 37.8243 6.52905 37.8243H13.6343V27.9623C13.6343 26.5791 14.8555 25.6519 16.108 25.6519H22.0191L22.1618 25.6566L22.1782 25.6577C23.3599 25.7352 24.4764 26.6441 24.4764 27.9623V37.8243H31.5817C31.7489 37.8243 31.8795 37.7641 31.9593 37.6932C32.0371 37.624 32.0554 37.5589 32.0554 37.514V17.8243H35.6067L19.7554 2.28588ZM16.9553 0.857643C18.1218 -0.285881 19.9889 -0.285881 21.1554 0.857643L37.0068 16.3961C38.2861 17.6502 37.3981 19.8243 35.6067 19.8243H34.0554V37.514C34.0554 38.8972 32.8342 39.8243 31.5817 39.8243H22.4764V27.9623C22.4764 27.9187 22.4596 27.8583 22.3906 27.7925C22.3212 27.7264 22.2077 27.6669 22.0599 27.6543L21.9864 27.6519H16.108C15.9407 27.6519 15.8101 27.7122 15.7304 27.783C15.6525 27.8523 15.6343 27.9174 15.6343 27.9623V39.8243H6.52905C5.27654 39.8243 4.05536 38.8972 4.05536 37.514V19.8243H2.50402C0.712582 19.8243 -0.17533 17.6502 1.10397 16.3961L16.9553 0.857643Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.5 6.63458L9.18577 16.3528C8.7838 16.7316 8.15092 16.7127 7.77218 16.3108C7.39344 15.9088 7.41227 15.2759 7.81423 14.8972L18.2249 5.08806L18.2479 5.06887C18.9566 4.47704 20.0434 4.47704 20.7521 5.06887L20.7751 5.08806L31.1858 14.8972C31.5877 15.2759 31.6066 15.9088 31.2278 16.3108C30.8491 16.7127 30.2162 16.7316 29.8142 16.3528L19.5 6.63458Z\"/></svg>`}),T=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"30\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 30\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M40 3C40 1.34315 38.6569 0 37 0H3C1.34314 0 0 1.34315 0 3V27C0 28.6569 1.34314 30 3 30H37C38.6569 30 40 28.6569 40 27V3ZM37 2C37.5523 2 38 2.44772 38 3V27C38 27.5523 37.5523 28 37 28H3C2.44772 28 2 27.5523 2 27V3C2 2.44771 2.44772 2 3 2H37Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M23.5887 9.81459C23.5887 9.53845 23.8125 9.31459 24.0887 9.31459H26.5911C26.8673 9.31459 27.0911 9.53845 27.0911 9.81459V12.4744H27.8418C28.118 12.4744 28.3418 12.6983 28.3418 12.9744C28.3418 13.2506 28.118 13.4744 27.8418 13.4744H26.5911C26.315 13.4744 26.0911 13.2506 26.0911 12.9744V10.3146H24.0887C23.8125 10.3146 23.5887 10.0907 23.5887 9.81459Z\"/><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M27.3682 4.641C30.4932 4.641 33.1992 7.32159 33.1992 10.4949C33.1992 12.1974 32.5075 13.9256 31.4729 15.2291C30.447 16.5215 28.9823 17.5156 27.3682 17.5156C25.5689 17.5156 23.9607 16.6011 22.8209 15.3021C21.6814 14.0034 20.9564 12.2637 20.9564 10.4949C20.9564 7.159 23.8332 4.641 27.3682 4.641ZM31.6992 10.4949C31.6992 8.15041 29.6651 6.141 27.3682 6.141C24.5167 6.141 22.4564 8.12531 22.4564 10.4949C22.4564 11.8652 23.0254 13.2608 23.9484 14.3128C24.871 15.3643 26.0936 16.0156 27.3682 16.0156C28.3587 16.0156 29.4345 15.3844 30.298 14.2966C31.1527 13.2198 31.6992 11.8126 31.6992 10.4949Z\"/><path fill=\"${l.color2}\" d=\"M32.5467 21.0516C31.446 19.989 29.6811 19.4118 26.762 19.4118C24.1356 19.4118 22.5508 19.9693 21.5468 20.9941C20.8279 21.7279 20.4509 22.4523 19.7851 24.7646L19.6011 25.3985L19.6004 25.4011C19.4765 25.8221 19.3686 26.1634 19.2553 26.4903C19.1196 26.8817 18.6924 27.089 18.301 26.9533C17.9096 26.8176 17.7024 26.3904 17.838 25.999C17.9415 25.7007 18.042 25.3834 18.1609 24.9792L18.1613 24.9778L18.3439 24.3488C19.023 21.9904 19.4822 20.9581 20.4753 19.9444C21.8872 18.5033 23.957 17.9118 26.762 17.9118C29.832 17.9118 32.0742 18.5106 33.5885 19.9724C34.6669 21.0134 35.134 22.0305 35.8433 24.4651L35.9933 24.9762L35.9937 24.9775C36.1172 25.3926 36.215 25.7041 36.3174 25.9979C36.4537 26.389 36.2471 26.8166 35.8559 26.9529C35.4648 27.0892 35.0372 26.8826 34.9009 26.4915C34.7875 26.1661 34.6821 25.8294 34.5555 25.4038L34.4032 24.8847C33.7102 22.5057 33.3315 21.8091 32.5467 21.0516Z\"/><path fill=\"${l.color}\" d=\"M17 8.25C17 7.00736 15.9926 6 14.75 6H14V8.25H17Z\"/><path fill=\"${l.color}\" d=\"M9 6V15H13V6H9Z\"/><path fill=\"${l.color}\" d=\"M7.25 6C6.00736 6 5 7.00736 5 8.25H8V6H7.25Z\"/><path fill=\"${l.color}\" d=\"M5 11.625V9.375H8V11.625H5Z\"/><path fill=\"${l.color}\" d=\"M5 12.75C5 13.9926 6.00736 15 7.25 15H8V12.75H5Z\"/><path fill=\"${l.color}\" d=\"M17 9.375V11.625H14V9.375H17Z\"/><path fill=\"${l.color}\" d=\"M14.75 15C15.9926 15 17 13.9926 17 12.75H14V15H14.75Z\"/></svg>`}),j=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"30\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 30\" fill=\"none\"><path fill=\"${l.color2}\" d=\"M37.0978 2C37.458 2 37.75 2.29199 37.75 2.65217V22.4783C37.75 22.8384 37.458 23.1304 37.0978 23.1304H17.2717C16.7195 23.1304 16.2717 23.5781 16.2717 24.1304C16.2717 24.6827 16.7195 25.1304 17.2717 25.1304H37.0978C38.5626 25.1304 39.75 23.943 39.75 22.4783V2.65217C39.75 1.18742 38.5626 0 37.0978 0H9.01087C7.54611 0 6.3587 1.18742 6.3587 2.65217V10.1378C6.3587 10.69 6.80641 11.1378 7.3587 11.1378C7.91098 11.1378 8.3587 10.69 8.3587 10.1378V2.65217C8.3587 2.29199 8.65068 2 9.01087 2H37.0978Z\"/><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M29.1411 3.92725C31.767 3.92725 34.0384 6.17763 34.0384 8.84354C34.0384 10.2705 33.4593 11.7154 32.5949 12.8044C31.7387 13.883 30.5079 14.7237 29.1411 14.7237C27.6266 14.7237 26.2774 13.9541 25.3241 12.8677C24.3713 11.7817 23.764 10.326 23.764 8.84354C23.764 6.03595 26.1843 3.92725 29.1411 3.92725ZM32.6384 8.84354C32.6384 6.9512 30.9942 5.32725 29.1411 5.32725C26.8222 5.32725 25.164 6.93784 25.164 8.84354C25.164 9.95414 25.6256 11.0885 26.3765 11.9443C27.127 12.7997 28.1163 13.3237 29.1411 13.3237C29.9259 13.3237 30.7937 12.8217 31.4983 11.934C32.1947 11.0566 32.6384 9.91144 32.6384 8.84354Z\"/><path fill=\"${l.color2}\" d=\"M33.3631 17.6222C32.476 16.7659 31.0437 16.2901 28.6403 16.2901C26.4803 16.2901 25.1971 16.7489 24.3896 17.5732C23.8104 18.1643 23.5034 18.7462 22.9541 20.6539L22.8021 21.1777L22.8014 21.1802C22.6988 21.5288 22.6093 21.812 22.5151 22.0836C22.3885 22.4488 21.9897 22.6423 21.6245 22.5157C21.2592 22.389 21.0657 21.9903 21.1924 21.625C21.2773 21.3801 21.3599 21.1192 21.4579 20.7862L21.4583 20.785L21.6089 20.2658C22.1707 18.3151 22.5544 17.4458 23.3895 16.5934C24.5777 15.3806 26.3136 14.8901 28.6403 14.8901C31.1845 14.8901 33.0623 15.386 34.3355 16.615C35.2421 17.4901 35.6327 18.3476 36.2195 20.3617L36.3433 20.7835L36.3437 20.7847C36.4455 21.127 36.5259 21.383 36.6098 21.6239C36.7371 21.989 36.5443 22.3881 36.1792 22.5153C35.8141 22.6425 35.415 22.4497 35.2878 22.0846C35.1936 21.8142 35.1061 21.5347 35.0014 21.1826L34.8754 20.7533C34.3038 18.7911 33.9957 18.2328 33.3631 17.6222Z\"/><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11.6075 16.7902C11.6075 14.4786 9.68469 12.6414 7.35881 12.6414C5.03292 12.6414 3.11009 14.4786 3.11009 16.7902V17.8457H2.51744C1.1271 17.8457 0 18.9728 0 20.3631V26.4935C0 27.8838 1.1271 29.0109 2.51744 29.0109H12.1999C13.5903 29.0109 14.7174 27.8838 14.7174 26.4935V20.3631C14.7174 18.9728 13.5903 17.8457 12.1999 17.8457H11.6075V16.7902ZM4.61009 16.7902V17.8457H10.1075V16.7902C10.1075 15.3476 8.8975 14.1414 7.35881 14.1414C5.82011 14.1414 4.61009 15.3476 4.61009 16.7902ZM10.8575 19.3457L10.8592 19.3457H12.1999C12.7619 19.3457 13.2174 19.8012 13.2174 20.3631V26.4935C13.2174 27.0554 12.7619 27.5109 12.1999 27.5109H2.51744C1.95552 27.5109 1.5 27.0554 1.5 26.4935V20.3631C1.5 19.8012 1.95553 19.3457 2.51744 19.3457H10.8558L10.8575 19.3457Z\"/><path fill=\"${l.color}\" d=\"M20.5762 6.98907C20.5762 5.96254 19.744 5.13037 18.7175 5.13037H18.0979V6.98907H20.5762Z\"/><path fill=\"${l.color}\" d=\"M13.9673 5.13037V12.5652H17.2716V5.13037H13.9673Z\"/><path fill=\"${l.color}\" d=\"M12.5218 5.13037C11.4953 5.13037 10.6631 5.96254 10.6631 6.98907H13.1413V5.13037H12.5218Z\"/><path fill=\"${l.color}\" d=\"M10.6631 9.77711V7.91841H13.1413V9.77711H10.6631Z\"/><path fill=\"${l.color}\" d=\"M10.6631 10.7065C10.6631 11.733 11.4953 12.5652 12.5218 12.5652H13.1413V10.7065H10.6631Z\"/><path fill=\"${l.color}\" d=\"M20.5762 7.91841V9.77711H18.0979V7.91841H20.5762Z\"/><path fill=\"${l.color}\" d=\"M18.7175 12.5652C19.744 12.5652 20.5762 11.733 20.5762 10.7065H18.0979V12.5652H18.7175Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M25.5842 8.28174C25.5842 8.0056 25.8081 7.78174 26.0842 7.78174H28.1515C28.4276 7.78174 28.6515 8.0056 28.6515 8.28174V10.392H29.1846C29.4608 10.392 29.6846 10.6159 29.6846 10.892C29.6846 11.1682 29.4608 11.392 29.1846 11.392H28.1515C27.8753 11.392 27.6515 11.1682 27.6515 10.892V8.78174H26.0842C25.8081 8.78174 25.5842 8.55788 25.5842 8.28174Z\"/><path fill=\"${l.color}\" d=\"M8.30504 22.347C8.30504 21.9176 7.95694 21.5695 7.52754 21.5695C7.09815 21.5695 6.75005 21.9176 6.75005 22.347V24.5094C6.75005 24.9388 7.09815 25.2869 7.52754 25.2869C7.95694 25.2869 8.30504 24.9388 8.30504 24.5094V22.347Z\"/></svg>`}),J=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 36L0 4C0 1.79086 1.79086 0 4 0H36C38.2091 0 40 1.79086 40 4V36C40 38.2091 38.2091 40 36 40H4C1.79086 40 0 38.2091 0 36ZM2 36C2 37.1046 2.89543 38 4 38H36C37.1046 38 38 37.1046 38 36V4C38 2.89543 37.1046 2 36 2H4C2.89543 2 2 2.89543 2 4L2 36Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.81895 16C10.9235 16 11.8189 15.1046 11.8189 14C11.8189 12.8954 10.9235 12 9.81895 12C8.71438 12 7.81895 12.8954 7.81895 14C7.81895 15.1046 8.71438 16 9.81895 16ZM23.2919 13.1064L17.1206 21.8405L13.9165 17.4318L6 27.8235H33.9812L23.2919 13.1064ZM23.3143 16.5405L30.0567 25.8235H10.0379L13.8788 20.7818L17.1435 25.2739L23.3143 16.5405Z\"/></svg>`}),K=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20 38C29.9411 38 38 29.9411 38 20C38 10.0589 29.9411 2 20 2C10.0589 2 2 10.0589 2 20C2 29.9411 10.0589 38 20 38ZM20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z\"/><path fill=\"${l.color}\" d=\"M19.4535 12C20.0052 12 20.4748 11.803 20.8623 11.4089C21.2498 11.0148 21.4436 10.5419 21.4436 9.99015C21.4436 9.43842 21.2498 8.9688 20.8623 8.58128C20.4748 8.19376 20.0052 8 19.4535 8C18.8886 8 18.4124 8.19376 18.0249 8.58128C17.6374 8.9688 17.4436 9.43842 17.4436 9.99015C17.4436 10.5419 17.6406 11.0148 18.0347 11.4089C18.4288 11.803 18.9017 12 19.4535 12Z\"/><path fill=\"${l.color}\" d=\"M23.6733 29.9961C23.8538 29.9961 24 29.8498 24 29.6694C24 29.4972 23.8664 29.3544 23.6949 29.339C23.3021 29.3036 22.6471 29.2297 22.4536 29.1172C22.1714 28.9531 21.9583 28.7041 21.8143 28.3701C21.6703 28.0361 21.5983 27.3652 21.5983 26.3574L21.5351 15.99C21.5317 15.4401 21.085 14.9961 20.5351 14.9961H16.5127C16.2295 14.9961 16 15.2256 16 15.5088C16 15.7919 16.2295 16.0215 16.5127 16.0215H17.6378C18.1648 16.0215 18.6009 16.4298 18.6285 16.9561C18.6735 17.8105 18.7302 19.0979 18.7302 20.1523V26.3574C18.7302 27.3535 18.6524 28.0273 18.4969 28.3789C18.3414 28.7305 18.1312 28.9824 17.8663 29.1348C17.684 29.2396 17.0162 29.3084 16.6175 29.3411C16.4456 29.3551 16.3112 29.4979 16.3112 29.6704C16.3112 29.8503 16.4571 29.9961 16.637 29.9961H23.6733Z\"/></svg>`}),N=()=>({getDefaultIconProps:()=>({width:\"24\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 24 40\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M18.6464 19.7361C20.7035 17.877 22 15.1717 22 12.1514C22 6.52121 17.4993 2 12 2C6.50075 2 2 6.52121 2 12.1514C2 15.1717 3.29653 17.877 5.35357 19.7361C6.96571 21.1932 8.7066 23.2382 9.11816 25.9321L9.52461 28.5933L9.5284 28.6248C9.55659 28.8588 9.74347 29 9.92513 29H14.0749C14.2565 29 14.4434 28.8588 14.4716 28.6248L14.4754 28.5933L14.8818 25.9322C15.2934 23.2382 17.0343 21.1932 18.6464 19.7361ZM7.14109 26.2342C6.83429 24.2259 5.50912 22.5725 4.01254 21.2199C1.5503 18.9945 0 15.7563 0 12.1514C0 5.44035 5.37262 0 12 0C18.6274 0 24 5.44035 24 12.1514C24 15.7563 22.4497 18.9945 19.9875 21.2199C18.4909 22.5725 17.1657 24.2259 16.8589 26.2342L16.4572 28.8639C16.3104 30.0833 15.2881 31 14.0749 31H9.92513C8.71191 31 7.68961 30.0833 7.54275 28.8639L7.14109 26.2342Z\"/><path fill=\"${l.color}\" d=\"M11.2506 6.16485C11.7955 6.07467 12.1641 5.55985 12.0739 5.01498C11.9837 4.47011 11.4689 4.10151 10.9241 4.19169C7.69217 4.7266 5.15517 7.30777 4.65442 10.5625C4.57043 11.1084 4.94486 11.619 5.49072 11.7029C6.03659 11.7869 6.54718 11.4125 6.63116 10.8666C7.00166 8.45847 8.87967 6.55727 11.2506 6.16485Z\"/><path fill=\"${l.color}\" d=\"M9.57136 32.2858C9.01907 32.2858 8.57136 32.7335 8.57136 33.2858C8.57136 33.8381 9.01907 34.2858 9.57136 34.2858H14.7142C15.2665 34.2858 15.7142 33.8381 15.7142 33.2858C15.7142 32.7335 15.2665 32.2858 14.7142 32.2858H9.57136Z\"/><path fill=\"${l.color}\" d=\"M8.57136 36.143C8.57136 35.5907 9.01907 35.143 9.57136 35.143H14.7142C15.2665 35.143 15.7142 35.5907 15.7142 36.143C15.7142 36.6952 15.2665 37.143 14.7142 37.143H9.57136C9.01907 37.143 8.57136 36.6952 8.57136 36.143Z\"/><path fill=\"${l.color}\" d=\"M11.7142 38.0001C11.1619 38.0001 10.7142 38.4479 10.7142 39.0001C10.7142 39.5524 11.1619 40.0001 11.7142 40.0001H12.5713C13.1236 40.0001 13.5713 39.5524 13.5713 39.0001C13.5713 38.4479 13.1236 38.0001 12.5713 38.0001H11.7142Z\"/></svg>`}),Q=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 3C0 1.34314 1.34315 0 3 0H37C38.6569 0 40 1.34315 40 3V37C40 38.6569 38.6569 40 37 40H3C1.34314 40 0 38.6569 0 37V3ZM3 2C2.44771 2 2 2.44771 2 3V37C2 37.5523 2.44771 38 3 38H37C37.5523 38 38 37.5523 38 37V3C38 2.44771 37.5523 2 37 2H3Z\"/><path fill=\"${l.color}\" d=\"M9.58207 9.29103C9.58207 10.0041 9.00405 10.5821 8.29103 10.5821C7.57802 10.5821 7 10.0041 7 9.29103C7 8.57802 7.57802 8 8.29103 8C9.00405 8 9.58207 8.57802 9.58207 9.29103Z\"/><path fill=\"${l.color}\" d=\"M9.58207 16.1738C9.58207 16.8869 9.00405 17.4649 8.29103 17.4649C7.57802 17.4649 7 16.8869 7 16.1738C7 15.4608 7.57802 14.8828 8.29103 14.8828C9.00405 14.8828 9.58207 15.4608 9.58207 16.1738Z\"/><path fill=\"${l.color}\" d=\"M9.58207 23.0567C9.58207 23.7697 9.00405 24.3477 8.29103 24.3477C7.57802 24.3477 7 23.7697 7 23.0567C7 22.3436 7.57802 21.7656 8.29103 21.7656C9.00405 21.7656 9.58207 22.3436 9.58207 23.0567Z\"/><path fill=\"${l.color}\" d=\"M9.58207 29.9397C9.58207 30.6527 9.00405 31.2308 8.29103 31.2308C7.57802 31.2308 7 30.6527 7 29.9397C7 29.2267 7.57802 28.6487 8.29103 28.6487C9.00405 28.6487 9.58207 29.2267 9.58207 29.9397Z\"/><path fill=\"${l.color}\" d=\"M13.7461 9.29102C13.7461 8.73873 14.1938 8.29102 14.7461 8.29102H31.9599C32.5122 8.29102 32.9599 8.73873 32.9599 9.29102C32.9599 9.8433 32.5122 10.291 31.9599 10.291H14.7461C14.1938 10.291 13.7461 9.8433 13.7461 9.29102Z\"/><path fill=\"${l.color}\" d=\"M13.7461 16.1743C13.7461 15.622 14.1938 15.1743 14.7461 15.1743H31.9599C32.5122 15.1743 32.9599 15.622 32.9599 16.1743C32.9599 16.7266 32.5122 17.1743 31.9599 17.1743H14.7461C14.1938 17.1743 13.7461 16.7266 13.7461 16.1743Z\"/><path fill=\"${l.color}\" d=\"M13.7461 23.0574C13.7461 22.5051 14.1938 22.0574 14.7461 22.0574H31.9599C32.5122 22.0574 32.9599 22.5051 32.9599 23.0574C32.9599 23.6097 32.5122 24.0574 31.9599 24.0574H14.7461C14.1938 24.0574 13.7461 23.6097 13.7461 23.0574Z\"/><path fill=\"${l.color}\" d=\"M13.7461 29.9407C13.7461 29.3884 14.1938 28.9407 14.7461 28.9407H31.9599C32.5122 28.9407 32.9599 29.3884 32.9599 29.9407C32.9599 30.493 32.5122 30.9407 31.9599 30.9407H14.7461C14.1938 30.9407 13.7461 30.493 13.7461 29.9407Z\"/></svg>`}),R=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"41\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 41\" fill=\"none\"><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.0007 0.402954C8.95339 0.402954 0 9.35635 0 20.4023C0 31.4482 8.95339 40.403 20.0007 40.403C31.0466 40.403 40 31.4482 40 20.4023C40 9.35635 31.0466 0.402954 20.0007 0.402954Z\"/><path fill=\"white\" d=\"M12.6621 13.7241C11.1919 13.7241 10 12.5299 10 11.0635C10 9.59114 11.1919 8.40295 12.6621 8.40295C14.1292 8.40295 15.3211 9.59114 15.3211 11.0635C15.3211 12.5299 14.1292 13.7241 12.6621 13.7241Z\"/><path fill=\"white\" d=\"M31.4176 29.8085H27.0585V22.8184C27.0585 20.5025 26.6047 19.2357 24.9137 19.2357C22.6267 19.2357 21.8221 20.9742 21.8221 22.8184V29.8085H17.4599V15.8586H21.6043V17.9417C22.1578 16.8291 23.7793 15.6379 25.918 15.6379C30.02 15.6379 31.4176 17.4943 31.4176 21.8933V29.8085Z\"/><path fill=\"white\" d=\"M14.8432 29.8085H10.4811V15.8586H14.8432V29.8085Z\"/></svg>`}),W=()=>({getDefaultIconProps:()=>({width:\"38\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 38 40\" fill=\"none\"><path fill=\"${l.color}\" d=\"M2 3.11111C2 2.4458 2.49797 2 2.99994 2H23.9993C24.5012 2 24.9992 2.44593 24.9992 3.11125L25 9.09518C25.0001 9.64746 25.4478 10.0951 26.0001 10.095C26.5524 10.095 27.0001 9.64719 27 9.09491L26.9992 3.11098C26.9991 1.44448 25.7063 0 23.9993 0H2.99994C1.29283 0 0 1.44456 0 3.11111V36.8889C0 38.5554 1.29283 40 2.99994 40H23.9993C25.7063 40 26.9991 38.5554 26.9992 36.8889L27 30.7311C27.0001 30.1788 26.5524 29.731 26.0001 29.731C25.4478 29.7309 25.0001 30.1786 25 30.7308L24.9992 36.8889C24.9992 37.5542 24.5012 38 23.9993 38H2.99994C2.49797 38 2 37.5542 2 36.8889V3.11111Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M24 15C21.2386 15 19 17.2386 19 20C19 22.7614 21.2386 25 24 25C26.7614 25 29 22.7614 29 20C29 17.2386 26.7614 15 24 15ZM21 20C21 18.3431 22.3431 17 24 17C25.6569 17 27 18.3431 27 20C27 21.6569 25.6569 23 24 23C22.3431 23 21 21.6569 21 20Z\"/><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.2817 15.9308C13.0608 17.1267 12 18.6113 12 20.0001C12 21.389 13.0608 22.8735 15.2817 24.0694C17.462 25.2434 20.5425 26.0001 24 26.0001C27.4575 26.0001 30.5381 25.2434 32.7183 24.0694C34.9393 22.8735 36 21.389 36 20.0001C36 18.6113 34.9393 17.1267 32.7183 15.9308C30.5381 14.7569 27.4575 14.0001 24 14.0001C20.5425 14.0001 17.462 14.7569 15.2817 15.9308ZM14.3335 14.1699C16.8584 12.8104 20.2778 12.0001 24 12.0001C27.7222 12.0001 31.1417 12.8104 33.6665 14.1699C36.1507 15.5075 38 17.523 38 20.0001C38 22.4773 36.1507 24.4927 33.6665 25.8303C31.1417 27.1899 27.7222 28.0001 24 28.0001C20.2778 28.0001 16.8584 27.1899 14.3335 25.8303C11.8494 24.4927 10 22.4773 10 20.0001C10 17.523 11.8494 15.5075 14.3335 14.1699Z\"/></svg>`}),X=()=>({getDefaultIconProps:()=>({width:\"41\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 41 40\" fill=\"none\"><path fill=\"${l.color2}\" d=\"M2.5 3.11111C2.5 2.4458 2.99797 2 3.49994 2H24.4993C25.0012 2 25.4992 2.44593 25.4992 3.11125L25.5 9.09518C25.5001 9.64746 25.9478 10.0951 26.5001 10.095C27.0524 10.095 27.5001 9.64719 27.5 9.09491L27.4992 3.11098C27.4991 1.44448 26.2063 0 24.4993 0H3.49994C1.79283 0 0.5 1.44456 0.5 3.11111V36.8889C0.5 38.5554 1.79283 40 3.49994 40H24.4993C26.2063 40 27.4991 38.5554 27.4992 36.8889L27.5 30.7311C27.5001 30.1788 27.0524 29.731 26.5001 29.731C25.9478 29.7309 25.5001 30.1786 25.5 30.7308L25.4992 36.8889C25.4992 37.5542 25.0012 38 24.4993 38H3.49994C2.99797 38 2.5 37.5542 2.5 36.8889V3.11111Z\"/><path fill=\"${l.color2}\" d=\"M36.5 20C36.5 21.3673 35.4719 22.8274 33.3207 24.0135L34.8189 25.454C36.9676 24.1273 38.5 22.2549 38.5 20C38.5 17.5229 36.6506 15.5074 34.1665 14.1698C31.6416 12.8102 28.2222 12 24.5 12C23.3206 12 22.1716 12.0813 21.0719 12.2357L22.9595 14.0507C23.4632 14.0173 23.9773 14 24.5 14C27.9575 14 31.0381 14.7568 33.2183 15.9307C35.4392 17.1266 36.5 18.6112 36.5 20Z\"/><path fill=\"${l.color2}\" d=\"M10.5 20C10.5 17.6095 12.2223 15.649 14.5752 14.3126L16.0909 15.7701C15.986 15.8227 15.8829 15.8763 15.7817 15.9307C13.5608 17.1266 12.5 18.6112 12.5 20C12.5 21.3888 13.5608 22.8734 15.7817 24.0693C17.9619 25.2432 21.0425 26 24.5 26C25.2279 26 25.9391 25.9665 26.6287 25.9025L28.4777 27.6804C27.2132 27.8891 25.8773 28 24.5 28C20.7778 28 17.3584 27.1898 14.8335 25.8302C12.3494 24.4926 10.5 22.4771 10.5 20Z\"/><path fill=\"${l.color}\" d=\"M12.1941 6.47377C11.7965 6.09041 11.1634 6.10192 10.7801 6.49948C10.3967 6.89704 10.4082 7.5301 10.8058 7.91346L38.8058 34.9135C39.2034 35.2968 39.8364 35.2853 40.2198 34.8877C40.6031 34.4902 40.5916 33.8571 40.1941 33.4738L12.1941 6.47377Z\"/><path fill=\"${l.color}\" d=\"M29.4999 20C29.4999 20.1107 29.4963 20.2205 29.4892 20.3294L23.975 15.0272C24.1475 15.0092 24.3226 15 24.4999 15C27.2614 15 29.4999 17.2386 29.4999 20Z\"/><path fill=\"${l.color}\" d=\"M19.4999 20C19.4999 19.7004 19.5263 19.407 19.5768 19.1219L21.7581 21.2193C22.0754 21.9318 22.6623 22.4978 23.3892 22.7877L25.5705 24.8851C25.2256 24.9604 24.8674 25 24.4999 25C21.7385 25 19.4999 22.7614 19.4999 20Z\"/></svg>`}),Y=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color}\" d=\"M20 0.25C24.7525 0.25 28.61 4.16771 28.7463 9.04095L28.75 9.30769V13C28.75 13.4142 28.4142 13.75 28 13.75C27.6203 13.75 27.3065 13.4678 27.2568 13.1018L27.25 13V9.30769C27.25 5.12749 23.9976 1.75 20 1.75C16.0824 1.75 12.8804 4.99374 12.7539 9.05786L12.75 9.30769V13.7207C12.75 14.1349 12.4142 14.4707 12 14.4707C11.6203 14.4707 11.3065 14.1885 11.2568 13.8225L11.25 13.7207V9.30769C11.25 4.31147 15.161 0.25 20 0.25Z\"/><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.76744 13.25H34.2326C35.6229 13.25 36.75 14.3771 36.75 15.7674V37.2326C36.75 38.6229 35.6229 39.75 34.2326 39.75H5.76744C4.3771 39.75 3.25 38.6229 3.25 37.2326V15.7674C3.25 14.3771 4.3771 13.25 5.76744 13.25ZM34.2326 14.75H5.76744C5.20552 14.75 4.75 15.2055 4.75 15.7674V37.2326C4.75 37.7945 5.20552 38.25 5.76744 38.25H34.2326C34.7945 38.25 35.25 37.7945 35.25 37.2326V15.7674C35.25 15.2055 34.7945 14.75 34.2326 14.75Z\"/><rect fill=\"${l.color}\" x=\"18\" y=\"22\" width=\"4\" height=\"10\" rx=\"2\"/></svg>`}),CC=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color}\" d=\"M20 0.25C24.7526 0.25 28.6101 4.16771 28.7463 9.04095L28.75 9.30769V13C28.75 13.4142 28.4142 13.75 28 13.75C27.6203 13.75 27.3065 13.4678 27.2569 13.1018L27.25 13V9.30769C27.25 5.12749 23.9976 1.75 20 1.75C17.1252 1.75 14.5536 3.51149 13.3885 6.20171C13.2239 6.5818 12.7823 6.75649 12.4022 6.59187C12.0221 6.42725 11.8474 5.98567 12.012 5.60558C13.4104 2.37688 16.5154 0.25 20 0.25Z\"/><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.76744 13.25H34.2326C35.6229 13.25 36.75 14.3771 36.75 15.7674V37.2326C36.75 38.6229 35.6229 39.75 34.2326 39.75H5.76744C4.3771 39.75 3.25 38.6229 3.25 37.2326V15.7674C3.25 14.3771 4.3771 13.25 5.76744 13.25ZM34.2326 14.75H5.76744C5.20552 14.75 4.75 15.2055 4.75 15.7674V37.2326C4.75 37.7945 5.20552 38.25 5.76744 38.25H34.2326C34.7945 38.25 35.25 37.7945 35.25 37.2326V15.7674C35.25 15.2055 34.7945 14.75 34.2326 14.75Z\"/><rect fill=\"${l.color}\" x=\"18\" y=\"22\" width=\"4\" height=\"10\" rx=\"2\"/></svg>`}),lC=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"35\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 35\" fill=\"none\"><path fill=\"${l.color}\" d=\"M2.5 0C1.11929 0 0 1.11929 0 2.5C0 3.88071 1.11929 5 2.5 5H37.5C38.8807 5 40 3.88071 40 2.5C40 1.11929 38.8807 0 37.5 0H2.5Z\"/><path fill=\"${l.color}\" d=\"M0 17.5C0 16.1193 1.11929 15 2.5 15H37.5C38.8807 15 40 16.1193 40 17.5C40 18.8807 38.8807 20 37.5 20H2.5C1.11929 20 0 18.8807 0 17.5Z\"/><path fill=\"${l.color}\" d=\"M0 32.5C0 31.1193 1.11929 30 2.5 30H37.5C38.8807 30 40 31.1193 40 32.5C40 33.8807 38.8807 35 37.5 35H2.5C1.11929 35 0 33.8807 0 32.5Z\"/></svg>`}),oC=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"5\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 5\" fill=\"none\"><path fill=\"${l.color}\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 2.5C0 1.11929 1.14799 0 2.5641 0H37.4359C38.852 0 40 1.11929 40 2.5C40 3.88071 38.852 5 37.4359 5H2.5641C1.14799 5 0 3.88071 0 2.5Z\"/></svg>`}),eC=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color}\" d=\"M5.5 7C5.22386 7 5 7.22386 5 7.5V10.5C5 10.7761 5.22386 11 5.5 11H8.5C8.77614 11 9 10.7761 9 10.5V7.5C9 7.22386 8.77614 7 8.5 7H5.5Z\"/><path fill=\"${l.color}\" d=\"M5.5 14C5.22386 14 5 14.2239 5 14.5V17.5C5 17.7761 5.22386 18 5.5 18H8.5C8.77614 18 9 17.7761 9 17.5V14.5C9 14.2239 8.77614 14 8.5 14H5.5Z\"/><path fill=\"${l.color}\" d=\"M5 21.5C5 21.2239 5.22386 21 5.5 21H8.5C8.77614 21 9 21.2239 9 21.5V24.5C9 24.7761 8.77614 25 8.5 25H5.5C5.22386 25 5 24.7761 5 24.5V21.5Z\"/><path fill=\"${l.color}\" d=\"M5.5 28C5.22386 28 5 28.2239 5 28.5V31.5C5 31.7761 5.22386 32 5.5 32H8.5C8.77614 32 9 31.7761 9 31.5V28.5C9 28.2239 8.77614 28 8.5 28H5.5Z\"/><path fill=\"${l.color}\" d=\"M12 7.5C12 7.22386 12.2239 7 12.5 7H15.5C15.7761 7 16 7.22386 16 7.5V10.5C16 10.7761 15.7761 11 15.5 11H12.5C12.2239 11 12 10.7761 12 10.5V7.5Z\"/><path fill=\"${l.color}\" d=\"M12.5 14C12.2239 14 12 14.2239 12 14.5V17.5C12 17.7761 12.2239 18 12.5 18H15.5C15.7761 18 16 17.7761 16 17.5V14.5C16 14.2239 15.7761 14 15.5 14H12.5Z\"/><path fill=\"${l.color}\" d=\"M12 21.5C12 21.2239 12.2239 21 12.5 21H15.5C15.7761 21 16 21.2239 16 21.5V24.5C16 24.7761 15.7761 25 15.5 25H12.5C12.2239 25 12 24.7761 12 24.5V21.5Z\"/><path fill=\"${l.color}\" d=\"M12.5 28C12.2239 28 12 28.2239 12 28.5V31.5C12 31.7761 12.2239 32 12.5 32H15.5C15.7761 32 16 31.7761 16 31.5V28.5C16 28.2239 15.7761 28 15.5 28H12.5Z\"/><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3 0C1.34315 0 0 1.34314 0 3V37C0 38.6569 1.34315 40 3 40H37C38.6569 40 40 38.6569 40 37V16C40 14.3431 38.6569 13 37 13H21V3C21 1.34315 19.6569 0 18 0H3ZM21 15V38H37C37.5523 38 38 37.5523 38 37V16C38 15.4477 37.5523 15 37 15H21ZM19 3C19 2.44772 18.5523 2 18 2H3C2.44771 2 2 2.44772 2 3V37C2 37.5523 2.44772 38 3 38H19V3Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M26 22C25.4477 22 25 22.4477 25 23C25 23.5523 25.4477 24 26 24H33C33.5523 24 34 23.5523 34 23C34 22.4477 33.5523 22 33 22H26ZM26 29C25.4477 29 25 29.4477 25 30C25 30.5523 25.4477 31 26 31H33C33.5523 31 34 30.5523 34 30C34 29.4477 33.5523 29 33 29H26Z\"/></svg>`}),dC=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M25 5C25 7.76142 22.7614 10 20 10C17.2386 10 15 7.76142 15 5C15 2.23858 17.2386 0 20 0C22.7614 0 25 2.23858 25 5ZM23 5C23 6.65685 21.6569 8 20 8C18.3431 8 17 6.65685 17 5C17 3.34315 18.3431 2 20 2C21.6569 2 23 3.34315 23 5Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M25 35C25 37.7614 22.7614 40 20 40C17.2386 40 15 37.7614 15 35C15 32.2386 17.2386 30 20 30C22.7614 30 25 32.2386 25 35ZM23 35C23 36.6569 21.6569 38 20 38C18.3431 38 17 36.6569 17 35C17 33.3431 18.3431 32 20 32C21.6569 32 23 33.3431 23 35Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 40C7.76142 40 10 37.7614 10 35C10 32.2386 7.76142 30 5 30C2.23858 30 0 32.2386 0 35C0 37.7614 2.23858 40 5 40ZM5 38C6.65685 38 8 36.6569 8 35C8 33.3431 6.65685 32 5 32C3.34315 32 2 33.3431 2 35C2 36.6569 3.34315 38 5 38Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M40 35C40 37.7614 37.7614 40 35 40C32.2386 40 30 37.7614 30 35C30 32.2386 32.2386 30 35 30C37.7614 30 40 32.2386 40 35ZM38 35C38 36.6569 36.6569 38 35 38C33.3431 38 32 36.6569 32 35C32 33.3431 33.3431 32 35 32C36.6569 32 38 33.3431 38 35Z\"/><path fill=\"${l.color2}\" d=\"M21 13C21 12.4477 20.5523 12 20 12C19.4477 12 19 12.4477 19 13V18H5C4.44772 18 4 18.4477 4 19V27C4 27.5523 4.44772 28 5 28C5.55228 28 6 27.5523 6 27V21C6 20.4477 6.44771 20 7 20H19V27C19 27.5523 19.4477 28 20 28C20.5523 28 21 27.5523 21 27V20H33C33.5523 20 34 20.4477 34 21V27C34 27.5523 34.4477 28 35 28C35.5523 28 36 27.5523 36 27V19C36 18.4477 35.5523 18 35 18H21V13Z\"/></svg>`}),iC=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color}\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22.5641 2.5641C22.5641 1.14799 21.4161 0 20 0C18.5839 0 17.4359 1.14799 17.4359 2.5641V17.4359H2.5641C1.14799 17.4359 0 18.5839 0 20C0 21.4161 1.14799 22.5641 2.5641 22.5641H17.4359V37.4359C17.4359 38.852 18.5839 40 20 40C21.4161 40 22.5641 38.852 22.5641 37.4359V22.5641H37.4359C38.852 22.5641 40 21.4161 40 20C40 18.5839 38.852 17.4359 37.4359 17.4359H22.5641V2.5641Z\"/></svg>`}),rC=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"34\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 34\" fill=\"none\"><path fill=\"${l.color}\" d=\"M27.0001 2L13.0001 2C12.4478 2 12.0001 2.44772 12.0001 3V12H10.0001V3C10.0001 1.34315 11.3432 9.83477e-06 13.0001 0H27.0001C28.657 1.0848e-05 30.0001 1.34316 30.0001 3V12H28.0001V3C28.0001 2.44771 27.5524 2 27.0001 2Z\"/><path fill=\"${l.color}\" d=\"M12.0001 25L12.0001 30.9999C12.0001 31.5523 12.4478 32 13.0001 32H27.0001C27.5524 32 28.0001 31.5523 28.0001 31V25H30.0001V31C30.0001 32.6569 28.6569 34 27.0001 34H13.0001C11.3432 34 10.0001 32.6568 10.0001 30.9999L10.0001 25H12.0001Z\"/><path fill=\"${l.color}\" d=\"M15.0001 28.5C14.4478 28.5 14.0001 28.9477 14.0001 29.5C14.0001 30.0523 14.4478 30.5 15.0001 30.5H25.0001C25.5524 30.5 26.0001 30.0523 26.0001 29.5C26.0001 28.9477 25.5524 28.5 25.0001 28.5H15.0001Z\"/><path fill=\"${l.color2}\" d=\"M10.0001 11L2.99997 11C2.4477 11 2 11.4477 2 12V28C2 28.5523 2.44771 29 3 29H10.0001L10.0001 30.9999L3 31C1.34315 31 0 29.6569 0 28V12C0 10.3432 1.34311 9.00002 2.99996 9.00001L10.0001 9.00001V11Z\"/><path fill=\"${l.color2}\" d=\"M30.0001 11L37.0002 11C37.5525 11 38.0002 11.4477 38.0002 12V28C38.0002 28.5523 37.5524 29 37.0002 29H30.0001V31L37.0002 31C38.657 31 40.0002 29.6569 40.0002 28V12C40.0002 10.3432 38.657 9.00002 37.0002 9.00001L30.0001 9.00002V11Z\"/><path fill=\"${l.color2}\" d=\"M9.00008 12C8.44779 12 8.00008 12.4477 8.00008 13C8.00008 13.5523 8.44779 14 9.00008 14H31.0001C31.5524 14 32.0001 13.5523 32.0001 13C32.0001 12.4477 31.5524 12 31.0001 12H9.00008Z\"/><path fill=\"${l.color2}\" d=\"M8.00008 24C8.00008 23.4477 8.44779 23 9.00008 23H31.0001C31.5524 23 32.0001 23.4477 32.0001 24C32.0001 24.5523 31.5524 25 31.0001 25H9.00008C8.44779 25 8.00008 24.5523 8.00008 24Z\"/></svg>`}),cC=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"41\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 41\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20 38.8867C29.9411 38.8867 38 30.8278 38 20.8867C38 10.9456 29.9411 2.88672 20 2.88672C10.0589 2.88672 2 10.9456 2 20.8867C2 30.8278 10.0589 38.8867 20 38.8867ZM20 40.8867C31.0457 40.8867 40 31.9324 40 20.8867C40 9.84102 31.0457 0.886719 20 0.886719C8.9543 0.886719 0 9.84102 0 20.8867C0 31.9324 8.9543 40.8867 20 40.8867Z\"/><path fill=\"${l.color}\" d=\"M19.8152 25.8867C20.4507 25.8867 20.9658 25.3716 20.9658 24.7362V23.9739C20.9658 22.2052 21.5762 21.6157 23.4077 20.1418C24.9417 18.9162 26.4444 17.5974 26.4444 15.0841C26.4444 11.5623 23.4546 9.88672 20.324 9.88672C17.5469 9.88672 14.4862 11.1851 14.0522 14.8883C14.0377 15.0118 14.026 15.3642 14.0173 15.7229C14.0048 16.2411 14.4237 16.6648 14.9421 16.6648C15.6528 16.6648 16.226 16.0944 16.2594 15.3844C16.2677 15.2103 16.2771 15.0689 16.2878 15.004C16.5769 13.2481 17.8351 11.8726 20.23 11.8726C22.2337 11.8726 24.0808 12.85 24.0808 15.2082C24.0808 16.8993 23.1729 17.6905 21.6702 18.9006C20.0892 20.1728 18.6647 21.414 18.6647 23.555V24.7362C18.6647 25.3716 19.1798 25.8867 19.8152 25.8867Z\"/><path fill=\"${l.color}\" d=\"M20.0223 31.8867C21.1271 31.8867 22.0223 30.9724 22.0223 29.8867C22.0223 28.782 21.1271 27.8867 20.0223 27.8867C18.9176 27.8867 18.0223 28.782 18.0223 29.8867C18.0223 30.9724 18.9176 31.8867 20.0223 31.8867Z\"/></svg>`}),tC=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"32\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 32\" fill=\"none\"><path fill=\"${l.color}\" d=\"M31.6132 14.4703L32.9908 15.8479C32.9619 8.73479 27.1867 2.97746 20.0669 2.97746C16.6925 2.97746 13.6203 4.27062 11.3185 6.3884L9.21167 4.28153C12.0535 1.62564 15.8703 0 20.0669 0C28.849 0 35.9683 7.11932 35.9683 15.9015L35.9682 15.9607L37.4586 14.4703C38.04 13.8889 38.9826 13.8889 39.564 14.4703C40.1453 15.0517 40.1453 15.9943 39.564 16.5757L34.5359 21.6038L29.5079 16.5757C28.9265 15.9943 28.9265 15.0517 29.5079 14.4703C30.0892 13.8889 31.0318 13.8889 31.6132 14.4703Z\" fill=\"#396291\"/><path fill=\"${l.color}\" d=\"M7.16785 16.7114L8.38677 17.9303C8.96815 18.5117 9.91076 18.5117 10.4921 17.9303C11.0735 17.349 11.0735 16.4064 10.4921 15.825L5.46409 10.7969L0.436039 15.825C-0.145346 16.4063 -0.145346 17.349 0.436039 17.9303C1.01742 18.5117 1.96003 18.5117 2.54142 17.9303L4.17036 16.3014C4.3826 24.8987 11.4185 31.8029 20.0669 31.8029C24.1456 31.8029 27.8657 30.2673 30.6805 27.7426L28.5712 25.6334C26.2985 27.621 23.3234 28.8255 20.0669 28.8255C13.2012 28.8255 7.5859 23.4718 7.16785 16.7114Z\" fill=\"#396291\"/></svg>`}),hC=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"32\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 32\" fill=\"none\"><path fill=\"${l.color}\" xmlns=\"http://www.w3.org/2000/svg\" d=\"M11.5088 23.5703L0 12L11.5088 0.429699C12.0787 -0.143233 13.0027 -0.143233 13.5726 0.429699C14.1425 1.00263 14.1425 1.93154 13.5726 2.50447L5.61953 10.5H20.5C25.2625 10.5 28.9341 11.6949 31.7383 13.5644C34.5332 15.4277 36.3777 17.9012 37.5916 20.3292C38.8027 22.7513 39.4007 25.1552 39.6983 26.9409C39.8477 27.8373 39.923 28.5876 39.961 29.1197C39.9801 29.386 39.9898 29.5984 39.9948 29.7479C39.9973 29.8227 39.9986 29.8818 39.9993 29.9242L39.9999 29.9751L40 29.9908L40 29.9983C40 29.9983 40 30 38.5 30H40C40 30.8284 39.3284 31.5 38.5 31.5C37.6724 31.5 37.0013 30.8297 37 30.0023V30L37 29.9989L36.9996 29.9726C36.9992 29.9468 36.9983 29.9049 36.9964 29.8478C36.9926 29.7337 36.9848 29.5593 36.9687 29.3334C36.9363 28.8811 36.871 28.2252 36.7392 27.4341C36.4743 25.8448 35.9473 23.7487 34.9084 21.6708C33.8723 19.5988 32.3418 17.5723 30.0742 16.0606C27.8159 14.5551 24.7375 13.5 20.5 13.5H5.61953L13.5726 21.4955C14.1425 22.0685 14.1425 22.9974 13.5726 23.5703C13.0027 24.1432 12.0787 24.1432 11.5088 23.5703Z\"/></svg>`}),nC=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.677 0C7.46653 0 0 7.46653 0 16.677C0 25.8874 7.46653 33.3539 16.677 33.3539C20.3741 33.3539 23.7902 32.1509 26.5552 30.1149L35.0905 38.6502C36.0747 39.6344 37.6614 39.6074 38.6344 38.6343C39.6074 37.6613 39.6344 36.0746 38.6503 35.0905L30.115 26.5551C32.1509 23.7901 33.3539 20.374 33.3539 16.677C33.3539 7.46653 25.8874 0 16.677 0ZM2 16.677C2 8.5711 8.5711 2 16.677 2C24.7828 2 31.3539 8.5711 31.3539 16.677C31.3539 24.7828 24.7828 31.3539 16.677 31.3539C8.5711 31.3539 2 24.7828 2 16.677ZM28.8294 28.098C28.5932 28.3493 28.3493 28.5932 28.0981 28.8294L36.5048 37.236C36.688 37.4193 37.0083 37.4321 37.2202 37.2201C37.4321 37.0082 37.4193 36.688 37.2361 36.5047L28.8294 28.098Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.05709 16.677C5.05709 10.2595 10.2595 5.05709 16.677 5.05709C17.2293 5.05709 17.677 5.5048 17.677 6.05709C17.677 6.60937 17.2293 7.05709 16.677 7.05709C11.3641 7.05709 7.05709 11.3641 7.05709 16.677C7.05709 21.9899 11.3641 26.2968 16.677 26.2968C21.9899 26.2968 26.2968 21.9899 26.2968 16.677C26.2968 16.1247 26.7446 15.677 27.2968 15.677C27.8491 15.677 28.2968 16.1247 28.2968 16.677C28.2968 23.0944 23.0944 28.2968 16.677 28.2968C10.2595 28.2968 5.05709 23.0944 5.05709 16.677Z\"/></svg>`}),vC=()=>({getDefaultIconProps:()=>({width:\"31\",height:\"32\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 31 32\" fill=\"none\"><path stroke=\"${l.color2}\" stroke-width=\"2\" d=\"M22.6621 21.6929L29.002 28.0328C29.4152 28.446 29.39 29.1412 28.9456 29.5855C28.5012 30.0299 27.806 30.0551 27.3928 29.6419L21.053 23.302\" stroke-linecap=\"square\"/><circle stroke=\"${l.color2}\" cx=\"13.25\" cy=\"13.8901\" r=\"12\" stroke-width=\"2\" stroke-linecap=\"round\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13.25 22.8901C18.2206 22.8901 22.25 18.8607 22.25 13.8901C22.25 8.91957 18.2206 4.89014 13.25 4.89014C8.27943 4.89014 4.25 8.91957 4.25 13.8901C4.25 18.8607 8.27943 22.8901 13.25 22.8901ZM13.25 17.2288C15.0939 17.2288 16.5887 15.7341 16.5887 13.8901C16.5887 12.0462 15.0939 10.5514 13.25 10.5514C11.4061 10.5514 9.91129 12.0462 9.91129 13.8901C9.91129 15.7341 11.4061 17.2288 13.25 17.2288Z\"/></svg>`}),aC=()=>({getDefaultIconProps:()=>({width:\"32\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 32 40\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.0661 2.51281C15.3188 3.05184 14.2565 3.73137 12.8787 4.4053C10.322 5.65584 6.69175 6.8804 2 7.15867V22.6087C2 27.7275 5.35588 31.5526 9.15406 34.2361C11.0223 35.556 12.9038 36.529 14.3251 37.1727C15.0193 37.4871 15.5968 37.7199 16 37.8737C16.4032 37.7199 16.9807 37.4871 17.6749 37.1727C19.0962 36.529 20.9777 35.556 22.8459 34.2361C26.6441 31.5526 30 27.7275 30 22.6087V7.14931C25.6572 6.85291 22.0734 5.63528 19.4833 4.41905C18.0225 3.73311 16.8703 3.04424 16.0661 2.51281ZM32 5.21739C22.2222 5.21739 16 0 16 0C16 0 10.6665 5.21739 0 5.21739V22.6087C0 34.7826 16 40 16 40C16 40 32 34.7826 32 22.6087V5.21739Z\"/><path fill=\"${l.color2}\" d=\"M16 20.5001C15.4477 20.5001 15 20.9478 15 21.5001V24.5001C15 25.0524 15.4477 25.5001 16 25.5001C16.5523 25.5001 17 25.0524 17 24.5001V21.5001C17 20.9478 16.5523 20.5001 16 20.5001Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11 14.1539C11 11.3434 13.2033 9.00007 16 9.00007C18.7967 9.00007 21 11.3434 21 14.1539V15.5001H22.2326C23.761 15.5001 25 16.7391 25 18.2675V27.2326C25 28.761 23.761 30.0001 22.2326 30.0001H9.76744C8.23903 30.0001 7 28.761 7 27.2326V18.2675C7 16.7391 8.23903 15.5001 9.76744 15.5001H11V14.1539ZM19 14.1539V15.5001H13V14.1539C13 12.3762 14.3784 11.0001 16 11.0001C17.6216 11.0001 19 12.3762 19 14.1539ZM9.76744 17.5001C9.3436 17.5001 9 17.8437 9 18.2675V27.2326C9 27.6565 9.3436 28.0001 9.76744 28.0001H22.2326C22.6564 28.0001 23 27.6565 23 27.2326V18.2675C23 17.8437 22.6564 17.5001 22.2326 17.5001H9.76744Z\"/></svg>`}),HC=()=>({getDefaultIconProps:()=>({width:\"32\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 32 40\" fill=\"none\"><path fill=\"${l.color}\" d=\"M0 5.21739C10.6665 5.21739 16 0 16 0C16 0 22.2222 5.21739 32 5.21739C32 5.21739 32 10.4348 32 22.6087C32 34.7826 16 40 16 40C16 40 0 34.7826 0 22.6087C0 10.4348 0 5.21739 0 5.21739Z\"/><path d=\"M16 20.5001C15.4477 20.5001 15 20.9478 15 21.5001V24.5001C15 25.0524 15.4477 25.5001 16 25.5001C16.5523 25.5001 17 25.0524 17 24.5001V21.5001C17 20.9478 16.5523 20.5001 16 20.5001Z\" fill=\"white\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11 14.1539C11 11.3434 13.2033 9.00007 16 9.00007C18.7967 9.00007 21 11.3434 21 14.1539V15.5001H22.2326C23.761 15.5001 25 16.7391 25 18.2675V27.2326C25 28.761 23.761 30.0001 22.2326 30.0001H9.76744C8.23903 30.0001 7 28.761 7 27.2326V18.2675C7 16.7391 8.23903 15.5001 9.76744 15.5001H11V14.1539ZM19 14.1539V15.5001H13V14.1539C13 12.3762 14.3784 11.0001 16 11.0001C17.6216 11.0001 19 12.3762 19 14.1539ZM9.76744 17.5001C9.3436 17.5001 9 17.8437 9 18.2675V27.2326C9 27.6565 9.3436 28.0001 9.76744 28.0001H22.2326C22.6564 28.0001 23 27.6565 23 27.2326V18.2675C23 17.8437 22.6564 17.5001 22.2326 17.5001H9.76744Z\" fill=\"white\"/></svg>`}),pC=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color}\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M24.1414 11.639L20.4399 2.34148C20.3764 2.18173 20.2971 2.10791 20.2389 2.06946C20.1726 2.02568 20.0899 2 20 2C19.9101 2 19.8274 2.02568 19.7611 2.06946C19.7029 2.10791 19.6236 2.18173 19.56 2.34148L15.8586 11.639C15.2331 13.2101 13.79 14.3415 12.0681 14.4857L2.46051 15.2904C2.34471 15.3001 2.27251 15.338 2.21489 15.388C2.14743 15.4465 2.07718 15.5446 2.03511 15.6798C1.94887 15.9571 2.02001 16.2065 2.20703 16.3739L9.52703 22.9248C10.7932 24.0579 11.3188 25.801 10.9449 27.4385L8.70854 37.2334C8.63743 37.5449 8.75432 37.7719 8.92599 37.9022C9.01401 37.9691 9.0989 37.995 9.16195 37.9993C9.21238 38.0027 9.28875 37.9966 9.40128 37.9247L17.6268 32.6759C19.0794 31.7489 20.9206 31.7489 22.3732 32.6759L30.5987 37.9247C30.7113 37.9966 30.7876 38.0027 30.8381 37.9993C30.9011 37.995 30.986 37.9691 31.074 37.9022C31.2457 37.7719 31.3626 37.5449 31.2915 37.2334L29.0551 27.4385C28.6812 25.801 29.2069 24.0579 30.473 22.9248L37.793 16.3739C37.98 16.2065 38.0511 15.9571 37.9649 15.6798C37.9228 15.5446 37.8526 15.4465 37.7851 15.388C37.7275 15.338 37.6553 15.3001 37.5395 15.2904L27.9319 14.4857C26.21 14.3415 24.7669 13.2101 24.1414 11.639ZM22.2981 1.60172C21.4479 -0.533908 18.5521 -0.533907 17.7019 1.60172L14.0004 10.8993C13.642 11.7996 12.8316 12.4148 11.9012 12.4927L2.29359 13.2974C0.0867348 13.4822 -0.808112 16.3595 0.873276 17.8642L8.19327 24.4152C8.9021 25.0495 9.21166 26.0449 8.9951 26.9933L6.75872 36.7882C6.24503 39.0381 8.58777 40.8164 10.4771 39.6107L18.7026 34.3618C19.4991 33.8536 20.5009 33.8536 21.2974 34.3618L29.5229 39.6107C31.4122 40.8164 33.755 39.0381 33.2413 36.7882L31.0049 26.9933C30.7883 26.0449 31.0979 25.0495 31.8067 24.4152L39.1267 17.8642C40.8081 16.3595 39.9133 13.4822 37.7064 13.2974L28.0988 12.4927C27.1684 12.4148 26.358 11.7996 25.9996 10.8993L22.2981 1.60172Z\"/></svg>`}),VC=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color}\" d=\"M22.2981 1.60172C21.4479 -0.533908 18.5521 -0.533907 17.7019 1.60172L14.0004 10.8993C13.642 11.7996 12.8316 12.4148 11.9012 12.4927L2.29359 13.2974C0.0867348 13.4822 -0.808112 16.3595 0.873276 17.8642L8.19327 24.4152C8.9021 25.0495 9.21166 26.0449 8.9951 26.9933L6.75872 36.7882C6.24503 39.0381 8.58777 40.8164 10.4771 39.6107L18.7026 34.3618C19.4991 33.8536 20.5009 33.8536 21.2974 34.3618L29.5229 39.6107C31.4122 40.8164 33.755 39.0381 33.2413 36.7882L31.0049 26.9933C30.7883 26.0449 31.0979 25.0495 31.8067 24.4152L39.1267 17.8642C40.8081 16.3595 39.9133 13.4822 37.7064 13.2974L28.0988 12.4927C27.1684 12.4148 26.358 11.7996 25.9996 10.8993L22.2981 1.60172Z\"/></svg>`}),fC=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"41\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 41\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20 2.88672C10.0589 2.88672 2 10.9456 2 20.8867C2 30.8278 10.0589 38.8867 20 38.8867C29.9411 38.8867 38 30.8278 38 20.8867C38 10.9456 29.9411 2.88672 20 2.88672ZM0 20.8867C0 9.84102 8.95431 0.886719 20 0.886719C31.0457 0.886719 40 9.84102 40 20.8867C40 31.9324 31.0457 40.8867 20 40.8867C8.95431 40.8867 0 31.9324 0 20.8867Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M30.6282 13.288C31.1239 13.823 31.1239 14.6904 30.6282 15.2254C30.6282 15.2254 18.4197 28.4473 18.3393 28.5334C17.8418 29.0664 16.9679 28.9874 16.3875 28.3571L11.4833 23.0309C10.9029 22.4006 10.8358 21.4575 11.3333 20.9245C11.8309 20.3916 12.7047 20.4705 13.2851 21.1008L17.4254 25.5987L28.8329 13.288C29.3287 12.753 30.1324 12.753 30.6282 13.288Z\"/></svg>`}),LC=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"31\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 31\" fill=\"none\"><path fill=\"${l.color}\" d=\"M32.057 16.2548L40 8.31184L32.057 0.368861C31.5652 -0.122954 30.7678 -0.122954 30.276 0.368861C29.7842 0.860675 29.7842 1.65806 30.276 2.14988L35.0718 6.94572L16.3938 6.94572C15.6983 6.94572 15.1344 7.50956 15.1344 8.20509C15.1344 8.90062 15.6983 9.46446 16.3938 9.46446L35.2853 9.46446L30.276 14.4738C29.7842 14.9656 29.7842 15.763 30.276 16.2548C30.7678 16.7466 31.5652 16.7466 32.057 16.2548Z\"/><path fill=\"${l.color}\" d=\"M0 22.4168L7.94298 30.3598C8.4348 30.8516 9.23218 30.8516 9.724 30.3598C10.2158 29.868 10.2158 29.0706 9.724 28.5788L4.71465 23.5694L23.6062 23.5694C24.3017 23.5694 24.8656 23.0056 24.8656 22.31C24.8656 21.6145 24.3017 21.0507 23.6062 21.0507L4.92816 21.0507L9.724 16.2548C10.2158 15.763 10.2158 14.9656 9.724 14.4738C9.23218 13.982 8.43479 13.982 7.94298 14.4738L0 22.4168Z\"/></svg>`}),sC=()=>({getDefaultIconProps:()=>({width:\"20\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 20 40\" fill=\"none\"><path fill=\"${l.color}\" d=\"M2 5.02783H18V7.02783H2V5.02783Z\"/><path fill=\"${l.color}\" d=\"M2 30.0278H18V32.0278H2V30.0278Z\"/><path fill=\"${l.color}\" d=\"M10 36.0278C10.5523 36.0278 11 35.5801 11 35.0278C11 34.4755 10.5523 34.0278 10 34.0278C9.44772 34.0278 9 34.4755 9 35.0278C9 35.5801 9.44772 36.0278 10 36.0278Z\"/><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 3C0 1.34314 1.34315 0 3 0H17C18.6569 0 20 1.34315 20 3V37C20 38.6569 18.6569 40 17 40H3C1.34315 40 0 38.6569 0 37V3ZM3 2C2.44771 2 2 2.44771 2 3V37C2 37.5523 2.44772 38 3 38H17C17.5523 38 18 37.5523 18 37V3C18 2.44772 17.5523 2 17 2H3Z\"/></svg>`}),uC=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M25.475 0.25C26.3932 0.25 27.1462 0.95711 27.2192 1.85647L27.225 2V7.50256C27.225 8.42074 26.5179 9.17376 25.6185 9.24676L25.442 9.252L25.4429 34.0575C25.4429 36.8586 23.2303 39.1429 20.4575 39.2583L20.2375 39.2628C17.4364 39.2628 15.152 37.0503 15.0367 34.2775L15.0321 34.0575L15.032 9.252L15 9.25256C14.0818 9.25256 13.3288 8.54545 13.2558 7.64609L13.25 7.50256V2C13.25 1.08183 13.9571 0.328808 14.8565 0.255801L15 0.25H25.475ZM23.942 9.252H16.532L16.5321 34.0575C16.5321 35.9718 17.9839 37.5471 19.8466 37.7424L20.0407 37.7577L20.2375 37.7628C22.2179 37.7628 23.8354 36.2092 23.9377 34.2542L23.9429 34.0575L23.942 9.252ZM15 1.75H25.475L25.5323 1.7566C25.6428 1.78251 25.725 1.88165 25.725 2V7.50256L25.7184 7.55989C25.6925 7.67033 25.5933 7.75256 25.475 7.75256H15L14.9427 7.74596C14.8322 7.72005 14.75 7.62091 14.75 7.50256V2L14.7566 1.94268C14.7825 1.83223 14.8817 1.75 15 1.75Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22.0197 11.316V33.392C22.0197 34.3763 21.2218 35.1742 20.2375 35.1742C19.2533 35.1742 18.4554 34.3763 18.4554 33.392V11.316H22.0197Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.1824 3.21346C17.4806 3.21346 17.728 3.43104 17.7745 3.71613L17.7824 3.81346V6.06422C17.7824 6.3956 17.5138 6.66422 17.1824 6.66422C16.8842 6.66422 16.6368 6.44664 16.5903 6.16155L16.5824 6.06422V3.81346C16.5824 3.48208 16.851 3.21346 17.1824 3.21346ZM20.2388 3.21346C20.537 3.21346 20.7844 3.43104 20.8309 3.71613L20.8388 3.81346V6.06422C20.8388 6.3956 20.5701 6.66422 20.2388 6.66422C19.9405 6.66422 19.6931 6.44664 19.6466 6.16155L19.6388 6.06422V3.81346C19.6388 3.48208 19.9074 3.21346 20.2388 3.21346ZM23.8873 3.71613C23.8408 3.43104 23.5934 3.21346 23.2951 3.21346C22.9638 3.21346 22.6951 3.48208 22.6951 3.81346V6.06422L22.703 6.16155C22.7495 6.44664 22.9969 6.66422 23.2951 6.66422C23.6265 6.66422 23.8951 6.3956 23.8951 6.06422V3.81346L23.8873 3.71613Z\"/></svg>`}),MC=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color2}\" d=\"M37 8.25002C38.4625 8.25002 39.6584 9.39173 39.745 10.8325L39.75 11V37C39.75 38.4626 38.6083 39.6584 37.1675 39.745L37 39.75H3C1.53747 39.75 0.341596 38.6083 0.255019 37.1675L0.25 37V11C0.25 9.53749 1.3917 8.34162 2.83242 8.25504L2.99993 8.25002L14.0019 8.24902C14.4161 8.24899 14.752 8.58474 14.752 8.99896C14.752 9.37865 14.4699 9.69247 14.1038 9.74217L14.0021 9.74902L3 9.75002C2.35279 9.75002 1.82047 10.2419 1.75645 10.8722L1.75 11V37C1.75 37.6472 2.24187 38.1796 2.87219 38.2436L3 38.25H37C37.6472 38.25 38.1795 37.7581 38.2435 37.1278L38.25 37V11C38.25 10.3528 37.7581 9.82049 37.1276 9.75648L36.9998 9.75002L33.5108 9.74902C33.0966 9.7489 32.7609 9.41302 32.761 8.99881C32.7611 8.61911 33.0434 8.3054 33.4094 8.25584L33.5112 8.24902L37 8.25002Z\"/><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M28.5154 0.25C29.4336 0.25 30.1866 0.95711 30.2596 1.85647L30.2654 2V6.71282C30.2654 7.63099 29.5583 8.38401 28.6589 8.45702L28.62 8.458L28.6203 30.4515C28.6203 33.0644 26.5593 35.1961 23.9743 35.3094L23.7577 35.3141C21.1447 35.3141 19.0131 33.2531 18.8998 30.6681L18.8951 30.4515L18.8953 8.45974C18.0285 8.4086 17.3314 7.72659 17.2566 6.86638L17.25 6.71282V2C17.25 1.08183 17.9571 0.328808 18.8565 0.255801L19 0.25H28.5154ZM27.12 8.462H20.395V30.4515C20.395 32.1848 21.7065 33.6118 23.3913 33.7944L23.5732 33.8091L23.7577 33.8141C25.5529 33.8141 27.0196 32.4073 27.1154 30.636L27.1203 30.4515L27.12 8.462ZM19 1.75H28.5154L28.5727 1.7566C28.6832 1.78251 28.7654 1.88165 28.7654 2V6.71282L28.7588 6.77014C28.7329 6.88059 28.6337 6.96282 28.5154 6.96282H19L18.9427 6.95622C18.8322 6.93031 18.75 6.83117 18.75 6.71282V2L18.7566 1.94268C18.7825 1.83223 18.8817 1.75 19 1.75Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M25.4027 10.2301V29.9318C25.4027 30.8404 24.6662 31.5769 23.7577 31.5769C22.8491 31.5769 22.1126 30.8404 22.1126 29.9318V10.2301H25.4027ZM20.9376 2.9173C21.2358 2.9173 21.4832 3.13489 21.5297 3.41997L21.5376 3.5173V5.53114C21.5376 5.86251 21.269 6.13114 20.9376 6.13114C20.6394 6.13114 20.3919 5.91355 20.3454 5.62847L20.3376 5.53114V3.5173C20.3376 3.18593 20.6062 2.9173 20.9376 2.9173ZM23.7589 2.9173C24.0571 2.9173 24.3045 3.13489 24.351 3.41997L24.3589 3.5173V5.53114C24.3589 5.86251 24.0902 6.13114 23.7589 6.13114C23.4606 6.13114 23.2132 5.91355 23.1667 5.62847L23.1589 5.53114V3.5173C23.1589 3.18593 23.4275 2.9173 23.7589 2.9173ZM26.5801 2.9173C26.8784 2.9173 27.1258 3.13489 27.1723 3.41997L27.1801 3.5173V5.53114C27.1801 5.86251 26.9115 6.13114 26.5801 6.13114C26.2819 6.13114 26.0345 5.91355 25.988 5.62847L25.9801 5.53114V3.5173C25.9801 3.18593 26.2488 2.9173 26.5801 2.9173Z\"/></svg>`}),ZC=()=>({getDefaultIconProps:()=>({width:\"15\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 15 40\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2 0C0.89543 0 0 0.895431 0 2V7.50256C0 8.53355 0.780096 9.38233 1.78223 9.49084V34.0576C1.78223 37.0705 4.22467 39.5129 7.23758 39.5129C10.2505 39.5129 12.6929 37.0705 12.6929 34.0576V9.49083C13.695 9.38223 14.475 8.53349 14.475 7.50256V2C14.475 0.895432 13.5796 0 12.475 0H2ZM2 2H12.475L12.475 7.50256H2V2ZM3.78223 34.0576V9.50269H10.6929V34.0576C10.6929 35.9659 9.14592 37.5129 7.23758 37.5129C5.32924 37.5129 3.78223 35.9659 3.78223 34.0576Z\"/><path fill=\"${l.color}\" d=\"M4.18242 3.11353C4.56902 3.11353 4.88242 3.42693 4.88242 3.81353V6.06429C4.88242 6.45089 4.56902 6.76429 4.18242 6.76429C3.79582 6.76429 3.48242 6.45089 3.48242 6.06429V3.81353C3.48242 3.42693 3.79582 3.11353 4.18242 3.11353Z\"/><path fill=\"${l.color}\" d=\"M7.23882 3.11353C7.62542 3.11353 7.93882 3.42693 7.93882 3.81353V6.06429C7.93882 6.45089 7.62542 6.76429 7.23882 6.76429C6.85222 6.76429 6.53882 6.45089 6.53882 6.06429V3.81353C6.53882 3.42693 6.85222 3.11353 7.23882 3.11353Z\"/><path fill=\"${l.color}\" d=\"M10.9952 3.81353C10.9952 3.42693 10.6818 3.11353 10.2952 3.11353C9.90862 3.11353 9.59521 3.42693 9.59521 3.81353V6.06429C9.59521 6.45089 9.90862 6.76429 10.2952 6.76429C10.6818 6.76429 10.9952 6.45089 10.9952 6.06429V3.81353Z\"/></svg>`}),gC=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.7619 20.9524C18.0243 20.9524 19.0476 21.9757 19.0476 23.2381V37.7143C19.0476 38.9767 18.0243 40 16.7619 40H2.28571C1.02335 40 0 38.9767 0 37.7143V23.2381C0 21.9757 1.02335 20.9524 2.28571 20.9524H16.7619ZM37.7143 20.9524C38.9767 20.9524 40 21.9757 40 23.2381V37.7143C40 38.9767 38.9767 40 37.7143 40H23.2381C21.9757 40 20.9524 38.9767 20.9524 37.7143V23.2381C20.9524 21.9757 21.9757 20.9524 23.2381 20.9524H37.7143ZM16.7619 0C18.0243 0 19.0476 1.02335 19.0476 2.28571V16.7619C19.0476 18.0243 18.0243 19.0476 16.7619 19.0476H2.28571C1.02335 19.0476 0 18.0243 0 16.7619V2.28571C0 1.02335 1.02335 0 2.28571 0H16.7619ZM37.7143 0C38.9767 0 40 1.02335 40 2.28571V16.7619C40 18.0243 38.9767 19.0476 37.7143 19.0476H23.2381C21.9757 19.0476 20.9524 18.0243 20.9524 16.7619V2.28571C20.9524 1.02335 21.9757 0 23.2381 0H37.7143Z\"/></svg>`}),wC=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"35\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 35\" fill=\"none\"><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.49994 27.75C5.43294 27.75 6.99994 29.1995 6.99994 30.9875C6.99994 32.7755 5.43294 34.225 3.49994 34.225C1.56694 34.225 -6.10352e-05 32.7755 -6.10352e-05 30.9875C-6.10352e-05 29.1995 1.56694 27.75 3.49994 27.75Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M36.0961 27.75C38.2521 27.75 39.9999 29.1995 39.9999 30.9875C39.9999 32.7755 38.2521 34.225 36.0961 34.225H14.9038C12.7478 34.225 10.9999 32.7755 10.9999 30.9875C10.9999 29.1995 12.7478 27.75 14.9038 27.75H36.0961Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.49994 13.875C5.43294 13.875 6.99994 15.3245 6.99994 17.1125C6.99994 18.9005 5.43294 20.35 3.49994 20.35C1.56694 20.35 -6.10352e-05 18.9005 -6.10352e-05 17.1125C-6.10352e-05 15.3245 1.56694 13.875 3.49994 13.875Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M36.0961 13.875C38.2521 13.875 39.9999 15.3245 39.9999 17.1125C39.9999 18.9005 38.2521 20.35 36.0961 20.35H14.9038C12.7478 20.35 10.9999 18.9005 10.9999 17.1125C10.9999 15.3245 12.7478 13.875 14.9038 13.875H36.0961Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.49994 0C5.43294 0 6.99994 1.44948 6.99994 3.2375C6.99994 5.02552 5.43294 6.475 3.49994 6.475C1.56694 6.475 -6.10352e-05 5.02552 -6.10352e-05 3.2375C-6.10352e-05 1.44948 1.56694 0 3.49994 0Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M36.0961 0C38.2521 0 39.9999 1.44948 39.9999 3.2375C39.9999 5.02552 38.2521 6.475 36.0961 6.475H14.9038C12.7478 6.475 10.9999 5.02552 10.9999 3.2375C10.9999 1.44948 12.7478 0 14.9038 0H36.0961Z\"/></svg>`}),$C=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"41\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 41\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M25.9794 5.58398H38.9999C39.5522 5.58398 39.9999 6.0317 39.9999 6.58398C39.9999 7.13627 39.5522 7.58398 38.9999 7.58398H34.9551L31.9994 37.3012C31.9658 38.9911 30.3907 40.084 28.8181 40.084H11.1817C9.60913 40.084 8.03402 38.9911 8.00046 37.3012L5.04471 7.58398H0.999939C0.447654 7.58398 -6.10352e-05 7.13627 -6.10352e-05 6.58398C-6.10352e-05 6.0317 0.447654 5.58398 0.999939 5.58398H14.0205C14.2746 2.50422 16.8546 0.0839844 19.9999 0.0839844C23.1453 0.0839844 25.7253 2.50422 25.9794 5.58398ZM16.0309 5.58398H23.969C23.7229 3.61083 22.0397 2.08398 19.9999 2.08398C17.9601 2.08398 16.2769 3.61083 16.0309 5.58398ZM7.05458 7.58398H32.9452L29.9999 37.1965V37.2461C29.9999 37.5549 29.6384 38.084 28.8181 38.084H11.1817C10.3614 38.084 9.99991 37.5549 9.99991 37.2461V37.1965L7.05458 7.58398Z\"/><path fill=\"${l.color}\" d=\"M14.5385 13.5126C14.5385 12.9603 14.0908 12.5126 13.5385 12.5126C12.9862 12.5126 12.5385 12.9603 12.5385 13.5126V30.6554C12.5385 31.2077 12.9862 31.6554 13.5385 31.6554C14.0908 31.6554 14.5385 31.2077 14.5385 30.6554V13.5126Z\"/><path fill=\"${l.color}\" d=\"M23.1537 13.5126C23.1537 12.9603 22.706 12.5126 22.1537 12.5126C21.6015 12.5126 21.1537 12.9603 21.1537 13.5126V30.6554C21.1537 31.2077 21.6015 31.6554 22.1537 31.6554C22.706 31.6554 23.1537 31.2077 23.1537 30.6554V13.5126Z\"/><path fill=\"${l.color}\" d=\"M26.4614 12.5126C27.0136 12.5126 27.4614 12.9603 27.4614 13.5126V30.6554C27.4614 31.2077 27.0136 31.6554 26.4614 31.6554C25.9091 31.6554 25.4614 31.2077 25.4614 30.6554V13.5126C25.4614 12.9603 25.9091 12.5126 26.4614 12.5126Z\"/><path fill=\"${l.color}\" d=\"M18.8461 13.5126C18.8461 12.9603 18.3984 12.5126 17.8461 12.5126C17.2938 12.5126 16.8461 12.9603 16.8461 13.5126V30.6554C16.8461 31.2077 17.2938 31.6554 17.8461 31.6554C18.3984 31.6554 18.8461 31.2077 18.8461 30.6554V13.5126Z\"/></svg>`}),mC=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.0007 0C8.95339 0 0 8.95339 0 19.9993C0 31.0453 8.95339 40 20.0007 40C31.0466 40 40 31.0453 40 19.9993C40 8.95339 31.0466 0 20.0007 0Z\"/><path d=\"M21.9027 18.6547L29.3482 10H27.5838L21.119 17.5148L15.9555 10H10L17.8082 21.3637L10 30.4395H11.7644L18.5915 22.5036L24.0445 30.4395H30L21.9027 18.6547ZM12.4002 11.3282H15.1103L27.5847 29.1717H24.8746L12.4002 11.3282Z\" fill=\"white\"/></svg>`}),xC=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.0007 0C8.95339 0 0 8.95339 0 19.9993C0 31.0453 8.95339 40 20.0007 40C31.0466 40 40 31.0453 40 19.9993C40 8.95339 31.0466 0 20.0007 0Z\"/><path d=\"M21.9027 18.6547L29.3482 10H27.5838L21.119 17.5148L15.9555 10H10L17.8082 21.3637L10 30.4395H11.7644L18.5915 22.5036L24.0445 30.4395H30L21.9027 18.6547ZM12.4002 11.3282H15.1103L27.5847 29.1717H24.8746L12.4002 11.3282Z\" fill=\"white\"/></svg>`}),kC=()=>({getDefaultIconProps:()=>({width:\"33\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 33 40\" fill=\"none\"><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.4783 9.03711C10.4783 8.48482 10.926 8.03711 11.4783 8.03711H16.0248C16.5771 8.03711 17.0248 8.48482 17.0248 9.03711V13.7781H18.2972C18.8495 13.7781 19.2972 14.2258 19.2972 14.7781C19.2972 15.3304 18.8495 15.7781 18.2972 15.7781H16.0248C15.4726 15.7781 15.0248 15.3304 15.0248 14.7781V10.0371H11.4783C10.926 10.0371 10.4783 9.58939 10.4783 9.03711Z\"/><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.9724 0C10.4949 0 5.74097 4.70796 5.74097 10.2731C5.74097 13.2732 6.96254 16.3354 8.79884 18.6489C10.6234 20.9477 13.1906 22.666 15.9724 22.666C19.1145 22.666 21.9432 21.0682 23.9616 18.7678C25.9795 16.468 27.259 13.3903 27.259 10.2731C27.259 4.44581 22.2296 0 15.9724 0ZM7.74097 10.2731C7.74097 5.81306 11.599 2 15.9724 2C21.3183 2 25.259 5.73422 25.259 10.2731C25.259 12.859 24.1876 15.4778 22.4583 17.4487C20.7295 19.419 18.4149 20.666 15.9724 20.666C14.022 20.666 11.9734 19.4315 10.3654 17.4055C8.769 15.3944 7.74097 12.7602 7.74097 10.2731Z\"/><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.074 24.111C11.5327 24.111 7.57437 25.1938 4.92309 27.7531C3.03475 29.5759 2.20773 31.3453 0.922996 35.7553L0.922707 35.7563L0.6496 36.6868L0.649092 36.6885C0.423954 37.4454 0.244358 38.0176 0.0557032 38.5589C-0.0508641 38.8647 -0.0027492 39.2032 0.184815 39.4672C0.372379 39.7312 0.676169 39.888 1.00001 39.888H32C32.3236 39.888 32.6271 39.7315 32.8147 39.4679C33.0023 39.2043 33.0508 38.8662 32.9448 38.5605C32.7545 38.0113 32.57 37.4289 32.3526 36.6902L32.3522 36.6886L32.0204 35.5452L32.0201 35.544C30.7894 31.2703 29.975 29.4691 28.2369 27.6951C25.7703 25.1774 22.1271 24.111 17.074 24.111ZM6.31213 29.1921C8.41201 27.165 11.7338 26.111 17.074 26.111C21.8889 26.111 24.8855 27.1321 26.8083 29.0947C28.1807 30.4955 28.8855 31.8863 30.0985 36.0986L30.4325 37.2496L30.4335 37.2531C30.4992 37.4763 30.5623 37.687 30.6239 37.888H26.5773L25.6946 34.1008C25.5692 33.5629 25.0316 33.2285 24.4937 33.3538C23.9558 33.4792 23.6214 34.0168 23.7468 34.5547L24.5237 37.888H8.47591L9.25278 34.5547C9.37814 34.0168 9.04373 33.4792 8.50586 33.3538C7.96799 33.2285 7.43034 33.5629 7.30498 34.1008L6.42231 37.888H2.37627C2.43726 37.6891 2.50029 37.4799 2.56662 37.2569L2.56763 37.2535L2.84289 36.3157C4.10596 31.9799 4.81532 30.6369 6.31213 29.1921Z\"/></svg>`}),bC=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"35\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 35\" fill=\"none\"><path fill=\"${l.color2}\" d=\"M3.53193 7.84115V28.0607C3.53193 29.7469 4.89887 31.1138 6.58507 31.1138H26.843L24.8042 29.0784H6.58507C6.02301 29.0784 5.56736 28.6227 5.56736 28.0607V9.87323L3.53193 7.84115Z\"/><path fill=\"${l.color2}\" d=\"M29.4836 25.1216V19.1836L36.4939 22.6681C37.1704 23.0043 37.9646 22.5122 37.9646 21.7567V12.0088C37.9646 11.2533 37.1704 10.7612 36.4939 11.0975L29.4836 14.582V5.67097C29.4836 5.1089 29.028 4.65326 28.4659 4.65326H8.98149L6.9427 2.61783H28.4659C30.1521 2.61783 31.5191 3.98477 31.5191 5.67097V11.2973L35.5879 9.27482C37.6175 8.26599 40 9.74234 40 12.0088V21.7567C40 24.0232 37.6175 25.4996 35.5879 24.4907L31.5191 22.4683V27.1537L29.4836 25.1216Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.297488 0.298675C0.694602 -0.0990943 1.33898 -0.0996259 1.73675 0.297488L33.938 32.4457C34.3358 32.8428 34.3363 33.4872 33.9392 33.8849C33.5421 34.2827 32.8977 34.2833 32.5 33.8861L0.298675 1.73794C-0.0990943 1.34083 -0.0996259 0.696445 0.297488 0.298675Z\"/></svg>`}),_C=()=>({getDefaultIconProps:()=>({width:\"36\",height:\"28\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 36 28\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3 2C2.44772 2 2 2.44772 2 3V25C2 25.5523 2.44772 26 3 26H24.5C25.0523 26 25.5 25.5523 25.5 25V16.1778L32.555 19.6845C33.2197 20.0149 34.0001 19.5314 34.0001 18.789V9.21084C34.0001 8.46848 33.2197 7.98493 32.555 8.31536L25.5 11.8221V3C25.5 2.44772 25.0523 2 24.5 2H3ZM0 3C0 1.34315 1.34315 0 3 0H24.5C26.1569 0 27.5 1.34315 27.5 3V8.59454L31.6648 6.5244C33.6591 5.53312 36.0001 6.98378 36.0001 9.21084V18.789C36.0001 21.0161 33.659 22.4668 31.6648 21.4755L27.5 19.4053V25C27.5 26.6569 26.1569 28 24.5 28H3C1.34315 28 0 26.6569 0 25V3Z\"/><path fill=\"${l.color}\" d=\"M9.63222 10.668C10.4735 8.95587 12.3029 7.75 14.4505 7.75C16.9716 7.75 19.0543 9.41187 19.6145 11.6037C19.7171 12.005 20.1255 12.2472 20.5268 12.1446C20.9282 12.0421 21.1703 11.6336 21.0678 11.2323C20.3317 8.35205 17.6315 6.25 14.4505 6.25C11.9589 6.25 9.76233 7.53961 8.57349 9.48267V7.73633C8.57349 7.32212 8.2377 6.98633 7.82349 6.98633C7.40927 6.98633 7.07349 7.32212 7.07349 7.73633V11.418C7.07349 11.8322 7.40927 12.168 7.82349 12.168H8.54395C8.55492 12.1682 8.56585 12.1682 8.57675 12.168H11.5051C11.9194 12.168 12.2551 11.8322 12.2551 11.418C12.2551 11.0038 11.9194 10.668 11.5051 10.668H9.63222Z\"/><path fill=\"${l.color}\" d=\"M19.5878 14.8559H16.6594C16.2452 14.8559 15.9094 15.1917 15.9094 15.6059C15.9094 16.0201 16.2452 16.3559 16.6594 16.3559H18.5323C17.6911 18.0681 15.8616 19.2739 13.7141 19.2739C11.193 19.2739 9.11023 17.6121 8.55006 15.4202C8.4475 15.0189 8.03902 14.7767 7.63771 14.8793C7.23639 14.9819 6.99421 15.3903 7.09677 15.7916C7.83288 18.6719 10.5331 20.7739 13.7141 20.7739C16.2056 20.7739 18.4022 19.4843 19.5911 17.5413V19.2876C19.5911 19.7018 19.9269 20.0376 20.3411 20.0376C20.7553 20.0376 21.0911 19.7018 21.0911 19.2876V15.6059C21.0911 15.1917 20.7553 14.8559 20.3411 14.8559H19.6206C19.6096 14.8557 19.5987 14.8557 19.5878 14.8559Z\"/></svg>`}),BC=()=>({getDefaultIconProps:()=>({width:\"41\",height:\"32\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 32\" fill=\"none\"><path fill=\"${l.color}\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.83333 2.22222C3.21968 2.22222 2.72222 2.71968 2.72222 3.33333V27.7777C2.72222 28.3914 3.21968 28.8888 3.83333 28.8888H27.7222C28.3358 28.8888 28.8333 28.3914 28.8333 27.7777V17.9753L36.6721 21.8716C37.4107 22.2388 38.2778 21.7015 38.2778 20.8767V10.2342C38.2778 9.4094 37.4107 8.87213 36.6721 9.23927L28.8333 13.1356V3.33333C28.8333 2.71968 28.3358 2.22222 27.7222 2.22222H3.83333ZM0.5 3.33333C0.5 1.49238 1.99238 0 3.83333 0H27.7222C29.5631 0 31.0555 1.49238 31.0555 3.33333V9.54946L35.683 7.24932C37.8989 6.1479 40.5 7.75974 40.5 10.2342V20.8767C40.5 23.3512 37.8989 24.963 35.683 23.8616L31.0555 21.5615V27.7777C31.0555 29.6187 29.5631 31.111 27.7222 31.111H3.83333C1.99238 31.111 0.5 29.6187 0.5 27.7777V3.33333Z\"/></svg>`}),DC=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"22\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 22\" fill=\"none\"><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20 16C22.7614 16 25 13.7614 25 11C25 8.23858 22.7614 6 20 6C17.2386 6 15 8.23858 15 11C15 13.7614 17.2386 16 20 16ZM20 18C23.866 18 27 14.866 27 11C27 7.13401 23.866 4 20 4C16.134 4 13 7.13401 13 11C13 14.866 16.134 18 20 18Z\"/><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M33.1783 17.0257C36.5216 15.1869 38 12.9711 38 11C38 9.02888 36.5216 6.81309 33.1783 4.97426C29.907 3.17503 25.2516 2 20 2C14.7484 2 10.093 3.17503 6.8217 4.97426C3.47838 6.81309 2 9.02888 2 11C2 12.9711 3.47838 15.1869 6.8217 17.0257C10.093 18.825 14.7484 20 20 20C25.2516 20 29.907 18.825 33.1783 17.0257ZM20 22C31.0457 22 40 17.0751 40 11C40 4.92487 31.0457 0 20 0C8.9543 0 0 4.92487 0 11C0 17.0751 8.9543 22 20 22Z\"/></svg>`}),PC=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"40\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 40\" fill=\"none\"><g clip-path=\"url(#clip0_12957_54787)\"><path fill=\"${l.color}\" d=\"M13.4051 17.6477C13.1428 18.3829 13 19.1748 13 20C13 23.866 16.134 27 20 27C20.8252 27 21.6171 26.8572 22.3523 26.5949L20.7077 24.9503C20.4765 24.9831 20.2402 25 20 25C17.2386 25 15 22.7614 15 20C15 19.7598 15.0169 19.5235 15.0497 19.2923L13.4051 17.6477Z\"/><path fill=\"${l.color}\" d=\"M24.9503 20.7077C24.9831 20.4765 25 20.2402 25 20C25 17.2386 22.7614 15 20 15C19.7598 15 19.5235 15.0169 19.2923 15.0497L17.6477 13.4051C18.3829 13.1428 19.1748 13 20 13C23.866 13 27 16.134 27 20C27 20.8252 26.8572 21.6171 26.5949 22.3523L24.9503 20.7077Z\"/><path fill=\"${l.color2}\" d=\"M7.27201 11.5146C2.83059 13.5322 0 16.5843 0 20C0 26.0751 8.9543 31 20 31C22.17 31 24.2592 30.8099 26.2158 30.4584L24.4656 28.7082C23.0422 28.898 21.547 29 20 29C14.7484 29 10.093 27.825 6.8217 26.0257C3.47838 24.1869 2 21.9711 2 20C2 18.0289 3.47838 15.8131 6.8217 13.9743C7.43228 13.6384 8.09108 13.3244 8.79298 13.0356L7.27201 11.5146Z\"/><path fill=\"${l.color2}\" d=\"M31.207 26.9644C31.9089 26.6756 32.5677 26.3616 33.1783 26.0257C36.5216 24.1869 38 21.9711 38 20C38 18.0289 36.5216 15.8131 33.1783 13.9743C29.907 12.175 25.2516 11 20 11C18.453 11 16.9578 11.102 15.5344 11.2918L13.7842 9.5416C15.7408 9.19007 17.83 9 20 9C31.0457 9 40 13.9249 40 20C40 23.4157 37.1694 26.4678 32.728 28.4853L31.207 26.9644Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.292893 0.292893C0.683417 -0.0976311 1.31658 -0.0976311 1.70711 0.292893L39.7071 38.2929C40.0976 38.6834 40.0976 39.3166 39.7071 39.7071C39.3166 40.0976 38.6834 40.0976 38.2929 39.7071L0.292893 1.70711C-0.0976311 1.31658 -0.0976311 0.683417 0.292893 0.292893Z\"/></g><defs><clipPath id=\"clip0_12957_54787\"><rect width=\"40\" height=\"40\" fill=\"white\"/></clipPath></defs></svg>`}),IC=()=>({getDefaultIconProps:()=>({width:\"40\",height:\"36\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 40 36\" fill=\"none\"><path fill=\"${l.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.9999 2.31398L37.9855 33.8346C37.9893 33.8412 37.9948 33.8539 37.9978 33.874C37.9985 33.8783 37.999 33.8828 37.9994 33.8874H2.00072C2.00164 33.8765 2.0034 33.8665 2.00565 33.8578C2.00907 33.8446 2.0129 33.837 2.01425 33.8346L19.9999 2.31398ZM18.4886 0.92705C18.9305 0.152515 19.8811 -0.270482 20.7689 0.197422L20.8004 0.21401L20.9481 0.305845L20.9761 0.326051C21.1996 0.487354 21.3792 0.69569 21.5112 0.92705L39.7226 32.8434C40.2198 33.7147 40.0479 34.9453 39.1876 35.5662C38.9088 35.7674 38.5717 35.8874 38.2113 35.8874H1.78844C0.654035 35.8874 0 34.8337 0 33.9043C0 33.5363 0.0924355 33.1671 0.277146 32.8434L18.4886 0.92705Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.3811 24.1503C20.3554 24.3409 20.1928 24.4831 20.0005 24.4831C19.8078 24.4831 19.6449 24.3402 19.6197 24.1492L18.1062 12.664C18.0354 12.1484 18 11.7642 18 11.5113C18 10.8984 18.1976 10.4072 18.5929 10.0375C18.9882 9.66789 19.4631 9.48306 20.0177 9.48306C20.5723 9.48306 21.0413 9.66789 21.4248 10.0375C21.8083 10.4072 22 10.9568 22 11.6864C22 11.9198 21.9764 12.2457 21.9292 12.664L20.3811 24.1503ZM21.4144 30.8948C21.024 31.287 20.5526 31.4831 20 31.4831C19.4474 31.4831 18.976 31.287 18.5856 30.8948C18.1952 30.5027 18 30.0291 18 29.474C18 28.931 18.1952 28.4635 18.5856 28.0713C18.976 27.6791 19.4474 27.4831 20 27.4831C20.5526 27.4831 21.024 27.6791 21.4144 28.0713C21.8048 28.4635 22 28.931 22 29.474C22 30.0291 21.8048 30.5027 21.4144 30.8948Z\"/></svg>`}),yC=()=>({getDefaultIconProps:()=>({width:\"255\",height:\"99\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" viewBox=\"0 0 255 99\"><g><path fill=\"${l.color}\" class=\"st0\" d=\"M14.7,87.5c0,6.4,5.2,11.5,11.6,11.5s11.6-5.2,11.6-11.5v-76C37.9,5.2,32.7,0,26.3,0H12.6C5.6,0,0,5.7,0,12.5   C0,19.5,5.7,25,12.7,25h2.1L14.7,87.5L14.7,87.5z\"/><path fill=\"${l.color}\" class=\"st0\" d=\"M69.1,25.2v62.3c0,6.4,5.2,11.5,11.6,11.5s11.6-5.2,11.6-11.5v-76C92.3,5.2,87.1,0,80.7,0H67   c-7,0-12.6,5.7-12.6,12.5c0,7,5.7,12.5,12.7,12.5L69.1,25.2L69.1,25.2z\"/><g><path fill=\"${l.color}\" class=\"st0\" d=\"M198.1,25.2h18.6L226.9,0h-28.8c-7,0-12.6,5.7-12.6,12.5C185.4,19.5,191.1,25.2,198.1,25.2z\"/><path fill=\"${l.color}\" class=\"st0\" d=\"M247.7,0.9c-6-2.4-12.7,0.5-15.1,6.5L202,83.1c-2.4,6,0.5,12.6,6.5,15s12.7-0.5,15.1-6.5l30.6-75.8    C256.5,10,253.6,3.2,247.7,0.9z\"/></g><g><path fill=\"${l.color}\" class=\"st0\" d=\"M118.2,25.2h18.6L147,0h-28.8c-7,0-12.6,5.7-12.6,12.5C105.5,19.5,111.2,25.2,118.2,25.2z\"/><path fill=\"${l.color}\" class=\"st0\" d=\"M167.8,0.9c-6-2.4-12.7,0.5-15.1,6.5l-30.6,75.7c-2.4,6,0.5,12.6,6.5,15c6,2.4,12.7-0.5,15.1-6.5l30.6-75.8    C176.6,10,173.7,3.2,167.8,0.9z\"/></g></g></svg>`}),UC=()=>({getDefaultIconProps:()=>({width:\"148\",height:\"50\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 148 50\" fill=\"none\"><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13.9074 22.0607C11.7258 22.0607 9.5932 21.4138 7.77927 20.2018C5.96533 18.9897 4.55155 17.267 3.71668 15.2515C2.88182 13.236 2.66339 11.0181 3.08899 8.87844C3.5146 6.73876 4.56514 4.77334 6.10777 3.23072C7.65039 1.6881 9.61581 0.637559 11.7555 0.21195C13.8952 -0.213659 16.113 0.00477928 18.1285 0.839641C20.1441 1.6745 21.8668 3.08829 23.0788 4.90222C24.2908 6.71615 24.9378 8.84876 24.9378 11.0304C24.9336 13.9545 23.7702 16.7577 21.7025 18.8254C19.6348 20.8931 16.8316 22.0566 13.9074 22.0607ZM13.9074 6.83945C13.0785 6.83945 12.2682 7.08524 11.5791 7.54574C10.8899 8.00625 10.3527 8.66078 10.0355 9.42657C9.7183 10.1924 9.63531 11.035 9.79702 11.848C9.95873 12.6609 10.3579 13.4077 10.944 13.9938C11.5301 14.5799 12.2768 14.979 13.0898 15.1407C13.9028 15.3024 14.7454 15.2195 15.5112 14.9023C16.277 14.5851 16.9315 14.0479 17.392 13.3587C17.8525 12.6695 18.0983 11.8592 18.0983 11.0304C18.0969 9.91928 17.655 8.8541 16.8693 8.06845C16.0837 7.2828 15.0185 6.84082 13.9074 6.83945Z\"/><path fill=\"${l.color}\" d=\"M27.8252 39.006C27.8252 35.3162 26.3594 31.7775 23.7503 29.1683C21.1412 26.5592 17.6024 25.0934 13.9126 25.0934C10.2227 25.0934 6.68403 26.5592 4.07491 29.1683C1.4658 31.7775 1.44326e-05 35.3162 1.44326e-05 39.006V49.2574C-0.000478048 49.3022 0.0116421 49.3462 0.0349905 49.3845C0.0583389 49.4227 0.0919739 49.4536 0.132054 49.4737C0.172133 49.4937 0.217041 49.5021 0.261648 49.4978C0.306254 49.4935 0.34876 49.4768 0.384311 49.4495L6.74598 44.7185C6.77511 44.6957 6.79867 44.6665 6.81486 44.6332C6.83106 44.5999 6.83947 44.5634 6.83946 44.5264V39.006C6.88938 37.164 7.65622 35.4141 8.97675 34.1289C10.2973 32.8437 12.0673 32.1245 13.91 32.1245C15.7527 32.1245 17.5227 32.8437 18.8432 34.1289C20.1638 35.4141 20.9306 37.164 20.9805 39.006V49.2574C20.9805 49.3221 21.0062 49.3842 21.052 49.43C21.0978 49.4758 21.1599 49.5015 21.2246 49.5015H27.5811C27.6458 49.5015 27.7079 49.4758 27.7537 49.43C27.7995 49.3842 27.8252 49.3221 27.8252 49.2574V39.006Z\"/><path fill=\"${l.color}\" d=\"M49.0238 18.4151C49.0341 19.2389 48.7992 20.0472 48.349 20.7372C47.8988 21.4272 47.2536 21.9678 46.4954 22.2903C45.7373 22.6127 44.9003 22.7024 44.091 22.548C43.2817 22.3936 42.5366 22.0021 41.9504 21.4232C41.3642 20.8443 40.9633 20.1041 40.7987 19.2968C40.6342 18.4896 40.7134 17.6516 41.0262 16.8894C41.3391 16.1272 41.8715 15.4753 42.5558 15.0164C43.2401 14.5576 44.0454 14.3125 44.8692 14.3125C45.9601 14.3191 47.0052 14.7518 47.7814 15.5183C48.5577 16.2848 49.0035 17.3244 49.0238 18.4151Z\"/><path fill=\"${l.color}\" d=\"M48.0579 25.7999H41.7326C41.6006 25.7999 41.4937 25.9069 41.4937 26.0388V49.2576C41.4937 49.3895 41.6006 49.4965 41.7326 49.4965H48.0579C48.1898 49.4965 48.2968 49.3895 48.2968 49.2576V26.0388C48.2968 25.9069 48.1898 25.7999 48.0579 25.7999Z\"/><path fill=\"${l.color}\" d=\"M75.8103 36.0823V49.2574C75.8103 49.3213 75.7853 49.3826 75.7407 49.4282C75.696 49.4738 75.6353 49.5001 75.5714 49.5015H69.2461C69.1823 49.5001 69.1215 49.4738 69.0769 49.4282C69.0322 49.3826 69.0072 49.3213 69.0072 49.2574V37.2403C69.0072 33.9582 67.2208 32.0783 64.4216 32.0783H64.2087C62.9803 32.1437 61.8244 32.6799 60.981 33.5755C60.1377 34.471 59.6718 35.6571 59.6803 36.8872V49.2574C59.6803 49.3213 59.6553 49.3826 59.6106 49.4282C59.566 49.4738 59.5052 49.5001 59.4414 49.5015H53.1264C53.0946 49.5015 53.0631 49.4952 53.0338 49.4828C53.0045 49.4705 52.9779 49.4524 52.9557 49.4297C52.9334 49.407 52.9159 49.38 52.9042 49.3504C52.8925 49.3208 52.8869 49.2892 52.8875 49.2574V26.0438C52.8869 26.012 52.8925 25.9804 52.9042 25.9508C52.9159 25.9212 52.9334 25.8943 52.9557 25.8715C52.9779 25.8488 53.0045 25.8307 53.0338 25.8184C53.0631 25.8061 53.0946 25.7997 53.1264 25.7997H59.4517C59.5156 25.8011 59.5763 25.8274 59.621 25.873C59.6656 25.9187 59.6907 25.98 59.6906 26.0438V28.5002C59.6931 28.5058 59.6971 28.5105 59.7021 28.5138C59.7072 28.5171 59.7131 28.5189 59.7192 28.5189C59.7215 28.5189 59.7237 28.5187 59.726 28.5182C59.7296 28.5173 59.7331 28.5159 59.7363 28.5138C59.7413 28.5105 59.7453 28.5058 59.7478 28.5002C60.4772 27.4881 61.4415 26.6682 62.5578 26.111C63.674 25.5538 64.9088 25.2759 66.1562 25.3012C72.1439 25.3168 75.8103 29.4194 75.8103 36.0823Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M102.784 39.2657H85.8903C85.8883 39.2657 85.8862 39.2659 85.8842 39.2662C85.8818 39.2667 85.8794 39.2674 85.8771 39.2685C85.8729 39.2703 85.8692 39.2731 85.8662 39.2766L85.8644 39.2789C85.8624 39.2819 85.8608 39.2851 85.8599 39.2885C85.8594 39.2902 85.8591 39.2918 85.8589 39.2935C85.8586 39.2963 85.8587 39.2992 85.8592 39.3021C86.4979 42.5167 88.7102 44.1889 91.9352 44.1889C93.9554 44.1889 96.0898 43.3164 96.9726 41.9818C97.0059 41.9283 97.0589 41.8901 97.1202 41.8755C97.1814 41.8609 97.246 41.8711 97.2998 41.9039L102.207 44.8899C102.261 44.9233 102.299 44.9759 102.315 45.0368C102.33 45.0978 102.321 45.1624 102.29 45.2171C100.494 48.2292 96.5779 49.9845 91.7898 49.9845C88.5306 50.0313 85.3853 48.7861 83.0415 46.5209C80.6976 44.2558 79.3456 41.1549 79.2811 37.896C79.2166 34.6371 80.4448 31.4851 82.6972 29.129C84.9496 26.7729 88.0431 25.4041 91.3016 25.322C92.8261 25.2516 94.3491 25.4918 95.7779 26.0279C97.2068 26.564 98.5119 27.3849 99.6138 28.4407C100.716 29.4965 101.592 30.7653 102.188 32.1699C102.785 33.5746 103.09 35.0859 103.085 36.612C103.089 37.4653 103.028 38.3177 102.903 39.1618C102.901 39.1912 102.887 39.2185 102.864 39.2378C102.842 39.2572 102.813 39.2672 102.784 39.2657ZM96.2404 34.9242C96.2425 34.9242 96.2447 34.924 96.2468 34.9236C96.2491 34.9232 96.2514 34.9224 96.2536 34.9214C96.2578 34.9196 96.2615 34.9168 96.2645 34.9133C96.2674 34.9099 96.2696 34.9058 96.2708 34.9014C96.2713 34.8997 96.2716 34.898 96.2718 34.8962C96.2721 34.8935 96.272 34.8906 96.2715 34.8878C95.9651 32.5405 93.8047 30.8216 91.3068 30.8216C88.4713 30.8216 86.5966 32.3484 85.9578 34.8827C85.9561 34.8875 85.9556 34.8927 85.9564 34.8978C85.9572 34.9029 85.9592 34.9077 85.9623 34.9118C85.9636 34.9136 85.9652 34.9153 85.9669 34.9167L85.969 34.9184C85.9706 34.9195 85.9723 34.9205 85.9741 34.9214C85.9787 34.9235 85.9839 34.9245 85.989 34.9242H96.2404Z\"/><path fill=\"${l.color}\" d=\"M122.045 25.8414L121.677 31.9693C121.675 31.9873 121.67 32.0047 121.661 32.0202C121.651 32.0357 121.639 32.049 121.624 32.0589C121.609 32.0689 121.592 32.0754 121.574 32.0779C121.556 32.0803 121.538 32.0788 121.521 32.0732C120.586 31.7637 119.608 31.6025 118.623 31.5954C118.173 31.604 117.728 31.6847 117.304 31.8343C116.169 32.2356 115.188 32.9823 114.498 33.9695C113.809 34.9568 113.446 36.1351 113.461 37.3391V49.2835C113.461 49.3482 113.435 49.4103 113.39 49.4561C113.344 49.5018 113.282 49.5275 113.217 49.5275H106.897C106.832 49.5275 106.77 49.5018 106.724 49.4561C106.678 49.4103 106.653 49.3482 106.653 49.2835V26.0439C106.653 25.9792 106.678 25.9171 106.724 25.8713C106.77 25.8255 106.832 25.7998 106.897 25.7998H113.217C113.282 25.7998 113.344 25.8255 113.39 25.8713C113.435 25.9171 113.461 25.9792 113.461 26.0439V28.4951C113.461 28.502 113.464 28.5086 113.469 28.5135C113.473 28.5183 113.48 28.5211 113.487 28.5211C113.491 28.5211 113.494 28.5203 113.497 28.5189C113.5 28.5177 113.503 28.5158 113.505 28.5135C113.51 28.5086 113.513 28.502 113.513 28.4951C114.131 27.5508 114.965 26.7681 115.947 26.2125C116.93 25.6568 118.03 25.3444 119.158 25.3013C120.111 25.2696 121.062 25.4067 121.967 25.7063C121.995 25.7148 122.019 25.7334 122.033 25.7585C122.047 25.7836 122.052 25.8132 122.045 25.8414Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M147.201 26.0438V49.2574C147.201 49.3221 147.176 49.3842 147.13 49.43C147.084 49.4757 147.022 49.5015 146.957 49.5015H140.632C140.568 49.5001 140.507 49.4738 140.463 49.4282C140.418 49.3825 140.393 49.3212 140.393 49.2574V46.8062C140.393 46.7993 140.39 46.7927 140.385 46.7878C140.38 46.783 140.374 46.7802 140.367 46.7802C140.36 46.7802 140.353 46.783 140.349 46.7878C140.344 46.7927 140.341 46.7993 140.341 46.8062C139.147 48.6861 136.342 50 133.393 50C127.218 50 122.341 44.4952 122.341 37.6402C122.341 30.7852 127.218 25.3323 133.393 25.3323C136.296 25.3323 139.147 26.6462 140.341 28.5261C140.341 28.5284 140.341 28.5306 140.342 28.5327C140.343 28.5371 140.345 28.5412 140.349 28.5445C140.353 28.5494 140.36 28.5521 140.367 28.5521C140.371 28.5521 140.374 28.5513 140.377 28.5499C140.38 28.5486 140.383 28.5468 140.385 28.5445C140.39 28.5396 140.393 28.533 140.393 28.5261V26.0438C140.393 25.9799 140.418 25.9186 140.463 25.873C140.507 25.8274 140.568 25.8011 140.632 25.7997H146.957C147.022 25.7997 147.084 25.8254 147.13 25.8712C147.176 25.917 147.201 25.979 147.201 26.0438ZM140.393 40.5328V34.8203C140.398 34.7981 140.398 34.775 140.393 34.7528C139.808 33.8272 138.997 33.0654 138.037 32.5386C137.077 32.0118 135.999 31.7373 134.904 31.7407C133.342 31.7407 131.844 32.3612 130.74 33.4656C129.635 34.57 129.015 36.0679 129.015 37.6298C129.015 39.1917 129.635 40.6896 130.74 41.794C131.844 42.8984 133.342 43.5189 134.904 43.5189C135.989 43.5311 137.059 43.2708 138.017 42.7618C138.976 42.2527 139.791 41.5113 140.388 40.6055C140.398 40.5827 140.4 40.5569 140.393 40.5328Z\"/></svg>`}),zC=()=>({getDefaultIconProps:()=>({width:\"120\",height:\"73\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg class=\"logo__svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 120 73\"><defs><radialGradient id=\"prefix__a\" cx=\"45.9%\" cy=\"63.38%\" r=\"49.714%\" fx=\"45.9%\" fy=\"63.38%\" gradientTransform=\"matrix(.93609 0 0 1 .03 0)\"><stop offset=\"0%\" stop-color=\"#F3BC5C\"></stop><stop offset=\"44.748%\" stop-color=\"#F6A519\"></stop><stop offset=\"100%\" stop-color=\"#E87513\"></stop></radialGradient><radialGradient id=\"prefix__b\" cx=\"43.613%\" cy=\"58.996%\" r=\"56.387%\" fx=\"43.613%\" fy=\"58.996%\" gradientTransform=\"matrix(1 0 0 .9432 0 .034)\"><stop offset=\"0%\" stop-color=\"#41C0C2\"></stop><stop offset=\"75.071%\" stop-color=\"#01A5A3\"></stop><stop offset=\"100%\" stop-color=\"#009391\"></stop></radialGradient><radialGradient id=\"prefix__c\" cx=\"34.464%\" cy=\"32.46%\" r=\"93.744%\" fx=\"34.464%\" fy=\"32.46%\" gradientTransform=\"matrix(1 0 0 .94786 0 .017)\"><stop offset=\"0%\" stop-color=\"#BBDFE7\"></stop><stop offset=\"22.51%\" stop-color=\"#B0DAE3\"></stop><stop offset=\"61.07%\" stop-color=\"#92CEDA\"></stop><stop offset=\"76.92%\" stop-color=\"#83C8D5\"></stop></radialGradient></defs><g fill=\"none\" fill-rule=\"evenodd\"><path fill=\"url(#prefix__a)\" d=\"M34.53 2.064l-.244-.278c-4.8-4.8-21.461.452-30.713 11.235-4.905 5.704-4.765 13.774.452 19.026 1.809 1.809 4.174 1.148 5.322 0 .521-.522 1.148-1.357 1.704-2.4-1.009-.383-1.983-.974-2.817-1.809-3.061-3.06-3.061-8.07 0-11.13 3.06-3.061 8.07-3.061 11.13 0 .661.66 1.183 1.426 1.565 2.226.8-.313 1.6-.591 2.4-.904 8.105-3.34 11.34-7.618 11.93-11.096.349-1.635.21-3.652-.73-4.87z\" transform=\"translate(0 .869)\"></path><path fill=\"#FFF\" fill-rule=\"nonzero\" d=\"M19.364 27.838c-3.06 3.061-8.07 3.061-11.13 0-3.061-3.06-3.061-8.07 0-11.13 3.06-3.061 8.07-3.061 11.13 0 3.096 3.096 3.096 8.07 0 11.13z\" transform=\"translate(0 .869)\"></path><path fill=\"url(#prefix__b)\" fill-rule=\"nonzero\" d=\"M34.495 2.03c.939 1.217 1.078 3.2.73 4.834-.626 3.479-3.826 7.757-11.93 11.096-.8.313-1.6.626-2.4.904 1.39 2.922.904 6.54-1.53 8.974-2.262 2.261-5.566 2.852-8.384 1.774-.556 1.044-1.147 1.844-1.67 2.365-1.147 1.148-3.512 1.81-5.32 0l.034.035c5.217 5.183 13.287 5.287 18.956.418 10.61-9.044 15.861-25.287 11.514-30.4z\" transform=\"translate(0 .869)\"></path><path fill=\"url(#prefix__c)\" fill-rule=\"nonzero\" d=\"M19.364 27.838c2.435-2.434 2.922-6.017 1.53-8.974-2.086.8-4.243 1.74-6.26 4-2.087 2.4-2.992 5.566-3.653 6.748 2.818 1.078 6.122.487 8.383-1.774z\" transform=\"translate(0 .869)\"></path><path fill=\"#382819\" fill-rule=\"nonzero\" d=\"M11.608 71.282v-28h5.217v28h-5.217zm29.67 0V52.22c0-2.887-1.218-4.8-4.28-4.8-2.747 0-5.564 1.809-8.103 4.522v19.374h-5.218v-28h4.174l.66 4.034c2.644-2.4 5.914-4.626 9.914-4.626 5.287 0 8.104 3.165 8.104 8.209v20.383h-5.252v-.035zM75.12 57.856H56.129c.174 6.504 3.305 9.565 8.174 9.565 4.035 0 6.992-1.6 10.052-4l.766 4.696c-2.992 2.365-6.574 3.756-11.2 3.756-7.27 0-12.974-4.417-12.974-14.678 0-8.974 5.287-14.505 12.313-14.505 8.174 0 11.93 6.296 11.93 14.018-.07.313-.07.8-.07 1.148zM63.155 46.795c-3.234 0-5.982 2.295-6.817 7.095h13.496c-.626-4.486-2.609-7.095-6.679-7.095zm22.61 7.93v16.557h-5.218v-28h4.174l.87 5.704c1.982-3.165 5.217-6.052 9.808-6.296l.835 4.974c-4.661.244-8.592 3.374-10.47 7.061zm29.912 16.557l-.591-3.757c-2.226 2.296-5.287 4.348-9.878 4.348-5.044 0-8.21-3.06-8.21-7.791 0-6.992 5.983-9.74 17.67-10.992v-1.182c0-3.513-2.121-4.765-5.356-4.765-3.409 0-6.644 1.043-9.67 2.4l-.695-4.522c3.339-1.357 6.504-2.365 10.852-2.365 6.817 0 10.087 2.748 10.087 8.974v19.617h-4.209v.035zm-1.009-14.192c-10.33 1.01-12.487 3.827-12.487 6.679 0 2.295 1.53 3.756 4.174 3.756 3.061 0 5.983-1.53 8.348-3.93V57.09h-.035z\" transform=\"translate(0 .869)\"></path></g></svg>`}),OC=()=>({getDefaultIconProps:()=>({width:\"209\",height:\"38\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 209 38\" fill=\"none\"><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M41.3935 30.2156H34.0142C31.6811 30.2156 29.4437 29.2908 27.7951 27.6449C26.1466 25.999 25.2222 23.7672 25.2256 21.4414V0.211426H21.9177C21.9177 7.30108 21.9177 13.994 21.9177 21.4414C21.9177 24.639 23.1923 27.7056 25.4611 29.966C27.7298 32.2265 30.8066 33.4955 34.0142 33.4938C36.4479 33.4938 39.2339 33.4938 41.4 33.4938V30.2416L41.3935 30.2156Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M40.5882 24.5976H33.3237C31.472 24.587 29.9785 23.0715 29.9856 21.2103V0.211426H26.7882V21.191C26.7848 22.9446 27.475 24.6276 28.7069 25.8693C29.9387 27.1111 31.6111 27.8097 33.3557 27.8114H40.5882V24.5976Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.818037 30.2156H7.90885C10.1497 30.2139 12.298 29.2883 13.8808 27.6426C15.4635 25.9969 16.3509 23.7661 16.3476 21.4414V0.211426H19.4824V21.4414C19.484 24.6361 18.2623 27.7007 16.086 29.961C13.9096 32.2213 10.957 33.4921 7.8775 33.4938C5.57032 33.4938 2.8619 33.4938 0.811768 33.4938V30.2416L0.818037 30.2156Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.811768 24.5976H8.0376C8.93664 24.6028 9.80025 24.2454 10.4354 23.6052C11.0705 22.965 11.4242 22.0955 11.4173 21.191V0.211426H14.6118C14.6118 4.10011 14.6118 17.0902 14.6118 21.191C14.6135 22.9463 13.9216 24.6302 12.6885 25.872C11.4554 27.1137 9.78228 27.8114 8.0376 27.8114H0.811768V24.5976Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M54.0164 30.4594L55.1094 33.4939H58.447L56.8465 29.3448C56.82 29.2747 56.7941 29.2058 56.7686 29.1381C56.3637 28.0603 56.0743 27.2903 55.1745 27.0964V27.0577C56.7514 26.8382 57.8881 25.4481 57.7769 23.8751C57.7769 21.0854 55.2786 20.5056 52.7607 20.5056H47.8941V33.4939H51.0301V28.2432H51.8173C53.0405 28.2432 53.3658 28.7457 54.0164 30.4594ZM51.0301 22.7927H51.9409C53.2421 22.7927 54.5824 22.9796 54.5889 24.3389C54.5889 25.8658 53.1446 25.956 51.9409 25.956H51.0301V22.7927Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M65.0945 31.5226C63.4828 31.5226 62.4106 30.8771 62.2611 29.5118L69 29.518V28.8974C69 26.0675 67.7263 23.7527 64.1977 23.7527C61.1759 23.7527 59.2589 25.7076 59.2589 28.6306C59.2589 31.6963 61.4748 33.4899 64.6851 33.4899C65.8816 33.5262 67.0721 33.3145 68.1747 32.8693V30.7158C67.2361 31.2295 66.1762 31.5071 65.0945 31.5226ZM62.2416 27.7369C62.3196 26.5888 62.9695 25.6952 64.2692 25.6952C65.6403 25.6952 66.1667 26.6447 66.1992 27.7369H62.2416Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M71.0161 36.9185C72.1825 37.3418 73.4207 37.5567 74.6688 37.5526C78.7408 37.5526 80.3975 35.815 80.3642 32.4412V23.9813H77.5032V25.5287H77.4633C76.7937 24.415 75.543 23.7352 74.1964 23.753C71.1425 23.753 69.8118 25.9853 69.8118 28.6996C69.8118 31.4138 71.2689 33.4812 74.0966 33.4812C75.3901 33.5214 76.6151 32.928 77.3435 31.9085H77.3835V32.4222C77.3835 34.1408 76.5584 35.333 74.3495 35.333C73.2496 35.3054 72.1728 35.0271 71.209 34.5213L71.0161 36.9185ZM73.072 28.6679C73.072 27.3171 73.6908 26.0487 75.1678 26.0487C76.7048 26.0487 77.3568 27.2981 77.3568 28.5664C77.3568 30.0694 76.4919 31.2046 75.108 31.2046C73.897 31.2046 73.072 30.0187 73.072 28.6679Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M81.9882 19.6938V22.147L85.2353 22.1406V19.6938H81.9882ZM81.9882 23.7847V33.4938H85.2353V23.7847H81.9882Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M86.8588 28.6512C86.8588 31.5568 89.0098 33.4939 92.1258 33.4939C95.2608 33.4939 97.4118 31.5568 97.4118 28.6512C97.4118 25.5656 95.1157 23.7527 92.1258 23.7527C89.1359 23.7527 86.8588 25.5469 86.8588 28.6512ZM89.9181 28.5395C89.9181 27.1425 90.5741 25.8698 92.1258 25.8698V25.876C93.6775 25.876 94.3651 27.0867 94.3651 28.5395C94.3651 29.9923 93.7848 31.3892 92.1258 31.3892C90.4669 31.3892 89.9181 29.9364 89.9181 28.5395Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M105.766 33.4812V28.7126C105.766 27.1758 105.372 26.1829 104.184 26.1829C102.633 26.1829 102.058 27.4983 102.058 29.2122V33.4686H99.0353V23.982H101.813V25.5504H101.852C102.54 24.3652 103.86 23.6698 105.249 23.7606C107.749 23.7606 108.776 25.4935 108.776 27.5552V33.4939L105.766 33.4812Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M118.983 33.4938C117.774 33.4929 116.572 33.3056 115.415 32.9379L115.684 30.2044C116.675 30.7666 117.782 31.0621 118.907 31.0648C119.942 31.0648 121.064 30.7206 121.064 29.5955C121.064 27.0936 115.271 28.4703 115.271 23.7843C115.271 20.6669 117.935 19.694 120.343 19.694C121.406 19.6891 122.464 19.8565 123.478 20.1904L123.259 22.7121C122.404 22.314 121.478 22.111 120.544 22.1164C119.691 22.1164 118.387 22.3282 118.387 23.6056C118.387 25.8228 124.199 24.5587 124.199 29.2447C124.243 32.501 121.71 33.4938 118.983 33.4938Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M130.287 33.4939C127.732 33.4939 126.877 32.1937 126.877 30.042V25.6866H125.012V23.5284H126.928V21.4417L129.878 20.5056V23.5284H132.145V25.6866H129.878V29.6455C129.878 30.6791 130.121 31.3551 131.155 31.3551C131.513 31.351 131.868 31.2941 132.209 31.1861L132.318 33.2858C131.649 33.424 130.969 33.4937 130.287 33.4939Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M132.318 28.6512C132.318 31.5568 134.469 33.4939 137.585 33.4939C140.713 33.4939 142.864 31.5568 142.871 28.6512C142.871 25.5656 140.575 23.7527 137.585 23.7527C134.595 23.7527 132.318 25.5469 132.318 28.6512ZM135.377 28.5395C135.377 27.1425 136.033 25.8698 137.585 25.8698V25.876C139.13 25.876 139.824 27.0867 139.824 28.5395C139.824 29.9923 139.244 31.3892 137.585 31.3892C135.926 31.3892 135.377 29.9364 135.377 28.5395Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M149.913 33.4937C146.636 33.4937 144.494 31.5941 144.494 28.6145C144.494 25.6348 146.656 23.7539 149.879 23.7539C150.787 23.7372 151.688 23.8891 152.532 24.2009L152.3 26.3735C151.702 26.0637 151.027 25.9094 150.344 25.9266C148.812 25.9266 147.691 26.9819 147.691 28.6517C147.646 29.3565 147.919 30.0466 148.443 30.554C148.968 31.0614 149.696 31.3396 150.45 31.321C151.165 31.3249 151.872 31.1785 152.519 30.8927L152.612 33.115C151.739 33.3718 150.828 33.4996 149.913 33.4937Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M159.407 33.4938L156.5 28.7983H156.461V33.4938H153.424V19.6938H156.461V27.8808H156.5L159.388 23.9434H162.808L159.342 28.2886L163.165 33.4938H159.407Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M170.707 33.4557V28.6651C170.707 27.1212 170.313 26.1237 169.125 26.1237C167.574 26.1237 167 27.4452 167 29.1671V33.443H163.976V19.6938H167V25.3104H167.038C167.752 24.2935 168.935 23.6949 170.191 23.7157C172.691 23.7157 173.718 25.4566 173.718 27.5278V33.4938L170.707 33.4557Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M175.341 28.6512C175.341 31.5568 177.492 33.4939 180.608 33.4939C183.743 33.4939 185.894 31.5568 185.894 28.6512C185.894 25.5656 183.598 23.7527 180.608 23.7527C177.618 23.7527 175.341 25.5469 175.341 28.6512ZM178.4 28.5395C178.4 27.1425 179.056 25.8698 180.608 25.8698V25.876C182.16 25.876 182.847 27.0867 182.847 28.5395C182.847 29.9923 182.267 31.3892 180.608 31.3892C178.949 31.3892 178.4 29.9364 178.4 28.5395Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M187.518 33.4938V19.6938H190.765V33.4938H187.518Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M205.651 33.4939V28.1675C205.651 27.1593 205.408 26.1892 204.283 26.1892C202.916 26.1892 202.417 27.5271 202.417 29.2455V33.4939H199.426V28.1675C199.426 27.1593 199.183 26.1892 198.058 26.1892C196.69 26.1892 196.191 27.5271 196.191 29.2455V33.4939H193.2V23.9825H195.949V25.5741H195.987C196.63 24.412 197.879 23.7099 199.215 23.7606C200.475 23.6688 201.654 24.3825 202.149 25.536C202.81 24.3971 204.052 23.7141 205.376 23.7606C207.978 23.7606 208.624 25.3331 208.624 27.7363V33.4875L205.651 33.4939Z\"/></svg>`}),SC=()=>({getDefaultIconProps:()=>({width:\"177\",height:\"34\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 177 41\" fill=\"none\"><mask id=\"mask0_6743_931\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"36\" height=\"40\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 0.00012207H35.1457V39.8097H0V0.00012207Z\" fill=\"white\"/></mask><g mask=\"url(#mask0_6743_931)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M25.3534 18.2152C33.1633 12.8751 37.2317 7.55655 34.0678 0.00012207H19.9281C19.9281 0.00012207 21.5691 2.81023 21.5691 6.27727C21.5691 14.4706 12.7866 19.8939 9.7705 25.6794C11.3464 20.418 19.4525 8.97463 12.9198 0.00012207H-0.000244141V39.8097H8.9903C9.541 33.8708 12.3671 27.0945 25.3534 18.2152Z\" fill=\"${l.color}\"/></g><mask id=\"mask1_6743_931\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"16\" y=\"-1\" width=\"36\" height=\"41\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.1469 -0.000305176H51.2932V39.8098H16.1469V-0.000305176Z\" fill=\"white\"/></mask><g mask=\"url(#mask1_6743_931)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M25.9391 21.5946C18.1296 26.9347 14.0608 32.2533 17.2246 39.8102H31.3654C31.3654 39.8102 29.7238 36.9996 29.7238 33.5331C29.7238 25.3398 38.5059 19.916 41.522 14.1304C39.946 19.3924 31.8399 30.8352 38.3726 39.8102L51.2932 39.8092V-0.000305176L42.3032 0.000195914C41.7515 5.93911 38.9253 12.7158 25.9391 21.5946Z\" fill=\"${l.color}\"/></g><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M87.1809 31.0282C87.1027 30.9681 86.8792 30.8458 86.4768 30.6439C86.0925 30.4519 85.5443 30.1909 84.8012 29.8481C83.9899 29.4758 83.579 29.0319 83.579 28.5293C83.579 27.7305 84.0902 27.3432 85.1409 27.3432C85.7808 27.3432 86.5154 27.496 87.3247 27.7977L87.5467 27.8834L87.9611 26.1852L87.9681 26.1561L87.8934 26.1255C87.009 25.7597 86.0895 25.5743 85.1615 25.5743C84.1994 25.5743 83.3666 25.8119 82.6861 26.2789C81.8829 26.8241 81.4755 27.5887 81.4755 28.5493C81.4755 29.4964 81.9059 30.2821 82.7583 30.8879C83.1867 31.1024 83.562 31.2978 83.9058 31.4827C84.2645 31.6751 84.6343 31.871 85.0352 32.079C85.8229 32.5064 86.2218 32.993 86.2218 33.5256C86.2218 34.4361 85.615 34.8791 84.3678 34.8791C83.6888 34.8791 82.6771 34.6466 81.727 34.2722L81.6363 34.2367L81.252 35.9544L81.246 35.9845L81.3241 36.0145C82.3604 36.4069 83.4272 36.6063 84.4925 36.6063C85.5348 36.6063 86.4443 36.3768 87.1954 35.9238C88.0558 35.3927 88.4927 34.5929 88.4927 33.5467C88.4927 32.4899 88.0513 31.643 87.1809 31.0282Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M116.515 15.6043H118.615V8.86461C118.615 7.22355 118.437 6.46289 117.912 5.84806C117.404 5.25276 116.623 4.92505 115.712 4.92505C114.468 4.92505 112.618 5.42263 111.151 6.81917L111.136 6.8337V5.25577H109.08V15.6043H111.181V8.70677L111.183 8.70376C112.289 7.50766 114.14 6.87028 115.051 6.87028C115.9 6.87028 116.405 7.39041 116.471 8.33446C116.493 8.65616 116.515 9.16126 116.515 9.61424V15.6043Z\" fill=\"${l.color}\"/><mask id=\"mask2_6743_931\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"165\" y=\"25\" width=\"11\" height=\"12\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M165.753 25.6292H175.286V36.3094H165.753V25.6292Z\" fill=\"white\"/></mask><g mask=\"url(#mask2_6743_931)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M174.583 26.5527C174.075 25.9579 173.294 25.6292 172.383 25.6292C171.14 25.6292 169.29 26.1267 167.824 27.5233L167.808 27.5378V25.9604H165.753V36.3094H167.853V29.4104L167.855 29.4084C168.961 28.2118 170.812 27.5749 171.722 27.5749C172.571 27.5749 173.076 28.0945 173.143 29.0386C173.164 29.3603 173.187 29.8659 173.187 30.3188V36.3094H175.286V29.5687C175.286 27.9276 175.109 27.167 174.583 26.5527Z\" fill=\"${l.color}\"/></g><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M64.2455 33.8718L61.262 25.9601H58.8994L63.0294 36.2865L63.0384 36.3086H65.1881L69.4398 26.0092L69.4594 25.9601H67.3608L64.2455 33.8718Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M93.3799 22.566H91.2798V25.9599H89.4929V27.6696H91.2798V33.2738C91.2798 34.4694 91.3024 34.6177 91.4562 35.1027C91.5659 35.434 91.7839 35.7376 92.0705 35.9581C92.5972 36.3535 93.2426 36.5298 94.1601 36.5298C94.7619 36.5298 95.2008 36.4877 96.0667 36.2517L96.0923 36.2447V34.7184L96.0502 34.7274C95.5701 34.8291 95.2925 34.8492 94.9763 34.8492C94.0939 34.8492 93.5788 34.5796 93.4475 34.0499C93.3994 33.7889 93.3799 33.4622 93.3799 32.921V27.6696H96.0923V25.9599H93.3799V22.566Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M122.263 25.6513C120.958 25.6513 119.974 26.1348 118.63 27.4361L118.615 27.4502V20.8273H116.515V36.3089H118.57V34.9705L118.586 34.9886C119.537 36.1145 120.47 36.5956 121.711 36.5956C124.42 36.5956 126.312 34.1683 126.312 30.6937C126.312 27.7248 124.647 25.6513 122.263 25.6513ZM121.469 34.7826C120.415 34.7826 119.51 34.2209 118.617 33.0143L118.615 33.0123V29.3884L118.617 29.3869C119.482 28.2324 120.55 27.597 121.623 27.597C123.083 27.597 124.102 29.0241 124.102 31.0685C124.102 33.2202 122.995 34.7826 121.469 34.7826Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M79.5536 34.8285L79.5171 34.838C79.2785 34.8967 79.1548 34.9152 79.0095 34.9152C78.7248 34.9152 78.4768 34.7864 78.3636 34.582C78.2744 34.3805 78.2283 34.119 78.2283 33.8033V29.3261C78.2283 27.9511 78.1361 27.3808 77.8334 26.8832C77.3749 26.075 76.5075 25.6295 75.3921 25.6295C74.2441 25.6295 73.2038 25.9547 71.8023 26.753C71.2862 27.0416 71.1258 27.1704 70.7355 27.482L70.6628 27.5417L71.5352 28.828L71.5638 28.8084C72.9633 27.8513 73.9299 27.4425 74.7968 27.4425C75.7679 27.4425 76.1287 27.929 76.1287 29.2379V29.7304L76.1217 29.7319C72.3064 30.5427 70.3727 31.9578 70.3727 33.9356C70.3727 35.4018 71.4405 36.5072 72.8561 36.5072C73.979 36.5072 75.0313 36.0046 76.2685 34.8776L76.281 34.8661L76.2835 34.8831C76.3933 35.9434 77.0808 36.5513 78.1706 36.5513C78.7654 36.5513 79.0601 36.4801 79.7471 36.1689L79.7716 36.1579L79.5597 34.8661L79.5536 34.8285ZM76.1287 33.2551L76.1262 33.2576C75.2162 34.2127 74.2742 34.7383 73.4739 34.7383C72.8932 34.7383 72.4727 34.2984 72.4727 33.6925C72.4727 32.6603 73.6308 31.8581 76.1182 31.1706L76.1287 31.1671V33.2551Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M75.7709 22.9765C75.7709 23.7462 76.3797 24.349 77.1569 24.349C77.9331 24.349 78.5419 23.7462 78.5419 22.9765C78.5419 22.2053 77.9205 21.5775 77.1569 21.5775C76.3922 21.5775 75.7709 22.2053 75.7709 22.9765Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M71.5916 22.976C71.5916 23.7457 72.1944 24.348 72.964 24.348C73.7222 24.348 74.3626 23.7197 74.3626 22.976C74.3626 22.2049 73.7352 21.578 72.964 21.578C72.2074 21.578 71.5916 22.2049 71.5916 22.976Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M150.188 22.566H148.088V25.9599H143.063V22.566H140.964V25.9599H139.177V27.6696H140.964V33.2738C140.964 34.4694 140.986 34.6177 141.14 35.1027C141.25 35.434 141.468 35.7376 141.755 35.9581C142.282 36.3535 142.926 36.5298 143.845 36.5298C144.446 36.5298 144.885 36.4877 145.752 36.2517L145.777 36.2447V34.7184L145.734 34.7274C145.254 34.8291 144.978 34.8492 144.661 34.8492C143.777 34.8492 143.263 34.5796 143.131 34.0499C143.083 33.7889 143.063 33.4622 143.063 32.921V27.6696H148.088V33.2738C148.088 34.4694 148.111 34.6177 148.265 35.1027C148.374 35.434 148.592 35.7376 148.88 35.9581C149.406 36.3535 150.051 36.5298 150.97 36.5298C151.57 36.5298 152.009 36.4877 152.875 36.2517L152.901 36.2447V34.7184L152.859 34.7274C152.379 34.8291 152.101 34.8492 151.785 34.8492C150.902 34.8492 150.387 34.5796 150.256 34.0499C150.208 33.7889 150.188 33.4622 150.188 32.921V27.6696H152.901V25.9599H150.188V22.566Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M62.7863 10.1858C62.7863 9.35648 63.093 8.55072 63.6277 7.97347C64.1874 7.37016 64.8879 7.07702 65.7703 7.07702C65.7959 7.07702 65.8194 7.07852 65.842 7.07903L65.9146 7.08153L66.4167 5.13179L66.4273 5.09171L66.3862 5.0872C66.1852 5.06715 66.0434 5.05262 65.9602 5.04611C65.8781 5.03909 65.8169 5.03558 65.7809 5.03558C65.0352 5.03558 64.3673 5.30918 63.796 5.84935C63.3015 6.31637 62.9622 6.72826 62.7863 7.07552V5.25556H60.6863V15.6041H62.7863V10.1858Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M114.355 25.7506C114.272 25.7436 114.212 25.7401 114.175 25.7401C113.429 25.7401 112.762 26.0131 112.19 26.5533C111.695 27.0208 111.357 27.4322 111.18 27.78V25.96H109.081V36.3085H111.18V30.8902C111.18 30.0614 111.488 29.2547 112.023 28.6784C112.582 28.0746 113.282 27.7815 114.165 27.7815C114.19 27.7815 114.213 27.7825 114.235 27.784C114.25 27.784 114.265 27.7855 114.281 27.7855L114.309 27.786L114.822 25.7957L114.781 25.7917C114.579 25.7716 114.437 25.7576 114.355 25.7506Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M85.873 14.4088L84.2405 14.2104C84.0656 14.1883 83.9053 14.1688 83.7579 14.1518C82.6816 14.022 82.2787 13.9734 81.4529 13.7073L81.4469 13.7053C81.5446 13.5645 81.8959 13.0574 82.1083 12.7432C82.2752 12.7738 82.4331 12.7948 82.5884 12.8078C82.6846 12.8169 82.7913 12.8219 82.9246 12.8244L82.9336 12.8249C82.9382 12.8249 82.9422 12.8259 82.9472 12.8259L82.9807 12.8249C83.0108 12.8249 83.0419 12.8259 83.075 12.8259C85.5062 12.8259 87.4109 11.0761 87.4109 8.84221C87.4109 8.06252 87.2425 7.51232 86.8316 6.96463H88.6461V5.25592H85.2096L85.1444 5.23337C84.3978 4.96128 84.0927 4.90265 83.4272 4.90265C80.9173 4.90265 79.0246 6.68202 79.0246 9.04064C79.0246 9.99873 79.3323 10.8596 79.9141 11.5321L79.9126 11.5351L79.9276 11.5556C79.9366 11.5681 80.1601 11.8713 80.6447 12.1815L80.6321 12.1995C80.4763 12.415 80.34 12.5974 80.2313 12.7447L80.1957 12.7913C80.12 12.8935 80.0584 12.9762 80.0143 13.0368L79.887 13.2092C79.4616 13.781 79.2035 14.1282 79.2 14.3081C79.197 14.3246 79.194 14.3712 79.2316 14.4359C79.3273 14.6027 79.657 14.8523 80.6727 15.1068L80.6502 15.1143C79.0587 15.6225 78.2515 16.5179 78.2515 17.7746C78.2515 19.7013 80.2849 20.8979 83.558 20.8979C87.0852 20.8979 89.5485 19.3415 89.5485 17.1132C89.5485 15.5498 88.4151 14.7155 85.873 14.4088ZM83.2072 6.40742C84.4509 6.40742 85.3544 7.43115 85.3544 8.84221C85.3544 10.335 84.5281 11.2991 83.2508 11.2991C81.966 11.2991 81.1032 10.3114 81.1032 8.84221C81.1032 7.34045 81.9089 6.40742 83.2072 6.40742ZM83.6687 19.3275C81.5466 19.3275 80.3295 18.6891 80.3295 17.5762C80.3295 16.7198 81.0115 16.115 82.4751 15.6706H82.4772H82.4797C83.4342 15.893 83.7344 15.9572 84.9706 16.112C86.1241 16.2669 86.5425 16.3576 86.9163 16.6211C87.1819 16.7975 87.3162 17.0445 87.3162 17.3557C87.3162 18.5162 85.8169 19.3275 83.6687 19.3275Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M106.568 10.2979C106.568 7.18458 104.397 4.92517 101.407 4.92517C98.2115 4.92517 95.891 7.26826 95.891 10.4963C95.891 13.5965 98.0923 15.8474 101.123 15.8474C104.279 15.8474 106.568 13.5133 106.568 10.2979ZM98.1629 10.1876C98.1629 8.15068 99.4272 6.67197 101.169 6.67197C103.04 6.67197 104.297 8.20931 104.297 10.4963C104.297 12.6249 103.089 14.056 101.291 14.056C99.4192 14.056 98.1629 12.5016 98.1629 10.1876Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M133.406 25.6293C130.21 25.6293 127.89 27.9724 127.89 31.2004C127.89 34.3011 130.091 36.551 133.123 36.551C136.277 36.551 138.568 34.2174 138.568 31.002C138.568 27.8887 136.397 25.6293 133.406 25.6293ZM133.29 34.7601C131.419 34.7601 130.162 33.2057 130.162 30.8912C130.162 28.8548 131.426 27.3761 133.167 27.3761C135.039 27.3761 136.296 28.9134 136.296 31.2004C136.296 33.3295 135.088 34.7601 133.29 34.7601Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M106.091 33.4182L106.062 33.4362C105.264 33.9609 104.98 34.1167 104.53 34.3186C103.88 34.6223 103.193 34.7827 102.542 34.7827C100.845 34.7827 99.8867 33.5264 99.8421 31.245V31.2364H106.834V30.6938C106.834 27.4753 105.309 25.6298 102.652 25.6298C99.6917 25.6298 97.5436 28.0185 97.5436 31.3116C97.5436 34.4585 99.4016 36.5736 102.167 36.5736C103.72 36.5736 105.602 35.8314 106.96 34.6829L106.985 34.6619L106.11 33.4453L106.091 33.4182ZM102.498 27.1556C103.827 27.1556 104.646 28.1152 104.69 29.7222L104.69 29.7307H99.9303C100.24 28.1653 101.245 27.1556 102.498 27.1556Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M71.9343 15.869C73.5343 15.869 75.4725 15.1274 76.8705 13.9789L76.8956 13.9579L75.9946 12.7407L75.9746 12.7147L75.947 12.7317C75.1257 13.2558 74.8326 13.4112 74.3686 13.6141C73.6986 13.9178 72.9901 14.0781 72.3201 14.0781C70.5713 14.0781 69.5842 12.8219 69.5386 10.5409V10.5319H76.7403V9.98924C76.7403 6.77074 75.1703 4.92523 72.4334 4.92523C69.3858 4.92523 67.1735 7.31493 67.1735 10.6071C67.1735 13.7539 69.0861 15.869 71.9343 15.869ZM72.2746 6.45105C73.6435 6.45105 74.4884 7.41114 74.5335 9.01863L74.534 9.02615H69.6298C69.9495 7.46074 70.9837 6.45105 72.2746 6.45105Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M162.906 33.4187L162.877 33.4362C162.056 33.9609 161.763 34.1167 161.299 34.3186C160.63 34.6218 159.922 34.7827 159.251 34.7827C157.502 34.7827 156.515 33.5264 156.47 31.245V31.2364H163.67V30.6938C163.67 27.4748 162.101 25.6298 159.365 25.6298C156.317 25.6298 154.104 28.0195 154.104 31.3111C154.104 34.458 156.018 36.5736 158.865 36.5736C160.464 36.5736 162.402 35.8314 163.801 34.6829L163.827 34.6619L162.925 33.4453L162.906 33.4187ZM159.205 27.1556C160.575 27.1556 161.419 28.1152 161.464 29.7232V29.7307H156.561C156.88 28.1653 157.914 27.1556 159.205 27.1556Z\" fill=\"${l.color}\"/><mask id=\"mask3_6743_931\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"-1\" width=\"177\" height=\"42\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 40.0788H176.471V-0.000732422H0V40.0788Z\" fill=\"white\"/></mask><g mask=\"url(#mask3_6743_931)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M91.2789 15.6047H93.379V5.25623H91.2789V15.6047Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M92.3527 3.68581C93.1234 3.68581 93.7257 3.083 93.7257 2.31282C93.7257 1.52962 93.1234 0.915283 92.3527 0.915283C91.5826 0.915283 90.9557 1.54215 90.9557 2.31282C90.9557 3.083 91.57 3.68581 92.3527 3.68581Z\" fill=\"${l.color}\"/></g></svg>`}),AC=()=>({getDefaultIconProps:()=>({width:\"89\",height:\"25\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 89 25\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M30.9638 13.3899C31.4041 13.3899 31.7861 13.0082 31.7861 12.5426C31.7861 12.1021 31.4041 11.7361 30.9638 11.7361H29.6093V13.3899H30.9638ZM28.5205 10.8965C28.5205 10.8134 28.5865 10.7383 28.6782 10.7383H31.055C32.0523 10.7383 32.8671 11.5368 32.8671 12.5256C32.8671 13.2904 32.3601 13.9138 31.6371 14.2044L32.7759 16.3157C32.8337 16.4236 32.7759 16.5564 32.6345 16.5564H31.7615C31.6868 16.5564 31.6455 16.5156 31.6289 16.4815L30.5233 14.2792H29.6008V16.399C29.6008 16.4815 29.5261 16.5564 29.443 16.5564H28.6782C28.5865 16.5564 28.5205 16.4815 28.5205 16.399V10.8965Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M35.3877 10.8965C35.3877 10.8128 35.4543 10.7385 35.5454 10.7385H38.928C39.0198 10.7385 39.0857 10.8128 39.0857 10.8965V11.5784C39.0857 11.661 39.0198 11.7362 38.928 11.7362H36.468V13.099H38.5206C38.6041 13.099 38.679 13.1742 38.679 13.2572V13.9464C38.679 14.0385 38.6041 14.1049 38.5206 14.1049H36.468V15.559H38.928C39.0198 15.559 39.0857 15.6342 39.0857 15.7166V16.3983C39.0857 16.4822 39.0198 16.5572 38.928 16.5572H35.5454C35.4543 16.5572 35.3877 16.4822 35.3877 16.3983V10.8965Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M44.1746 10.6554C44.9225 10.6554 45.6373 10.9457 46.2024 11.4283C46.269 11.4944 46.2769 11.5942 46.2105 11.661L45.6952 12.2016C45.6292 12.2679 45.5544 12.2679 45.4799 12.2016C45.122 11.8858 44.6815 11.7197 44.224 11.7197C43.1856 11.7197 42.363 12.6088 42.363 13.6478C42.363 14.6781 43.1856 15.5508 44.2327 15.5508C44.6983 15.5508 45.0554 15.41 45.2213 15.3429V14.6363H44.5569C44.4656 14.6363 44.3995 14.5705 44.3995 14.4866V13.8307C44.3995 13.7393 44.4656 13.6725 44.5569 13.6725H46.1528C46.2356 13.6725 46.3023 13.7475 46.3023 13.8307V15.9587C46.3023 16.0248 46.269 16.0661 46.2356 16.0914C46.2356 16.0914 45.3801 16.6314 44.1746 16.6314C42.5205 16.6314 41.1914 15.3182 41.1914 13.6561C41.1914 11.9939 42.5205 10.6554 44.1746 10.6554Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M48.8567 10.8965C48.8567 10.8128 48.9315 10.7385 49.0143 10.7385H49.7876C49.8703 10.7385 49.9452 10.8128 49.9452 10.8965V16.3983C49.9452 16.4822 49.8703 16.5572 49.7876 16.5572H49.0143C48.9315 16.5572 48.8567 16.4822 48.8567 16.3983V10.8965Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M55.1855 15.559C56.2326 15.559 57.0974 14.7034 57.0974 13.6561C57.0974 12.6088 56.2326 11.7362 55.1855 11.7362C54.1387 11.7362 53.2826 12.6088 53.2826 13.6561C53.2826 14.7034 54.1387 15.559 55.1855 15.559ZM55.1855 10.6554C56.8475 10.6554 58.1775 11.9939 58.1775 13.6561C58.1775 15.3182 56.8475 16.6394 55.1855 16.6394C53.5235 16.6394 52.2021 15.3182 52.2021 13.6561C52.2021 11.9939 53.5235 10.6554 55.1855 10.6554Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M60.2661 10.8048C60.2661 10.7216 60.3411 10.6555 60.4243 10.6555H60.6321L64.0896 14.3288H64.0977V10.8966C64.0977 10.8135 64.1641 10.7384 64.2556 10.7384H65.0204C65.1031 10.7384 65.1778 10.8135 65.1778 10.8966V16.4903C65.1778 16.5731 65.1031 16.6395 65.0204 16.6395H64.8206L61.3467 12.8252H61.3386V16.3984C61.3386 16.4823 61.2717 16.5564 61.1804 16.5564H60.4243C60.3411 16.5564 60.2661 16.4823 60.2661 16.3984V10.8048Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M28.5205 18.8527C28.5205 18.7448 28.6032 18.6533 28.72 18.6533H29.4514C29.5588 18.6533 29.6509 18.7448 29.6509 18.8527V21.0967L31.745 18.7365C31.7784 18.6944 31.8284 18.6533 31.9031 18.6533H32.734C32.8922 18.6533 32.9754 18.828 32.8671 18.9528L30.6975 21.3966L33.0248 24.1801C33.108 24.288 33.0416 24.4717 32.8753 24.4717H31.9694C31.8861 24.4717 31.8368 24.438 31.8198 24.4129L29.6509 21.7374V24.2721C29.6509 24.3795 29.5588 24.4717 29.4514 24.4717H28.72C28.6032 24.4717 28.5205 24.3795 28.5205 24.2721V18.8527Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M37.7395 21.3051C38.1798 21.3051 38.5622 20.9227 38.5622 20.457C38.5622 20.0166 38.1798 19.6508 37.7395 19.6508H36.3849V21.3051H37.7395ZM35.2968 18.8115C35.2968 18.7284 35.3625 18.6528 35.4543 18.6528H37.831C38.8285 18.6528 39.643 19.4513 39.643 20.4399C39.643 21.2056 39.1361 21.8281 38.4135 22.1194L39.5517 24.2307C39.6099 24.3385 39.5517 24.4717 39.4101 24.4717H38.5375C38.4627 24.4717 38.4214 24.4301 38.4046 24.3967L37.2994 22.1942H36.3769V24.3133C36.3769 24.3967 36.3022 24.4717 36.2191 24.4717H35.4543C35.3625 24.4717 35.2968 24.3967 35.2968 24.3133V18.8115Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M44.2298 23.4733C45.2767 23.4733 46.1417 22.6187 46.1417 21.5712C46.1417 20.5236 45.2767 19.6514 44.2298 19.6514C43.1828 19.6514 42.3269 20.5236 42.3269 21.5712C42.3269 22.6187 43.1828 23.4733 44.2298 23.4733ZM44.2298 18.5705C45.8919 18.5705 47.2218 19.9082 47.2218 21.5712C47.2218 23.2332 45.8919 24.5539 44.2298 24.5539C42.5678 24.5539 41.2465 23.2332 41.2465 21.5712C41.2465 19.9082 42.5678 18.5705 44.2298 18.5705Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M48.8119 18.7198C48.8119 18.6364 48.8867 18.5705 48.9696 18.5705H49.1772L52.6346 22.2437H52.6435V18.8116C52.6435 18.7286 52.7094 18.6534 52.8009 18.6534H53.5655C53.6487 18.6534 53.7236 18.7286 53.7236 18.8116V24.4047C53.7236 24.4881 53.6487 24.5539 53.5655 24.5539H53.366L49.8922 20.7397H49.8839V24.3128C49.8839 24.3966 49.8176 24.4716 49.7262 24.4716H48.9696C48.8867 24.4716 48.8119 24.3966 48.8119 24.3128V18.7198Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M58.8053 23.4733C59.8517 23.4733 60.7171 22.6187 60.7171 21.5712C60.7171 20.5236 59.8517 19.6514 58.8053 19.6514C57.7579 19.6514 56.902 20.5236 56.902 21.5712C56.902 22.6187 57.7579 23.4733 58.8053 23.4733ZM58.8053 18.5705C60.467 18.5705 61.7972 19.9082 61.7972 21.5712C61.7972 23.2332 60.467 24.5539 58.8053 24.5539C57.1428 24.5539 55.8214 23.2332 55.8214 21.5712C55.8214 19.9082 57.1428 18.5705 58.8053 18.5705Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M66.1312 23.4903C66.5465 23.4903 66.879 23.1665 66.879 22.7341C66.879 22.3185 66.4639 22.0115 66.0317 22.0115H65.1254V23.4903H66.1312ZM66.0154 21.0974C66.4386 21.0974 66.7302 20.7645 66.7302 20.3486C66.7302 19.9333 66.4386 19.6423 66.0154 19.6423H65.1254V21.0974H66.0154ZM64.0537 18.8107C64.0537 18.7285 64.1193 18.6533 64.2114 18.6533H66.1147C67.1037 18.6533 67.8685 19.3183 67.8685 20.1911C67.8685 20.8305 67.3448 21.3295 66.9537 21.5125C67.3948 21.6533 68.0346 22.1028 68.0346 22.8675C68.0346 23.7986 67.2359 24.4709 66.2226 24.4709H64.2114C64.1193 24.4709 64.0537 24.3967 64.0537 24.3134V18.8107Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M70.5139 18.8115C70.5139 18.7278 70.5799 18.6533 70.6713 18.6533H74.0536C74.1457 18.6533 74.2121 18.7278 74.2121 18.8115V19.4935C74.2121 19.5755 74.1457 19.6509 74.0536 19.6509H71.5937V21.014H73.6468C73.73 21.014 73.8047 21.0888 73.8047 21.1714V21.8612C73.8047 21.9535 73.73 22.0196 73.6468 22.0196H71.5937V23.474H74.0536C74.1457 23.474 74.2121 23.5489 74.2121 23.6316V24.3134C74.2121 24.3967 74.1457 24.4717 74.0536 24.4717H70.6713C70.5799 24.4717 70.5139 24.3967 70.5139 24.3134V18.8115Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M79.1756 21.3051C79.616 21.3051 79.9981 20.9227 79.9981 20.457C79.9981 20.0166 79.616 19.6508 79.1756 19.6508H77.8209V21.3051H79.1756ZM76.7328 18.8115C76.7328 18.7284 76.7982 18.6528 76.8902 18.6528H79.267C80.2645 18.6528 81.079 19.4513 81.079 20.4399C81.079 21.2056 80.5721 21.8281 79.8496 22.1194L80.9876 24.2307C81.0459 24.3385 80.9876 24.4717 80.8461 24.4717H79.9737C79.8986 24.4717 79.8575 24.4301 79.8407 24.3967L78.7351 22.1942H77.8129V24.3133C77.8129 24.3967 77.7381 24.4717 77.6548 24.4717H76.8902C76.7982 24.4717 76.7328 24.3967 76.7328 24.3133V18.8115Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M86.1677 18.5704C86.9159 18.5704 87.6303 18.8607 88.1955 19.3433C88.2622 19.4096 88.2711 19.5093 88.2042 19.5755L87.6889 20.116C87.6226 20.1831 87.5478 20.1831 87.4729 20.116C87.1154 19.8002 86.6743 19.6341 86.2182 19.6341C85.1782 19.6341 84.3562 20.5241 84.3562 21.5624C84.3562 22.593 85.1782 23.4657 86.2257 23.4657C86.6914 23.4657 87.0484 23.3245 87.2155 23.2579V22.5515H86.5501C86.4593 22.5515 86.392 22.4852 86.392 22.4014V21.7451C86.392 21.6538 86.4593 21.5875 86.5501 21.5875H88.1455C88.2297 21.5875 88.2956 21.6617 88.2956 21.7451V23.8729C88.2956 23.9398 88.2622 23.9813 88.2297 24.0058C88.2297 24.0058 87.3729 24.5463 86.1677 24.5463C84.5136 24.5463 83.184 23.2331 83.184 21.5706C83.184 19.9081 84.5136 18.5704 86.1677 18.5704Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.5994 0.274048H15.8169C15.8169 0.274048 11.1195 0.274048 11.1195 5.28622V11.9244H17.3825C17.3825 11.9244 22.0789 11.968 22.0789 6.95628V6.17043V0.274048H16.5994Z\" fill=\"${l.color}\"/><mask id=\"mask0_6775_346\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"11\" y=\"0\" width=\"12\" height=\"12\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.5996 0.27417H15.8168C15.8168 0.27417 11.1196 0.27417 11.1196 5.28618V11.9243H17.3826C17.3826 11.9243 22.079 11.9679 22.079 6.95624V6.17039V0.27417H16.5996Z\" fill=\"white\"/></mask><g mask=\"url(#mask0_6775_346)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.2969 12.9691H23.8607V-0.255737H10.2969V12.9691Z\" fill=\"${l.color}\"/></g><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.3825 13.2126H16.5994H11.1195V19.8664C11.1195 24.8769 15.8169 24.8769 15.8169 24.8769H22.0789V19.1308V18.195C22.0789 13.2415 17.4912 13.2126 17.3848 13.2126H17.3825Z\" fill=\"${l.color}\"/><mask id=\"mask1_6775_346\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"11\" y=\"13\" width=\"12\" height=\"12\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.3826 13.2126H16.5996H11.1196V19.8664C11.1196 24.877 15.8168 24.877 15.8168 24.877H22.079V19.1309V18.195C22.079 13.2416 17.4913 13.2126 17.3849 13.2126H17.3826Z\" fill=\"white\"/></mask><g mask=\"url(#mask1_6775_346)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.2969 25.7857H23.8607V12.5607H10.2969V25.7857Z\" fill=\"${l.color}\"/></g><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.0843506 0.208984V20.1544C0.0843506 20.1907 0.101456 24.7953 4.43336 24.7953H9.91182V4.84928C9.91182 4.84928 9.91182 0.208984 5.56313 0.208984H0.0843506ZM3.06873 4.6825C3.06873 3.76507 3.81215 3.02099 4.73024 3.02099C5.64784 3.02099 6.39126 3.76507 6.39126 4.6825C6.39126 5.59994 5.64784 6.34418 4.73024 6.34418C3.81215 6.34418 3.06873 5.59994 3.06873 4.6825Z\" fill=\"${l.color}\"/><mask id=\"mask2_6775_346\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"10\" height=\"25\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.0842285 0.208862V20.1543C0.0842285 20.1908 0.101499 24.7952 4.43324 24.7952H9.91186V4.84932C9.91186 4.84932 9.91186 0.208862 5.56301 0.208862H0.0842285ZM3.0686 4.68255C3.0686 3.76495 3.81219 3.02103 4.73012 3.02103C5.64772 3.02103 6.3913 3.76495 6.3913 4.68238C6.3913 5.59998 5.64772 6.34422 4.73012 6.34422C3.81219 6.34422 3.0686 5.59998 3.0686 4.68255Z\" fill=\"white\"/></mask><g mask=\"url(#mask2_6775_346)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M-0.822388 25.7824H11.3853V-0.328979H-0.822388V25.7824Z\" fill=\"${l.color}\"/></g></svg>`}),FC=()=>({getDefaultIconProps:()=>({width:\"139\",height:\"29\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 139 29\" fill=\"none\"><mask id=\"mask0_6775_3904\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"15\" height=\"13\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 0.27887H14.4913V12.5272H0V0.27887Z\" fill=\"white\"/></mask><g mask=\"url(#mask0_6775_3904)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.90048 10.8268C6.90048 5.88284 10.0903 1.69764 14.4913 0.27887H0L7.02775 12.5272C6.94327 11.9728 6.90048 11.4043 6.90048 10.8268\" fill=\"${l.color}\"/></g><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.4182 21.0321C14.3265 21.0321 12.3956 20.3361 10.8345 19.1619L16.4182 28.8923L22.0013 19.1619C20.441 20.3361 18.5095 21.0321 16.4182 21.0321\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32.8356 0.278931H19.9161C12.5615 0.278931 10.8066 6.08981 10.8066 8.81831C10.8066 10.0422 11.059 11.2036 11.5159 12.2562C11.5842 12.3993 11.6544 12.5395 11.7219 12.6759C12.5998 14.2962 14.2661 15.4125 16.1942 15.4903V15.4886H16.1926C16.268 15.4919 16.3421 15.495 16.4183 15.495C16.4869 15.495 16.5543 15.4919 16.6218 15.4903C18.7176 15.3812 20.384 13.6203 20.384 11.4637C20.384 9.23993 18.6114 7.43607 16.4241 7.43217C16.4967 7.36469 16.5703 7.29916 16.6465 7.23614C17.6248 6.39207 18.8909 5.8829 20.2743 5.8829C23.3745 5.8829 25.8879 8.43769 25.8879 11.5889C25.8879 11.9057 25.8619 12.2158 25.813 12.5186L32.8356 0.278931Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M36.0703 10.2119C36.0703 10.2119 34.6638 6.69117 34.6474 6.61505C34.587 6.40926 34.604 6.22857 34.8232 6.1438H32.9606C33.2148 6.24641 33.3144 6.38277 33.4153 6.55398C33.576 6.87159 35.7757 12.1482 35.7757 12.1482C35.7757 12.1482 37.8059 6.88888 37.9494 6.55398C38.033 6.34847 38.05 6.28936 38.2692 6.1438H37.2417C37.4601 6.22857 37.4938 6.34847 37.4181 6.57211C37.4101 6.63178 36.0703 10.2119 36.0703 10.2119\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M46.7079 8.4047C45.9152 8.03634 45.5534 7.83947 45.5534 7.3172C45.5534 6.948 45.806 6.49488 46.4462 6.49488C47.2553 6.49488 47.7361 7.18028 47.8541 7.63396L47.8107 6.36633C47.3809 6.10951 46.8255 6.04956 46.54 6.04956C45.7723 6.04956 44.7026 6.51189 44.7026 7.67691C44.7026 8.32773 45.0389 8.79006 45.8146 9.22701C46.5812 9.64668 47.314 9.75849 47.314 10.5808C47.314 10.9996 47.0614 11.6086 46.2271 11.6086C45.3516 11.6086 44.8458 10.8036 44.6848 10.1954L44.7276 11.6429C45.0222 11.7885 45.5787 12.0537 46.3458 12.0537C47.3809 12.0537 48.3085 11.3259 48.3085 10.2554C48.3085 9.06417 47.4909 8.78225 46.7079 8.4047\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M53.2018 6.63178C53.4039 6.64907 53.5235 6.82809 53.5987 6.97448V6.1438H48.9807V6.97448C49.0578 6.82809 49.2007 6.63178 49.4028 6.63178C49.4028 6.63178 50.1266 6.57211 50.7517 6.57211V11.5827C50.7517 11.772 50.6667 11.8911 50.5315 11.9683H52.0397C51.9133 11.8911 51.8206 11.772 51.8206 11.5827V6.57211C52.4355 6.57211 53.2018 6.63178 53.2018 6.63178\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M56.4743 6.55403C57.3081 6.55403 57.544 7.23915 57.544 7.634C57.544 8.49898 56.9373 8.82411 56.3652 8.82411C56.222 8.82411 55.9858 8.8071 55.9858 8.8071V6.57271C55.9858 6.57271 56.222 6.55403 56.4743 6.55403M58.6565 7.58185C58.6565 7.00882 58.2609 6.14301 56.5163 6.14301H54.697C54.8317 6.21132 54.9148 6.33206 54.9148 6.52893V11.5827C54.9148 11.7704 54.8317 11.8903 54.697 11.9684H56.222C56.078 11.8903 55.9858 11.7704 55.9858 11.5827V9.24461C55.9858 9.24461 56.2555 9.22677 56.3553 9.22677C56.719 9.22677 56.9123 9.59512 57.1312 9.93754C57.4348 10.4177 57.8059 11.0432 58.1844 11.5827C58.3358 11.7891 58.615 11.9854 58.934 11.9854L60.03 11.9684C60.03 11.9684 59.6502 11.8312 59.49 11.6254C59.1951 11.283 58.1844 9.65507 58.1844 9.65507C58.0583 9.46741 57.8059 9.0734 57.2324 9.01261C57.8306 8.97078 58.6565 8.50818 58.6565 7.58185\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M61.9553 9.91273C62.2247 9.26971 62.7982 7.81385 62.7982 7.81385C62.7982 7.81385 63.2611 8.96131 63.6567 9.91273H61.9553ZM63.1177 5.96399C63.1177 5.96399 60.9013 11.223 60.7422 11.5479C60.658 11.7113 60.582 11.8047 60.3453 11.9684H61.5094C61.2812 11.8655 61.2392 11.7456 61.3149 11.5398C61.3322 11.445 61.534 10.9406 61.7869 10.3583H63.8511C64.0864 10.9406 64.3061 11.4628 64.3305 11.5479C64.3903 11.7283 64.3478 11.8482 64.1284 11.9684H65.9312C65.6537 11.8225 65.5941 11.7283 65.5113 11.5479C65.3591 11.223 63.1177 5.96399 63.1177 5.96399V5.96399Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M42.0219 5.58259C42.2559 5.58259 42.4567 5.39409 42.4567 5.14034C42.4567 4.90054 42.2559 4.71204 42.0219 4.71204C41.7861 4.71204 41.6001 4.90054 41.6001 5.14034C41.6001 5.39409 41.7861 5.58259 42.0219 5.58259\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M39.9651 9.91273C40.235 9.26971 40.8071 7.81385 40.8071 7.81385C40.8071 7.81385 41.2712 8.96131 41.6664 9.91273H39.9651ZM43.9424 11.9684C43.6642 11.8225 43.6047 11.7283 43.5211 11.5479C43.3694 11.223 41.1286 5.96399 41.1286 5.96399C41.1286 5.96399 38.9122 11.223 38.7517 11.5479C38.6681 11.7113 38.5921 11.8047 38.3562 11.9684H39.5191C39.2915 11.8655 39.2495 11.7456 39.3244 11.5398C39.3411 11.445 39.5438 10.9406 39.7961 10.3583H41.8614C42.0965 10.9406 42.3156 11.4628 42.3414 11.5479C42.3998 11.7283 42.3587 11.8482 42.1396 11.9684H43.9424Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M40.1501 5.58259C40.3843 5.58259 40.5846 5.39409 40.5846 5.14034C40.5846 4.90054 40.3843 4.71204 40.1501 4.71204C39.9142 4.71204 39.7283 4.90054 39.7283 5.14034C39.7283 5.39409 39.9142 5.58259 40.1501 5.58259\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M36.7239 14.8831C34.5472 14.8831 33.432 16.4212 33.432 17.9351C33.432 19.7771 34.9293 20.9433 36.6215 20.9433C37.3026 20.9433 38.5094 20.7191 39.223 20.3128C39.1808 20.2863 39.0884 20.1313 39.0884 19.9578V18.6793C39.0884 18.48 39.1808 18.3587 39.3092 18.2809H37.7867C37.9227 18.3587 38.0088 18.48 38.0088 18.6793V20.1834C37.6081 20.4514 37.1065 20.4678 36.9276 20.4678C35.1676 20.4678 34.5886 19.0064 34.5886 17.823C34.5886 16.4307 35.423 15.3502 36.8689 15.3502C37.2677 15.3502 38.347 15.5309 38.7815 16.7073L38.7217 15.3329C38.05 15.0387 37.4211 14.8831 36.7239 14.8831\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M51.94 15.471C52.1446 15.4885 52.2634 15.6701 52.3404 15.8173V14.978H47.6797V15.8173C47.7576 15.6701 47.901 15.471 48.1051 15.471C48.1051 15.471 48.8371 15.411 49.4658 15.411V20.4684C49.4658 20.6583 49.3805 20.7791 49.2452 20.8577H50.7669C50.6399 20.7791 50.5461 20.6583 50.5461 20.4684V15.411C51.1668 15.411 51.94 15.471 51.94 15.471\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M54.1642 18.782C54.4368 18.1326 55.0142 16.6642 55.0142 16.6642C55.0142 16.6642 55.4826 17.8231 55.8825 18.782H54.1642ZM55.337 14.7973C55.337 14.7973 53.1017 20.1049 52.9401 20.4333C52.8545 20.5976 52.7777 20.6929 52.5408 20.8561H53.7136C53.4843 20.7535 53.4409 20.6319 53.5186 20.425C53.5361 20.3299 53.7396 19.819 53.9936 19.2321H56.0781C56.3156 19.819 56.537 20.3472 56.5622 20.4333C56.6223 20.6149 56.5795 20.7364 56.3584 20.8561H58.1782C57.8971 20.7097 57.8384 20.6149 57.7525 20.4333C57.5992 20.1049 55.337 14.7973 55.337 14.7973V14.7973Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M60.9291 14.9781H59.3899C59.5336 15.0476 59.6288 15.1689 59.6288 15.3674V20.4684C59.6288 20.6585 59.5336 20.7801 59.3899 20.8571H62.9697L63.1576 19.8627C62.894 20.3641 62.5953 20.3735 61.6518 20.4078C61.2689 20.4078 60.8781 20.3735 60.7083 20.3641V15.3674C60.7083 15.1689 60.7928 15.0476 60.9291 14.9781\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M65.4547 18.782C65.7274 18.1326 66.3055 16.6642 66.3055 16.6642C66.3055 16.6642 66.7734 17.8231 67.1717 18.782H65.4547ZM66.6278 14.7973C66.6278 14.7973 64.3919 20.1049 64.2312 20.4333C64.1456 20.5976 64.0685 20.6929 63.8313 20.8561H65.0046C64.7748 20.7535 64.7317 20.6319 64.8088 20.425C64.8261 20.3299 65.0299 19.819 65.2847 19.2321H67.3678C67.6067 19.819 67.8275 20.3472 67.8533 20.4333C67.9133 20.6149 67.8703 20.7364 67.6487 20.8561H69.4685C69.1873 20.7097 69.1289 20.6149 69.0436 20.4333C68.89 20.1049 66.6278 14.7973 66.6278 14.7973V14.7973Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M74.9617 18.782L71.8248 14.978H70.3607C70.5398 15.0815 70.6591 15.2039 70.7433 15.3068C70.9049 15.5056 70.8975 15.5148 70.8975 15.8517V20.4677C70.8975 20.6584 70.8039 20.78 70.6756 20.8561H71.6194C71.4754 20.78 71.3818 20.6584 71.3818 20.4677V16.1364C71.3818 16.2066 75.4636 21.099 75.4636 21.099V15.3673C75.4636 15.1682 75.5571 15.0466 75.6841 14.978H74.7406C74.8772 15.0466 74.9617 15.1682 74.9617 15.3673V18.782Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M79.9422 15.411C81.7025 15.411 82.2977 16.7938 82.2977 17.8308C82.2977 19.0937 81.7615 20.4076 79.8405 20.4076H79.1597V15.428C79.2873 15.411 79.7382 15.411 79.9422 15.411M80.1197 14.9782H77.8583C77.9858 15.0468 78.0793 15.1689 78.0793 15.3675V20.4684C78.0793 20.6583 77.9858 20.779 77.8583 20.8577H80.044C82.3402 20.8577 83.4795 19.3349 83.4795 17.8308C83.4795 16.9923 82.9181 14.9782 80.1197 14.9782\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M87.2127 17.2608C86.4129 16.8885 86.0481 16.6891 86.0481 16.163C86.0481 15.791 86.3034 15.3328 86.9494 15.3328C87.7656 15.3328 88.2511 16.0241 88.3693 16.4822L88.3259 15.2032C87.8926 14.9438 87.3322 14.8831 87.0423 14.8831C86.2692 14.8831 85.1893 15.3501 85.1893 16.5257C85.1893 17.1827 85.5294 17.65 86.3119 18.0906C87.0854 18.5142 87.8251 18.6271 87.8251 19.4564C87.8251 19.88 87.5695 20.4934 86.7288 20.4934C85.8435 20.4934 85.3331 19.6809 85.1726 19.0671L85.2154 20.5291C85.5127 20.6755 86.0731 20.9435 86.8482 20.9435C87.8926 20.9435 88.8284 20.2085 88.8284 19.1277C88.8284 17.9267 88.0037 17.6406 87.2127 17.2608\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M92.5497 15.3938C93.3915 15.3938 93.6293 16.0842 93.6293 16.4821C93.6293 17.3557 93.0168 17.6842 92.4381 17.6842C92.293 17.6842 92.056 17.6672 92.056 17.6672V15.4111C92.056 15.4111 92.293 15.3938 92.5497 15.3938M94.7508 16.4308C94.7508 15.8517 94.352 14.978 92.5912 14.978H90.7549C90.8912 15.0475 90.9765 15.1679 90.9765 15.3673V20.4677C90.9765 20.6584 90.8912 20.78 90.7549 20.8569H92.293C92.1496 20.78 92.056 20.6584 92.056 20.4677V18.1078C92.056 18.1078 92.3279 18.0905 92.4304 18.0905C92.7952 18.0905 92.991 18.4628 93.2132 18.8077C93.5182 19.2929 93.8931 19.9234 94.2752 20.4677C94.4293 20.6754 94.7091 20.8748 95.033 20.8748L96.1378 20.8569C96.1378 20.8569 95.7549 20.7192 95.5936 20.512C95.2955 20.1654 94.2752 18.5222 94.2752 18.5222C94.1482 18.3328 93.8931 17.9352 93.3144 17.8741C93.9184 17.8309 94.7508 17.3636 94.7508 16.4308\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M100.652 14.9781H97.2339C97.3683 15.0476 97.4881 15.1689 97.4881 15.3674V20.4684C97.4881 20.6755 97.3776 20.7706 97.2339 20.8571H100.89L101.069 19.8627C100.753 20.4078 100.414 20.3897 99.6738 20.4078C99.2569 20.4249 98.7375 20.3897 98.5677 20.3641V17.8229H99.8524C99.9722 17.8229 100.116 17.9523 100.158 18.0736V17.1565C100.116 17.2608 99.9722 17.3988 99.8524 17.3988H98.5677V15.4101C98.5677 15.4101 99.7586 15.4101 100.014 15.4279C100.337 15.4452 100.516 15.5138 100.678 15.7394L100.652 14.9781Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M105.513 14.8831C103.337 14.8831 102.222 16.4212 102.222 17.9351C102.222 19.7771 103.72 20.9433 105.411 20.9433C106.092 20.9433 107.299 20.7191 108.014 20.3128C107.972 20.2863 107.877 20.1313 107.877 19.9578V18.6793C107.877 18.48 107.972 18.3587 108.099 18.2809H106.576C106.713 18.3587 106.798 18.48 106.798 18.6793V20.1834C106.397 20.4514 105.897 20.4678 105.717 20.4678C103.958 20.4678 103.379 19.0064 103.379 17.823C103.379 16.4307 104.213 15.3502 105.658 15.3502C106.058 15.3502 107.138 15.5309 107.572 16.7073L107.512 15.3329C106.84 15.0387 106.211 14.8831 105.513 14.8831\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M110.022 14.9781C110.157 15.0476 110.243 15.1689 110.243 15.3674V20.4684C110.243 20.6585 110.157 20.7801 110.022 20.8571H111.562C111.417 20.7801 111.34 20.6585 111.34 20.4684V15.3674C111.34 15.1689 111.417 15.0476 111.562 14.9781H110.022Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M116.5 15.3328C117.63 15.3328 118.472 16.3188 118.455 17.9863C118.455 19.5512 117.63 20.4513 116.517 20.4513C115.538 20.4513 114.518 19.6119 114.518 17.771C114.534 16.2407 115.376 15.3328 116.5 15.3328M119.654 17.9352C119.679 15.9722 118.03 14.9003 116.575 14.883C114.534 14.8582 113.362 16.3701 113.335 17.8655C113.302 19.6376 114.731 20.9169 116.44 20.9434C117.979 20.9607 119.62 19.9577 119.654 17.9352\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M125.512 18.782L122.374 14.978H120.911C121.09 15.0815 121.209 15.2039 121.293 15.3068C121.456 15.5056 121.447 15.5148 121.447 15.8517V20.4677C121.447 20.6584 121.353 20.78 121.226 20.8561H122.169C122.026 20.78 121.932 20.6584 121.932 20.4677V16.1364C121.932 16.2066 126.014 21.099 126.014 21.099V15.3673C126.014 15.1682 126.108 15.0466 126.235 14.978H125.29C125.426 15.0466 125.512 15.1682 125.512 15.3673V18.782Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M131.623 14.9781H128.206C128.341 15.0476 128.46 15.1689 128.46 15.3674V20.4684C128.46 20.6755 128.35 20.7706 128.206 20.8571H131.86L132.04 19.8627C131.725 20.4078 131.385 20.3897 130.645 20.4078C130.228 20.4249 129.709 20.3897 129.539 20.3641V17.8229H130.823C130.943 17.8229 131.088 17.9523 131.13 18.0736V17.1565C131.088 17.2608 130.943 17.3988 130.823 17.3988H129.539V15.4101C129.539 15.4101 130.729 15.4101 130.986 15.4279C131.309 15.4452 131.488 15.5138 131.649 15.7394L131.623 14.9781Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M137.983 18.782L134.846 14.978H133.383C133.561 15.0815 133.68 15.2039 133.766 15.3068C133.928 15.5056 133.919 15.5148 133.919 15.8517V20.4677C133.919 20.6584 133.825 20.78 133.698 20.8561H134.641C134.497 20.78 134.404 20.6584 134.404 20.4677V16.1364C134.404 16.2066 138.486 21.099 138.486 21.099V15.3673C138.486 15.1682 138.579 15.0466 138.706 14.978H137.762C137.899 15.0466 137.983 15.1682 137.983 15.3673V18.782Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M43.8152 15.3328C44.9452 15.3328 45.7872 16.3188 45.771 17.9863C45.771 19.5512 44.9452 20.4513 43.8322 20.4513C42.853 20.4513 41.833 19.6119 41.833 17.771C41.8511 16.2407 42.692 15.3328 43.8152 15.3328M46.9704 17.9352C46.9951 15.9722 45.3451 14.9003 43.8914 14.883C41.8511 14.8582 40.6777 16.3701 40.6517 17.8655C40.6185 19.6376 42.0461 20.9169 43.7551 20.9434C45.2946 20.9607 46.9367 19.9577 46.9704 17.9352\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M44.7469 14.4603C44.9847 14.4603 45.1857 14.2696 45.1857 14.0141C45.1857 13.7729 44.9847 13.5828 44.7469 13.5828C44.5086 13.5828 44.3229 13.7729 44.3229 14.0141C44.3229 14.2696 44.5086 14.4603 44.7469 14.4603\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M42.8578 14.4603C43.095 14.4603 43.2972 14.2696 43.2972 14.0141C43.2972 13.7729 43.095 13.5828 42.8578 13.5828C42.6208 13.5828 42.4335 13.7729 42.4335 14.0141C42.4335 14.2696 42.6208 14.4603 42.8578 14.4603\" fill=\"${l.color}\"/></svg>`}),GC=()=>({getDefaultIconProps:()=>({width:\"102\",height:\"24\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 102 24\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.4368 11.4454C13.5673 10.4389 11.304 11.1238 10.2149 11.7698C9.04948 12.4607 8.33757 12.4607 7.77622 12.4819H7.77748C7.21639 12.4607 6.50422 12.4607 5.33908 11.7698C4.24999 11.1238 1.98691 10.4389 0.117188 11.4454V7.14736C1.98691 6.14012 4.24999 6.82475 5.33908 7.47073C6.50422 8.16117 7.21639 8.16117 7.77748 8.18239H7.77622C8.33757 8.16117 9.04948 8.16117 10.2149 7.47073C11.304 6.82475 13.5673 6.14012 15.4368 7.14736V11.4454Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.4368 17.0613C13.5673 16.0546 11.304 16.7397 10.2149 17.3855C9.04948 18.0759 8.33757 18.0759 7.77622 18.0971H7.77748C7.21639 18.0759 6.50422 18.0759 5.33908 17.3855C4.24999 16.7397 1.98691 16.0546 0.117188 17.0613V12.7628C1.98691 11.7553 4.24999 12.441 5.33908 13.0862C6.50422 13.7769 7.21639 13.7769 7.77748 13.7984H7.77622C8.33757 13.7769 9.04948 13.7769 10.2149 13.0862C11.304 12.441 13.5673 11.7553 15.4368 12.7628V17.0613Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.4368 22.6769C13.8204 21.8056 11.304 22.5266 10.2149 23.1726C9.04948 23.8625 8.33757 23.8625 7.77622 23.8845H7.77748C7.21639 23.8625 6.50422 23.8625 5.33908 23.1726C4.24999 22.5266 1.72519 21.8056 0.117188 22.6769V18.3786C1.98691 17.3716 4.24999 18.0565 5.33908 18.702C6.50422 19.3927 7.21639 19.3927 7.77748 19.4139H7.77622C8.33757 19.3927 9.04948 19.3927 10.2149 18.702C11.304 18.0565 13.5673 17.3716 15.4368 18.3786V22.6769Z\" fill=\"${l.color}\"/><mask id=\"mask0_6775_185\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"16\" height=\"7\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.0621338 0.252686H15.4561V6.47946H0.0621338V0.252686Z\" fill=\"${l.color}\"/></mask><g mask=\"url(#mask0_6775_185)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.70881 1.5713C9.21913 1.67766 9.73879 1.74461 10.2395 1.87926C10.6824 1.7345 11.1919 1.35934 11.6542 1.6673C12.0489 1.86966 11.5001 2.37012 12.0489 2.43732C12.8285 2.56338 13.2809 1.74461 13.8971 1.4172C14.4067 1.13829 14.9074 0.849279 15.4561 0.666879L15.4298 0.786374C15.1699 2.34511 15.1964 4.07362 15.4561 5.65256C15.0423 5.69071 14.7139 5.45981 14.3397 5.23825C13.8006 4.94974 13.3196 4.52658 12.8093 4.16987C12.4341 3.99682 12.0678 4.26637 11.7502 4.43008C11.6542 4.92094 11.8263 5.2433 11.73 5.79075C11.73 5.79075 11.6697 6.10326 11.5577 5.99867C11.4456 5.89383 10.0276 5.00734 10.0276 5.00734C9.70039 5.0849 9.35378 5.1228 9.03623 5.23825C9.20928 5.63589 9.4033 6.02797 9.33433 6.44153C9.32397 6.50393 9.28608 6.47058 9.28608 6.47058C8.61231 6.13357 7.98679 5.71042 7.32288 5.35345C6.447 5.30595 5.35943 5.36355 4.4449 5.2097C4.42545 5.46941 4.41559 5.78747 4.28119 6.02772C4.18494 6.16237 4.03084 6.24928 3.88633 6.21088C3.54957 5.82562 3.44372 5.28675 3.01046 5.00734C2.03858 4.86334 1.10612 4.65997 0.296183 4.15042C0.0748779 3.98696 0.0268779 3.72726 0.0844779 3.47741C0.123131 3.3809 0.24793 3.33315 0.315383 3.36195C0.421488 3.5537 0.460141 3.85231 0.739299 3.89096C1.00835 3.94856 1.40675 4.01046 1.59547 3.93896C1.80389 3.7692 1.61113 3.49888 1.54772 3.31395C1.25896 2.84178 0.700646 2.98629 0.24793 2.98629C0.0938252 2.92844 0.0362252 2.73593 0.132478 2.62023C1.75943 1.7345 3.66528 1.4652 5.59993 1.4172H6.22545C6.57458 0.996058 6.83909 0.671174 7.17837 0.252563C7.72961 0.6593 8.2081 1.14789 8.70881 1.5713Z\" fill=\"${l.color}\"/></g><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M26.6188 3.68334C26.6188 2.68519 25.9435 2.18599 24.5929 2.18599C24.1106 2.18599 23.7059 2.21353 23.3788 2.26784C23.4081 2.9977 23.423 3.98953 23.423 5.24359C23.6746 5.25193 23.9156 5.25622 24.1463 5.25622C25.7947 5.25622 26.6188 4.73176 26.6188 3.68334ZM28.5438 9.58431H27.3297C26.927 8.38077 26.6334 7.58372 26.449 7.19391C26.2138 6.70304 25.9478 6.3865 25.6499 6.24376C25.415 6.13058 24.9933 6.07399 24.3855 6.07399C24.029 6.07399 23.7122 6.07803 23.4354 6.08662C23.4354 7.44123 23.4606 8.60713 23.5109 9.58431H22.3407C22.4036 8.28426 22.4352 6.85007 22.4352 5.28123C22.4352 3.80511 22.4036 2.50911 22.3407 1.39349H23.2279C23.4167 1.39349 23.6556 1.38717 23.9452 1.37454C24.2344 1.36191 24.5656 1.35559 24.939 1.35559C26.7762 1.35559 27.6945 1.98894 27.6945 3.25563C27.6945 4.30835 27.1786 5.04856 26.1468 5.47626V5.53917C26.6082 5.67761 26.9815 5.99845 27.2668 6.5017C27.5058 6.92106 27.9314 7.94877 28.5438 9.58431Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M33.6399 5.90411C33.6399 4.72558 33.147 4.13619 32.1615 4.13619C31.155 4.13619 30.5614 4.74882 30.3812 5.97333L33.6399 5.90411ZM34.6906 5.89148C34.6906 6.06756 34.682 6.31084 34.6654 6.62133L30.3433 6.69687C30.3853 7.30924 30.6222 7.82183 31.0542 8.23489C31.4862 8.64819 32.0587 8.85459 32.7716 8.85459C33.4093 8.85459 34.007 8.77703 34.5648 8.62192L34.4577 9.50891C34.0467 9.67261 33.4532 9.75421 32.6774 9.75421C31.5868 9.75421 30.7556 9.45661 30.1829 8.86091C29.6105 8.26545 29.3242 7.5399 29.3242 6.68423C29.3242 5.76996 29.5854 4.98251 30.1074 4.32188C30.6296 3.6615 31.3311 3.33105 32.2118 3.33105C33.0212 3.33105 33.6369 3.57004 34.0583 4.04828C34.4799 4.52625 34.6906 5.14091 34.6906 5.89148Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M40.3144 5.50148C40.3144 5.04017 40.1689 4.68674 39.8774 4.44144C39.5856 4.19613 39.2155 4.07335 38.767 4.07335C38.3431 4.07335 37.9889 4.19184 37.7037 4.42881C37.4185 4.66577 37.276 5.00228 37.276 5.43857C37.276 5.89584 37.4215 6.24371 37.7133 6.48295C38.0046 6.72194 38.379 6.84144 38.836 6.84144C39.2556 6.84144 39.6068 6.72497 39.89 6.4923C40.1727 6.25937 40.3144 5.92919 40.3144 5.50148ZM41.1893 10.6476C41.1893 10.2535 41.0453 9.97533 40.758 9.81415C40.4708 9.65247 39.9309 9.57188 39.1382 9.57188C38.6011 9.57188 38.1105 9.54662 37.6661 9.49634C37.1542 9.74367 36.8986 10.1067 36.8986 10.5847C36.8986 11.6078 37.5693 12.1197 38.9115 12.1197C39.6118 12.1197 40.1669 11.9835 40.5754 11.7109C40.9844 11.4381 41.1893 11.0839 41.1893 10.6476ZM42.3153 2.81525L42.2145 3.68329C41.4346 3.68329 41.0041 3.8091 40.9248 4.06072V4.12363C41.1933 4.45079 41.3275 4.82417 41.3275 5.24354C41.3275 5.89786 41.1122 6.43799 40.6825 6.86342C40.2528 7.28935 39.5891 7.50207 38.6915 7.50207C38.2929 7.50207 37.9763 7.46013 37.7414 7.37626C37.536 7.52304 37.4331 7.70569 37.4331 7.92346C37.4331 8.19201 37.5549 8.37011 37.7982 8.45828C38.1084 8.57575 38.7564 8.63436 39.7419 8.63436C41.3358 8.63436 42.1326 9.16287 42.1326 10.2199C42.1326 10.9747 41.8224 11.5998 41.2017 12.0947C40.5809 12.5893 39.7776 12.8369 38.7921 12.8369C37.7813 12.8369 37.061 12.6535 36.631 12.2864C36.2011 11.9193 35.9863 11.478 35.9863 10.9621C35.9863 10.4925 36.0922 10.115 36.3039 9.82982C36.5156 9.5446 36.7788 9.36851 37.0934 9.30131V9.24472C36.7622 9.08531 36.5964 8.77912 36.5964 8.32615C36.5964 7.91512 36.8061 7.55462 37.2255 7.24413V7.19386C37.0032 7.08472 36.7915 6.9003 36.5901 6.64009C36.3888 6.38013 36.2882 6.05727 36.2882 5.67125C36.2882 5.00455 36.5085 4.4614 36.9489 4.04203C37.3892 3.62266 38.0266 3.41272 38.8613 3.41272C39.5446 3.41272 40.082 3.53651 40.4718 3.78409H40.5408C40.6752 3.07521 41.0273 2.72076 41.5978 2.72076C41.9083 2.72076 42.1475 2.75234 42.3153 2.81525Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M45.2713 1.72055C45.2713 1.93453 45.2023 2.11996 45.0639 2.27735C44.9255 2.43449 44.7304 2.51331 44.4788 2.51331C44.2648 2.51331 44.0981 2.4451 43.9786 2.30868C43.8591 2.17251 43.7995 2.0078 43.7995 1.81504C43.7995 1.6051 43.8705 1.4227 44.0132 1.26759C44.1557 1.11247 44.353 1.03491 44.6046 1.03491C44.81 1.03491 44.9725 1.10312 45.0922 1.23929C45.2117 1.37571 45.2713 1.53613 45.2713 1.72055ZM45.0073 9.58447H43.8685C43.9273 8.74573 43.9566 7.7875 43.9566 6.70952C43.9566 5.4974 43.8831 4.4803 43.7363 3.65824L44.9944 3.48847C44.9442 4.3651 44.9189 5.43853 44.9189 6.70952C44.9189 7.71601 44.9485 8.67449 45.0073 9.58447Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M51.3298 6.6339C51.3298 5.97958 51.1654 5.39777 50.8359 4.88796C50.5065 4.37866 50.0381 4.12375 49.4298 4.12375C48.8257 4.12375 48.3614 4.36501 48.0363 4.84729C47.7111 5.32956 47.5487 5.88939 47.5487 6.52704C47.5487 7.18539 47.7132 7.76847 48.0426 8.276C48.372 8.78329 48.8427 9.03718 49.4551 9.03718C50.0591 9.03718 50.5224 8.79491 50.8453 8.31036C51.1681 7.82607 51.3298 7.26725 51.3298 6.6339ZM52.4184 6.4136C52.4184 7.48729 52.11 8.32527 51.4933 8.92704C50.8769 9.5288 50.1513 9.82969 49.3166 9.82969C48.5365 9.82969 47.8665 9.56341 47.3067 9.03087C46.7466 8.49832 46.4667 7.7475 46.4667 6.77866C46.4667 5.69664 46.7759 4.85133 47.3946 4.24325C48.0133 3.63516 48.7399 3.33099 49.5748 3.33099C50.3549 3.33099 51.0236 3.60055 51.5815 4.13941C52.1393 4.67853 52.4184 5.43643 52.4184 6.4136Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M59.2 9.58444H58.0553C58.1473 8.48145 58.1935 7.27791 58.1935 5.97332C58.1935 5.32759 58.0624 4.88599 57.8004 4.64903C57.5382 4.41206 57.1638 4.29357 56.6775 4.29357C56.0818 4.29357 55.5323 4.50983 55.0291 4.94157C55.0291 6.37197 55.0374 7.91959 55.0543 9.58444H53.9094C53.9806 8.15858 54.016 7.12684 54.016 6.48919C54.016 5.50772 53.9238 4.55581 53.7394 3.63294L54.8467 3.47581L54.9662 4.2433H55.0164C55.6371 3.68119 56.3018 3.40027 57.0107 3.40027C57.707 3.40027 58.2461 3.55437 58.6275 3.86284C59.0093 4.17079 59.2 4.71926 59.2 5.50772C59.2 5.58755 59.1957 5.74469 59.1876 5.97964C59.179 6.21458 59.1747 6.37197 59.1747 6.45155C59.1747 7.1521 59.1833 8.19623 59.2 9.58444Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M28.223 14.5302C28.223 14.8783 27.6935 16.2413 26.6345 18.6196C25.5755 20.9976 25.0459 22.3648 25.0459 22.7213H24.2282C24.2282 22.3984 23.7282 21.0415 22.7278 18.6509C21.7276 16.2602 21.2274 14.8867 21.2274 14.5302H22.4226C22.4226 14.8574 22.8041 16.0223 23.5675 18.0249C24.331 20.0277 24.7125 21.1737 24.7125 21.4629H24.7756C24.7756 21.1358 25.1614 19.9941 25.9332 18.0375C26.7047 16.0811 27.0907 14.9119 27.0907 14.5302H28.223Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M33.2747 14.8511C33.2747 15.0441 33.2108 15.2129 33.0827 15.3574C32.9549 15.5024 32.7778 15.5746 32.5512 15.5746C32.3625 15.5746 32.2157 15.5117 32.1108 15.3859C32.006 15.2601 31.9537 15.109 31.9537 14.933C31.9537 14.7483 32.0174 14.5858 32.1454 14.4454C32.2733 14.3049 32.4526 14.2347 32.6833 14.2347C32.872 14.2347 33.0178 14.2943 33.1206 14.4138C33.2232 14.5335 33.2747 14.6791 33.2747 14.8511ZM32.7336 21.5009C32.7126 20.8632 32.7022 20.291 32.7022 19.7835C31.9135 19.7835 31.314 19.8421 30.903 19.9596C30.2151 20.1692 29.8713 20.5697 29.8713 21.1611C29.8713 21.7315 30.274 22.0167 31.0791 22.0167C31.771 22.0167 32.3225 21.8447 32.7336 21.5009ZM30.8967 14.8511C30.8967 15.0441 30.8328 15.2129 30.7047 15.3574C30.5769 15.5024 30.3998 15.5746 30.1732 15.5746C29.9844 15.5746 29.8377 15.5117 29.7328 15.3859C29.628 15.2601 29.5754 15.109 29.5754 14.933C29.5754 14.7483 29.6393 14.5858 29.7674 14.4454C29.8953 14.3049 30.0746 14.2347 30.3053 14.2347C30.494 14.2347 30.6398 14.2943 30.7426 14.4138C30.8452 14.5335 30.8967 14.6791 30.8967 14.8511ZM33.8472 22.7213L32.8594 22.759C32.8091 22.5536 32.7841 22.3586 32.7841 22.1741H32.7212C32.2053 22.6438 31.5028 22.8787 30.6135 22.8787C30.1312 22.8787 29.7161 22.737 29.368 22.4538C29.0196 22.1708 28.8458 21.7671 28.8458 21.2429C28.8458 20.5972 29.1184 20.078 29.6636 19.6857C30.2088 19.2936 31.2216 19.0872 32.7022 19.0663C32.7149 18.9655 32.7212 18.8503 32.7212 18.7202C32.7212 18.2043 32.5838 17.8604 32.3092 17.6884C32.0343 17.5164 31.618 17.4305 31.0601 17.4305C30.4018 17.4305 29.7538 17.5123 29.1164 17.6758L29.2233 16.8077C29.8523 16.6274 30.5758 16.5372 31.3936 16.5372C32.1401 16.5372 32.7169 16.6913 33.1236 16.9995C33.5304 17.3077 33.734 17.8332 33.734 18.5754C33.734 18.7727 33.7244 19.1302 33.7057 19.6481C33.6868 20.1662 33.6774 20.5111 33.6774 20.6828C33.6774 21.4463 33.734 22.1256 33.8472 22.7213Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M39.44 21.0165C39.44 22.2413 38.6576 22.8534 37.0933 22.8534C36.4014 22.8534 35.7556 22.7842 35.1559 22.6457L35.3507 21.7211C35.8958 21.9308 36.4873 22.0354 37.1249 22.0354C38.0392 22.0354 38.4964 21.7757 38.4964 21.2553C38.4964 21.0036 38.3946 20.8036 38.1913 20.6545C37.9876 20.506 37.6511 20.339 37.1815 20.1545C36.586 19.9196 36.1538 19.6932 35.8855 19.475C35.4914 19.1521 35.2941 18.762 35.2941 18.305C35.2941 17.8268 35.4745 17.4168 35.8352 17.075C36.196 16.7332 36.7452 16.5624 37.4834 16.5624C38.2046 16.5624 38.7834 16.623 39.22 16.7448L39.0247 17.6507C38.5717 17.4703 38.0475 17.3801 37.4521 17.3801C36.6467 17.3801 36.2442 17.6128 36.2442 18.0784C36.2442 18.3134 36.3344 18.5031 36.5145 18.6479C36.6949 18.7924 37.0471 18.9677 37.5715 19.1731C38.1377 19.3954 38.5571 19.6134 38.8297 19.8274C39.2366 20.1586 39.44 20.5552 39.44 21.0165Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M44.2904 21.8531L44.2148 22.6709C43.8836 22.7927 43.5709 22.8535 43.2773 22.8535C42.5224 22.8535 42.0068 22.6615 41.7299 22.2778C41.4533 21.894 41.3146 21.2071 41.3146 20.2173C41.3146 19.5756 41.3187 18.7389 41.3272 17.7072C41.0923 17.7072 40.7464 17.7198 40.2892 17.7451L40.3271 16.8328C40.7255 16.8581 41.0819 16.8705 41.3965 16.8705C41.3965 16.6188 41.4174 16.0214 41.4594 15.0775L42.4469 14.977C42.3757 15.8577 42.34 16.489 42.34 16.8705C42.7511 16.8705 43.3551 16.8495 44.1519 16.8076L44.1077 17.7451C43.3528 17.7198 42.747 17.7072 42.2898 17.7072C42.2814 18.3405 42.2771 19.0535 42.2771 19.8462C42.2771 20.7105 42.3686 21.2817 42.5507 21.5606C42.7334 21.8395 43.0719 21.9789 43.5671 21.9789C43.7303 21.9789 43.9715 21.937 44.2904 21.8531Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M49.575 19.0409C49.575 17.8624 49.0819 17.273 48.0963 17.273C47.0899 17.273 46.4962 17.8857 46.3158 19.1102L49.575 19.0409ZM50.6254 19.0283C50.6254 19.2044 50.6171 19.4477 50.6004 19.7582L46.2784 19.8337C46.3201 20.4461 46.5571 20.9587 46.9891 21.3717C47.4211 21.785 47.9935 21.9914 48.7064 21.9914C49.3441 21.9914 49.9418 21.9141 50.4996 21.7585L50.3925 22.6457C49.9815 22.8095 49.3883 22.8911 48.6122 22.8911C47.5219 22.8911 46.6904 22.5935 46.1177 21.998C45.5453 21.4023 45.259 20.6765 45.259 19.8208C45.259 18.9068 45.5203 18.1193 46.0422 17.4587C46.5644 16.7983 47.2659 16.4679 48.1466 16.4679C48.956 16.4679 49.5717 16.7069 49.9931 17.1851C50.4147 17.6631 50.6254 18.2777 50.6254 19.0283Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M55.8785 16.7447L55.5953 17.7449C55.2681 17.615 54.9642 17.5501 54.6833 17.5501C53.8946 17.5501 53.383 17.9253 53.1481 18.6761C53.1481 20.6054 53.1607 21.9537 53.186 22.7212H52.0724C52.1393 21.3919 52.1729 20.3601 52.1729 19.626C52.1729 18.6321 52.0744 17.68 51.8773 16.77L52.9783 16.6126C53.0579 17.0741 53.0978 17.3824 53.0978 17.5375H53.1481C53.601 16.8705 54.1295 16.537 54.7336 16.537C55.0521 16.537 55.4339 16.6063 55.8785 16.7447Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M62.232 22.7213H61.0873C61.1793 21.6183 61.2255 20.4145 61.2255 19.1102C61.2255 18.4644 61.0944 18.0228 60.8324 17.7859C60.5702 17.5489 60.1958 17.4304 59.7095 17.4304C59.1138 17.4304 58.5643 17.6467 58.061 18.0784C58.061 19.5088 58.0694 21.0562 58.0863 22.7213H56.9414C57.0126 21.2952 57.048 20.2634 57.048 19.626C57.048 18.6446 56.9558 17.6926 56.7714 16.7698L57.8786 16.6126L57.9981 17.3801H58.0484C58.6691 16.818 59.3338 16.5371 60.0427 16.5371C60.7389 16.5371 61.2781 16.6912 61.6595 16.9997C62.0413 17.3076 62.232 17.8561 62.232 18.6446C62.232 18.7244 62.2277 18.8815 62.2196 19.1165C62.211 19.3514 62.2067 19.5088 62.2067 19.5884C62.2067 20.2887 62.2153 21.3331 62.232 22.7213Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M68.2782 19.7706C68.2782 19.1165 68.1137 18.5345 67.7843 18.0249C67.4549 17.5154 66.9865 17.2605 66.3782 17.2605C65.7744 17.2605 65.3098 17.502 64.9849 17.984C64.6598 18.4663 64.4971 19.0264 64.4971 19.6637C64.4971 20.3224 64.6618 20.9052 64.991 21.4127C65.3204 21.9203 65.791 22.1741 66.4034 22.1741C67.0075 22.1741 67.4708 21.9319 67.7936 21.4473C68.1165 20.963 68.2782 20.4042 68.2782 19.7706ZM69.3668 19.5506C69.3668 20.6243 69.0583 21.462 68.4416 22.0637C67.8252 22.6658 67.0997 22.9664 66.265 22.9664C65.4848 22.9664 64.8149 22.7004 64.255 22.1676C63.695 21.635 63.415 20.8842 63.415 19.9154C63.415 18.8333 63.7245 17.9883 64.3432 17.3802C64.9616 16.7721 65.6882 16.468 66.5232 16.468C67.3033 16.468 67.972 16.7375 68.5298 17.2764C69.0876 17.8152 69.3668 18.5734 69.3668 19.5506Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M74.6196 16.7447L74.3364 17.7449C74.0092 17.615 73.7053 17.5501 73.4244 17.5501C72.6357 17.5501 72.1241 17.9253 71.8891 18.6761C71.8891 20.6054 71.9018 21.9537 71.927 22.7212H70.8134C70.8804 21.3919 70.914 20.3601 70.914 19.626C70.914 18.6321 70.8155 17.68 70.6184 16.77L71.7194 16.6126C71.799 17.0741 71.8389 17.3824 71.8389 17.5375H71.8891C72.3421 16.8705 72.8706 16.537 73.4747 16.537C73.7932 16.537 74.175 16.6063 74.6196 16.7447Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M79.4445 16.7447L79.1613 17.7449C78.8342 17.615 78.5303 17.5501 78.2493 17.5501C77.4606 17.5501 76.949 17.9253 76.7141 18.6761C76.7141 20.6054 76.7267 21.9537 76.752 22.7212H75.6384C75.7053 21.3919 75.7389 20.3601 75.7389 19.626C75.7389 18.6321 75.6404 17.68 75.4434 16.77L76.5443 16.6126C76.6239 17.0741 76.6638 17.3824 76.6638 17.5375H76.7141C77.1671 16.8705 77.6956 16.537 78.2996 16.537C78.6182 16.537 78.9999 16.6063 79.4445 16.7447Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M81.4264 22.7213H80.2185C80.2941 21.3371 80.3314 19.7728 80.3314 18.0281C80.3314 16.3337 80.2708 14.9475 80.149 13.8695L81.4264 13.8066C81.3465 14.9475 81.3066 16.3547 81.3066 18.0281C81.3066 19.7518 81.3465 21.3161 81.4264 22.7213Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M86.7739 21.5008C86.7529 20.8634 86.7425 20.291 86.7425 19.7834C85.9538 19.7834 85.3541 19.8423 84.943 19.9595C84.2551 20.1692 83.9113 20.5696 83.9113 21.161C83.9113 21.7315 84.314 22.0167 85.1191 22.0167C85.8113 22.0167 86.3628 21.8446 86.7739 21.5008ZM87.8872 22.7213L86.8997 22.7589C86.8494 22.5535 86.8241 22.3588 86.8241 22.1741H86.7612C86.2454 22.6437 85.5428 22.8787 84.6538 22.8787C84.1713 22.8787 83.7562 22.7372 83.4081 22.4537C83.0599 22.1708 82.8859 21.7673 82.8859 21.2429C82.8859 20.5972 83.1585 20.078 83.7039 19.6857C84.2491 19.2938 85.2619 19.0872 86.7425 19.0662C86.7549 18.9654 86.7612 18.8502 86.7612 18.7201C86.7612 18.2042 86.6238 17.8604 86.3492 17.6884C86.0743 17.5166 85.6582 17.4304 85.1004 17.4304C84.4421 17.4304 83.7938 17.5123 83.1564 17.6757L83.2633 16.8077C83.8926 16.6273 84.6159 16.5371 85.4339 16.5371C86.1802 16.5371 86.7572 16.6912 87.1639 16.9997C87.5707 17.3076 87.7743 17.8331 87.7743 18.5753C87.7743 18.7726 87.7647 19.1301 87.746 19.648C87.7268 20.1662 87.7174 20.511 87.7174 20.683C87.7174 21.4462 87.7743 22.1258 87.8872 22.7213Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M94.8139 22.7213H93.6692C93.7612 21.6183 93.8074 20.4145 93.8074 19.1102C93.8074 18.4644 93.6763 18.0228 93.4143 17.7859C93.1521 17.5489 92.7777 17.4304 92.2914 17.4304C91.6957 17.4304 91.1462 17.6467 90.643 18.0784C90.643 19.5088 90.6513 21.0562 90.6682 22.7213H89.5233C89.5945 21.2952 89.6299 20.2634 89.6299 19.626C89.6299 18.6446 89.5377 17.6926 89.3533 16.7698L90.4606 16.6126L90.5801 17.3801H90.6303C91.251 16.818 91.9157 16.5371 92.6246 16.5371C93.3209 16.5371 93.86 16.6912 94.2414 16.9997C94.6232 17.3076 94.8139 17.8561 94.8139 18.6446C94.8139 18.7244 94.8096 18.8815 94.8015 19.1165C94.7929 19.3514 94.7886 19.5088 94.7886 19.5884C94.7886 20.2887 94.7972 21.3331 94.8139 22.7213Z\" fill=\"${l.color}\"/><mask id=\"mask1_6775_185\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"96\" y=\"13\" width=\"6\" height=\"10\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M96.2548 13.832H101.885V22.8911H96.2548V13.832Z\" fill=\"${l.color}\"/></mask><g mask=\"url(#mask1_6775_185)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M100.873 21.4757C100.873 20.1713 100.837 18.9152 100.765 17.7071C100.426 17.4265 100.002 17.2858 99.4948 17.2858C98.7859 17.2858 98.2556 17.5217 97.9032 17.9936C97.551 18.4653 97.3747 19.0577 97.3747 19.7706C97.3747 20.4083 97.5412 20.9451 97.8749 21.3812C98.2081 21.8177 98.6704 22.0355 99.2621 22.0355C100.004 22.0355 100.541 21.849 100.873 21.4757ZM101.885 22.7148L100.948 22.7464C100.914 22.566 100.898 22.3755 100.898 22.1742H100.828C100.388 22.6522 99.7338 22.8911 98.8657 22.8911C98.0687 22.8911 97.4346 22.6019 96.9624 22.0231C96.4907 21.4443 96.2548 20.7458 96.2548 19.928C96.2548 19.0011 96.517 18.2021 97.0412 17.5311C97.5654 16.8601 98.3036 16.5246 99.2558 16.5246C99.9351 16.5246 100.422 16.663 100.715 16.9397H100.765C100.765 15.8996 100.736 14.8784 100.678 13.876L101.873 13.832C101.793 14.8974 101.753 16.2917 101.753 18.0156C101.753 19.7686 101.797 21.3352 101.885 22.7148Z\" fill=\"${l.color}\"/></g></svg>`}),EC=()=>({getDefaultIconProps:()=>({width:\"71\",height:\"33\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 71 33\" fill=\"none\"><mask id=\"mask0_6775_3809\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"31\" y=\"0\" width=\"17\" height=\"21\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M31.6713 0.106812H47.6081V20.7519H31.6713V0.106812Z\" fill=\"white\"/></mask><g mask=\"url(#mask0_6775_3809)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M31.96 11.2311C31.6096 9.62101 31.5782 7.87661 31.8655 6.25747C32.4328 3.06128 34.5871 0.808945 37.8058 0.262469C40.9363 -0.268948 44.1825 0.524547 46.1689 3.18783C47.5264 5.00806 47.8599 7.06837 47.4349 9.25406C46.4272 14.4365 41.9196 18.2111 37.6248 20.7519C39.5427 17.3893 43.0804 9.05083 36.8803 8.14691C34.6169 7.81691 32.8977 9.25908 31.96 11.2311Z\" fill=\"${l.color}\"/></g><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M37.0916 20.8747C34.3262 19.9825 31.235 18.8891 29.0522 16.9107C26.5637 14.6553 27.9688 11.0239 31.5206 11.43C29.7789 9.89529 27.0439 8.324 24.6942 9.29232C23.038 9.97475 21.7296 11.938 21.7702 13.7687C21.9162 20.3543 32.7132 20.7732 37.0916 20.8747Z\" fill=\"${l.color}\"/><mask id=\"mask1_6775_3809\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"24\" width=\"5\" height=\"7\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 24.1118H4.68488V30.7379H0V24.1118Z\" fill=\"white\"/></mask><g mask=\"url(#mask1_6775_3809)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.894196 27.0318H2.06772C2.77559 27.0318 3.48346 26.8633 3.48346 25.9648C3.48346 25.0664 2.77559 24.898 2.06772 24.898H0.894196V27.0318ZM0 24.1118H2.3193C4.00512 24.1118 4.43357 25.1319 4.43357 25.9648C4.43357 26.8071 3.80955 27.6027 2.8129 27.7149L4.68494 30.7379H3.56722L1.89085 27.8179H0.894196V30.7379H0V24.1118Z\" fill=\"${l.color}\"/></g><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.37519 28.1549C8.35669 27.4154 7.94664 26.8633 7.09921 26.8633C6.27027 26.8633 5.72991 27.5653 5.72991 28.1549H8.37519ZM5.72991 28.8288C5.72991 29.6055 6.44703 30.1203 7.22016 30.1203C7.73257 30.1203 8.10511 29.8581 8.43109 29.4559L9.06435 29.9424C8.59871 30.5507 7.9561 30.8502 7.10845 30.8502C5.7112 30.8502 4.83582 29.8394 4.83582 28.5199C4.83582 27.1909 5.79517 26.1895 7.1177 26.1895C8.67322 26.1895 9.26938 27.3873 9.26938 28.5292V28.8288H5.72991Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.7958 28.5199C10.7958 29.4184 11.3546 30.0079 12.2488 30.0079C13.1429 30.0079 13.7018 29.4184 13.7018 28.5199C13.7018 27.6214 13.1429 26.9757 12.2488 26.9757C11.3546 26.9757 10.7958 27.6214 10.7958 28.5199ZM14.5402 30.7005C14.5402 32.0388 13.5714 32.984 12.1277 32.984C11.2894 32.984 10.5909 32.7687 9.96682 32.1886L10.5349 31.4772C10.9728 31.9451 11.4664 32.1979 12.109 32.1979C13.3573 32.1979 13.7018 31.4117 13.7018 30.663V30.0079H13.6738C13.3573 30.5415 12.7519 30.7941 12.1465 30.7941C10.8518 30.7941 9.89231 29.8114 9.90156 28.5199C9.90156 27.2096 10.7773 26.1895 12.1465 26.1895C12.7425 26.1895 13.3573 26.461 13.6833 26.9382H13.7018V26.3019H14.5402V30.7005Z\" fill=\"${l.color}\"/><mask id=\"mask2_6775_3809\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"71\" height=\"33\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 32.984H70.8985V0.106812H0V32.984Z\" fill=\"white\"/></mask><g mask=\"url(#mask2_6775_3809)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.5655 30.7379H16.4037V26.3019H15.5655V30.7379ZM15.9846 24.0931C16.3199 24.0931 16.5994 24.3739 16.5994 24.7108C16.5994 25.0478 16.3199 25.3287 15.9846 25.3287C15.6493 25.3287 15.3698 25.0478 15.3698 24.7108C15.3698 24.3739 15.6493 24.0931 15.9846 24.0931Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.6354 30.0641C20.5295 30.0641 21.0883 29.4184 21.0883 28.5199C21.0883 27.6214 20.5295 26.9757 19.6354 26.9757C18.7412 26.9757 18.1823 27.6214 18.1823 28.5199C18.1823 29.4184 18.7412 30.0641 19.6354 30.0641ZM19.6354 26.1895C20.9487 26.1895 21.9825 27.2283 21.9825 28.5199C21.9825 29.8114 20.9487 30.8502 19.6354 30.8502C18.3221 30.8502 17.2882 29.8114 17.2882 28.5199C17.2882 27.2283 18.3221 26.1895 19.6354 26.1895Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22.802 26.3019H23.6404V26.985H23.6589C23.8732 26.5171 24.432 26.1895 25.1118 26.1895C25.9688 26.1895 26.7139 26.7043 26.7139 27.8836V30.7379H25.8757V28.1174C25.8757 27.2845 25.4007 26.9758 24.8696 26.9758C24.1712 26.9758 23.6404 27.425 23.6404 28.4544V30.7379H22.802V26.3019Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M30.3185 24.1118H31.2127V26.9757H31.2872L34.2024 24.1118H35.4507L32.2651 27.1722L35.6647 30.7379H34.3608L31.2872 27.4248H31.2127V30.7379H30.3185V24.1118Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M38.2911 28.6041C37.4995 28.6041 36.5308 28.7445 36.5308 29.4559C36.5308 29.961 36.9033 30.1764 37.4807 30.1764C38.4122 30.1764 38.7382 29.4837 38.7382 28.8847V28.6041H38.2911ZM35.9254 26.8446C36.391 26.4047 37.0617 26.1895 37.6762 26.1895C38.9804 26.1895 39.5205 26.9009 39.5205 27.6682V29.9329C39.5205 30.2419 39.5298 30.504 39.5578 30.7379H38.8127C38.794 30.5133 38.7847 30.2887 38.7847 30.0641H38.7662C38.3936 30.6349 37.8905 30.8502 37.2199 30.8502C36.4003 30.8502 35.6924 30.3821 35.6924 29.5213C35.6924 28.3795 36.7821 27.9864 38.1234 27.9864H38.7382V27.7994C38.7382 27.3407 38.4029 26.8633 37.6857 26.8633C37.0431 26.8633 36.7355 27.1348 36.4283 27.3688L35.9254 26.8446Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M40.5728 30.7378H41.4109V23.6626H40.5728V30.7378Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M42.51 26.3019H43.2924V26.9944H43.3109C43.3949 26.7323 43.935 26.1895 44.7266 26.1895C45.3788 26.1895 45.8259 26.4703 46.1054 27.013C46.394 26.4703 46.9716 26.1895 47.5024 26.1895C48.8625 26.1895 49.179 27.1628 49.179 28.1549V30.7379H48.3407V28.2672C48.3407 27.5934 48.2011 26.9758 47.3906 26.9758C46.5803 26.9758 46.2637 27.5278 46.2637 28.3139V30.7379H45.4254V28.417C45.4254 27.5747 45.3043 26.9758 44.4939 26.9758C43.8886 26.9758 43.3484 27.4344 43.3484 28.4356V30.7379H42.51V26.3019Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M52.597 28.6041C51.8054 28.6041 50.8367 28.7445 50.8367 29.4559C50.8367 29.961 51.2091 30.1764 51.7866 30.1764C52.7181 30.1764 53.0441 29.4837 53.0441 28.8847V28.6041H52.597ZM50.2313 26.8446C50.6969 26.4047 51.3676 26.1895 51.9821 26.1895C53.2863 26.1895 53.8264 26.9009 53.8264 27.6682V29.9329C53.8264 30.2419 53.8357 30.504 53.8638 30.7379H53.1186C53.0999 30.5133 53.0906 30.2887 53.0906 30.0641H53.0721C52.6995 30.6349 52.1964 30.8502 51.5259 30.8502C50.7062 30.8502 49.9983 30.3821 49.9983 29.5213C49.9983 28.3795 51.0881 27.9864 52.4293 27.9864H53.0441V27.7994C53.0441 27.3407 52.7087 26.8633 51.9916 26.8633C51.349 26.8633 51.0414 27.1348 50.7342 27.3688L50.2313 26.8446Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M54.8135 26.3019H55.6519V26.985H55.6705C55.8846 26.5171 56.4435 26.1895 56.9931 26.1895C57.1234 26.1895 57.2537 26.2082 57.3658 26.2457L57.3282 27.1535C57.1887 27.116 57.0489 27.0878 56.9186 27.0878C56.0989 27.0878 55.6519 27.5371 55.6519 28.5105V30.7379H54.8135V26.3019Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M60.4484 30.7378H61.2865V23.6626H60.4484V30.7378Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M65.7014 24.5892C65.7014 24.9261 65.4594 25.1788 65.1238 25.1788C64.7887 25.1788 64.5465 24.9261 64.5465 24.5892C64.5465 24.2803 64.8353 24.0558 65.1238 24.0558C65.4126 24.0558 65.7014 24.2803 65.7014 24.5892ZM64.77 28.6041C63.9783 28.6041 63.0097 28.7445 63.0097 29.4558C63.0097 29.961 63.3822 30.1763 63.9596 30.1763C64.8911 30.1763 65.217 29.4838 65.217 28.8847V28.6041H64.77ZM63.8013 24.5892C63.8013 24.9261 63.5591 25.1788 63.2238 25.1788C62.8884 25.1788 62.6464 24.9261 62.6464 24.5892C62.6464 24.2803 62.9352 24.0558 63.2238 24.0558C63.5125 24.0558 63.8013 24.2803 63.8013 24.5892ZM62.4042 26.8446C62.8699 26.4047 63.5405 26.1894 64.1551 26.1894C65.4594 26.1894 65.9995 26.9009 65.9995 27.6682V29.9329C65.9995 30.2419 66.0088 30.504 66.0367 30.7379H65.2917C65.2728 30.5133 65.2636 30.2887 65.2636 30.0641H65.245C64.8725 30.6348 64.3695 30.8502 63.6988 30.8502C62.8791 30.8502 62.1713 30.3821 62.1713 29.5214C62.1713 28.3795 63.261 27.9864 64.6022 27.9864H65.217V27.7994C65.217 27.3407 64.8817 26.8633 64.1646 26.8633C63.522 26.8633 63.2145 27.1348 62.9071 27.3687L62.4042 26.8446Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M66.9865 26.3019H67.8248V26.985H67.8434C68.0576 26.5171 68.6165 26.1895 69.2963 26.1895C70.1533 26.1895 70.8985 26.7043 70.8985 27.8836V30.7379H70.0603V28.1174C70.0603 27.2845 69.5852 26.9758 69.0541 26.9758C68.3558 26.9758 67.8248 27.425 67.8248 28.4544V30.7379H66.9865V26.3019Z\" fill=\"${l.color}\"/></g></svg>`}),qC=()=>({getDefaultIconProps:()=>({width:\"120\",height:\"44\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 120 44\" fill=\"none\"><path fill=\"${l.color}\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M57.2621 26.4075H53.5348V24.4435H57.0684V21.9281H53.5348V20.0196H57.2621V17.5029H50.4081V28.9254H57.2621V26.4075Z\"></path><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M64.8245 29.312C66.8342 29.312 68.6112 28.6302 69.7863 27.0635C70.8641 25.6435 70.9898 24.2138 71.0189 22.5459H64.805V24.8777H67.3586C67.2322 26.1965 66.1937 26.8692 64.8433 26.8692C62.7765 26.8692 61.6598 25.0629 61.6598 23.2929C61.6598 21.5495 62.7277 19.6786 64.7951 19.6786C66.0478 19.6786 66.9609 20.4077 67.3975 21.5038L70.3684 20.3153C69.3293 18.185 67.4074 17.1162 64.941 17.1162C61.0576 17.1162 58.4067 19.5592 58.4067 23.2738C58.4067 26.8692 61.0384 29.312 64.8245 29.312Z\"></path><mask id=\"mask0_5750_65212\" style=\"mask-type:luminance\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"120\" height=\"44\"><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 43.3114H119.795V0.362305H0V43.3114Z\"></path></mask><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M72.3389 28.9244H75.4743V17.5029H72.3389V28.9244Z\"></path><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M83.4543 26.4267C81.5828 26.4267 80.0557 24.9873 80.0557 23.0152C80.0557 21.4395 81.5828 20.001 83.4543 20.001C85.3178 20.001 86.8523 21.4395 86.8523 23.0152C86.8523 24.9873 85.3178 26.4267 83.4543 26.4267ZM90.1101 23.0055C90.1101 19.5486 86.9189 17.1152 83.4542 17.1152C79.9876 17.1152 76.793 19.5486 76.793 23.0055C76.793 26.7022 79.5894 29.3113 83.4542 29.3113C87.3175 29.3113 90.1101 26.7022 90.1101 23.0055Z\"></path><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M94.6479 21.9284H94.6802L100.414 28.9244H103.544V17.5029H100.414V24.4908H100.379L94.6479 17.5029H91.5171V28.9244H94.6479V21.9284Z\"></path><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M43.4459 40.7951H42.7467V34.3984H43.4775C45.4904 34.3984 46.9113 35.5503 46.9113 37.5963C46.9113 39.8257 45.3197 40.7951 43.4459 40.7951ZM44.0558 31.8809H39.6133V43.3118H44.0558C47.3884 43.3118 50.1643 40.8051 50.1643 37.5963C50.1643 34.379 47.4069 31.8809 44.0558 31.8809Z\"></path><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M54.6616 39.0533L55.9532 35.4111H55.9816L57.263 39.0533H54.6616ZM54.2737 31.8809L49.6416 43.3118H52.963L53.7972 41.3215H58.1083L58.8854 43.3118H62.225L57.6909 31.8809H54.2737Z\"></path><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M66.1807 31.8809H63.0454V43.3118H69.9285V40.7951H66.1807V31.8809Z\"></path><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M75.5513 39.0533L76.8429 35.4111H76.8709L78.1526 39.0533H75.5513ZM75.1634 31.8809L70.5405 43.3118H73.8619L74.6872 41.3215H78.998L79.7834 43.3118H83.1147L78.5808 31.8809H75.1634Z\"></path><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M87.1789 37.0057H86.877V34.1575H87.1789C88.2037 34.1575 89.352 34.3338 89.352 35.5775C89.352 36.822 88.2037 37.0057 87.1789 37.0057ZM92.606 35.3932C92.606 32.9593 90.8041 31.8811 88.4293 31.8811H83.7496V43.3114H86.877V38.9141H86.9063L89.8645 43.3114H93.7588L89.9737 38.6284C91.6818 38.3338 92.606 36.9705 92.606 35.3932Z\"></path><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M103.414 38.8687H103.39L97.654 31.8809H94.5273V43.3118H97.654V36.3066H97.6895L103.414 43.3118H106.549V31.8809H103.414V38.8687Z\"></path><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M112.223 39.0533L113.513 35.4111H113.552L114.826 39.0533H112.223ZM115.251 31.8809H111.834L107.211 43.3118H110.532L111.365 41.3215H115.677L116.453 43.3118H119.795L115.251 31.8809Z\"></path><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M41.8556 12.0953L37.5726 4.43291V0.362305L33.7524 2.45624C32.9724 2.32049 32.1748 2.24624 31.3575 2.24624C26.3934 2.24624 22.0722 4.89564 19.8803 8.77958H19.879L17.6255 12.8984L7.02334 13.285C3.15845 13.4811 0.0793015 16.4729 0.00749301 20.1705L0.000152588 43.2941H4.41813C4.41813 34.6311 7.66005 30.2284 7.66005 30.2284C10.3687 30.5214 13.1204 30.6811 15.9148 30.6811C18.9228 30.6811 21.8887 30.4968 24.798 30.1475L26.4774 43.2941H30.8944C30.8944 20.8432 35.4681 13.8602 35.4681 13.8602L39.6305 14.7984C40.5707 14.0553 41.3328 13.1356 41.8556 12.0953Z\"></path><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M42.7472 19.7703H43.0479C44.0676 19.7703 45.2222 19.9551 45.2222 21.199C45.2222 22.4442 44.0676 22.6187 43.0479 22.6187H42.7472V19.7703ZM42.7472 24.5363H42.776L45.7274 28.9242H49.623L45.8433 24.2412C47.5523 23.9557 48.4744 22.5912 48.4744 21.0154C48.4744 18.5721 46.6689 17.5027 44.2903 17.5027H39.6125V28.9242H42.7472V24.5363Z\"></path></svg>`}),TC=()=>({getDefaultIconProps:()=>({width:\"87\",height:\"24\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 87 24\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.6245 11.9043C7.29242 11.8979 4.59656 9.23454 4.59656 5.95206C4.59656 2.66088 7.29242 6.10352e-05 10.6245 6.10352e-05C13.9436 6.10352e-05 16.6403 2.66088 16.6345 5.95206C16.6403 9.23454 13.9436 11.8979 10.6245 11.9043Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21.233 5.9527H18.3582V5.96268C18.3595 9.89889 15.3501 13.1423 11.4777 13.5615V23.8495H14.3252V15.7976C18.3621 14.314 21.2349 10.47 21.233 5.96587V5.9527Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.7344 13.559C5.88197 13.1302 2.88327 9.89061 2.87425 5.96268V5.9527H0.00012207V5.96608C0.0110756 10.4547 2.86652 14.2881 6.87424 15.7817V23.8495H9.72281V13.559H9.7344Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M26.7897 6.46902H24.4753V9.89698H26.7897C28.097 9.89698 28.8571 9.29932 28.8571 8.18364C28.8571 7.06605 28.097 6.46902 26.7897 6.46902ZM27.8187 10.2835L29.3118 13.7661H28.6733L27.2368 10.4271H24.4753V13.7661H23.8934V5.927H26.7897C28.5223 5.927 29.4613 6.82159 29.4613 8.18364C29.4613 9.2099 28.8127 10.0178 27.8187 10.2835Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32.4339 8.61304C31.2834 8.61304 30.5568 9.53162 30.5568 10.6261H34.2574C34.2346 9.57516 33.5744 8.61304 32.4339 8.61304ZM34.8152 11.1347H30.5467C30.5568 11.7764 30.7681 12.3728 31.1266 12.7933C31.4393 13.1586 31.8747 13.3782 32.4797 13.3782C32.97 13.3782 33.3959 13.2032 33.6973 12.8929C33.8983 12.6824 34.0551 12.4394 34.1229 12.1071H34.7043C34.6262 12.583 34.3897 12.9708 34.0772 13.2676C33.6747 13.666 33.1159 13.9096 32.4797 13.9096C31.6736 13.9096 31.1045 13.5785 30.7007 13.1233C30.2428 12.5924 29.9857 11.8651 29.9857 11.0241C29.9857 10.3289 30.0983 9.64185 30.5332 9.05566C31.0038 8.42486 31.6519 8.0929 32.4339 8.0929C33.9428 8.0929 34.8268 9.37552 34.8268 10.7709C34.8268 10.9037 34.8152 11.0024 34.8152 11.1347Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M37.8887 8.59157C37.0169 8.59157 36.3457 9.14379 36.3457 10.0297C36.3457 10.9138 37.0169 11.4446 37.8887 11.4446C38.7615 11.4446 39.4441 10.9138 39.4441 10.0297C39.4441 9.14379 38.7615 8.59157 37.8887 8.59157ZM39.8365 13.9098C39.5773 13.6447 39.1404 13.5005 38.4823 13.5005H37.0055C36.5375 13.6105 36.079 13.9871 36.079 14.6389C36.079 14.9267 36.2018 15.1703 36.3803 15.3351C36.7828 15.713 37.4761 15.7786 38.0352 15.7786C38.5942 15.7786 39.3895 15.713 39.8109 15.2918C39.9804 15.1274 40.1039 14.8825 40.1039 14.5954C40.1039 14.2862 40.0034 14.0871 39.8365 13.9098ZM40.2377 15.6236C39.7568 16.1116 38.917 16.2754 38.0238 16.2754C37.1743 16.2754 36.4134 16.1116 35.9441 15.635C35.6991 15.38 35.5532 15.0595 35.5532 14.6389C35.5532 14.1088 35.867 13.5885 36.3917 13.3461C36.0002 13.2359 35.6875 12.8256 35.6875 12.4394C35.6875 11.9639 35.9334 11.6321 36.3593 11.3892C36.0124 11.0568 35.7991 10.6046 35.7991 10.0297C35.7991 8.83476 36.7152 8.09288 37.8887 8.09288C38.3822 8.09288 38.8305 8.22648 39.198 8.47009C39.3436 7.99348 39.8238 7.71759 40.3268 7.71759C40.3949 7.71759 40.4718 7.74095 40.5401 7.74095V8.21564C40.4718 8.21564 40.3949 8.19249 40.3268 8.19249C39.9246 8.19249 39.6333 8.41465 39.5571 8.79058C39.8365 9.11171 40.0034 9.53161 40.0034 10.0297C40.0034 11.2237 39.0635 11.9427 37.8887 11.9427C37.4761 11.9427 37.0947 11.8539 36.7712 11.6876C36.4815 11.7972 36.2134 12.0302 36.2134 12.3727C36.2134 12.6384 36.3803 12.8039 36.6039 12.8929C36.8043 12.9708 37.1393 12.9797 37.3533 12.9797H38.5715C39.2877 12.9797 39.8582 13.1586 40.2154 13.5224C40.4834 13.7881 40.6629 14.1088 40.6629 14.5954C40.6629 15.0261 40.4834 15.3693 40.2377 15.6236Z\" fill=\"${l.color}\"/><mask id=\"mask0_6775_6668\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"87\" height=\"24\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 23.9994H86.1083V0H0V23.9994Z\" fill=\"white\"/></mask><g mask=\"url(#mask0_6775_6668)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M41.8925 13.7662H42.4855V8.23837H41.8925V13.7662ZM41.7898 6.70131H42.5731V5.92694H41.7898V6.70131Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M47.6771 9.12177C47.3874 8.824 46.9836 8.63519 46.4481 8.63519C45.9108 8.63519 45.5089 8.824 45.2175 9.12177C44.7151 9.64191 44.5923 10.2835 44.5923 11.0025C44.5923 11.7223 44.7151 12.362 45.2175 12.8821C45.5089 13.1805 45.9108 13.3683 46.4481 13.3683C46.9836 13.3683 47.3874 13.1805 47.6771 12.8821C48.181 12.362 48.3051 11.7223 48.3051 11.0025C48.3051 10.2835 48.181 9.64191 47.6771 9.12177ZM48.0802 13.2459C47.69 13.634 47.1397 13.9097 46.4481 13.9097C45.7548 13.9097 45.208 13.634 44.8156 13.2459C44.2332 12.6712 44.0216 11.9427 44.0216 11.0025C44.0216 10.0633 44.2332 9.33225 44.8156 8.75731C45.208 8.36991 45.7548 8.09296 46.4481 8.09296C47.1397 8.09296 47.69 8.36991 48.0802 8.75731C48.6616 9.33225 48.8749 10.0633 48.8749 11.0025C48.8749 11.9427 48.6616 12.6712 48.0802 13.2459Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M54.0636 13.7662V10.15C54.0636 9.18919 53.6394 8.63506 52.622 8.63506C51.2462 8.63506 50.7655 9.80937 50.7655 11.0026V13.7662H50.2056V8.23832H50.6972L50.7655 9.24462C51.0773 8.54629 51.8707 8.09283 52.654 8.09283C53.9394 8.09283 54.6222 8.87804 54.6222 10.118V13.7662H54.0636Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M27.783 23.8557H26.1963L23.8934 16.4994H25.4271L27.0229 21.9975L28.6097 16.4994H30.0611L27.783 23.8557Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32.8693 17.6321H34.1779V16.4995H32.8693V17.6321ZM33.3061 21.3005L31.8308 21.412C31.4049 21.4441 30.9923 21.6998 30.9923 22.1639C30.9923 22.6059 31.3824 22.8822 31.8192 22.8822C32.6891 22.8822 33.3061 22.4183 33.3061 21.5662V21.3005ZM30.5662 17.6321H31.8746V16.4995H30.5662V17.6321ZM34.479 23.9439C33.8768 23.9439 33.5411 23.5661 33.4964 23.1373C33.2271 23.6013 32.5568 23.9993 31.7294 23.9993C30.3433 23.9993 29.6283 23.1373 29.6283 22.1966C29.6283 21.1015 30.4885 20.4733 31.5956 20.3951L33.3061 20.2736V19.9198C33.3061 19.3769 33.1158 19.0112 32.3222 19.0112C31.6736 19.0112 31.2928 19.3002 31.2597 19.8304H29.9073C29.9842 18.5371 31.0239 17.9615 32.3222 17.9615C33.3175 17.9615 34.1682 18.2714 34.502 19.1339C34.6476 19.4997 34.6699 19.9083 34.6699 20.2951V22.4289C34.6699 22.694 34.7591 22.7936 34.9955 22.7936C35.0834 22.7936 35.1732 22.7715 35.1732 22.7715V23.7876C34.9373 23.8878 34.8151 23.9439 34.479 23.9439Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M39.9701 23.3356C39.4985 23.7984 38.7732 23.9994 37.9785 23.9994C37.2393 23.9994 36.5823 23.7876 36.1001 23.3356C35.7653 23.0151 35.485 22.5392 35.485 21.9976H36.7943C36.7943 22.2514 36.9291 22.5292 37.1074 22.6719C37.3303 22.8484 37.5868 22.9257 37.9886 22.9257C38.4592 22.9257 39.1761 22.8276 39.1761 22.1966C39.1761 21.8655 38.9521 21.6437 38.5943 21.587C38.0803 21.5116 37.4983 21.4781 36.9839 21.3662C36.1905 21.2018 35.6532 20.5601 35.6532 19.8304C35.6532 19.2442 35.8989 18.8355 36.2466 18.5371C36.6714 18.1737 37.2844 17.9615 38.011 17.9615C38.7055 17.9615 39.4111 18.1826 39.8353 18.6359C40.1471 18.9689 40.349 19.3996 40.349 19.8204H39.0195C39.0195 19.5986 38.9171 19.4211 38.7827 19.2769C38.6151 19.1112 38.314 19.0112 38.0249 19.0112C37.823 19.0112 37.6334 19.0112 37.4214 19.1006C37.1742 19.1994 36.9738 19.4105 36.9738 19.7089C36.9738 20.1182 37.3303 20.2384 37.6435 20.2838C38.1695 20.3505 38.314 20.3618 38.8851 20.4486C39.8028 20.5935 40.4732 21.1691 40.4732 22.0745C40.4732 22.6273 40.2713 23.0366 39.9701 23.3356Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M43.2666 23.932C42.0924 23.932 41.513 23.2695 41.513 22.1638V19.2443H40.449V18.1057H41.513V16.4994H42.9092V18.1057H44.3738V19.2443H42.9092V22.0417C42.9092 22.4839 43.1105 22.6721 43.5587 22.6721C43.8491 22.6721 44.0821 22.6614 44.4642 22.6173V23.7784C44.072 23.8765 43.6805 23.932 43.2666 23.932Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M51.9802 23.8557V20.2838C51.9802 19.5761 51.7897 19.1672 51.085 19.1672C50.2916 19.1672 49.9452 19.9966 49.9452 20.7164V23.8557H48.5571V20.2838C48.5571 19.5761 48.3668 19.1672 47.6632 19.1672C46.8698 19.1672 46.512 19.9966 46.512 20.7164V23.8557H45.1259V18.1057H46.2871L46.4005 18.8688C46.7227 18.3381 47.2818 17.9615 48.0556 17.9615C48.8711 17.9615 49.4302 18.3153 49.7199 18.9002C50.0676 18.3047 50.6935 17.9615 51.4759 17.9615C52.7177 17.9615 53.3664 18.7796 53.3664 19.9739V23.8557H51.9802Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M57.7408 21.3006L56.2629 21.4121C55.839 21.4442 55.4244 21.6997 55.4244 22.1638C55.4244 22.606 55.816 22.8823 56.2513 22.8823C57.125 22.8823 57.7408 22.4182 57.7408 21.5663V21.3006ZM58.915 23.9438C58.3093 23.9438 57.9751 23.5662 57.9306 23.1371C57.6605 23.6014 56.9895 23.9994 56.1635 23.9994C54.7767 23.9994 54.061 23.1371 54.061 22.1967C54.061 21.1016 54.9219 20.4731 56.0299 20.3952L57.7408 20.2737V19.9199C57.7408 19.377 57.549 19.0113 56.7565 19.0113C56.1076 19.0113 55.7268 19.3003 55.6944 19.8305H54.34C54.4189 18.537 55.4588 17.9614 56.7565 17.9614C57.7517 17.9614 58.599 18.2713 58.9358 19.134C59.081 19.4998 59.104 19.9084 59.104 20.2949V22.4288C59.104 22.6941 59.1946 22.7935 59.4276 22.7935C59.5178 22.7935 59.6083 22.7716 59.6083 22.7716V23.7877C59.3722 23.8879 59.2481 23.9438 58.915 23.9438Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M63.845 23.8557V20.3277C63.845 19.6534 63.6215 19.2443 62.8831 19.2443C62.3908 19.2443 62.0686 19.5546 61.8768 19.9739C61.6749 20.4273 61.6878 21.0254 61.6878 21.5116V23.8557H60.2894V18.1057H61.4643L61.5637 18.8469C61.9106 18.2387 62.6047 17.9615 63.2746 17.9615C64.5156 17.9615 65.2426 18.8248 65.2426 20.0181V23.8557H63.845Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M67.8642 23.9219C66.9114 23.9219 66.2761 23.4684 66.2761 22.3742V16.4995H67.6844V22.1418C67.6844 22.4723 67.7615 22.6941 68.2437 22.6941C68.3646 22.6941 68.4003 22.6839 68.4767 22.6839V23.8431C68.1984 23.8992 68.1442 23.9219 67.8642 23.9219Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M72.4893 21.3006L71.0134 21.4121C70.5886 21.4442 70.1749 21.6997 70.1749 22.1638C70.1749 22.606 70.5652 22.8823 71.0018 22.8823C71.8755 22.8823 72.4893 22.4182 72.4893 21.5663V21.3006ZM73.6629 23.9438C73.0598 23.9438 72.7243 23.5662 72.6796 23.1371C72.4103 23.6014 71.7406 23.9994 70.914 23.9994C69.5265 23.9994 68.8115 23.1371 68.8115 22.1967C68.8115 21.1016 69.6717 20.4731 70.7784 20.3952L72.4893 20.2737V19.9199C72.4893 19.377 72.3008 19.0113 71.5048 19.0113C70.8566 19.0113 70.4767 19.3003 70.4436 19.8305H69.0912C69.1674 18.537 70.2099 17.9614 71.5048 17.9614C72.5014 17.9614 73.3502 18.2713 73.6863 19.134C73.8308 19.4998 73.854 19.9084 73.854 20.2949V22.4288C73.854 22.6941 73.943 22.7935 74.1773 22.7935C74.267 22.7935 74.3575 22.7716 74.3575 22.7716V23.7877C74.1206 23.8879 73.999 23.9438 73.6629 23.9438Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M78.595 23.8557V20.3277C78.595 19.6534 78.3701 19.2443 77.634 19.2443C77.1407 19.2443 76.8153 19.5546 76.6267 19.9739C76.4255 20.4273 76.4384 21.0254 76.4384 21.5116V23.8557H75.0387V18.1057H76.2129L76.3149 18.8469C76.6598 18.2387 77.3533 17.9615 78.0252 17.9615C79.2655 17.9615 79.9919 18.8248 79.9919 20.0181V23.8557H78.595Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M83.4589 19.1226C83.0235 19.1226 82.7215 19.3223 82.5199 19.5761C82.2286 19.952 82.1498 20.4732 82.1498 20.9687C82.1498 21.4676 82.2286 21.9977 82.5199 22.3743C82.7215 22.6272 83.0235 22.8275 83.4589 22.8275C84.5542 22.8275 84.7789 21.7994 84.7789 20.9687C84.7789 20.1389 84.5542 19.1226 83.4589 19.1226ZM84.9017 23.8557L84.8126 23.2255C84.4651 23.7563 83.8167 23.9874 83.1786 23.9874C82.5974 23.9874 82.118 23.7877 81.7602 23.5006C81.066 22.9384 80.7312 22.0744 80.7312 20.9914C80.7312 19.8645 81.0774 18.9903 81.7703 18.4268C82.1281 18.1378 82.5974 17.9615 83.1915 17.9615C83.9301 17.9615 84.4651 18.2053 84.7108 18.5031V16.4994H86.1083V23.8557H84.9017Z\" fill=\"${l.color}\"/></g></svg>`}),jC=()=>({getDefaultIconProps:()=>({width:\"83\",height:\"24\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 83 24\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M31.6327 7.49258C32.431 7.49258 32.9516 7.01895 32.9516 6.14085C32.9516 5.60954 32.7549 5.19359 32.3037 5.00864C32.0722 4.90461 31.76 4.85856 31.378 4.85856H30.2675V7.49258H31.6327ZM27.7684 10.7159H28.7518V4.78926H27.7684V3.64557H31.3897C31.9913 3.64557 32.4888 3.68 32.9516 3.8186C33.8656 4.11905 34.4672 4.85856 34.4672 6.01387C34.4672 7.15756 33.8656 7.96622 32.9169 8.28962V8.31287C32.9169 8.31287 33.1599 8.43985 33.3219 8.7403L34.2705 10.4502C34.3862 10.6581 34.5482 10.7159 34.8259 10.7159H35.092V11.8481H34.1317C33.449 11.8481 33.2408 11.7092 32.9863 11.2357L31.8177 9.12153C31.6443 8.8096 31.4937 8.70557 31.0195 8.70557H30.2675V10.7159H31.2161V11.8481H27.7684V10.7159Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M39.6321 8.28121C39.6082 7.44481 39.0953 6.943 38.451 6.943C37.6756 6.943 37.1269 7.48071 36.9837 8.28121H39.6321ZM38.4868 5.77216C40.2406 5.77216 41.1949 7.05057 41.1949 8.66342C41.1949 8.84266 41.159 9.1771 41.159 9.1771H36.9479C37.0433 10.3002 37.8546 10.8736 38.7732 10.8736C39.7634 10.8736 40.5387 10.2285 40.5387 10.2285L41.1233 11.3038C41.1233 11.3038 40.1927 12.1519 38.6658 12.1519C36.6498 12.1519 35.3971 10.6944 35.3971 8.96225C35.3971 7.08648 36.6616 5.77216 38.4868 5.77216Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M46.5228 8.73537C46.5228 7.38741 45.8386 7.02718 45.0362 7.02718C44.1277 7.02718 43.6204 7.67793 43.6204 8.67735C43.6204 9.71142 44.1633 10.4785 45.1307 10.4785C45.8386 10.4785 46.5228 10.0718 46.5228 8.73537ZM44.7886 13.0699C45.7089 13.0699 46.4875 12.6748 46.4875 11.5824V11.2105C46.4875 11.0711 46.5111 10.8969 46.5111 10.8969H46.4875C46.1335 11.4198 45.6144 11.7218 44.8121 11.7218C43.0779 11.7218 42.1104 10.3508 42.1104 8.72368C42.1104 7.09689 43.0424 5.77216 44.7767 5.77216C45.4964 5.77216 46.3104 6.03944 46.6408 6.66695H46.6644C46.6644 6.66695 46.6408 6.58555 46.6408 6.46952C46.6408 6.15576 46.8533 5.91157 47.3251 5.91157H48.8236V7.01549H48.2451C48.0918 7.01549 47.9857 7.09689 47.9857 7.24784V11.4779C47.9857 13.5116 46.3813 14.2785 44.8121 14.2785C44.0571 14.2785 43.2547 14.0694 42.6648 13.7672L43.125 12.6748C43.125 12.6748 43.8682 13.0699 44.7886 13.0699Z\" fill=\"${l.color}\"/><mask id=\"mask0_6775_3959\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"83\" height=\"24\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 24H83V0H0V24Z\" fill=\"white\"/></mask><g mask=\"url(#mask0_6775_3959)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M50.0671 4.95096H51.607V3.64557H50.0671V4.95096ZM49.1887 10.7505H50.0791V7.05353H49.1287V5.95604H51.6069V10.7505H52.4853V11.8481H49.1887V10.7505Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M56.153 10.8616C57.1342 10.8616 57.9599 10.097 57.9599 8.9621C57.9599 7.83904 57.1342 7.06244 56.153 7.06244C55.1599 7.06244 54.334 7.83904 54.334 8.9621C54.334 10.097 55.1599 10.8616 56.153 10.8616ZM56.141 5.77216C58.0077 5.77216 59.5036 7.0985 59.5036 8.9621C59.5036 10.8379 58.0077 12.1519 56.153 12.1519C54.2863 12.1519 52.7904 10.8379 52.7904 8.9621C52.7904 7.0985 54.2863 5.77216 56.141 5.77216Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M60.1716 10.7423H61.028V7.2738C61.028 7.11074 60.9354 7.01764 60.7734 7.01764H60.114V5.91194H61.6643C62.1849 5.91194 62.4279 6.15639 62.4279 6.57531V6.84302C62.4279 6.9711 62.4047 7.09917 62.4047 7.09917H62.4279C62.4973 6.91284 63.1219 5.77216 64.6029 5.77216C65.8641 5.77216 66.5814 6.45894 66.5814 8.0304V10.7423H67.4375V11.8481H65.1235V8.33295C65.1235 7.61133 64.927 7.12245 64.1864 7.12245C63.1219 7.12245 62.4973 8.14662 62.4973 9.18265V10.7423H63.3418V11.8481H60.1716V10.7423Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M28.5346 15.4222H27.7684V14.2785H31.0332V15.4222H30.1494L31.717 20.1011C31.823 20.4361 31.8584 20.8405 31.8584 20.8405H31.9056C31.9056 20.8405 31.941 20.4361 32.0588 20.1011L33.6146 15.4222H32.7424V14.2785H36.0074V15.4222H35.2295L32.6834 22.481H31.0805L28.5346 15.4222Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M38.9236 15.6472H40.1584V14.2785H38.9236V15.6472ZM37.7955 21.6641C38.6148 21.6641 39.1966 20.791 39.1966 20.0358V19.8355H38.9474C38.3537 19.8355 36.917 19.9297 36.917 20.8381C36.917 21.2865 37.2375 21.6641 37.7955 21.6641ZM36.347 15.6472H37.5819V14.2785H36.347V15.6472ZM38.8048 18.9271H39.1848V18.7263C39.1848 17.9596 38.698 17.6881 38.0686 17.6881C37.1663 17.6881 36.3588 18.2661 36.3588 18.2661L35.8008 17.228C35.8008 17.228 36.7388 16.485 38.1993 16.485C39.8259 16.485 40.6927 17.3225 40.6927 18.8561V21.2631C40.6927 21.4399 40.7875 21.5225 40.954 21.5225H41.5V22.6431H40.0751C39.5173 22.6431 39.3036 22.3483 39.3036 22.0061V21.9354C39.3036 21.7466 39.3392 21.6286 39.3392 21.6286H39.3154C39.3154 21.6286 38.8048 22.7848 37.4037 22.7848C36.3708 22.7848 35.3971 22.1832 35.3971 20.9561C35.3971 19.1156 37.8312 18.9271 38.8048 18.9271Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M42.1697 21.3646H43.0471V17.8626C43.0471 17.6978 42.9523 17.604 42.7863 17.604H42.1104V16.4874H43.6876C44.2211 16.4874 44.4939 16.7107 44.4939 17.2162V17.5686C44.4939 17.7918 44.47 17.9448 44.47 17.9448H44.4939C44.7665 17.0868 45.4898 16.4051 46.4148 16.4051C46.5571 16.4051 46.6876 16.4289 46.6876 16.4289V17.8978C46.6876 17.8978 46.5334 17.8741 46.32 17.8741C45.0987 17.8741 44.5531 18.932 44.5531 20.0601V21.3646H45.4187V22.481H42.1697V21.3646Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M47.3566 21.3753H48.228V17.8949C48.228 17.7319 48.1338 17.6505 47.9689 17.6505H47.2979V16.5446H48.8638C49.3936 16.5446 49.6527 16.789 49.6527 17.2081V17.4759C49.6527 17.6038 49.6292 17.7319 49.6292 17.7319H49.6527C49.9588 17.1267 50.7123 16.4051 51.7014 16.4051C52.5372 16.4051 53.1378 16.789 53.3732 17.697H53.3969C53.7265 16.9985 54.5273 16.4051 55.4808 16.4051C56.6936 16.4051 57.4118 17.1033 57.4118 18.6632V21.3753H58.2831V22.481H55.9164V18.9424C55.9164 18.2673 55.787 17.7552 55.0923 17.7552C54.068 17.7552 53.5617 18.768 53.5617 19.862V21.3753H54.4329V22.481H52.0781V18.9424C52.0781 18.3023 51.9722 17.7552 51.2656 17.7552C50.206 17.7552 49.7233 18.8609 49.7233 19.932V21.3753H50.5827V22.481H47.3566V21.3753Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M58.9215 15.4104H57.9779V14.2785H60.4267V20.7118C60.4267 21.26 60.5461 21.5457 61.0479 21.5457C61.2151 21.5457 61.3345 21.5337 61.3345 21.5337V22.7489C61.3345 22.7489 61.0838 22.7848 60.785 22.7848C59.8176 22.7848 58.9215 22.463 58.9215 20.8071V15.4104Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M64.0379 21.6498C64.8572 21.6498 65.4391 20.7656 65.4391 20.0008V19.798H65.1898C64.5959 19.798 63.1594 19.8936 63.1594 20.8135C63.1594 21.2674 63.48 21.6498 64.0379 21.6498ZM65.0472 18.8781H65.4272V18.6748C65.4272 17.8984 64.9404 17.6234 64.311 17.6234C63.4087 17.6234 62.6012 18.2089 62.6012 18.2089L62.0432 17.1577C62.0432 17.1577 62.9812 16.4051 64.4417 16.4051C66.0683 16.4051 66.9349 17.2532 66.9349 18.8063V21.2436C66.9349 21.4227 67.0301 21.5064 67.1962 21.5064H67.7426V22.6414H66.3177C65.7595 22.6414 65.546 22.3427 65.546 21.9962V21.9245C65.546 21.7334 65.5816 21.6138 65.5816 21.6138H65.5577C65.5577 21.6138 65.0472 22.7848 63.6461 22.7848C62.6132 22.7848 61.6396 22.1755 61.6396 20.9329C61.6396 19.069 64.0735 18.8781 65.0472 18.8781Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M68.4107 21.3753H69.2669V17.9067C69.2669 17.7434 69.1744 17.6505 69.0124 17.6505H68.3529V16.5446H69.9032C70.4239 16.5446 70.6669 16.789 70.6669 17.2081V17.4759C70.6669 17.6038 70.6437 17.7319 70.6437 17.7319H70.6669C70.7361 17.5457 71.3609 16.4051 72.8419 16.4051C74.103 16.4051 74.8203 17.0916 74.8203 18.6632V21.3753H75.6764V22.481H73.3625V18.9659C73.3625 18.2439 73.1658 17.7552 72.4253 17.7552C71.3609 17.7552 70.7361 18.7795 70.7361 19.8155V21.3753H71.5807V22.481H68.4107V21.3753Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M79.2574 21.5241C80.0411 21.5241 80.7662 20.9586 80.7662 19.6745C80.7662 18.6965 80.2867 17.7775 79.3042 17.7775C78.4621 17.7775 77.7836 18.4491 77.7836 19.6389C77.7836 20.7817 78.392 21.5241 79.2574 21.5241ZM79.0118 16.4935C80.2867 16.4935 80.7313 17.3417 80.7313 17.3417H80.7544C80.7544 17.3417 80.7313 17.165 80.7313 16.9175V15.3977H79.8072V14.2785H82.2048V21.265C82.2048 21.4416 82.2985 21.5241 82.4621 21.5241H83V22.6433H81.5965C81.0586 22.6433 80.8362 22.3488 80.8362 22.0071V21.9365C80.8362 21.7716 80.8715 21.6655 80.8715 21.6655H80.848C80.848 21.6655 80.3803 22.7848 78.8948 22.7848C77.3043 22.7848 76.2867 21.5006 76.2867 19.6389C76.2867 17.7305 77.3978 16.4935 79.0118 16.4935Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.3387 17.6865H12.5081C12.8856 18.6522 12.7038 19.5707 13.3716 20.506C14.3213 21.8372 15.4356 21.9358 17.0851 22.4413C17.5593 20.7781 18.0885 19.8201 17.5617 18.2685C17.1858 17.1627 16.4528 16.7583 15.7808 15.8633L16.0756 15.6216C17.0381 15.963 17.8706 16.6464 19.1271 16.656C20.7588 16.6677 21.5338 15.9448 22.9627 14.9771C21.9743 13.5603 21.56 12.5565 20.0324 11.9797C18.9444 11.5689 18.1028 11.8504 17.0571 11.8147L16.9764 11.4717C17.8678 10.9434 18.8443 10.8183 19.6331 9.91005C20.7056 8.67546 20.5978 7.5862 20.7483 5.86235C19.0284 5.74184 18.0026 5.45441 16.582 6.26111C15.5723 6.83494 15.1693 7.59019 14.5279 8.42395L14.2611 8.29014C14.433 7.21198 14.8938 6.48068 14.7073 5.32637C14.4473 3.70927 13.5542 3.09064 12.3349 1.86727C11.116 3.09064 10.2225 3.70927 9.96146 5.32637C9.77525 6.48068 10.2365 7.21198 10.4093 8.29014L10.1418 8.42395C9.49947 7.59019 9.09759 6.83494 8.08743 6.26111C6.66685 5.45441 5.64152 5.74184 3.92144 5.86235C4.07156 7.5862 3.96387 8.67546 5.03605 9.91005C5.82522 10.8183 6.8012 10.9434 7.69247 11.4717L7.61277 11.8147C6.56653 11.8504 5.72461 11.5689 4.63682 11.9797C3.10987 12.5565 2.69561 13.5603 1.70682 14.9771C3.1355 15.9448 3.91113 16.6677 5.54267 16.656C6.7987 16.6464 7.63178 15.963 8.59435 15.6216L8.88869 15.8633C8.21663 16.7583 7.48328 17.1627 7.10777 18.2685C6.5817 19.8201 7.11013 20.7781 7.58523 22.4413C9.23371 21.9358 10.348 21.8372 11.2988 20.506C11.9657 19.5707 11.7838 18.6522 12.1608 17.6865H12.3312H12.3387ZM12.3349 0L14.0043 1.61311C14.0043 1.61311 15.0502 2.55111 15.4618 3.32691C15.7917 3.94983 15.9146 4.30853 16.0205 5.04707C16.6489 4.68866 17.011 4.62257 17.6813 4.49675C18.5418 4.33529 19.9257 4.47072 19.9257 4.47072C19.9257 4.47072 21.3184 4.5692 22.196 4.72045C22.1443 5.61321 21.9678 7.00099 21.9678 7.00099C21.9678 7.00099 21.8993 8.40784 21.5581 9.21646C21.2837 9.86599 21.0826 10.1879 20.577 10.7344C21.2514 11 21.5296 11.2399 22.049 11.6842C22.7155 12.2545 23.4824 13.4188 23.4824 13.4188C23.4824 13.4188 24.2817 14.5663 24.7169 15.3466C23.994 15.8679 22.8075 16.6038 22.8075 16.6038C22.8075 16.6038 21.6763 17.4393 20.8347 17.678C20.1152 17.8816 19.6685 17.8956 18.9267 17.8456C19.1451 18.5379 19.0583 18.924 19.0184 19.6143C18.9671 20.4917 18.5775 21.8234 18.5775 21.8234C18.5775 21.8234 18.1915 23.1696 17.8612 24C17.0031 23.7642 15.6864 23.3017 15.6864 23.3017C15.6864 23.3017 14.3247 22.951 13.6127 22.4389C13.0507 22.0348 12.8072 21.7699 12.3795 21.1597C11.9514 21.7699 11.6799 22.0338 11.1042 22.4389C10.3863 22.9422 9.02967 23.3017 9.02967 23.3017C9.02967 23.3017 7.71339 23.7642 6.85527 24C6.52483 23.1696 6.13931 21.8234 6.13931 21.8234C6.13931 21.8234 5.74877 20.4917 5.69794 19.6143C5.65802 18.924 5.57169 18.5379 5.79002 17.8456C5.04842 17.8956 4.60087 17.8816 3.88255 17.678C3.0396 17.4393 1.90909 16.6038 1.90909 16.6038C1.90909 16.6038 0.723181 15.8679 0 15.3466C0.434734 14.5663 1.23452 13.4188 1.23452 13.4188C1.23452 13.4188 2.00116 12.2545 2.66748 11.6842C3.18677 11.2399 3.46594 11 4.13888 10.7344C3.63388 10.1879 3.43308 9.86599 3.15878 9.21646C2.81656 8.40784 2.74865 7.00099 2.74865 7.00099C2.74865 7.00099 2.5726 5.61321 2.52031 4.72045C3.39846 4.5692 4.79017 4.47072 4.79017 4.47072C4.79017 4.47072 6.17451 4.33529 7.03558 4.49675C7.70632 4.62257 8.06754 4.68866 8.69688 5.04707C8.80236 4.30853 8.92463 3.94983 9.25507 3.32691C9.66667 2.55111 10.7125 1.61311 10.7125 1.61311C10.7125 1.61311 11.6761 0.601774 12.3349 0Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.71326 8.50634C6.71326 8.17074 6.98617 7.89874 7.32355 7.89874C7.66064 7.89874 7.93385 8.17074 7.93385 8.50634C7.93385 8.84179 7.66064 9.11393 7.32355 9.11393C6.98617 9.11393 6.71326 8.84179 6.71326 8.50634Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.49268 14.2786C5.49268 13.9431 5.76623 13.6709 6.10378 13.6709C6.44015 13.6709 6.71326 13.9431 6.71326 14.2786C6.71326 14.6143 6.44015 14.8861 6.10378 14.8861C5.76623 14.8861 5.49268 14.6143 5.49268 14.2786Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.84924 18.532C8.84924 18.1964 9.12216 17.9241 9.45954 17.9241C9.79603 17.9241 10.0698 18.1964 10.0698 18.532C10.0698 18.868 9.79603 19.1393 9.45954 19.1393C9.12216 19.1393 8.84924 18.868 8.84924 18.532Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.7831 8.50634C16.7831 8.1706 17.0571 7.89874 17.394 7.89874C17.7302 7.89874 18.0037 8.1706 18.0037 8.50634C18.0037 8.84164 17.7302 9.11393 17.394 9.11393C17.0571 9.11393 16.7831 8.84164 16.7831 8.50634Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M18.3088 14.2787C18.3088 13.9429 18.5822 13.6709 18.9182 13.6709C19.2562 13.6709 19.5294 13.9429 19.5294 14.2787C19.5294 14.6143 19.2562 14.8861 18.9182 14.8861C18.5822 14.8861 18.3088 14.6143 18.3088 14.2787Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14.6471 18.5316C14.6471 18.196 14.9201 17.9241 15.2572 17.9241C15.5942 17.9241 15.8677 18.196 15.8677 18.5316C15.8677 18.8675 15.5942 19.1393 15.2572 19.1393C14.9201 19.1393 14.6471 18.8675 14.6471 18.5316Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11.9008 6.07598C11.9008 5.74024 12.1735 5.46838 12.5111 5.46838C12.848 5.46838 13.1213 5.74024 13.1213 6.07598C13.1213 6.41201 12.848 6.68357 12.5111 6.68357C12.1735 6.68357 11.9008 6.41201 11.9008 6.07598Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.2059 12.4557H12.8162V6.07593H12.2059V12.4557Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.4966 12.7595L12.2059 12.4089L17.1028 8.50635L17.3934 8.857L12.4966 12.7595Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M18.7966 14.5823L12.511 12.8933L12.6335 12.4557L18.9191 14.1446L18.7966 14.5823Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.1335 18.5316L12.2059 12.6531L12.6352 12.4557L15.5626 18.3341L15.1335 18.5316Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.56976 18.5316L9.15442 18.3281L12.0957 12.4557L12.511 12.6593L9.56976 18.5316Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.22032 14.5823L6.10291 14.1304L12.3936 12.4557L12.511 12.9077L6.22032 14.5823Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.219 12.7595L7.32349 8.85241L7.61566 8.50635L12.511 12.4136L12.219 12.7595Z\" fill=\"${l.color}\"/></g></svg>`}),JC=()=>({getDefaultIconProps:()=>({width:\"97\",height:\"24\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 97 24\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.52891 8.88879C4.63337 8.90182 3.59383 9.36537 2.99589 10.3727C2.39726 11.3786 0 15.4819 0 15.4819C0.0315429 15.4257 0.0665143 15.3695 0.103543 15.3146C0.602743 14.5672 1.56754 13.9082 2.59817 13.9165C2.59269 13.9165 17.3136 13.9185 19.4757 13.9165L22.416 8.88879H5.52891Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.1179 0.204224H11.0889L9.74011 8.16057H14.7637C15.1147 6.09794 15.5557 3.508 16.1179 0.204224Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.62631 14.7375L8.06128 18.0666C8.34448 18.4177 8.80802 18.9875 8.87934 19.0739C9.25305 19.5231 9.78928 19.7459 10.3948 19.7514C11.5091 19.7617 12.8304 19.1425 13.1335 17.7512C13.3187 16.6541 13.3248 16.6177 13.6444 14.7375H8.62631Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.07765 14.7375H3.07697H3.07354H3.07148H3.06051C2.09845 14.7348 1.16657 15.2785 0.694794 15.9869C0.670794 16.0232 0.62348 16.0966 0.601537 16.1322C0.0461088 17.0093 0.16268 17.9185 0.190109 18.0646C0.25388 18.2936 0.35948 18.5 0.491823 18.6858C1.25708 19.6033 2.56679 21.1805 3.12497 21.8511C3.80108 22.665 4.91194 22.7178 5.77251 22.3846C6.63377 22.0527 11.1327 20.3274 11.1327 20.3274C10.1254 20.6957 9.10919 20.5044 8.49754 19.7693C8.39948 19.6513 5.44474 16.089 4.32359 14.7375H3.08177H3.07765Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M23.7904 20.9987L24.4213 20.4282C24.8341 21.0467 25.2709 21.3505 25.9264 21.3505C26.7157 21.3505 27.2862 20.7806 27.2862 19.6396V13.595H28.1961V19.6396C28.1961 20.5132 27.9534 21.1557 27.5289 21.5815C27.1161 21.9937 26.5696 22.2001 25.9147 22.2001C24.9438 22.2001 24.2395 21.7146 23.7904 20.9987Z\" fill=\"${l.color}\"/><mask id=\"mask0_6775_3754\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"97\" height=\"24\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 23.9357H96.216V0.000183105H0V23.9357Z\" fill=\"white\"/></mask><g mask=\"url(#mask0_6775_3754)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32.5522 14.9056H33.5355V13.8256H32.5522V14.9056ZM30.6706 14.9056H31.6539V13.8256H30.6706V14.9056ZM34.0327 18.9718V18.9108C34.0327 17.4914 33.1831 16.4347 32.1024 16.4347C30.9861 16.4347 30.1975 17.4914 30.1975 18.8985V18.9595C30.1975 20.3789 31.0347 21.4349 32.1147 21.4349C33.2318 21.4349 34.0327 20.3673 34.0327 18.9718ZM29.2992 18.9835V18.8985C29.2992 17.0539 30.4882 15.6461 32.1147 15.6461C33.7413 15.6461 34.9186 17.0416 34.9186 18.8868V18.9595C34.9186 20.8048 33.7289 22.2242 32.1024 22.2242C30.4766 22.2242 29.2992 20.8288 29.2992 18.9835Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M36.0087 15.7674H36.8823V16.7987C37.2347 16.1678 37.8052 15.646 38.7515 15.646C40.0386 15.646 40.8155 16.5319 40.8155 17.9521V22.091H39.9412V18.1948C39.9412 17.0661 39.4071 16.4353 38.4848 16.4353C37.5625 16.4353 36.8823 17.1628 36.8823 18.2428V22.091H36.0087V15.7674Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M42.16 13.3279H43.0336V19.2141L45.8375 15.7677H46.8935L44.6725 18.4255L46.9785 22.0906H45.9465L44.078 19.1167L43.0336 20.3427V22.0906H42.16V13.3279Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M50.424 14.9056H51.4073V13.8256H50.424V14.9056ZM48.5431 14.9056H49.5264V13.8256H48.5431V14.9056ZM51.9051 18.9718V18.9108C51.9051 17.4914 51.0555 16.4347 49.9748 16.4347C48.8585 16.4347 48.0699 17.4914 48.0699 18.8985V18.9595C48.0699 20.3789 48.9072 21.4349 49.9872 21.4349C51.1035 21.4349 51.9051 20.3673 51.9051 18.9718ZM47.1716 18.9835V18.8985C47.1716 17.0539 48.3607 15.6461 49.9872 15.6461C51.6137 15.6461 52.7911 17.0416 52.7911 18.8868V18.9595C52.7911 20.8048 51.6013 22.2242 49.9748 22.2242C48.349 22.2242 47.1716 20.8288 47.1716 18.9835Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M58.4327 18.9837V18.8864C58.4327 17.3449 57.6071 16.4349 56.6361 16.4349C55.6411 16.4349 54.7188 17.3942 54.7188 18.8747V18.9961C54.7188 20.4765 55.6411 21.4235 56.6361 21.4235C57.6318 21.4235 58.4327 20.5376 58.4327 18.9837ZM53.8816 15.7677H54.7552V16.9808C55.1796 16.2649 55.8112 15.6464 56.8062 15.6464C58.0926 15.6464 59.331 16.7627 59.331 18.8624V18.9837C59.331 21.0841 58.0926 22.2121 56.8062 22.2121C55.7988 22.2121 55.168 21.6052 54.7552 20.9133V23.912H53.8816V15.7677Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M60.5199 22.0912H61.4196V15.7675H60.5199V22.0912ZM60.4705 14.4681H61.4705V13.4368H60.4705V14.4681Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M62.8969 15.7674H63.7705V16.7987C64.1229 16.1678 64.6927 15.646 65.6397 15.646C66.9261 15.646 67.703 16.5319 67.703 17.9521V22.091H66.8287V18.1948C66.8287 17.0661 66.2953 16.4353 65.3723 16.4353C64.4507 16.4353 63.7705 17.1628 63.7705 18.2428V22.091H62.8969V15.7674Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M73.3329 18.6683V18.6313C73.3329 17.2722 72.3983 16.4349 71.4273 16.4349C70.4324 16.4349 69.6308 17.2482 69.6308 18.6313V18.656C69.6308 20.0274 70.444 20.8646 71.4273 20.8646C72.3983 20.8646 73.3329 20.0157 73.3329 18.6683ZM68.9876 23.2557L69.3393 22.5522C69.9345 22.9403 70.6504 23.1707 71.3786 23.1707C72.5684 23.1707 73.3082 22.5398 73.3082 21.2781V20.3552C72.8714 21.0587 72.2282 21.6539 71.2209 21.6539C69.9345 21.6539 68.7332 20.5862 68.7332 18.6806V18.6313C68.7332 16.7264 69.9469 15.6464 71.2333 15.6464C72.2406 15.6464 72.8838 16.2285 73.3082 16.8964V15.7677H74.1825V21.2534C74.1825 22.1147 73.9398 22.7586 73.4906 23.207C73.0052 23.6932 72.2893 23.936 71.391 23.936C70.5414 23.936 69.7281 23.7172 68.9876 23.2557Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M75.0421 21.314L75.5029 20.6708C76.0981 21.1687 76.7166 21.4354 77.3482 21.4354C78.0401 21.4354 78.5255 21.0466 78.5255 20.4521V20.4404C78.5255 19.8816 78.0037 19.5901 77.1541 19.2391C76.1461 18.8016 75.3452 18.4011 75.3452 17.4178V17.3938C75.3452 16.3618 76.1831 15.6706 77.3118 15.6706C78.0277 15.6706 78.7683 15.9497 79.3025 16.3501L78.8773 17.0173C78.3918 16.6656 77.846 16.4228 77.2871 16.4228C76.6199 16.4228 76.1955 16.8116 76.1955 17.3088V17.3328C76.1955 17.8676 76.7413 18.1337 77.6026 18.4985C78.6469 18.9593 79.3751 19.3961 79.3751 20.3554V20.3794C79.3751 21.5081 78.4645 22.2 77.3242 22.2C76.5473 22.2 75.71 21.8969 75.0421 21.314Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M83.293 22.0904H84.1666V13.3277H83.293V22.0904Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M88.2686 14.9056H89.2519V13.8256H88.2686V14.9056ZM86.387 14.9056H87.3703V13.8256H86.387V14.9056ZM89.2272 19.8934V19.1049C88.8268 18.9595 88.3166 18.8505 87.6981 18.8505C86.6908 18.8505 86.1319 19.3723 86.1319 20.1732V20.2096C86.1319 20.9988 86.7271 21.496 87.4793 21.496C88.4503 21.5083 89.2272 20.8164 89.2272 19.8934ZM85.2583 20.2582V20.2096C85.2583 18.9108 86.1929 18.1709 87.5884 18.1709C88.2562 18.1709 88.7417 18.28 89.2149 18.4253V18.0489C89.2149 17.0299 88.6204 16.4834 87.6007 16.4834C86.9698 16.4834 86.4233 16.6774 85.9865 16.9085L85.7074 16.192C86.302 15.9005 86.9212 15.6825 87.6981 15.6825C88.4626 15.6825 89.0572 15.9005 89.47 16.314C89.8581 16.7021 90.0768 17.285 90.0768 18.0249V22.0912H89.2149V21.1689C88.8391 21.7634 88.2199 22.2242 87.2853 22.2242C86.2293 22.2242 85.2583 21.5083 85.2583 20.2582Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M91.4103 15.7674H92.2839V16.7987C92.6363 16.1678 93.2062 15.646 94.1531 15.646C95.4395 15.646 96.2164 16.5319 96.2164 17.9521V22.091H95.3422V18.1948C95.3422 17.0661 94.8087 16.4353 93.8857 16.4353C92.9641 16.4353 92.2839 17.1628 92.2839 18.2428V22.091H91.4103V15.7674Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M30.006 4.52678C31.3898 4.52678 32.1544 3.8349 32.1544 2.7549V2.7309C32.1544 1.61387 31.3775 0.995353 30.1034 0.995353H28.1731V4.52678H30.006ZM27.2632 0.15741H30.1638C31.1347 0.15741 31.9116 0.448838 32.3971 0.946667C32.8216 1.37112 33.0643 1.97798 33.0643 2.69455V2.71855C33.0643 4.06598 32.2271 4.87924 31.0497 5.16998L33.3318 8.6541H32.2394L30.1034 5.35238H28.1731V8.6541H27.2632V0.15741Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M38.1475 5.15824C38.0871 3.95687 37.5166 2.97356 36.4846 2.97356C35.55 2.97356 34.8465 3.83481 34.7614 5.15824H38.1475ZM33.8755 5.54636V5.48601C33.8755 3.55573 35.0042 2.20898 36.4846 2.20898C38.0748 2.20898 39.0211 3.56876 39.0211 5.47367C39.0211 5.5587 39.0211 5.72876 39.0094 5.83778H34.7614C34.8588 7.23321 35.7201 8.01013 36.7157 8.01013C37.4069 8.01013 37.9171 7.7187 38.3539 7.28258L38.8517 7.84076C38.2812 8.42361 37.6257 8.78704 36.6787 8.78704C35.1372 8.78704 33.8755 7.54933 33.8755 5.54636Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M44.615 5.23125V5.19422C44.615 3.83513 43.6804 2.99788 42.7094 2.99788C41.7145 2.99788 40.9135 3.81113 40.9135 5.19422V5.2189C40.9135 6.59033 41.7261 7.42759 42.7094 7.42759C43.6804 7.42759 44.615 6.57868 44.615 5.23125ZM40.2697 9.81868L40.6221 9.11513C41.2166 9.50325 41.9325 9.73365 42.6607 9.73365C43.8505 9.73365 44.5903 9.10279 44.5903 7.84108V6.9181C44.1535 7.62165 43.5103 8.21685 42.503 8.21685C41.2166 8.21685 40.0153 7.14919 40.0153 5.24359V5.19422C40.0153 3.2893 41.229 2.20862 42.5147 2.20862C43.5227 2.20862 44.1659 2.79148 44.5903 3.45936V2.33068H45.4646V7.81639C45.4646 8.67765 45.2219 9.32153 44.7727 9.76999C44.2873 10.2562 43.5714 10.4989 42.6731 10.4989C41.8235 10.4989 41.0102 10.2802 40.2697 9.81868Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M46.9935 8.6539H47.8932V2.33024H46.9935V8.6539ZM46.9434 1.0315H47.9434V0.000183105H46.9434V1.0315Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M53.7881 5.53458V5.47355C53.7881 4.05412 52.9385 2.99812 51.8585 2.99812C50.7414 2.99812 49.9529 4.05412 49.9529 5.46189V5.52223C49.9529 6.94235 50.7901 7.99835 51.8708 7.99835C52.9871 7.99835 53.7881 6.93001 53.7881 5.53458ZM49.0546 5.54692V5.46189C49.0546 3.61663 50.2443 2.20886 51.8708 2.20886C53.4966 2.20886 54.674 3.60498 54.674 5.44955V5.52223C54.674 7.36749 53.485 8.78692 51.8585 8.78692C50.2319 8.78692 49.0546 7.39149 49.0546 5.54692Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M55.7886 2.33029H56.6622V3.36161C57.0146 2.73075 57.5845 2.20892 58.5314 2.20892C59.8178 2.20892 60.5947 3.09487 60.5947 4.51498V8.65395H59.7205V4.75772C59.7205 3.62904 59.187 2.99818 58.264 2.99818C57.3424 2.99818 56.6622 3.72572 56.6622 4.80572V8.65395H55.7886V2.33029Z\" fill=\"${l.color}\"/></g></svg>`}),KC=()=>({getDefaultIconProps:()=>({width:\"106\",height:\"23\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 106 23\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32.1968 8.67305C32.1968 9.48441 32.0274 10.0379 31.6771 10.3628C31.4037 10.6173 31.0152 10.7357 30.4567 10.7357C30.3734 10.7357 30.2896 10.7333 30.2045 10.7286C30.193 9.46973 30.193 8.19519 30.2045 6.93655C30.4246 6.9226 30.6269 6.91233 30.8237 6.91233C31.2696 6.91233 32.1968 6.91233 32.1968 8.67305ZM32.9192 13.5652L32.1786 11.7636C33.2178 11.3295 33.7664 10.2424 33.7664 8.6087C33.7664 5.43201 31.7773 5.43201 31.0284 5.43201C30.8416 5.43201 30.5972 5.44033 30.3518 5.44791C30.1099 5.45623 29.8686 5.4643 29.6767 5.4643C29.3727 5.48021 29.07 5.48021 28.7486 5.48021H28.6814L28.5574 5.66592L28.5593 5.70678C28.6542 7.68234 28.6618 13.2523 28.6618 13.3071C28.6618 14.366 28.6618 15.367 28.6363 16.4067V16.8919L28.7621 17.0805L28.8354 17.0739C29.4198 17.0274 29.5377 17.0274 30.1067 17.0274H30.1663L30.2972 16.8637L30.2952 16.818C30.229 15.1701 30.2192 13.102 30.2185 12.1693C30.4286 12.169 30.5291 12.1673 30.7512 12.1573L30.9245 12.6166C31.1326 13.1573 31.4172 13.9136 31.6783 14.61L32.0646 15.6369C32.2943 16.2263 32.3689 16.4598 32.4968 16.8894L32.5079 16.9264L32.692 17.0791L32.7432 17.0739C33.2722 17.0289 33.5296 17.0113 34.141 17.0113H34.2214L34.3303 16.773L34.3045 16.7201C33.8902 15.8689 33.8172 15.6954 32.9192 13.5652Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M37.3676 9.66082C37.4872 9.66082 38.0949 9.71734 38.2817 10.8353C38.3354 11.1436 38.343 11.4174 38.344 11.6799H36.2716C36.299 11.3056 36.3667 10.6882 36.6454 10.2018C36.8347 9.84776 37.0845 9.66082 37.3676 9.66082ZM38.4563 8.58154C38.1525 8.40023 37.803 8.30823 37.4186 8.30823C37.0359 8.30823 36.6694 8.40243 36.3552 8.58178C35.3084 9.21404 34.7323 10.6936 34.7323 12.7477C34.7323 14.1488 34.9733 15.2055 35.4694 15.979C36.1779 17.0756 37.1041 17.2029 37.739 17.2029C37.9827 17.2029 38.4558 17.1791 38.8941 17.0198C39.1868 16.9212 39.3486 16.805 39.4518 16.7319L39.5543 16.5586L39.5852 16.1451C39.5959 15.8916 39.6038 15.7196 39.6315 15.3452L39.6374 15.2643L39.3959 15.1385L39.3305 15.1977C39.0998 15.4059 38.7129 15.7548 38.0336 15.7548C37.3031 15.7548 36.7633 15.3408 36.4731 14.5574C36.2814 14.0502 36.2426 13.5126 36.2377 13.0002H39.6764L39.8362 12.8294L39.8369 12.7815C39.8659 11.126 39.7237 9.33246 38.4563 8.58154Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M48.9156 11.597C48.9156 10.5085 48.9269 9.60607 48.9538 8.58037L48.9551 8.54073L48.8195 8.33813L48.7344 8.36016C48.1627 8.50599 48.0309 8.5351 47.4793 8.61316L47.43 8.62001L47.292 8.793L47.2952 8.84144C47.331 9.34402 47.3844 10.1035 47.3844 13.3071C47.3844 14.9289 47.3704 15.9171 47.3334 16.833L47.3317 16.8797L47.4793 17.0647L47.5465 17.0593C48.1091 17.0094 48.2772 17.0116 48.7996 17.0272L48.8692 17.0292L48.9935 16.8423L48.9923 16.8019C48.9582 15.7921 48.9156 14.5352 48.9156 11.597Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M47.3593 5.74847C47.3593 5.9863 47.3593 6.20774 47.3463 6.44532L47.3439 6.49842L47.5182 6.68511L47.5878 6.66945C48.1001 6.55739 48.2835 6.52778 48.7397 6.47982L48.7865 6.47517L48.9427 6.30781L48.941 6.25643C48.9285 5.76291 48.9285 5.53903 48.954 4.90653L48.9559 4.85441L48.7836 4.67065L48.7154 4.68313C48.2293 4.77685 48.0898 4.79324 47.5466 4.85784L47.5008 4.86322L47.3439 5.03131L47.3463 5.0849C47.3593 5.30633 47.3593 5.52753 47.3593 5.74847Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M53.7208 15.162C53.6078 15.4441 53.3984 15.8187 52.8888 15.8187C52.5071 15.8187 51.9744 15.6394 51.7574 14.0869C51.6986 13.7039 51.6692 13.2261 51.6692 12.668C51.6692 11.3031 51.8783 9.67648 52.876 9.67648C53.3104 9.67648 53.5239 9.96643 53.6725 10.2444C53.9365 10.8049 54.0704 11.6904 54.0704 12.8757C54.0704 13.8906 53.9564 14.6371 53.7208 15.162ZM52.9403 8.30823C52.1053 8.30823 51.4339 8.63683 50.9445 9.28475C50.3756 10.0391 50.0868 11.2099 50.0868 12.7636C50.0868 13.3173 50.0868 15.0012 50.8379 16.1091C51.314 16.815 52.0283 17.2029 52.8503 17.2029C53.7426 17.2029 54.4511 16.8016 54.9546 16.0093C55.4182 15.2696 55.6525 14.2156 55.6525 12.8757C55.6525 11.2043 55.351 9.96912 54.7558 9.204C54.2979 8.60967 53.6872 8.30823 52.9403 8.30823Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M61.8266 13.7178L61.8124 12.0762C61.8124 10.7244 61.8124 10.316 61.6148 9.67541C61.3429 8.7789 60.8242 8.32452 60.0736 8.32452C59.3489 8.32452 58.79 8.72384 58.334 9.17308C58.3394 9.02798 58.3492 8.91788 58.361 8.79089L58.3828 8.52149L58.2247 8.32428L58.1131 8.35291C57.588 8.48993 57.4115 8.53642 56.9161 8.613L56.8619 8.62206L56.7445 8.79725L56.7462 8.83835C56.8249 10.4594 56.8362 12.0823 56.8362 13.5945C56.8362 15.169 56.8087 16.1526 56.7847 16.8338L56.783 16.8798L56.9291 17.0631L57.1809 17.0467C57.5432 17.0227 57.6969 17.0134 58.1994 17.0273L58.2619 17.0288L58.4076 16.8475L58.4051 16.8C58.3289 15.3647 58.3281 11.9779 58.3281 10.649C58.4995 10.4324 58.9841 9.88436 59.5095 9.88436C60.1706 9.88436 60.2738 10.6275 60.2937 11.1844C60.3067 11.7652 60.3197 12.7895 60.3197 13.4985C60.3197 14.0241 60.3067 15.5893 60.2812 16.8353L60.2805 16.8747L60.4062 17.0635L60.4778 17.0591C60.9997 17.0273 61.1022 17.0273 61.6748 17.0273H61.7344L61.8788 16.8477L61.8763 16.8003C61.8396 16.0364 61.8381 15.7719 61.8266 13.7178Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M72.3238 5.45957C72.0852 5.47082 71.8948 5.48012 71.4712 5.48012H71.4111L71.2679 5.65825L71.2692 5.704C71.3206 7.53984 71.3206 9.39942 71.3206 11.1978C71.3206 13.0505 71.3116 13.8971 71.1081 14.5492C70.9814 14.9701 70.6413 15.6747 69.7807 15.6747C69.0933 15.6747 68.604 15.2262 68.4037 14.4117C68.2527 13.7995 68.2407 12.686 68.2407 11.2935C68.2407 9.67762 68.2407 7.23619 68.2791 5.67171L68.2804 5.62619L68.1343 5.4444L68.07 5.44807C67.4976 5.48012 67.353 5.48012 66.7448 5.48012H66.6781L66.5551 5.66461L66.5563 5.704C66.5999 7.33505 66.6195 9.08378 66.6195 11.3733V12.2203C66.6195 13.5025 66.6195 14.3496 66.8948 15.1839C67.2022 16.1122 67.9333 17.2189 69.6649 17.2189C70.0726 17.2189 71.3108 17.2189 72.1161 15.8964C72.7491 14.8548 72.7491 13.5676 72.7491 12.0762V10.3825C72.7491 9.82443 72.7491 9.26631 72.7621 8.70526C72.7751 6.85107 72.7751 6.2445 72.7751 5.66852V5.63084L72.6505 5.44513L72.3238 5.45957Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M78.0564 12.3958C78.0564 13.3273 77.9073 14.1693 77.6475 14.7041C77.1584 15.6591 76.3668 15.6591 76.1067 15.6591C76.0057 15.6591 75.9344 15.6513 75.8594 15.6425C75.8469 14.0523 75.8469 13.0354 75.8469 10.487C76.1087 10.1283 76.4141 9.80414 76.862 9.80414C77.3324 9.80414 77.6038 10.2022 77.7232 10.4366C77.8605 10.7224 77.9541 11.0728 77.9943 11.4567C78.0377 11.7278 78.0564 12.018 78.0564 12.3958ZM78.0701 8.49657C77.8154 8.37325 77.5442 8.30817 77.2849 8.30817C76.597 8.30817 76.1156 8.68424 75.8216 8.9852V8.51101L75.6591 8.34169L75.5878 8.36028C75.0509 8.50367 74.9016 8.53474 74.3596 8.61304L74.3039 8.62111L74.2093 8.76352L74.1873 8.81735L74.1895 8.8587C74.2517 9.97665 74.3292 11.3686 74.3292 15.5439C74.3292 17.3839 74.3182 18.1551 74.2966 19.691L74.2902 20.1833L74.4155 20.3709L74.5459 20.3629C74.8567 20.3428 75.1524 20.3274 75.4603 20.3428C75.5522 20.347 75.6437 20.3509 75.7351 20.3509H75.802L75.9251 20.1659L75.8935 19.0482C75.868 18.1818 75.8579 17.8382 75.8483 17.0506C75.8976 17.0545 75.941 17.0572 75.9807 17.0599C76.1062 17.0685 76.196 17.0743 76.3114 17.0743C77.5773 17.0743 78.327 16.3858 78.7325 15.8064C79.3085 14.974 79.6008 13.7942 79.6008 12.3001C79.6008 10.3977 79.0445 9.01285 78.0701 8.49657Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M84.5112 12.3958C84.5112 13.3271 84.3614 14.169 84.1016 14.7041C83.6125 15.6591 82.8207 15.6591 82.5608 15.6591C82.4608 15.6591 82.3887 15.6513 82.3135 15.6425C82.3017 14.0523 82.3017 13.0354 82.3017 10.487C82.5623 10.1283 82.868 9.80414 83.3164 9.80414C83.7873 9.80414 84.0587 10.2022 84.1773 10.4366C84.3141 10.7219 84.408 11.0723 84.448 11.457C84.4916 11.7276 84.5112 12.0175 84.5112 12.3958ZM84.5237 8.49657C84.2702 8.37325 83.9988 8.30817 83.7392 8.30817C83.0514 8.30817 82.5701 8.68424 82.2767 8.9852V8.51101L82.113 8.34169L82.0421 8.36028C81.506 8.50367 81.3564 8.53474 80.8134 8.61304L80.7583 8.62111L80.6639 8.76327L80.6411 8.81417L80.6436 8.85601C80.7061 9.97346 80.7831 11.3647 80.7831 15.5439C80.7831 17.3978 80.773 18.1757 80.7509 19.7264L80.7446 20.1833L80.8708 20.3709L80.9995 20.3629C81.3104 20.3428 81.6058 20.3281 81.9149 20.3428C82.0061 20.347 82.098 20.3509 82.1894 20.3509H82.2566L82.3794 20.1659L82.3471 19.0389C82.3218 18.1796 82.3123 17.8353 82.3032 17.0506C82.3515 17.0545 82.3954 17.0572 82.4353 17.0599C82.5608 17.0685 82.6508 17.0743 82.7658 17.0743C84.0317 17.0743 84.7811 16.3858 85.1866 15.8064C85.7629 14.9733 86.0546 13.7937 86.0546 12.3001C86.0546 10.3977 85.4981 9.01236 84.5237 8.49657Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M89.507 12.0366L89.1003 11.7667C88.7024 11.488 88.359 11.2467 88.359 10.6548C88.359 10.0409 88.7172 9.64455 89.2714 9.64455C89.5977 9.64455 90.0701 9.78475 90.4209 10.1782L90.4768 10.2408L90.7283 10.151V10.063C90.7283 9.87431 90.7283 9.66902 90.7413 9.47181C90.7413 9.27166 90.7538 9.08668 90.767 8.88873L90.7685 8.86378L90.7055 8.68124L90.6616 8.65824C90.0397 8.33306 89.3516 8.30835 89.1562 8.30835C88.4171 8.30835 87.8077 8.5726 87.3919 9.07567C87.0445 9.5249 86.8536 10.1479 86.8536 10.8298C86.8536 12.2032 87.5635 12.7106 88.3168 13.2499L88.6912 13.5076C89.1243 13.8171 89.4668 14.0608 89.4668 14.7129C89.4668 15.2685 89.1645 15.8668 88.5027 15.8668C87.8479 15.8668 87.4042 15.4437 87.1806 15.2301L87.1146 15.1677L86.8791 15.2935V15.3681C86.8791 15.5411 86.8791 15.7144 86.8666 15.9116C86.8666 16.1164 86.8536 16.3219 86.8413 16.5272L86.8398 16.5575L86.9318 16.767L86.9671 16.7875C87.4539 17.0667 87.9937 17.2027 88.6186 17.2027C89.1111 17.2027 89.835 17.1183 90.4202 16.3889C90.695 16.0452 91.0235 15.445 91.0235 14.5372C91.0235 13.0747 90.191 12.5049 89.507 12.0366Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M94.125 15.7065C93.6979 15.7065 93.1995 15.3586 93.1995 14.3774C93.1995 13.9133 93.2755 13.2502 93.9367 12.8523C94.1963 12.6837 94.3887 12.6309 95.0891 12.4464V15.1619C94.908 15.3701 94.5917 15.7065 94.125 15.7065ZM96.5553 13.5149V11.854L96.5565 11.7561C96.5695 10.5337 96.5752 9.97512 96.3266 9.40476C95.8373 8.30835 94.7709 8.30835 94.4194 8.30835C93.7445 8.30835 93.0179 8.49357 92.4747 8.80456L92.445 8.82071L92.3639 8.96263L92.3445 9.1525C92.3347 9.57286 92.3322 9.69985 92.2967 10.1332L92.2913 10.2036L92.518 10.3649L92.5926 10.302C92.8301 10.1004 93.2716 9.72432 94.0872 9.72432C95.0092 9.72432 95.0847 10.2428 95.0886 11.1618L94.6199 11.268C93.6869 11.5009 91.7461 11.9852 91.7461 14.5213C91.7461 16.0716 92.5509 17.1545 93.7021 17.1545C94.3718 17.1545 94.819 16.8482 95.108 16.5852L95.1153 16.8829L95.259 17.063L95.3247 17.0591C95.8076 17.0273 95.8907 17.0273 96.43 17.0273H96.4913L96.6357 16.8467L96.6323 16.7976C96.5553 15.7156 96.5553 15.0256 96.5553 13.5149Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M99.4882 7.93768C99.4882 6.44684 99.5 5.65579 99.5132 4.81898L99.5144 4.7309L99.3595 4.53784L99.1176 4.59779C98.7221 4.69737 98.5412 4.74264 98.0357 4.82632L97.9828 4.83513L97.8641 5.0113L97.8671 5.05314C97.9043 5.63793 97.9311 6.06025 97.9566 7.30078C97.9948 9.2017 97.9948 11.1342 97.9948 13.0031C97.9948 14.595 97.9828 15.7697 97.9695 16.8362L97.9693 16.8749L98.0951 17.065L98.1696 17.0591C98.7315 17.0097 98.8981 17.0117 99.397 17.0273L99.4603 17.0293L99.6051 16.8482L99.6032 16.8012C99.4914 14.1487 99.4882 7.9991 99.4882 7.93768Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M103.026 15.7065C102.599 15.7065 102.1 15.3586 102.1 14.3774C102.1 13.9133 102.176 13.2502 102.838 12.8523C103.097 12.6837 103.29 12.6309 103.989 12.4464V15.1619C103.808 15.3701 103.492 15.7065 103.026 15.7065ZM105.533 16.7976C105.456 15.7156 105.456 15.0256 105.456 13.5149V11.854L105.457 11.7561C105.47 10.5337 105.475 9.97512 105.227 9.40476C104.738 8.30835 103.67 8.30835 103.32 8.30835C102.645 8.30835 101.918 8.49357 101.375 8.80456L101.346 8.82071L101.265 8.96263L101.245 9.1525C101.234 9.57286 101.232 9.69985 101.197 10.1332L101.192 10.2036L101.418 10.3649L101.493 10.302C101.73 10.1004 102.172 9.72432 102.987 9.72432C103.909 9.72432 103.985 10.2428 103.989 11.1618L103.521 11.268C102.587 11.5009 100.646 11.9852 100.646 14.5213C100.646 16.0716 101.451 17.1545 102.603 17.1545C103.271 17.1545 103.719 16.8482 104.009 16.5852L104.015 16.8829L104.16 17.063L104.225 17.0591C104.707 17.0273 104.791 17.0273 105.331 17.0273H105.391L105.536 16.8467L105.533 16.7976Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M44.4142 12.1767L44.4069 12.1848C44.4091 12.336 44.412 12.4875 44.4142 12.6389V15.1976C44.1328 15.5509 43.8337 15.7229 43.502 15.7229C43.1277 15.7229 42.8404 15.5247 42.6002 15.1012C42.3378 14.6179 42.205 13.9174 42.205 13.0189C42.205 12.1019 42.3535 10.4945 43.35 10.0326C43.4197 9.99956 43.6332 9.90022 44.1039 9.90022C44.2331 9.90022 44.3252 9.90878 44.4142 9.92518V12.1767ZM45.988 15.7814L45.9665 13.8283C45.9547 12.8259 45.9405 11.6088 45.9378 10.6979C45.9373 10.5995 45.9373 10.5041 45.9373 10.4138L45.9361 10.4153C45.9451 9.87379 45.9601 9.30393 45.9836 8.6614L45.9851 8.62127L45.8579 8.43042L45.7836 8.43678C45.4183 8.46786 45.1658 8.46786 44.8469 8.46786C43.92 8.46786 42.9612 8.46786 42.1871 9.03454C40.8486 9.98635 40.6486 12.0299 40.6486 13.163C40.6486 15.0121 41.1947 16.3796 42.1442 16.9135C42.5009 17.1264 42.8772 17.1709 43.1306 17.1709C43.7555 17.1709 44.1718 16.8969 44.4272 16.6644L44.4564 16.6551C44.4564 16.7417 44.4574 16.8303 44.4574 16.9167C44.4574 18.6591 44.3267 18.9297 43.8479 18.9808C43.6334 19.0094 43.4616 19.0077 43.2951 19.0001C42.6256 18.9688 42.2292 18.6512 41.9983 18.443L41.9329 18.3838L41.6914 18.5096L41.6973 18.5905C41.7247 18.9652 41.7328 19.1372 41.7434 19.3904L41.7743 19.8034L41.8772 19.9772C41.9799 20.0501 42.1417 20.1663 42.4347 20.2649C42.8727 20.4244 43.3461 20.4482 43.59 20.4482C43.7053 20.4482 43.8325 20.4403 43.9639 20.4271C44.3652 20.4085 45.1977 20.331 45.6689 19.3185C46.0054 18.5972 46.0005 17.8308 45.988 15.7814Z\" fill=\"${l.color}\"/><mask id=\"mask0_6775_6753\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"23\" height=\"23\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 0.244629H22.6408V22.8428H0V0.244629Z\" fill=\"white\"/></mask><g mask=\"url(#mask0_6775_6753)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.6787 19.8487V3.01393C20.6787 3.01393 20.7059 2.30631 19.9693 2.30631H13.1121C13.1121 2.30631 13.7951 3.01393 13.7951 4.48421V5.02202C17.3872 5.34451 18.3212 7.48792 18.3212 9.40939V14.3091C18.3212 17.5504 15.5552 19.0422 15.5552 19.0422C15.5552 19.0422 14.2358 18.3554 13.8054 17.8731C13.2366 18.5147 11.8153 19.9211 11.3699 19.9211C10.9247 19.9211 9.55777 18.5081 9.00694 17.8692C8.61667 18.3351 7.27451 19.0246 7.27451 19.0246C7.27451 19.0246 4.43624 17.5504 4.43624 14.2555V9.40939C4.43624 7.4402 5.36141 5.45658 8.55857 5.09763C8.55857 5.09763 8.22297 3.6638 6.25961 3.6638C4.24748 3.6638 2.01177 5.31246 2.01177 8.73138V19.9745C2.01177 19.9745 2.0331 20.7998 2.83864 20.7998H19.7268C20.753 20.7998 20.6787 19.8487 20.6787 19.8487ZM15.2902 11.6644V14.7175C15.2902 15.9517 13.9392 16.8749 14.8144 16.8749C15.7165 16.8749 16.5363 15.1107 16.5363 14.3023C16.5363 13.9587 16.5368 9.32571 16.5368 8.96579C16.5368 7.74801 15.7165 6.39395 14.8149 6.39395C13.6308 6.39395 15.2907 7.02938 15.2907 8.2638V11.6644H15.2902ZM11.3517 17.6216C11.9626 17.6216 13.6159 15.3184 13.6159 14.1799V7.84124C13.6159 7.57135 13.1131 6.34868 12.1237 6.34868H10.5808C9.54919 6.34868 9.08783 7.57135 9.08783 7.84124V14.1799C9.08783 15.3184 10.771 17.6216 11.3517 17.6216ZM6.19024 8.96579V14.3023C6.19024 15.1107 7.01024 16.8749 7.91262 16.8749C8.87652 16.8749 7.43606 15.9517 7.43606 14.7165V11.6754V8.2638C7.43606 7.02938 9.09617 6.39395 7.91262 6.39395C7.01024 6.39395 6.19024 7.60805 6.19024 8.96579ZM6.0711 1.83065C10.1665 1.83065 10.4538 5.05799 10.4538 5.05799H12.0345C12.0345 2.83433 10.5974 0.432299 6.78986 0.432299L6.78741 0.244629H20.6694C21.9405 0.244629 22.6408 1.01195 22.6408 2.28355V20.7636C22.6408 22.0472 21.9405 22.8429 20.6606 22.8429H2.01177C0.743888 22.8429 -0.00012207 22.1032 -0.00012207 20.7782V8.42896C-0.00012207 6.67533 0.796103 1.83065 6.0711 1.83065Z\" fill=\"${l.color}\"/></g></svg>`}),NC=()=>({getDefaultIconProps:()=>({width:\"41\",height:\"34\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 41 34\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.05045 24.3848H7.04954C7.0494 24.3848 7.04927 24.3846 7.04905 24.3845H7.04888C7.04237 24.3808 7.02806 24.3642 7.02806 24.3571C7.02806 23.5256 7.02806 22.387 7.05384 22.1378C7.05384 22.1032 7.07144 22.0547 7.08616 22.0497C7.15187 22.0252 7.25925 22.0166 7.33798 22.0166C8.19531 22.0166 8.6674 22.4644 8.6674 23.2775C8.6674 24.0102 8.29254 24.2646 8.06902 24.3511C7.87241 24.4299 7.403 24.4236 7.04916 24.3845L7.05045 24.3848ZM10.6725 27.0897L10.6784 27.0892L10.6826 27.085C10.7051 27.0624 10.7218 26.9612 10.7119 26.9318L10.7087 26.9219L10.6984 26.9208C10.3166 26.8877 10.1892 26.8606 9.79985 26.4712C9.38005 26.0601 8.63715 24.9301 8.36057 24.475C8.3585 24.4718 8.35784 24.4586 8.36697 24.4476C9.23748 24.0858 9.36753 23.4411 9.36753 23.089C9.36753 22.46 8.98057 21.7877 7.89474 21.7877C7.70721 21.7877 7.52058 21.7914 7.32298 21.7953C7.09074 21.8 6.85053 21.8047 6.56665 21.8047C6.44231 21.8047 6.26517 21.7979 6.09393 21.7911C5.93416 21.7852 5.78321 21.7791 5.68403 21.7791L5.677 21.781C5.6693 21.7846 5.65979 21.7937 5.65381 21.8308C5.65367 21.8315 5.64104 21.9116 5.66423 21.9348L5.66853 21.9389L5.6744 21.9394C5.79951 21.9473 5.95305 21.9705 6.06696 21.9991C6.24796 22.0294 6.31864 22.1297 6.32801 22.3698C6.34508 22.7123 6.34508 23.8694 6.34508 24.4257C6.34508 24.8944 6.33648 26.1573 6.32801 26.3961C6.31056 26.7175 6.25828 26.8132 6.07361 26.8616C6.00478 26.882 5.90248 26.8971 5.77279 26.9161L5.68028 26.9299C5.65237 26.937 5.64233 26.9755 5.64233 27.0095C5.64233 27.0436 5.65237 27.0822 5.68403 27.0897C5.72194 27.0897 5.7772 27.0871 5.85375 27.0837C6.01482 27.0762 6.28436 27.0639 6.67794 27.0639C6.9449 27.0639 7.22536 27.0743 7.43013 27.0819C7.54678 27.0863 7.63893 27.0897 7.68909 27.0897H7.6956L7.70029 27.085C7.72036 27.0649 7.72924 27.0235 7.7291 26.9912C7.7291 26.974 7.72637 26.9427 7.70892 26.9255L7.70511 26.9219L7.61833 26.9088C7.48589 26.8895 7.37148 26.8726 7.26485 26.8442C7.11222 26.8043 7.05371 26.7553 7.04513 26.3961C7.02806 26.0452 7.02806 25.1811 7.02806 24.7171C7.02806 24.7051 7.04055 24.6832 7.04654 24.6817C7.08602 24.6817 7.1487 24.6796 7.22117 24.677C7.34917 24.6728 7.50858 24.6671 7.5864 24.6731C7.65743 24.6731 7.72742 24.7234 7.77915 24.812C7.89918 24.9825 8.05311 25.227 8.21616 25.4856C8.48959 25.9193 8.79954 26.4109 9.00536 26.6382C9.12564 26.7827 9.26379 26.8937 9.40544 26.9599C9.63509 27.0574 10.0878 27.0975 10.4318 27.0975C10.5214 27.0975 10.6036 27.0947 10.6725 27.0897Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.08513 24.4207C7.08523 24.4208 7.08543 24.4207 7.08553 24.4208L7.08503 24.4207H7.08513Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14.8769 26.0872L14.8762 26.0846C14.8727 26.07 14.8603 26.0567 14.8393 26.0452C14.8071 26.0272 14.7525 26.0144 14.7274 26.0218L14.7203 26.0241L14.7176 26.0312C14.6163 26.2892 14.4959 26.5009 14.37 26.6427L14.3636 26.6492C14.2731 26.7396 14.1951 26.8178 13.8583 26.8178C13.4751 26.8178 13.1892 26.8108 13.0388 26.7754C12.9989 26.7675 12.9138 26.6914 12.9058 26.5079C12.9001 26.2668 12.8972 25.8521 12.8971 25.3094C12.898 25.3026 12.907 25.281 12.9125 25.2729C13.1679 25.2729 13.636 25.2729 13.8225 25.2898C13.9693 25.3054 14.012 25.3915 14.0487 25.4929C14.0688 25.5625 14.0849 25.6435 14.0997 25.7478L14.1003 25.753L14.1041 25.7567C14.1263 25.7788 14.1737 25.7806 14.1884 25.7806H14.1888C14.2029 25.7806 14.2503 25.7788 14.2722 25.7567L14.2769 25.752V25.7455C14.2769 25.6688 14.2722 25.539 14.2678 25.4136C14.2638 25.3005 14.26 25.1939 14.26 25.1371C14.26 24.9749 14.2853 24.6176 14.294 24.5302L14.2944 24.5258L14.2925 24.5216C14.277 24.4908 14.1519 24.4971 14.1341 24.506L14.1264 24.5096L14.1254 24.5183C14.1162 24.5998 14.0983 24.684 14.0749 24.7547L14.0692 24.7706C14.0284 24.8855 13.9931 24.9851 13.8234 24.9927C13.6436 25.0013 13.2056 25.0013 12.9157 25.0013C12.9079 25.0013 12.8972 24.9919 12.8971 24.9731C12.8891 24.842 12.8967 24.0949 12.9058 23.6546C12.9058 23.6306 12.9306 23.565 12.96 23.5587C13.0496 23.5501 13.7241 23.542 13.8743 23.5589C14.0963 23.5754 14.1354 23.6453 14.1777 23.8147C14.2043 23.8809 14.2292 24.0086 14.2539 24.2052L14.2547 24.2104L14.2585 24.2143C14.2819 24.2372 14.3863 24.2372 14.4094 24.2143L14.4138 24.2099L14.4139 24.2036C14.4226 23.9268 14.4835 23.5082 14.5418 23.3252L14.5426 23.3205C14.5426 23.3163 14.5426 23.3035 14.51 23.2816L14.5043 23.2777L14.4977 23.2793C14.3847 23.3035 14.1959 23.3129 13.8242 23.3129H12.5385C12.3376 23.3129 12.1344 23.3038 11.9711 23.2962C11.8654 23.2915 11.7741 23.2874 11.7159 23.2874L11.7108 23.2881C11.6961 23.2931 11.6867 23.3106 11.6828 23.3398C11.6787 23.369 11.6795 23.4349 11.707 23.4534L11.7147 23.4563C11.8241 23.4646 11.97 23.4901 12.0534 23.5152C12.1901 23.5634 12.2233 23.6158 12.2398 23.8087C12.2398 23.8426 12.2407 23.9132 12.2418 24.0112C12.2442 24.2325 12.2484 24.6032 12.2484 25.0086C12.2484 25.7027 12.2484 26.3022 12.2399 26.5249C12.2314 26.7748 12.18 26.8134 12.0456 26.853C11.9279 26.889 11.7259 26.913 11.578 26.9208L11.5717 26.9213L11.5674 26.9255C11.5447 26.9487 11.5447 27.0618 11.5674 27.085L11.5721 27.0897H11.5787C11.6988 27.0897 11.8299 27.0842 11.9687 27.0788C12.1385 27.0717 12.3311 27.0639 12.5472 27.0639C13.1217 27.0639 13.5522 27.0707 13.8665 27.0756C14.0573 27.0788 14.2078 27.0811 14.3296 27.0811C14.4946 27.0811 14.5544 27.0642 14.5749 27.0131C14.6945 26.7993 14.8593 26.2384 14.8766 26.0901L14.8769 26.0872Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.199 25.4639C20.143 25.4639 20.0718 25.4668 19.9895 25.4702C19.8695 25.4752 19.7202 25.4811 19.5476 25.4811C19.3965 25.4811 19.2195 25.4765 19.0482 25.4718C18.9024 25.4679 18.7649 25.4639 18.665 25.4639L18.6579 25.4658C18.6488 25.4702 18.6423 25.4806 18.6376 25.4981C18.6295 25.5286 18.6269 25.5839 18.6432 25.6086L18.647 25.6144L18.9872 25.6667C19.133 25.6991 19.1979 25.7366 19.2062 25.9605C19.2147 26.1545 19.2066 26.4939 19.189 26.6862C19.181 26.7587 19.1414 26.8319 19.0846 26.8804C19.0058 26.9333 18.8747 26.9636 18.7249 26.9636C17.7262 26.9636 17.1299 26.2744 17.1299 25.1199C17.1299 24.03 17.6425 23.4049 18.5364 23.4049C18.8839 23.4049 19.1391 23.4573 19.317 23.5655C19.5392 23.6938 19.6024 23.8759 19.6691 24.3253L19.6701 24.3324L19.676 24.3363C19.7044 24.3548 19.7861 24.3428 19.8123 24.3285C19.8234 24.3225 19.8291 24.3149 19.829 24.3063C19.8375 24.0068 19.8883 23.5491 19.9403 23.3067L19.9447 23.2855L19.9233 23.2874C19.8234 23.2973 19.6524 23.2754 19.4977 23.2529L19.4263 23.2462C19.2422 23.2285 18.9642 23.2016 18.7679 23.2016C18.2217 23.2016 17.8231 23.2735 17.4759 23.4344C16.7947 23.7363 16.4039 24.3692 16.4039 25.1715C16.4039 26.4639 17.1674 27.1755 18.5537 27.1755C19.0667 27.1755 19.6494 27.0399 19.8982 26.9821L19.9574 26.968C19.9777 26.9581 19.991 26.9328 19.9929 26.901C19.9944 26.8765 19.9888 26.8432 19.9651 26.8278C19.8675 26.7871 19.8625 26.7751 19.8462 26.6779C19.8303 26.5431 19.8363 26.2165 19.8462 25.9775C19.8548 25.7491 19.87 25.7139 19.9791 25.667L20.202 25.624L20.2078 25.6214C20.2321 25.6052 20.2317 25.5549 20.2304 25.5341C20.2288 25.5078 20.2232 25.4744 20.2062 25.4658L20.199 25.4639Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21.9229 27.0897H21.9294C22.0567 27.0897 22.1774 27.084 22.3052 27.0783C22.4573 27.0712 22.6144 27.0639 22.812 27.0639C23.0243 27.0639 23.2672 27.0738 23.4444 27.0814C23.5568 27.0861 23.6455 27.0897 23.6947 27.0897H23.7044L23.7089 27.0809C23.7188 27.0611 23.7304 26.9583 23.7057 26.9341L23.702 26.9302L23.6966 26.9297C23.5716 26.914 23.41 26.888 23.3314 26.8619C23.1993 26.815 23.171 26.7428 23.1534 26.5504C23.1451 26.3442 23.1363 25.8169 23.1363 25.1457C23.1363 24.6066 23.1363 24.0493 23.1534 23.8095C23.1617 23.6098 23.2011 23.5392 23.3218 23.5069C23.3802 23.4902 23.5345 23.4646 23.6275 23.4563L23.6348 23.4537C23.6625 23.4352 23.6634 23.3692 23.6595 23.34C23.6556 23.3106 23.646 23.2931 23.631 23.2882L23.6261 23.2874C23.5561 23.2874 23.4446 23.292 23.3155 23.2976C23.1414 23.3048 22.944 23.3129 22.7776 23.3129C22.5952 23.3129 22.3871 23.3041 22.22 23.2967C22.1052 23.2918 22.0061 23.2874 21.9464 23.2874H21.9397L21.935 23.2923C21.9203 23.3074 21.9123 23.4284 21.935 23.4516L21.939 23.4555L21.9447 23.456C22.0934 23.4727 22.2332 23.4896 22.3109 23.5157C22.4249 23.5459 22.4706 23.6187 22.479 23.7842C22.4917 23.9925 22.4902 24.2852 22.4887 24.6238C22.4881 24.744 22.4875 24.8699 22.4875 25C22.4875 25.5593 22.4875 26.4047 22.4707 26.5924C22.454 26.7662 22.4158 26.8207 22.2758 26.8703C22.2202 26.8888 22.1151 26.9033 22.0225 26.9161C21.9887 26.9206 21.9561 26.9252 21.9269 26.9297L21.9207 26.932C21.9083 26.9401 21.9007 26.957 21.8982 26.9821C21.895 27.0128 21.9004 27.0673 21.9182 27.085L21.9229 27.0897Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M27.5335 26.9294C26.5495 26.9294 26.1014 25.9337 26.1014 25.0086C26.1014 24.6363 26.183 23.4219 27.2337 23.4219C28.1995 23.4219 28.6317 24.3694 28.6317 25.3086C28.6317 25.9138 28.4891 26.9294 27.5335 26.9294ZM27.3195 27.1755C28.0163 27.1755 28.6175 26.8825 28.9689 26.3721C29.2318 26.0241 29.3491 25.6381 29.3491 25.1199C29.3491 24.1608 28.7506 23.193 27.4136 23.193C26.7377 23.193 26.0701 23.5118 25.7126 24.005C25.4865 24.3183 25.3668 24.7187 25.3668 25.1629C25.3668 25.7261 25.559 26.2548 25.894 26.6135C26.2472 26.9758 26.7536 27.1755 27.3195 27.1755Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M31.4918 27.0639C31.6814 27.0639 31.8898 27.0736 32.0571 27.0811C32.1606 27.0858 32.2424 27.0897 32.2889 27.0897H32.2955L32.3002 27.085C32.3201 27.0647 32.3252 26.9881 32.3169 26.9534C32.3128 26.9362 32.305 26.9255 32.294 26.9216L32.29 26.9208C32.1618 26.9117 31.9898 26.8856 31.9097 26.8538C31.7914 26.7986 31.7131 26.7621 31.6964 26.4818C31.6875 26.1307 31.6796 24.6467 31.6874 24.029C31.9804 24.3861 33.8513 26.7209 34.1183 27.1082L34.1233 27.1158L34.1323 27.1153C34.2372 27.1077 34.4502 27.0975 34.5843 27.1069L34.6021 27.108L34.6012 27.0902C34.5929 26.9078 34.5843 26.5535 34.5843 26.2767C34.5843 25.3579 34.5956 24.225 34.6269 23.8014C34.6363 23.6434 34.6682 23.5446 34.8052 23.5066C34.8592 23.4863 34.9517 23.4714 35.0411 23.4573C35.0621 23.4539 35.0826 23.4508 35.1023 23.4474L35.1102 23.4461L35.1139 23.4388C35.1246 23.4174 35.1246 23.3176 35.1139 23.2962L35.1094 23.2874H35.0997C35.0738 23.2874 35.006 23.291 34.9201 23.2954C34.7767 23.3027 34.5804 23.3129 34.4568 23.3129C34.2645 23.3129 34.0978 23.304 33.9639 23.2967C33.8717 23.2918 33.7919 23.2874 33.7285 23.2874H33.7188L33.7144 23.2962C33.7031 23.3189 33.7042 23.4172 33.7135 23.4453L33.7168 23.4552L33.727 23.456C33.8986 23.4735 33.957 23.4816 34.0425 23.5073C34.2001 23.5373 34.2778 23.6416 34.2868 23.8355C34.3121 24.2213 34.3296 25.3995 34.3296 26.2194C34.3287 26.2204 34.3277 26.2217 34.3268 26.223C34.3263 26.2235 34.3259 26.224 34.3253 26.2248C34.049 25.9047 32.8322 24.4499 32.1898 23.6364C32.0293 23.431 31.9933 23.3606 31.9783 23.3155L31.9742 23.303L31.9611 23.3048C31.9021 23.3129 31.6964 23.3129 31.5603 23.3129C31.3931 23.3129 31.1778 23.3035 31.0047 23.2959C30.8943 23.2913 30.8071 23.2874 30.7635 23.2874H30.7569L30.7523 23.292C30.7276 23.3168 30.731 23.4278 30.7406 23.4474L30.7447 23.4555L30.7536 23.4563C31.06 23.4808 31.1741 23.5134 31.2846 23.6069C31.3683 23.6752 31.4073 23.761 31.4073 23.8773C31.4073 25.2257 31.381 26.2339 31.3561 26.498C31.3399 26.675 31.3177 26.804 31.1784 26.8531C31.0478 26.8966 30.8774 26.9138 30.8011 26.9216C30.7864 26.9265 30.777 26.944 30.7731 26.9732C30.769 27.0024 30.7698 27.0683 30.7973 27.0869L30.8014 27.0897H30.8062C30.8575 27.0897 30.9304 27.0855 31.0147 27.0806C31.1467 27.0733 31.3111 27.0639 31.4918 27.0639Z\" fill=\"${l.color}\"/><mask id=\"mask0_6720_47083\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"28\" width=\"4\" height=\"6\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 28.4252H3.19408V33.9928H0V28.4252Z\" fill=\"${l.color}\"/></mask><g mask=\"url(#mask0_6720_47083)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.33861 31.1359L2.33847 31.1356C2.2325 31.0663 2.1147 30.9972 1.98984 30.924C1.7878 30.8056 1.57889 30.6834 1.37947 30.5364C0.985228 30.2434 0.812774 29.9355 0.820219 29.5383C0.827912 29.0896 1.11489 28.6369 1.73855 28.6369C2.01888 28.6369 2.20774 28.6809 2.39009 28.7889C2.6097 28.9205 2.69322 29.1382 2.7339 29.685L2.73431 29.6908L2.73861 29.6949C2.75761 29.714 2.82018 29.7124 2.84235 29.7098C2.87701 29.7064 2.89929 29.6978 2.90856 29.684L2.9109 29.6806L2.91118 29.6764C2.93895 29.3206 2.98792 28.9494 3.05675 28.5725L3.05972 28.5555L3.04266 28.554C2.92927 28.5425 2.81693 28.5245 2.69805 28.5055C2.46204 28.468 2.19445 28.4252 1.84984 28.4252C0.886923 28.4252 0.214423 29.0167 0.214423 29.8636C0.214423 30.2079 0.325716 30.5092 0.554451 30.7842C0.740307 31.0077 1.00776 31.2222 1.42144 31.4795C2.18077 31.9562 2.51953 32.263 2.51953 32.8201C2.51953 33.3883 2.15912 33.7553 1.60145 33.7553C1.22985 33.7553 0.973757 33.6902 0.770281 33.5437C0.497619 33.362 0.325716 33.0594 0.177004 32.4987L0.175598 32.4929L0.170496 32.4896C0.149264 32.476 0.102579 32.4796 0.0677794 32.4888C0.0438167 32.4953 0.0129051 32.5078 0.00184753 32.5302L0 32.5341L0.00027575 32.5383C0.0156626 32.7719 0.108066 33.6 0.200195 33.729L0.204 33.733C0.383348 33.8583 0.891114 33.9928 1.36138 33.9928C2.44039 33.9928 3.1941 33.3518 3.1941 32.4343C3.1941 32.0772 3.09246 31.6434 2.33861 31.1359Z\" fill=\"${l.color}\"/></g><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.89428 29.5771C5.90914 29.586 5.93926 29.5896 5.97521 29.5896C6.05681 29.5896 6.16876 29.5708 6.2015 29.5518C6.28659 29.5088 6.37249 29.3813 6.37249 29.2208C6.37249 29.1739 6.34497 29.0756 6.29925 29.0211C6.28047 29.0023 6.19066 28.9478 6.08234 28.9478C5.9614 28.9478 5.81387 29.0042 5.75222 29.0748C5.70906 29.1394 5.70829 29.2189 5.71507 29.2724C5.71507 29.4074 5.78611 29.5273 5.89428 29.5771Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.81927 33.704C5.83523 33.704 5.38713 32.7082 5.38713 31.7831C5.38713 31.4109 5.46873 30.1964 6.5195 30.1964C7.48526 30.1964 7.91747 31.144 7.91747 32.0831C7.91747 32.6884 7.77488 33.704 6.81927 33.704ZM6.69934 29.9676C6.02345 29.9676 5.35589 30.2864 4.99838 30.7795C4.77226 31.0929 4.65259 31.4933 4.65259 31.9374C4.65259 32.5007 4.84473 33.0294 5.17979 33.388C5.533 33.7504 6.03936 33.9501 6.60526 33.9501C7.30202 33.9501 7.90327 33.6571 8.25463 33.1467C8.51753 32.7987 8.63483 32.4126 8.63483 31.8944C8.63483 30.9354 8.03635 29.9676 6.69934 29.9676Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.15799 29.5896C7.23959 29.5896 7.35116 29.5708 7.38386 29.5518C7.47965 29.5036 7.54652 29.3675 7.54652 29.2208C7.54652 29.1809 7.53086 29.08 7.48186 29.0211C7.46308 29.0023 7.37333 28.9478 7.26501 28.9478C7.14404 28.9478 6.99651 29.0042 6.9345 29.0756C6.9045 29.1253 6.88952 29.2072 6.89774 29.2724C6.89774 29.4074 6.96874 29.5273 7.07695 29.5771C7.09178 29.586 7.12187 29.5896 7.15799 29.5896Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.2875 31.1661C12.2875 31.5673 12.1417 31.81 11.8539 31.8877C11.6973 31.9226 11.3119 31.921 11.1807 31.9129C11.1612 31.9129 11.1538 31.9098 11.1538 31.8775C11.1538 31.3887 11.1621 30.5783 11.1708 30.3862C11.1708 30.3638 11.1863 30.3296 11.2028 30.3242C11.2521 30.3078 11.3368 30.2994 11.395 30.2994C11.9872 30.2994 12.2875 30.5911 12.2875 31.1661ZM13.8478 33.7128L13.8261 33.71C13.5744 33.6777 13.4703 33.6641 13.2574 33.4433L13.2568 33.4428C12.9506 33.1534 12.3985 32.3482 12.1861 31.9948C12.1826 31.9911 12.1785 31.9799 12.1776 31.9755C12.3674 31.9028 12.9533 31.6278 12.9533 31.0118C12.9533 30.4331 12.5405 30.0875 11.8491 30.0875H10.778C10.6376 30.0875 10.449 30.0794 10.2826 30.0724C10.1548 30.0666 10.0444 30.0619 9.98108 30.0619L9.97617 30.0627C9.95502 30.0698 9.94656 30.1018 9.94316 30.1271C9.94198 30.1354 9.93326 30.2079 9.96376 30.2282L9.96726 30.2306L9.97146 30.2308C10.0832 30.2382 10.2157 30.2655 10.3034 30.2835L10.3361 30.29C10.4503 30.3249 10.506 30.3677 10.5138 30.516C10.5266 30.6714 10.5247 31.1839 10.523 31.6361C10.5225 31.781 10.522 31.92 10.522 32.0401C10.522 32.3733 10.522 33.1537 10.5138 33.3159C10.4959 33.5559 10.4288 33.6149 10.3024 33.6448C10.2618 33.656 10.1608 33.6683 10.0631 33.6797C10.0192 33.6852 9.97512 33.6904 9.93602 33.6956L9.93106 33.6972C9.92571 33.6998 9.9093 33.7079 9.9093 33.7798C9.9093 33.8518 9.92571 33.8599 9.93106 33.8625L9.93809 33.8643C9.97943 33.8643 10.0409 33.8612 10.1187 33.8573C10.268 33.8497 10.4934 33.8385 10.7865 33.8385C11.05 33.8385 11.2906 33.8489 11.4663 33.8567C11.5632 33.8609 11.6399 33.8643 11.6864 33.8643H11.693L11.6977 33.8596C11.7157 33.8414 11.7268 33.7775 11.723 33.74C11.7208 33.7191 11.7144 33.7053 11.7035 33.698L11.6964 33.6956C11.5243 33.6763 11.426 33.6591 11.3575 33.6365C11.2494 33.5976 11.1967 33.5677 11.1793 33.3072C11.1617 33.0708 11.1538 32.494 11.1538 32.16C11.154 32.1533 11.1601 32.1355 11.1635 32.1332C11.2499 32.1332 11.3682 32.1332 11.4437 32.1415C11.5431 32.1582 11.5815 32.1814 11.6302 32.2547C11.6956 32.3516 11.7772 32.4781 11.8635 32.6121C12.0803 32.9488 12.3501 33.3674 12.5226 33.5588C12.6224 33.675 12.7199 33.7494 12.8193 33.7856C12.9556 33.8505 13.3107 33.8825 13.5919 33.8825C13.6814 33.8825 13.7635 33.8794 13.8286 33.8729C13.8623 33.8729 13.8649 33.7798 13.8649 33.7512C13.8649 33.7436 13.8647 33.7371 13.864 33.7327C13.8614 33.7144 13.8488 33.7128 13.8478 33.7128Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.0048 33.6959L19.9989 33.6954C19.8863 33.6883 19.7678 33.6639 19.6814 33.6459C19.664 33.6422 19.6478 33.6388 19.6334 33.6359C19.4697 33.5864 19.4308 33.4449 19.4225 33.2481C19.4051 32.7875 19.3712 30.931 19.3795 30.5577C19.3795 30.4276 19.4124 30.3325 19.5739 30.29C19.6582 30.2647 19.7583 30.2481 19.9309 30.2306L19.9383 30.23L19.9425 30.2238C19.9547 30.2053 19.958 30.1698 19.9569 30.1425C19.9561 30.1198 19.9515 30.0794 19.9294 30.0645L19.9255 30.0619H19.9207C19.842 30.0619 19.7385 30.0656 19.6075 30.0703C19.4032 30.0776 19.1232 30.0875 18.7897 30.0875H18.7762L18.774 30.1008C18.7577 30.1983 18.7109 30.3098 18.6467 30.4571C18.3981 31.0222 17.6331 32.5784 17.5242 32.7872C17.524 32.7877 17.5236 32.7885 17.5233 32.789C17.4187 32.5857 16.8706 31.3874 16.4645 30.4738C16.3989 30.3346 16.3549 30.2238 16.3373 30.101L16.3353 30.0875H16.3217C15.9633 30.0875 15.6526 30.0773 15.4259 30.0698C15.2946 30.0653 15.191 30.0619 15.1218 30.0619L15.1167 30.0627C15.1045 30.0669 15.096 30.0794 15.0908 30.1008C15.0822 30.137 15.0831 30.2069 15.1019 30.2262L15.1058 30.23L15.1112 30.2306C15.3198 30.2566 15.4282 30.2738 15.5201 30.3072C15.658 30.3479 15.6966 30.4886 15.6889 30.5739C15.6555 31.1388 15.5262 32.6712 15.4489 33.1863C15.3969 33.5596 15.3541 33.6049 15.1782 33.6529L15.1414 33.6612C15.0808 33.6753 15.0182 33.6899 14.8971 33.7042L14.8918 33.7058C14.8822 33.7105 14.8765 33.7217 14.8731 33.7421C14.8681 33.7736 14.8684 33.8401 14.8876 33.8596L14.8923 33.8643H14.8989C14.9311 33.8643 14.9747 33.8614 15.0347 33.8575C15.1497 33.85 15.3233 33.8385 15.5675 33.8385C15.7409 33.8385 15.9273 33.8479 16.0769 33.8557C16.1702 33.8604 16.244 33.8643 16.2873 33.8643H16.2921L16.296 33.8617C16.328 33.8403 16.3235 33.7611 16.3232 33.7579C16.3209 33.7191 16.3104 33.7095 16.3029 33.7058L16.2983 33.7042C16.1436 33.6797 16.0552 33.6625 15.9489 33.6362C15.7873 33.5898 15.7629 33.4902 15.7718 33.215C15.8063 32.4418 15.8828 31.2792 15.9243 30.7454C16.0004 30.9284 16.0976 31.1588 16.2048 31.4124C16.5675 32.2713 17.0643 33.448 17.1892 33.8617L17.1932 33.8682C17.2049 33.8799 17.241 33.8857 17.2771 33.8857C17.3132 33.8857 17.3493 33.8799 17.3611 33.8682L17.365 33.8622C17.5087 33.4509 18.1913 31.9854 18.5579 31.1979C18.6442 31.0126 18.7117 30.8677 18.7485 30.7871C18.7657 31.3064 18.782 33.0255 18.7652 33.3685C18.7652 33.5022 18.7417 33.5874 18.6218 33.6276C18.5255 33.6597 18.415 33.6769 18.2566 33.6956L18.2514 33.6972C18.2221 33.7118 18.2269 33.8059 18.2269 33.8069C18.2292 33.8398 18.238 33.8583 18.2535 33.8635L18.2584 33.8643C18.2904 33.8643 18.3525 33.8614 18.4387 33.8575C18.6039 33.85 18.8538 33.8385 19.098 33.8385C19.304 33.8385 19.551 33.8484 19.7313 33.8557C19.8477 33.8604 19.9397 33.8643 19.9893 33.8643H19.9977L20.0024 33.8573C20.0225 33.827 20.0337 33.7248 20.0091 33.7001L20.0048 33.6959Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M24.9316 32.6691C24.9087 32.6548 24.8371 32.6233 24.8145 32.6345L24.8091 32.6371L24.8069 32.6426C24.6957 32.9123 24.497 33.2848 24.3472 33.4436C24.2441 33.5539 24.1297 33.601 23.9647 33.601C23.5479 33.601 23.2323 33.5859 23.0784 33.559C23.0597 33.5528 22.9945 33.4915 22.9863 33.4016C22.9692 33.1109 22.9692 32.4223 22.9692 31.8689C22.9692 31.218 22.9692 30.7039 22.9777 30.5327C22.9865 30.375 23.0242 30.3205 23.1471 30.29C23.2127 30.2679 23.2732 30.2585 23.3939 30.2397L23.4598 30.2295L23.4635 30.2238C23.4811 30.1972 23.4824 30.1208 23.4738 30.0885C23.4716 30.0805 23.4676 30.0687 23.4574 30.0638L23.4504 30.0619C23.4054 30.0619 23.3279 30.0656 23.2297 30.07C23.0664 30.0773 22.8428 30.0875 22.6277 30.0875C22.3982 30.0875 22.1933 30.0781 22.0288 30.0706C21.9232 30.0659 21.84 30.0619 21.7795 30.0619H21.7697L21.7653 30.0708C21.7554 30.0906 21.7439 30.2017 21.7683 30.2262L21.7721 30.2298L21.7773 30.2306C21.8099 30.2353 21.8426 30.2394 21.8741 30.2434C21.9564 30.2535 22.034 30.2629 22.0842 30.2817C22.2504 30.3213 22.3034 30.3763 22.3122 30.6442C22.3204 30.8067 22.3204 31.1017 22.3204 31.7487C22.3204 33.0557 22.3123 33.2108 22.3036 33.3756C22.2876 33.5424 22.2371 33.6104 22.1091 33.6362C22.0528 33.6529 21.9756 33.6625 21.878 33.6745C21.8297 33.6805 21.7761 33.687 21.7171 33.6957L21.7117 33.6964L21.7079 33.7001C21.6852 33.7233 21.6852 33.8364 21.7079 33.8596L21.7126 33.8643H21.7193C21.7679 33.8643 21.8834 33.8599 22.0172 33.8552C22.2186 33.8476 22.4692 33.8385 22.6277 33.8385C22.7769 33.8385 23.0906 33.8445 23.4227 33.8508C23.7726 33.8573 24.1344 33.8643 24.3158 33.8643C24.5272 33.8643 24.5825 33.8372 24.6208 33.7796C24.7403 33.5831 24.9046 32.9999 24.9573 32.7002C24.9573 32.6895 24.9496 32.6801 24.9316 32.6691Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M28.1993 32.0537C28.2027 32.0641 28.1954 32.0725 28.1911 32.0761C28.1014 32.0842 27.8301 32.0842 27.683 32.0842C27.3818 32.0842 27.3594 32.0842 27.3111 32.0764C27.301 32.0712 27.2966 32.0675 27.2962 32.0514L27.7541 30.7793H27.758C27.8417 30.9975 27.9852 31.4216 28.112 31.7964C28.1424 31.8858 28.1717 31.9726 28.1993 32.0537ZM30.0072 33.6967L29.999 33.6957C29.5666 33.6352 29.5182 33.6005 29.3515 33.2335H29.3513C29.1487 32.794 28.4479 30.8137 28.3063 30.3982L28.2831 30.3333C28.2477 30.235 28.211 30.1333 28.2044 30.0924L28.2022 30.0791H28.1887C28.1807 30.0791 28.1701 30.0799 28.1555 30.081C28.1233 30.0836 28.0695 30.0875 27.9745 30.0875C27.8579 30.0875 27.796 30.082 27.7727 30.0802C27.7662 30.0794 27.762 30.0791 27.7602 30.0791H27.7478L27.7448 30.0911C27.7285 30.156 27.6859 30.3192 27.6421 30.4329C27.4885 30.9117 26.7904 32.6324 26.5291 33.1988C26.3354 33.6117 26.2474 33.636 25.8126 33.6957L25.8073 33.6964L25.8035 33.7001C25.7808 33.7233 25.7808 33.8364 25.8035 33.8596L25.8082 33.8643H25.8148C25.8658 33.8643 25.9256 33.8604 26.0013 33.8554C26.1175 33.8479 26.262 33.8385 26.449 33.8385C26.6094 33.8385 26.8049 33.8473 26.9619 33.8546C27.0745 33.8599 27.1717 33.8643 27.229 33.8643H27.2376L27.2423 33.857C27.2608 33.8288 27.2724 33.7287 27.2601 33.7042L27.2563 33.6967L27.2479 33.6957C27.1035 33.6774 27.015 33.6602 26.9412 33.636C26.7774 33.5968 26.7729 33.4931 26.7903 33.3964C26.808 33.2786 26.9207 32.9997 27.0297 32.7299C27.077 32.6123 27.1218 32.5015 27.1581 32.4059L27.1591 32.4001C27.1591 32.3931 27.1761 32.3647 27.214 32.3644C27.2729 32.3561 27.3433 32.3561 27.7344 32.3561C28.0703 32.3561 28.2388 32.3561 28.2894 32.3644C28.2934 32.3655 28.3078 32.3746 28.3212 32.3842L28.3223 32.3876C28.44 32.6897 28.637 33.1957 28.7131 33.4746C28.7309 33.5557 28.7235 33.6156 28.6297 33.6448C28.5427 33.6706 28.4485 33.6873 28.3416 33.6954L28.3356 33.6959L28.3315 33.7001C28.3088 33.7233 28.3088 33.8364 28.3315 33.8596L28.3362 33.8643H28.3428C28.4109 33.8643 28.5022 33.8601 28.608 33.8554C28.7747 33.8479 28.9822 33.8385 29.2257 33.8385C29.4127 33.8385 29.601 33.8479 29.7524 33.8554C29.8509 33.8604 29.9287 33.8643 29.9795 33.8643H29.9861L29.9908 33.8596C30.0136 33.8366 30.0219 33.7261 30.011 33.7042L30.0072 33.6967Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M35.3706 30.0619H35.3608C35.335 30.0619 35.2671 30.0656 35.1812 30.07C35.0378 30.0773 34.8415 30.0875 34.718 30.0875C34.5256 30.0875 34.3589 30.0786 34.225 30.0713C34.1328 30.0664 34.053 30.0619 33.9897 30.0619H33.9799L33.9755 30.0708C33.9643 30.0935 33.9653 30.1917 33.9747 30.2199L33.9779 30.2298L33.9881 30.2306C34.1598 30.2481 34.2181 30.2561 34.3037 30.2819C34.4612 30.3119 34.5389 30.4162 34.5479 30.6101C34.5732 30.9959 34.5908 32.1741 34.5908 32.9939C34.5899 32.995 34.5888 32.9963 34.5879 32.9976C34.5874 32.9981 34.587 32.9986 34.5865 32.9994C34.3102 32.6793 33.0934 31.2245 32.4509 30.411C32.2904 30.2056 32.2544 30.1352 32.2394 30.0901L32.2354 30.0776L32.2222 30.0794C32.1632 30.0875 31.9575 30.0875 31.8214 30.0875C31.6542 30.0875 31.4389 30.0781 31.2658 30.0705C31.1554 30.0659 31.0682 30.0619 31.0246 30.0619H31.018L31.0133 30.0666C30.9887 30.0914 30.9921 30.2024 31.0017 30.222L31.0058 30.2301L31.0146 30.2308C31.3211 30.2554 31.4352 30.2879 31.5458 30.3815C31.6294 30.4498 31.6684 30.5356 31.6684 30.6518C31.6684 32.0003 31.6421 33.0085 31.6172 33.2726C31.601 33.4496 31.5789 33.5786 31.4395 33.6276C31.3089 33.6712 31.1385 33.6883 31.0622 33.6962C31.0475 33.7011 31.0381 33.7186 31.0342 33.7478C31.0302 33.777 31.0309 33.8429 31.0585 33.8614L31.0625 33.8643H31.0673C31.1187 33.8643 31.1915 33.8601 31.2759 33.8552C31.4079 33.8479 31.5722 33.8385 31.7529 33.8385C31.9425 33.8385 32.1509 33.8481 32.3183 33.8557C32.4217 33.8604 32.5034 33.8643 32.55 33.8643H32.5566L32.5613 33.8596C32.5813 33.8393 32.5863 33.7626 32.578 33.728C32.574 33.7108 32.5661 33.7001 32.5551 33.6962L32.5512 33.6954C32.4229 33.6863 32.2509 33.6602 32.1709 33.6284C32.0525 33.5731 31.9742 33.5366 31.9575 33.2564C31.9486 32.9053 31.9407 31.4213 31.9485 30.8036C32.2415 31.1606 34.1124 33.4955 34.3794 33.8828L34.3844 33.8904L34.3934 33.8898C34.4985 33.8823 34.7115 33.8721 34.8454 33.8815L34.8632 33.8825L34.8622 33.8648C34.854 33.6824 34.8454 33.3281 34.8454 33.0513C34.8454 32.1324 34.8566 30.9996 34.888 30.576C34.8975 30.418 34.9294 30.3192 35.0663 30.2811C35.1203 30.2608 35.2128 30.246 35.3023 30.2319C35.3232 30.2285 35.3437 30.2254 35.3634 30.222L35.3713 30.2207L35.375 30.2134C35.3857 30.192 35.3857 30.0922 35.375 30.0708L35.3706 30.0619Z\" fill=\"${l.color}\"/><mask id=\"mask1_6720_47083\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"36\" y=\"30\" width=\"5\" height=\"4\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M36.6134 30.0617H40.6461V33.8899H36.6134V30.0617Z\" fill=\"${l.color}\"/></mask><g mask=\"url(#mask1_6720_47083)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M38.6848 33.661C38.3832 33.661 38.1586 33.6073 38.019 33.503C37.9531 33.4371 37.9124 33.3284 37.9122 33.2632C37.8866 33.093 37.8866 32.5013 37.8866 31.9289C37.8866 31.4033 37.8866 30.6093 37.8951 30.4308C37.9029 30.3526 37.9238 30.3385 37.9463 30.3234C37.9763 30.3086 38.1517 30.2908 38.2393 30.2908C38.7209 30.2908 39.0484 30.3719 39.3015 30.5536C39.7353 30.8453 39.9373 31.2986 39.9373 31.9802C39.9373 32.5784 39.7718 33.0474 39.4452 33.3743C39.2349 33.5646 38.9791 33.661 38.6848 33.661ZM40.0751 30.4861L40.0747 30.4858C39.7569 30.2181 39.2725 30.0706 38.7106 30.0706C38.4393 30.0706 38.2241 30.0755 38.016 30.0799C37.8417 30.0838 37.6769 30.0875 37.5024 30.0875C37.2931 30.0875 36.8498 30.0711 36.6893 30.0619L36.6839 30.0617L36.6796 30.0645C36.6654 30.0742 36.6565 30.0961 36.6531 30.13C36.6507 30.1553 36.6505 30.2082 36.6685 30.2262L36.6724 30.2301L36.678 30.2306C36.8386 30.2486 36.9623 30.2655 37.0444 30.2903C37.1822 30.3226 37.2127 30.3912 37.2296 30.5669C37.2378 30.8236 37.2378 31.4672 37.2378 31.8517C37.2378 32.463 37.2378 32.9911 37.221 33.3672C37.2041 33.587 37.1302 33.6208 37.0269 33.6446C36.921 33.6732 36.7239 33.6897 36.6442 33.6954L36.6365 33.6983C36.6243 33.7064 36.6168 33.7238 36.6143 33.7504C36.6111 33.7838 36.6162 33.8416 36.6341 33.8596L36.6388 33.8643H36.9795C37.2402 33.8643 37.4918 33.8711 37.7353 33.8776C37.9672 33.8839 38.1861 33.8899 38.4022 33.8899C39.012 33.8899 39.4509 33.7699 39.825 33.5015C40.1316 33.295 40.6461 32.8128 40.6461 31.9031C40.6461 31.3087 40.4486 30.8187 40.0751 30.4861Z\" fill=\"${l.color}\"/></g><mask id=\"mask2_6720_47083\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"7\" y=\"0\" width=\"26\" height=\"18\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.79065 0.0275269H32.8556V17.9185H7.79065V0.0275269Z\" fill=\"${l.color}\"/></mask><g mask=\"url(#mask2_6720_47083)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M30.2549 14.9886C29.9859 15.0599 29.632 15.0744 29.2728 15.0081C29.8469 14.094 30.3141 12.7873 30.5616 11.0356C30.7502 9.70007 30.6395 8.45261 30.3969 7.34533C30.9883 6.62474 31.5606 6.015 31.9781 5.59203L32.0548 10.3706C32.0548 12.2589 31.7425 14.5929 30.2549 14.9886ZM26.6603 15.8702C26.5784 15.8586 26.4982 15.8348 26.4189 15.8052C26.6955 15.4026 26.9467 14.9291 27.1609 14.3793C27.3611 14.7809 27.6293 15.0644 27.875 15.254C27.9157 15.2853 27.9579 15.3121 27.9996 15.3407C27.5525 15.7618 27.0844 15.9302 26.6603 15.8702ZM23.464 16.7528C23.3461 16.7457 23.2295 16.7211 23.1137 16.6886C23.6095 16.1704 24.0667 15.4368 24.3987 14.4016C24.4488 14.5629 24.5047 14.7175 24.5667 14.8645C24.7487 15.296 24.9841 15.6572 25.2547 15.9452C24.6478 16.5465 23.9948 16.784 23.464 16.7528ZM20.3185 17.1177C20.0238 17.1177 19.5089 17.0635 18.9516 16.7701C19.2672 16.4798 19.552 16.1161 19.7917 15.6861C20.007 15.2996 20.1814 14.8572 20.3231 14.3753C20.4649 14.8572 20.6392 15.2996 20.8546 15.6861C21.0933 16.1145 21.3768 16.4774 21.6911 16.7671C21.1316 17.0632 20.6142 17.1177 20.3185 17.1177ZM17.1823 16.7528C16.6504 16.7844 15.9974 16.5471 15.3907 15.946C15.6616 15.6579 15.8974 15.2965 16.0795 14.8645C16.1396 14.7219 16.1938 14.5719 16.2427 14.4158C16.5748 15.4451 17.031 16.1749 17.5253 16.6908C17.412 16.7221 17.2977 16.7459 17.1823 16.7528ZM13.986 15.8702C13.5624 15.9301 13.0944 15.7616 12.6472 15.3403C12.6887 15.3118 12.7307 15.2852 12.7712 15.254C13.0169 15.0644 13.2851 14.7809 13.4853 14.3795C13.6995 14.9292 13.9506 15.4027 14.2272 15.8053C14.148 15.8349 14.0678 15.8586 13.986 15.8702ZM10.3915 14.9886C8.90372 14.5929 8.59143 12.2589 8.59143 10.3771L8.6682 5.5915C9.08568 6.01428 9.65808 6.62383 10.2495 7.34434C10.0068 8.45183 9.89597 9.69966 10.0846 11.0356C10.3321 12.7874 10.7992 14.094 11.3733 15.0081C11.0142 15.0743 10.6604 15.0599 10.3915 14.9886ZM12.2821 14.62C12.2345 14.6567 12.1834 14.6868 12.133 14.7183C11.59 13.9108 11.124 12.6678 10.8776 10.9235C10.7414 9.95914 10.7769 9.03896 10.9078 8.18772C11.9987 9.6607 12.9823 11.4211 12.9877 12.9875C12.9902 13.7077 12.7527 14.2569 12.2821 14.62ZM12.3186 4.05279C12.7031 4.46724 13.1971 5.01888 13.6884 5.69714C13.2096 6.83572 12.8361 8.14757 12.7558 9.57745C12.2835 8.70723 11.7017 7.87692 11.1216 7.1437C11.4504 5.85258 11.9556 4.78019 12.3186 4.05279ZM15.7564 11.7457C15.7961 13.1157 15.5714 14.0087 15.3417 14.5536C15.2125 14.8598 15.0542 15.1178 14.8771 15.325C14.2143 14.3628 13.682 12.864 13.5507 10.6735C13.4597 9.15511 13.7693 7.74147 14.2295 6.5068C14.8639 7.54062 15.4192 8.79666 15.6253 10.2561C15.6694 10.5681 15.7005 10.8606 15.7225 11.1381C15.7304 11.347 15.7418 11.5494 15.7564 11.7457ZM16.3301 2.66783C16.6395 3.03094 17.0385 3.51229 17.4565 4.09015C16.8076 5.26488 16.2264 6.64432 15.9254 8.19296C15.5708 7.21416 15.0939 6.35103 14.5996 5.61599C15.1777 4.3519 15.8658 3.3314 16.3301 2.66783ZM18.277 16.2931C17.4751 15.5599 16.7303 14.1854 16.5507 11.6292C16.5462 11.5019 16.5376 11.3714 16.529 11.2407C16.5168 10.9754 16.5086 10.7022 16.5086 10.4126C16.5086 8.28186 17.1595 6.3938 17.9673 4.83799C18.8861 6.26536 19.7663 8.13649 19.8966 10.3104C19.9118 10.5636 19.9191 10.8034 19.9226 11.0365C19.9212 11.1419 19.9241 11.2431 19.9248 11.3466C19.9136 13.3623 19.4834 14.5941 19.0922 15.2964C18.8601 15.7128 18.5814 16.0476 18.277 16.2931ZM20.3185 1.32722C20.8353 1.98067 21.5569 2.90834 22.2339 4.05519C21.5035 5.12984 20.7605 6.48488 20.3231 8.06203C19.8848 6.4813 19.1394 5.12389 18.4074 4.04808C19.0831 2.90451 19.8028 1.97931 20.3185 1.32722ZM22.3645 16.2891C22.062 16.0439 21.785 15.7106 21.5541 15.2964C21.1629 14.5941 20.7327 13.3623 20.7214 11.3468C20.7221 11.2432 20.7251 11.1419 20.7236 11.0365C20.7272 10.8034 20.7345 10.5636 20.7496 10.3104C20.8797 8.1404 21.757 6.27222 22.674 4.84582C23.4798 6.40006 24.1284 8.28542 24.1284 10.4126C24.1284 13.7606 23.2839 15.4455 22.3645 16.2891ZM24.3161 2.66783C24.7804 3.3314 25.4686 4.3519 26.0467 5.61599C25.5496 6.35511 25.0699 7.22356 24.7148 8.20909C24.4153 6.65706 23.8341 5.27458 23.1846 4.09732C23.6044 3.51624 24.0054 3.03243 24.3161 2.66783ZM25.7684 15.3242C25.5916 15.1171 25.4335 14.8593 25.3046 14.5536C25.0002 13.8317 24.704 12.5003 25.0209 10.2561C25.2271 8.79669 25.7823 7.54067 26.4167 6.50683C26.8769 7.7415 27.1865 9.15511 27.0955 10.6735C26.9641 12.8636 26.4314 14.3621 25.7684 15.3242ZM29.7686 10.9235C29.5222 12.668 29.0566 13.9111 28.5137 14.7187C28.4632 14.687 28.4119 14.6568 28.3642 14.62C27.8935 14.2569 27.6561 13.7077 27.6585 12.9875C27.6639 11.4225 28.6477 9.66221 29.7386 8.18891C29.8694 9.03982 29.9048 9.95961 29.7686 10.9235ZM28.3276 4.05279C28.6906 4.78019 29.1959 5.85258 29.5246 7.1437C28.9445 7.87695 28.3627 8.70734 27.8903 9.57758C27.8102 8.14765 27.4366 6.83577 26.9579 5.69717C27.4492 5.01888 27.9431 4.46724 28.3276 4.05279ZM32.7496 3.7702L32.0949 4.36218C32.0092 4.43961 31.1478 5.22586 30.1478 6.38812C29.7688 5.13836 29.2623 4.12788 28.9296 3.46679C28.8766 3.36173 28.8287 3.26632 28.7872 3.18161L28.529 2.65454L28.1324 3.08725C28.0734 3.15164 28.0058 3.22386 27.9313 3.30363C27.5956 3.6626 27.1026 4.19271 26.5829 4.86965C25.9699 3.62844 25.2844 2.65239 24.8529 2.0386L24.3787 1.3559L23.8507 1.97967C23.5614 2.31758 23.1687 2.77827 22.7444 3.34262C22.0715 2.25178 21.3791 1.37688 20.8865 0.754542C20.7939 0.637762 20.7095 0.530881 20.6347 0.4347L20.3185 0.0275269L20.0023 0.4347C19.9274 0.531157 19.8428 0.638038 19.7502 0.75479C19.2588 1.37586 18.5683 2.24836 17.8969 3.33587C17.4744 2.77455 17.0837 2.31625 16.7955 1.97967L16.2676 1.3559L15.7934 2.0386C15.362 2.65239 14.6763 3.62847 14.0633 4.86967C13.5437 4.19273 13.0506 3.6626 12.7149 3.30363C12.6404 3.22386 12.5729 3.15164 12.5138 3.08725L12.1172 2.65454L11.859 3.18161C11.8176 3.26632 11.7696 3.36173 11.7167 3.46679C11.3839 4.12788 10.8774 5.13836 10.4984 6.38812C9.4984 5.22586 8.63706 4.43961 8.55128 4.36218L7.89662 3.7702L7.79065 10.3706C7.79065 13.5257 8.59639 15.3397 10.1857 15.7622C10.3992 15.8191 10.6556 15.8548 10.9338 15.8548C11.2389 15.8548 11.57 15.8103 11.8989 15.7059C12.5032 16.3695 13.1765 16.6827 13.8196 16.6827C13.9131 16.6827 14.0061 16.6761 14.098 16.6631C14.3231 16.6313 14.5393 16.5562 14.7451 16.4479C15.4619 17.1986 16.2861 17.5567 17.0747 17.5567C17.1266 17.5567 17.1786 17.5551 17.2302 17.552C17.5715 17.5315 17.9038 17.4337 18.2201 17.2757C19.0562 17.8302 19.8844 17.9185 20.3185 17.9185C20.7533 17.9185 21.5834 17.8301 22.4208 17.2733C22.7387 17.4328 23.0728 17.5314 23.416 17.552C23.4677 17.5551 23.5195 17.5567 23.5715 17.5567C24.3601 17.5567 25.1843 17.1986 25.901 16.4479C26.1069 16.5562 26.3231 16.6313 26.5482 16.6631C26.6402 16.6761 26.733 16.6827 26.8266 16.6827C27.4697 16.6827 28.1429 16.3695 28.7473 15.7059C29.0762 15.8104 29.4073 15.8548 29.7124 15.8548C29.9906 15.8548 30.2472 15.8191 30.4607 15.7622C32.0499 15.3397 32.8556 13.5257 32.8556 10.3641L32.7496 3.7702Z\" fill=\"${l.color}\"/></g></svg>`}),QC=()=>({getDefaultIconProps:()=>({width:\"94\",height:\"21\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 94 21\" fill=\"none\"><path d=\"M6.4204 2.61252C6.39952 2.59259 6.37869 2.57271 6.36319 2.55289L6.35068 2.51119C6.31637 2.48816 6.28962 2.45792 6.26291 2.42773C6.23568 2.39695 6.20848 2.36621 6.17336 2.34319C6.1726 2.34095 6.17099 2.33951 6.16939 2.33806C6.16647 2.33545 6.16356 2.33284 6.16573 2.32549C6.16173 2.32297 6.15705 2.32136 6.1525 2.31979C6.14837 2.31837 6.14434 2.31698 6.14101 2.31499C6.09577 2.25802 6.04372 2.20764 5.99174 2.15734C5.95641 2.12314 5.9211 2.08897 5.888 2.05279C5.8435 2.02944 5.80718 1.99839 5.77063 1.96713C5.75881 1.95702 5.74695 1.94689 5.73479 1.93699C5.63444 1.87818 5.53984 1.81373 5.44516 1.74922C5.31524 1.66069 5.18516 1.57206 5.03987 1.49779C5.0403 1.49715 5.04073 1.49659 5.04113 1.49606C5.04187 1.4951 5.04252 1.49426 5.04292 1.49329C5.03952 1.49162 5.03574 1.49033 5.03218 1.48912C5.03126 1.4888 5.03036 1.4885 5.02949 1.48819C5.0127 1.46989 4.99164 1.45519 4.96753 1.44469C4.95899 1.42279 4.93122 1.40209 4.90894 1.41319C4.9096 1.38565 4.88517 1.38263 4.863 1.37989C4.85474 1.37887 4.84679 1.37789 4.84057 1.37569C4.83394 1.37075 4.83697 1.36711 4.83999 1.36349C4.84155 1.36161 4.84311 1.35974 4.84332 1.35769C4.82959 1.35709 4.80822 1.35349 4.79418 1.34359C4.79174 1.33969 4.78838 1.33639 4.78533 1.33339C4.78289 1.32829 4.78136 1.32259 4.78167 1.31479C4.77496 1.31209 4.76855 1.31179 4.76183 1.31179C4.75268 1.30489 4.74261 1.29919 4.73192 1.29409L4.7304 1.28719C4.72512 1.28508 4.71958 1.28301 4.7139 1.2809C4.68247 1.2692 4.64686 1.25595 4.62877 1.22419C4.59306 1.2062 4.55787 1.18524 4.52271 1.1643C4.47282 1.13459 4.42299 1.1049 4.37179 1.08379C4.3663 1.08049 4.35959 1.08229 4.35348 1.08649C4.33821 1.06445 4.32074 1.05966 4.30335 1.05488C4.29398 1.05231 4.28463 1.04974 4.27566 1.04449C4.27901 1.04179 4.28268 1.03939 4.28664 1.03699C4.27571 1.03053 4.26489 1.02389 4.2541 1.01728C4.21281 0.991953 4.17218 0.967034 4.12886 0.954188C4.11177 0.930188 4.07484 0.904688 4.0431 0.907688C4.03486 0.886088 4.00159 0.864188 3.97718 0.873488C3.95156 0.853925 3.92517 0.839675 3.89869 0.82538C3.87562 0.812931 3.8525 0.800447 3.82977 0.784388C3.82488 0.778988 3.81787 0.781088 3.81054 0.786488C3.78765 0.762788 3.77911 0.757388 3.75347 0.757388C3.74736 0.751388 3.74614 0.745988 3.75286 0.741788C3.74992 0.740655 3.74667 0.741573 3.74337 0.742503C3.73706 0.74428 3.73061 0.746099 3.726 0.733688C3.73002 0.731299 3.73298 0.73012 3.73515 0.729255C3.74007 0.727296 3.74096 0.726945 3.74096 0.717788C3.73017 0.703729 3.7174 0.700471 3.70431 0.697131C3.70037 0.696124 3.69639 0.695109 3.69243 0.693788C3.68875 0.689861 3.69119 0.687168 3.69359 0.684503C3.69578 0.682078 3.69795 0.679676 3.69548 0.676388C3.67086 0.670922 3.64824 0.652868 3.62559 0.634787C3.59603 0.611187 3.56642 0.587542 3.5322 0.591788C3.50351 0.547988 3.45865 0.531188 3.41501 0.529988C3.41234 0.527361 3.41231 0.525184 3.41229 0.522964C3.41227 0.521127 3.41226 0.519261 3.41074 0.517088C3.36638 0.497492 3.31766 0.481458 3.2698 0.465709C3.21655 0.448187 3.16437 0.431018 3.12049 0.409688C3.1647 0.406993 3.20727 0.417821 3.24999 0.428686C3.28336 0.437173 3.31682 0.445683 3.35122 0.447788C3.35595 0.455037 3.36138 0.458545 3.36687 0.462092C3.37342 0.466326 3.38006 0.470615 3.38571 0.481388C3.3888 0.482243 3.3919 0.483125 3.39502 0.48401C3.4214 0.491508 3.44857 0.499228 3.47696 0.492788C3.47997 0.483458 3.47084 0.478964 3.46211 0.474668C3.454 0.470677 3.44624 0.466857 3.44888 0.459488C3.46018 0.460988 3.48062 0.472388 3.48978 0.478988C3.49558 0.484858 3.49204 0.488852 3.48853 0.492806C3.48576 0.495925 3.48301 0.499019 3.4849 0.502988C3.50839 0.508288 3.52675 0.524413 3.5447 0.540182C3.56944 0.561906 3.59341 0.582953 3.62895 0.574088C3.63756 0.580393 3.64517 0.586291 3.65217 0.591719C3.68418 0.616516 3.70355 0.631527 3.74736 0.630788C3.75165 0.622922 3.74329 0.620252 3.73519 0.617665C3.726 0.614728 3.71714 0.611898 3.72753 0.601688C3.72189 0.594348 3.71515 0.593977 3.70848 0.593609C3.70069 0.59318 3.69299 0.592756 3.68724 0.581288C3.69537 0.581483 3.70356 0.580982 3.71171 0.580484C3.72866 0.579447 3.74543 0.578421 3.7611 0.583688C3.75974 0.592023 3.75552 0.590759 3.7502 0.589163C3.7448 0.587543 3.73825 0.585581 3.73241 0.592988C3.7526 0.613128 3.77546 0.628005 3.79689 0.641949C3.81215 0.630249 3.8258 0.625988 3.8377 0.631688C3.84265 0.640549 3.84174 0.64697 3.84092 0.652744C3.83977 0.660848 3.8388 0.667677 3.85449 0.678188C3.86155 0.68397 3.87009 0.680746 3.87873 0.677483C3.88578 0.674821 3.89291 0.672131 3.89935 0.674288C3.89646 0.68146 3.90107 0.688037 3.90427 0.69261C3.9075 0.697218 3.9093 0.699792 3.90057 0.698888C3.90553 0.706654 3.91127 0.706846 3.91692 0.707034C3.92241 0.707217 3.9278 0.707397 3.93231 0.714488L3.91492 0.726488C3.9256 0.736988 3.93659 0.745088 3.95124 0.733388C3.96379 0.766003 3.99247 0.76274 4.02122 0.759471C4.03927 0.757417 4.05735 0.75536 4.07148 0.762188C4.0693 0.760287 4.06696 0.758219 4.06448 0.756029C4.03685 0.731614 3.99207 0.692055 3.95398 0.699488C3.95296 0.696586 3.9515 0.693417 3.94999 0.690125C3.94696 0.68355 3.94371 0.676486 3.9433 0.670088C3.93298 0.664417 3.92262 0.658284 3.91224 0.652138C3.89132 0.639751 3.87031 0.62731 3.8493 0.618488C3.83374 0.585788 3.80749 0.569588 3.77849 0.577388C3.73431 0.539822 3.67606 0.517502 3.6196 0.495866C3.59805 0.48761 3.57676 0.479454 3.55662 0.470588C3.54762 0.472723 3.55021 0.476949 3.55273 0.481062C3.55517 0.485043 3.55755 0.488918 3.54929 0.490688C3.54037 0.487458 3.53705 0.473223 3.53419 0.460953C3.53333 0.457271 3.53251 0.453766 3.53159 0.450788C3.52647 0.448708 3.52118 0.448066 3.51597 0.447434C3.5069 0.446333 3.49806 0.44526 3.4907 0.436688C3.48311 0.431229 3.48573 0.427204 3.48843 0.423074C3.49018 0.420397 3.49196 0.417675 3.491 0.414488C3.47285 0.400267 3.46787 0.406522 3.45697 0.420244C3.45614 0.421284 3.45528 0.422368 3.45438 0.423488C3.43488 0.416616 3.41503 0.41144 3.39512 0.406246C3.36548 0.398516 3.33569 0.390746 3.30666 0.377288C3.34847 0.373275 3.38854 0.37949 3.42853 0.385693C3.45131 0.389226 3.47407 0.392755 3.49711 0.394388C3.49987 0.386084 3.4945 0.3839 3.48805 0.381276C3.48238 0.37897 3.47587 0.376324 3.4733 0.368888C3.47284 0.372002 3.47284 0.374615 3.47285 0.376826C3.47286 0.383351 3.47287 0.386372 3.46079 0.388388C3.44968 0.386098 3.4494 0.379773 3.4491 0.372572C3.44888 0.367511 3.44864 0.362017 3.44461 0.357188C3.46221 0.349192 3.47773 0.354245 3.49329 0.359309C3.50633 0.363555 3.51939 0.367809 3.53373 0.364388C3.53866 0.359216 3.53571 0.358224 3.53179 0.356908C3.52844 0.355781 3.52438 0.354416 3.52396 0.349988C3.53709 0.343988 3.54288 0.353588 3.54563 0.366488C3.55021 0.367688 3.57157 0.361988 3.56699 0.352088C3.59208 0.367043 3.61962 0.367053 3.64714 0.367063C3.6809 0.367075 3.71462 0.367088 3.7437 0.394688C3.74533 0.393648 3.74695 0.392591 3.74858 0.39153C3.754 0.388 3.75951 0.384417 3.76537 0.381188C3.75241 0.373754 3.73921 0.370386 3.72613 0.36705C3.71335 0.363789 3.70068 0.360557 3.68846 0.353588C3.69658 0.350519 3.7039 0.350904 3.71124 0.351289C3.71824 0.351657 3.72527 0.352026 3.73302 0.349388C3.70392 0.337369 3.64484 0.331899 3.59315 0.327113C3.58033 0.325926 3.56796 0.324781 3.55662 0.323588C3.54965 0.325055 3.54846 0.328293 3.5473 0.331426C3.54632 0.334059 3.54537 0.336618 3.54105 0.337988C3.53545 0.339693 3.5306 0.336811 3.52567 0.333879C3.51933 0.330104 3.51285 0.326248 3.50443 0.331988C3.50292 0.328882 3.50481 0.326445 3.50673 0.323965C3.50908 0.320936 3.51148 0.317842 3.50779 0.313388C3.48826 0.308855 3.46789 0.309269 3.44744 0.309685C3.42729 0.310095 3.40708 0.310506 3.38754 0.306188C3.39171 0.303368 3.39444 0.303177 3.39638 0.303041C3.39898 0.302858 3.40018 0.302774 3.40158 0.296588C3.34989 0.276798 3.29555 0.26835 3.24232 0.260077C3.24149 0.259947 3.24066 0.259818 3.23983 0.259688C3.25166 0.248242 3.27087 0.251761 3.29029 0.255316C3.30294 0.257632 3.31567 0.259963 3.3265 0.258188C3.34695 0.244388 3.36618 0.238088 3.38113 0.252788C3.38584 0.249783 3.39019 0.249391 3.39458 0.248995C3.4007 0.248441 3.40693 0.247879 3.4144 0.240188C3.44128 0.260867 3.47299 0.260253 3.50461 0.259641C3.51427 0.259454 3.52392 0.259267 3.53342 0.259688C3.56253 0.221903 3.59783 0.232274 3.63534 0.243295C3.66901 0.253187 3.70446 0.263602 3.73882 0.240188C3.726 0.241388 3.68053 0.229688 3.70098 0.208388C3.69553 0.224111 3.70809 0.225033 3.72078 0.225965C3.73158 0.226758 3.74248 0.227559 3.74248 0.237488C3.75736 0.233426 3.7708 0.237675 3.78428 0.241933C3.80066 0.24711 3.81709 0.2523 3.83618 0.242588C3.81696 0.230733 3.79648 0.227477 3.77615 0.224246C3.74967 0.220037 3.72346 0.215871 3.70067 0.192788C3.70178 0.187324 3.70618 0.186836 3.71195 0.186198C3.71884 0.185434 3.72768 0.184455 3.73516 0.174488C3.81233 0.200758 3.89541 0.19276 3.97829 0.18478C3.97965 0.18465 3.98101 0.184519 3.98236 0.184388C3.97116 0.179069 3.95244 0.176708 3.93115 0.174025C3.90082 0.1702 3.86529 0.165721 3.83892 0.151088C3.84848 0.146925 3.85718 0.145072 3.86486 0.143437C3.87655 0.140947 3.88589 0.138959 3.89233 0.130088C3.89475 0.13721 3.89827 0.138905 3.90195 0.140679C3.90525 0.142267 3.90868 0.143919 3.91156 0.149588C3.92538 0.148282 3.93918 0.14872 3.9529 0.149156C3.98643 0.150221 4.0195 0.151272 4.05134 0.126788C4.07226 0.135765 4.09508 0.132488 4.11778 0.129227C4.1368 0.126495 4.15575 0.123774 4.17342 0.128288C4.17111 0.122054 4.17582 0.11701 4.18054 0.111957C4.18332 0.108985 4.1861 0.10601 4.18746 0.102788C4.17983 0.0987817 4.17107 0.101512 4.1624 0.104216C4.15094 0.107788 4.13964 0.111312 4.1313 0.0991883C4.15358 0.0865883 4.22286 0.0823883 4.23354 0.0865883C4.2394 0.0946148 4.23772 0.0946237 4.23409 0.094643C4.23148 0.0946568 4.22785 0.094676 4.2253 0.0976883C4.23318 0.101562 4.24222 0.0991316 4.25124 0.0967054C4.25759 0.0949979 4.26393 0.0932926 4.26986 0.0937883C4.26994 0.091814 4.27023 0.0898782 4.27052 0.0879273C4.27139 0.0821705 4.27228 0.0762825 4.26772 0.0688883C4.24538 0.0770216 4.22578 0.0706998 4.20667 0.0645358C4.20464 0.0638789 4.20261 0.0632239 4.20058 0.0625883C4.19686 0.0545396 4.19656 0.0470859 4.19626 0.0392597C4.19619 0.0374595 4.19612 0.0356396 4.196 0.0337883C4.19251 0.0261469 4.18383 0.0245854 4.17685 0.0233306C4.1704 0.0221715 4.16541 0.0212742 4.16731 0.0160883C4.16884 0.0115883 4.16792 0.00648828 4.1667 0.000488281C4.18502 0.00632826 4.20505 0.00851691 4.22407 0.0105962C4.25196 0.0136439 4.27769 0.0164566 4.29275 0.0301883C4.29511 0.0279922 4.29444 0.0252007 4.29373 0.022278C4.29271 0.0180138 4.29162 0.0134702 4.29977 0.0100883C4.33471 0.0282891 4.37287 0.0284643 4.41095 0.0286391C4.4507 0.0288216 4.49037 0.0290037 4.52622 0.0496883C4.54697 0.030702 4.56268 0.0390039 4.57832 0.047263C4.58269 0.0495745 4.58706 0.0518826 4.59153 0.0535883C4.61198 0.0295883 4.64799 0.0448883 4.67088 0.0679883C4.66576 0.0712459 4.65994 0.0749493 4.66234 0.0787883C4.68046 0.103478 4.70269 0.103183 4.72476 0.10289C4.74023 0.102685 4.75563 0.102481 4.76946 0.110888C4.78315 0.100396 4.78333 0.100278 4.79577 0.0923608C4.7972 0.0914492 4.7988 0.0904343 4.80059 0.0892883C4.80554 0.101548 4.81281 0.0999391 4.82007 0.0983309C4.8249 0.097263 4.82972 0.0961956 4.83386 0.0991883C4.82531 0.147488 4.88849 0.139388 4.91962 0.124388C4.93643 0.142039 4.95551 0.145704 4.97454 0.149359C4.98592 0.151544 4.99728 0.153726 5.00812 0.158888C5.03559 0.181688 5.06977 0.198488 5.1122 0.204188C5.11123 0.204888 5.11026 0.205597 5.1093 0.206305C5.10446 0.209847 5.09963 0.213388 5.0948 0.215888C5.10794 0.22504 5.12311 0.222237 5.13907 0.219289C5.15868 0.215666 5.17949 0.211823 5.19918 0.229688C5.22481 0.205688 5.24465 0.216488 5.26357 0.232388C5.26055 0.234887 5.25778 0.235191 5.25496 0.2355C5.25236 0.235785 5.24971 0.236075 5.24679 0.238088C5.259 0.258188 5.27578 0.260888 5.29531 0.247388C5.31741 0.268032 5.3416 0.27586 5.36586 0.283709C5.38884 0.291145 5.41188 0.2986 5.43326 0.316988C5.43072 0.319235 5.4275 0.321274 5.42434 0.323279C5.41609 0.3285 5.40822 0.333484 5.41373 0.341288C5.44364 0.351188 5.47477 0.358388 5.50864 0.349388C5.53245 0.366188 5.55717 0.381788 5.58525 0.376388C5.58941 0.38169 5.58937 0.385997 5.58933 0.39012C5.58929 0.394164 5.58925 0.398032 5.59318 0.402488C5.60457 0.407605 5.61613 0.410165 5.62764 0.412713C5.63771 0.414944 5.64775 0.417166 5.65758 0.421088C5.66735 0.430688 5.67864 0.439088 5.69146 0.445688C5.69223 0.447065 5.69325 0.448286 5.6943 0.44955C5.69531 0.450764 5.69636 0.452018 5.69725 0.453488C5.70122 0.454388 5.70336 0.454088 5.70458 0.452588C5.71526 0.457388 5.72594 0.461288 5.73815 0.464288C5.75982 0.473588 5.78149 0.482888 5.80285 0.493388C5.80621 0.492488 5.80896 0.491588 5.81262 0.489488L5.80835 0.495788C5.83948 0.509888 5.86908 0.524888 5.89899 0.541088C5.95004 0.55549 5.99376 0.577169 6.03756 0.598887C6.08043 0.620147 6.12339 0.641445 6.17336 0.655988C6.23091 0.687364 6.29073 0.716411 6.35055 0.745454C6.4852 0.810828 6.6198 0.876176 6.7282 0.967988C6.77718 0.988439 6.81623 1.01874 6.8553 1.04907C6.88901 1.07523 6.92275 1.10142 6.9629 1.12129C6.96526 1.12375 6.96576 1.12769 6.96628 1.13167C6.96683 1.13593 6.96738 1.14025 6.97022 1.14289C7.01966 1.15849 7.05507 1.18759 7.08406 1.22329H7.10512C7.13235 1.25006 7.16332 1.27316 7.19425 1.29624C7.22952 1.32256 7.26474 1.34884 7.29434 1.38049C7.30197 1.37959 7.30716 1.38139 7.31174 1.38409C7.31581 1.39496 7.32419 1.40106 7.33254 1.40713C7.34169 1.41379 7.3508 1.42042 7.35416 1.43329C7.37629 1.43873 7.39049 1.45195 7.40457 1.46505C7.41613 1.4758 7.42759 1.48647 7.44327 1.49269C7.44663 1.49569 7.44724 1.50139 7.44724 1.50709C7.57878 1.61179 7.69933 1.72789 7.81714 1.84609C7.84277 1.86349 7.86719 1.88119 7.88153 1.90909C7.98774 1.99579 8.08327 2.09389 8.1733 2.19589L8.27218 2.27809C8.42051 2.43289 8.55998 2.59549 8.68816 2.76979C8.69238 2.77346 8.69677 2.77653 8.70115 2.7796C8.70501 2.7823 8.70886 2.785 8.71258 2.78809C8.7511 2.84575 8.7926 2.90059 8.83409 2.95542C8.89383 3.03438 8.95355 3.1133 9.00435 3.20059C9.00748 3.20675 9.01318 3.21029 9.01902 3.21391C9.02284 3.21628 9.02672 3.21868 9.02998 3.22189C9.02998 3.22219 9.02998 3.22159 9.02998 3.22189C9.03 3.2264 9.03002 3.23181 9.02601 3.23209C9.03707 3.24755 9.04889 3.26231 9.06074 3.27709C9.08749 3.31048 9.11433 3.34398 9.13253 3.38599C9.15908 3.40129 9.17342 3.42769 9.18258 3.45919C9.18434 3.46081 9.18612 3.46241 9.18788 3.464C9.20112 3.47591 9.21398 3.48748 9.21829 3.50839C9.25155 3.53659 9.27627 3.57349 9.30008 3.60979C9.3013 3.62269 9.29947 3.63289 9.29611 3.64189C9.32919 3.65751 9.35265 3.69509 9.37556 3.7318C9.38478 3.74656 9.39391 3.76119 9.40354 3.77419C9.40274 3.77911 9.40127 3.7829 9.39983 3.78661C9.3974 3.79286 9.39507 3.79886 9.39622 3.80959C9.40435 3.81225 9.40606 3.80853 9.40781 3.80475C9.4094 3.8013 9.41102 3.7978 9.41758 3.79909C9.42309 3.81047 9.43212 3.82095 9.4412 3.83151C9.45726 3.85017 9.47352 3.86906 9.47099 3.89359C9.55492 3.99439 9.62481 4.10839 9.69164 4.22599C9.70378 4.23493 9.71255 4.24737 9.72136 4.25987C9.73205 4.27503 9.74281 4.29028 9.7597 4.29949C9.78463 4.35832 9.82254 4.40399 9.86072 4.44997C9.87958 4.47269 9.8985 4.49549 9.91596 4.51999C9.91473 4.5299 9.91627 4.53709 9.91778 4.54412C9.91851 4.54752 9.91923 4.55088 9.91963 4.55449C9.92437 4.55872 9.92881 4.56303 9.93321 4.56729C9.94438 4.57811 9.95522 4.58861 9.96968 4.59679C9.97965 4.63102 10.0004 4.65449 10.0212 4.67798C10.0418 4.70122 10.0624 4.72447 10.0725 4.75819C10.1162 4.79831 10.1492 4.84874 10.1823 4.89922C10.2165 4.95141 10.2508 5.00367 10.2968 5.04469C10.2952 5.05064 10.2969 5.05404 10.2985 5.05745C10.2997 5.05988 10.3008 5.06232 10.3008 5.06569C10.33 5.09397 10.3536 5.12823 10.3768 5.16216C10.3844 5.17321 10.392 5.18422 10.3997 5.19499C10.4041 5.20074 10.4096 5.20648 10.4153 5.2124C10.4323 5.23022 10.4509 5.24963 10.4461 5.27599C10.4483 5.27806 10.4524 5.2786 10.4566 5.27916C10.4609 5.27972 10.4653 5.28031 10.4681 5.28259C10.478 5.29509 10.4873 5.30812 10.4966 5.32112C10.5205 5.35458 10.5443 5.3879 10.5779 5.41189C10.5763 5.41745 10.5778 5.41972 10.5793 5.42199C10.5806 5.42388 10.5818 5.42577 10.5813 5.42959C10.6455 5.50949 10.7127 5.58647 10.7799 5.66339C10.8065 5.6939 10.8332 5.72441 10.8596 5.75509C10.8647 5.75352 10.8668 5.75506 10.869 5.75664C10.8709 5.75808 10.873 5.75955 10.8773 5.75869C10.8857 5.77755 10.9015 5.7889 10.9173 5.80028C10.9342 5.81243 10.9511 5.82461 10.9591 5.84599C10.9655 5.84456 10.969 5.84589 10.9725 5.84721C10.9749 5.8481 10.9773 5.84899 10.9805 5.84899C11.0045 5.87158 11.0368 5.88562 11.0691 5.89966C11.1051 5.91527 11.141 5.93087 11.1654 5.95819C11.1892 5.96059 11.228 5.96599 11.2399 5.98939C11.243 5.98918 11.2453 5.98836 11.2472 5.98766C11.2507 5.98639 11.2532 5.98551 11.2579 5.98939C11.2697 5.99919 11.2941 6.00515 11.3182 6.01104C11.331 6.01416 11.3437 6.01725 11.3543 6.02089C11.3581 6.02232 11.3611 6.02484 11.3641 6.02741C11.3674 6.03023 11.3708 6.03312 11.3754 6.03469C11.4023 6.04627 11.4317 6.05086 11.4611 6.05545C11.4804 6.05847 11.4997 6.06149 11.5182 6.06649C11.5224 6.06766 11.5255 6.07054 11.5285 6.07339C11.5317 6.07639 11.5349 6.07937 11.5393 6.08029C11.5459 6.08246 11.5534 6.08239 11.561 6.0823C11.5681 6.08223 11.5754 6.08215 11.5823 6.08389C11.6084 6.09022 11.6357 6.09672 11.6634 6.10331C11.7001 6.11203 11.7374 6.12091 11.7734 6.12979C11.7823 6.13153 11.7926 6.13131 11.8025 6.13108C11.8131 6.13085 11.8234 6.13062 11.8311 6.13279C11.8338 6.1337 11.8352 6.13616 11.8365 6.13852C11.8378 6.14081 11.839 6.143 11.8414 6.14359C11.8596 6.14557 11.878 6.14555 11.8964 6.14553C11.9116 6.14552 11.9267 6.14551 11.9418 6.14659C12.1051 6.16099 12.2791 6.15499 12.4579 6.14659C12.4795 6.14563 12.5008 6.14486 12.5218 6.1441C12.5931 6.14153 12.6614 6.13906 12.7283 6.12979C12.8693 6.10999 13.0079 6.08659 13.1446 6.05209C13.1645 6.04849 13.205 6.05269 13.205 6.05269C13.205 6.05269 13.2679 6.02689 13.2978 6.01789C13.4178 5.97979 13.5716 5.94799 13.7108 5.91949C13.8038 5.90089 13.9284 5.87719 14.0553 5.85379C14.1435 5.83759 14.2329 5.82139 14.3147 5.80669C14.4988 5.77339 14.6434 5.74789 14.6434 5.74789L15.1064 5.65009C15.1064 5.65009 15.1046 5.66209 15.3237 5.64589C15.3722 5.64199 15.4186 5.63809 15.4635 5.63359C15.5077 5.62939 15.5505 5.62519 15.5917 5.62069C15.6088 5.61889 15.6257 5.6171 15.6424 5.61533C15.9433 5.58346 16.1799 5.55841 16.4838 5.61469C16.6176 5.61906 16.7359 5.64858 16.8549 5.67828C16.883 5.68528 16.9111 5.69229 16.9394 5.69899C16.9406 5.70056 16.9415 5.70211 16.9424 5.7036C16.9447 5.70723 16.9467 5.71054 16.951 5.71309C16.9536 5.71293 16.9565 5.7126 16.9595 5.71225C16.9734 5.71063 16.9896 5.70875 16.9928 5.72359C16.9971 5.71969 17.0053 5.71969 17.0148 5.72029C17.2589 5.79979 17.4936 5.88949 17.7125 5.99659C17.7538 6.01683 17.7643 6.03513 17.7756 6.05471C17.7855 6.07199 17.796 6.09028 17.8287 6.11179C17.8325 6.11442 17.8359 6.11773 17.8394 6.12114C17.8487 6.13019 17.8588 6.13999 17.8785 6.13999C17.8911 6.15418 17.9076 6.16439 17.924 6.17453C17.9433 6.18647 17.9624 6.19832 17.9749 6.21649C18.0192 6.23299 18.0509 6.26119 18.0775 6.29419C18.2218 6.40549 18.3696 6.53509 18.4864 6.67309C18.4997 6.68871 18.507 6.70432 18.5143 6.72007C18.5212 6.73486 18.5282 6.74977 18.5402 6.76489C18.5923 6.82969 18.6433 6.89599 18.694 6.96229C18.743 7.02503 18.7744 7.08824 18.8103 7.16037C18.8151 7.16998 18.8199 7.17974 18.8249 7.18969C18.8282 7.19288 18.8338 7.19599 18.84 7.19938C18.8529 7.20649 18.8681 7.21488 18.8685 7.22809C18.9027 7.28089 18.9375 7.33609 18.9723 7.39279C18.9882 7.41859 19.0041 7.44499 19.0196 7.47139C19.0295 7.48808 19.0337 7.50494 19.0379 7.5219C19.042 7.53847 19.0461 7.55514 19.0556 7.57189C19.0657 7.59004 19.0808 7.60833 19.096 7.62679C19.1127 7.64707 19.1296 7.66756 19.1402 7.68829C19.182 7.76929 19.221 7.85299 19.2552 7.93939C19.27 7.97619 19.2772 8.01336 19.2844 8.05101C19.2901 8.08088 19.2959 8.11106 19.3056 8.14159C19.3112 8.15898 19.3218 8.17652 19.3324 8.19416C19.3438 8.21303 19.3553 8.23202 19.3608 8.25109C19.3938 8.36779 19.4213 8.48869 19.4435 8.61229C19.4698 8.75599 19.4887 8.90329 19.5021 9.05449C19.5037 9.07795 19.5018 9.10116 19.4999 9.12439C19.4981 9.14541 19.4964 9.16645 19.4972 9.18769C19.4983 9.21009 19.5006 9.23297 19.5029 9.25591C19.506 9.28704 19.5092 9.31826 19.5092 9.34849C19.5092 9.35978 19.5091 9.3711 19.509 9.38243C19.5089 9.40513 19.5087 9.42788 19.5092 9.45049C19.5104 9.60472 19.5 9.66033 19.4843 9.74461C19.477 9.78411 19.4685 9.8299 19.4594 9.89509C19.4544 9.92864 19.4449 9.96049 19.4356 9.99173C19.4303 10.0097 19.425 10.0274 19.4206 10.0451C19.4179 10.0542 19.4166 10.0634 19.4154 10.0724C19.4126 10.0927 19.4099 10.112 19.3913 10.1261C19.3974 10.1532 19.3853 10.183 19.3723 10.2147C19.3665 10.229 19.3605 10.2437 19.3559 10.2587C19.3505 10.2768 19.3456 10.2954 19.3408 10.3136C19.331 10.3505 19.3217 10.3858 19.3092 10.4123C19.3064 10.419 19.3024 10.4274 19.2981 10.4364C19.2895 10.4544 19.2795 10.4754 19.2738 10.493C19.2648 10.521 19.2563 10.5489 19.2478 10.5766C19.2187 10.6714 19.1903 10.7639 19.1457 10.8536C19.1133 10.9188 19.0794 10.9683 19.0457 11.0176C19.0197 11.0557 18.9938 11.0936 18.9687 11.1386C18.9707 11.1515 18.9592 11.1742 18.9493 11.1936C18.9428 11.2066 18.9369 11.2181 18.9363 11.2244C18.932 11.2267 18.9282 11.2294 18.9245 11.2319C18.9211 11.2342 18.9179 11.2365 18.9146 11.2382C18.9146 11.2542 18.9069 11.2628 18.8994 11.2711C18.8975 11.2732 18.8956 11.2753 18.8939 11.2775C18.8957 11.3105 18.8832 11.3285 18.8612 11.3372C18.8513 11.321 18.8647 11.3099 18.8753 11.301C18.8781 11.2988 18.8806 11.2966 18.8826 11.2946C18.8826 11.2799 18.8878 11.2547 18.9043 11.2457C18.9121 11.2481 18.9116 11.2421 18.911 11.2359C18.9107 11.2329 18.9104 11.2299 18.911 11.2277C18.8845 11.2486 18.8644 11.2761 18.8444 11.3035C18.8196 11.3374 18.795 11.3712 18.7584 11.3924C18.7486 11.4191 18.7309 11.4389 18.7044 11.4491C18.7026 11.4523 18.7007 11.4555 18.6988 11.4588C18.6924 11.47 18.6858 11.4816 18.6796 11.4944C18.6621 11.5033 18.6489 11.5168 18.6357 11.5303C18.6198 11.5466 18.6037 11.5629 18.5798 11.5715C18.5767 11.5761 18.5773 11.5786 18.5778 11.5814C18.5784 11.5841 18.579 11.587 18.5765 11.5922C18.4352 11.7083 18.2829 11.8142 18.1275 11.9174C18.1243 11.9194 18.1212 11.9191 18.1177 11.9188C18.1135 11.9183 18.1088 11.9179 18.1028 11.9213C18.0987 11.9238 18.097 11.9287 18.0952 11.9337C18.0936 11.9384 18.092 11.943 18.0885 11.9456C18.0497 11.9664 18.0127 11.9892 17.9757 12.0119C17.9142 12.0498 17.8526 12.0877 17.7827 12.1166C17.7651 12.134 17.7409 12.1453 17.7169 12.1565C17.7046 12.1623 17.6923 12.168 17.681 12.1745C17.6719 12.1757 17.6621 12.1775 17.6523 12.1799C17.6521 12.1797 17.6526 12.1801 17.6523 12.1799C17.6513 12.1788 17.6494 12.1768 17.6472 12.1763C17.6465 12.1787 17.645 12.1799 17.6447 12.1817C17.6328 12.1845 17.6451 12.1877 17.659 12.1914C17.675 12.1956 17.6931 12.2004 17.6792 12.2057C17.6738 12.208 17.6685 12.2103 17.6632 12.2126C17.6533 12.2169 17.6436 12.2212 17.634 12.2249C17.5019 12.2579 17.4204 12.3227 17.3481 12.3941C17.2757 12.4652 17.1628 12.5876 17.1183 12.6878C17.0706 12.7952 17.0417 12.9152 17.0279 13.0457C17.0178 13.1387 17.0154 13.2374 17.0197 13.34C17.0219 13.3977 17.0338 13.4567 17.0461 13.517C17.0543 13.5577 17.0627 13.5989 17.0682 13.6406C17.0732 13.6786 17.0745 13.717 17.0758 13.7559C17.0775 13.8057 17.0792 13.8561 17.0887 13.907C17.0973 13.9535 17.1128 14.0006 17.1286 14.0481C17.1423 14.0897 17.1562 14.1315 17.1656 14.1737C17.1704 14.1957 17.1699 14.2177 17.1695 14.2397C17.169 14.2624 17.1685 14.2851 17.1738 14.3081C17.2022 14.4281 17.2324 14.5499 17.2638 14.6729C17.2814 14.7425 17.2993 14.8122 17.3172 14.8823C17.3298 14.9315 17.3425 14.9809 17.3551 15.0305C17.3679 15.0808 17.3747 15.1312 17.3815 15.1816C17.3879 15.2286 17.3943 15.2755 17.4054 15.3224C17.4135 15.3557 17.4265 15.3888 17.4393 15.4217C17.4531 15.4571 17.4668 15.4923 17.4744 15.5273C17.4927 15.6134 17.5095 15.6983 17.5248 15.7826C17.5311 15.818 17.5312 15.8532 17.5313 15.8882C17.5313 15.9204 17.5314 15.9524 17.5364 15.9842C17.5437 16.0315 17.5552 16.0785 17.5667 16.1251C17.5801 16.1794 17.5933 16.2333 17.5995 16.2866C17.6099 16.3763 17.6185 16.4642 17.6255 16.5509C17.6292 16.5959 17.6194 16.6952 17.6057 16.8086L17.5913 16.8938C17.5982 16.9162 17.5943 16.9414 17.5903 16.9671C17.5871 16.9878 17.5838 17.0089 17.5861 17.0291C17.5808 17.0302 17.5786 17.0528 17.5764 17.0749C17.574 17.0996 17.5716 17.1237 17.5651 17.1176C17.5706 17.1725 17.5629 17.19 17.5565 17.2046C17.5494 17.2208 17.5438 17.2334 17.5596 17.2898C17.5373 17.3243 17.529 17.4059 17.533 17.4356C17.5245 17.4483 17.5215 17.4603 17.5187 17.4718C17.516 17.4825 17.5134 17.4929 17.5065 17.5031C17.5154 17.5211 17.506 17.5394 17.4965 17.5578C17.4871 17.5759 17.4777 17.5942 17.4854 17.6126C17.4856 17.6136 17.4858 17.6149 17.486 17.6163C17.4886 17.6309 17.4945 17.6636 17.475 17.6852C17.4766 17.699 17.4619 17.7842 17.443 17.7842C17.4415 17.7927 17.4323 17.8144 17.4233 17.8354C17.4151 17.8546 17.4072 17.8732 17.4057 17.8805C17.4096 17.8827 17.3941 17.9277 17.3834 17.9587C17.3782 17.9739 17.3741 17.9857 17.374 17.9876C17.3685 18.0543 17.3542 18.0656 17.3333 18.082C17.3174 18.0945 17.2976 18.1101 17.2751 18.1559C17.2919 18.1676 17.302 18.1862 17.2944 18.2114C17.2779 18.2627 17.2741 18.2899 17.2711 18.3118C17.2667 18.3438 17.2638 18.3645 17.2248 18.4334C17.2254 18.4335 17.2261 18.4337 17.2268 18.4339C17.228 18.4342 17.2293 18.4346 17.2309 18.4346C17.2284 18.4412 17.2232 18.4427 17.2184 18.4442C17.215 18.4511 17.212 18.4571 17.2086 18.4628C17.2062 18.4667 17.2025 18.4695 17.1989 18.4722C17.1975 18.4733 17.1961 18.4743 17.1949 18.4754C17.1969 18.4792 17.1959 18.4806 17.1946 18.4825C17.1933 18.4844 17.1917 18.4867 17.1921 18.4922C17.1933 18.4979 17.1974 18.4968 17.2016 18.4956C17.2057 18.4945 17.21 18.4933 17.212 18.4985C17.2079 18.5058 17.2091 18.5186 17.2103 18.5304C17.2121 18.5495 17.2137 18.566 17.1918 18.5519C17.1819 18.5621 17.1762 18.5772 17.1707 18.5921C17.1658 18.6052 17.1609 18.6181 17.1534 18.6272C17.1508 18.6292 17.1522 18.6351 17.1535 18.6406C17.155 18.6468 17.1563 18.6524 17.1518 18.6515C17.1439 18.6548 17.1419 18.66 17.1398 18.6654C17.1385 18.6689 17.1371 18.6724 17.1341 18.6755C17.1253 18.67 17.1224 18.6879 17.1201 18.7022C17.1183 18.7136 17.1169 18.7226 17.1131 18.7154C17.0946 18.7305 17.0932 18.7411 17.0919 18.7505C17.0905 18.7607 17.0893 18.7695 17.067 18.7814C17.0662 18.7858 17.0578 18.794 17.0495 18.8022C17.0419 18.8097 17.0342 18.8172 17.0322 18.8219L17.0078 18.8489C17.0035 18.8605 17.0018 18.874 17.0001 18.8872C16.9958 18.921 16.9916 18.9538 16.9449 18.9536C16.9553 18.9806 16.9299 19.0547 16.8952 19.0496C16.901 19.0855 16.884 19.0983 16.8703 19.1085C16.859 19.117 16.8499 19.1237 16.8585 19.1408C16.8427 19.1588 16.8401 19.173 16.8375 19.1873C16.8347 19.2023 16.8319 19.2175 16.814 19.2374C16.8128 19.2449 16.7734 19.2767 16.7786 19.2713C16.7675 19.293 16.7651 19.2946 16.7595 19.298C16.7557 19.3003 16.7505 19.3036 16.7401 19.3148C16.7294 19.3169 16.7291 19.3199 16.7287 19.32C16.7285 19.32 16.7282 19.3194 16.727 19.3178C16.7087 19.3646 16.6888 19.3916 16.6602 19.4279C16.6568 19.4303 16.6548 19.4291 16.652 19.4273C16.6492 19.4256 16.6456 19.4234 16.6391 19.4237C16.6346 19.4342 16.6358 19.4474 16.637 19.4601C16.6387 19.4792 16.6404 19.4969 16.622 19.502C16.6078 19.5467 16.5806 19.5735 16.5535 19.6003C16.5312 19.6223 16.5089 19.6443 16.4938 19.6763C16.4887 19.6735 16.4859 19.6748 16.4832 19.6761C16.481 19.6771 16.4789 19.6781 16.4755 19.6766C16.4728 19.6819 16.4738 19.6848 16.4749 19.6877C16.4758 19.6904 16.4768 19.6931 16.4749 19.6979C16.46 19.695 16.4548 19.7055 16.4495 19.716C16.4443 19.7264 16.4391 19.7369 16.4245 19.7348C16.4223 19.7428 16.427 19.746 16.4316 19.7491C16.4353 19.7516 16.4389 19.754 16.4389 19.7588C16.4369 19.7684 16.4326 19.7657 16.4272 19.7624C16.4234 19.76 16.4189 19.7572 16.4145 19.7585C16.4077 19.7627 16.4093 19.7658 16.4114 19.7697C16.4132 19.7731 16.4153 19.777 16.413 19.7828C16.3955 19.7799 16.381 19.7979 16.3676 19.8146C16.3632 19.8201 16.3589 19.8255 16.3547 19.8299C16.3567 19.8323 16.3608 19.832 16.3649 19.8317C16.3727 19.8311 16.3808 19.8305 16.3766 19.8473C16.3707 19.8536 16.3683 19.8525 16.3631 19.8503C16.3609 19.8494 16.3581 19.8482 16.3544 19.8473C16.3269 19.8695 16.3019 19.8926 16.2915 19.9178C16.2878 19.9178 16.2861 19.9165 16.2843 19.9151C16.2826 19.9139 16.281 19.9127 16.2777 19.9124C16.2835 19.9223 16.2753 19.937 16.2643 19.9472C16.2625 19.9532 16.2607 19.9583 16.2558 19.9643C16.2306 19.991 16.2036 20.0148 16.1764 20.039C16.1693 20.0452 16.1622 20.0515 16.1551 20.0579C16.1517 20.084 16.1291 20.1101 16.0943 20.117C16.0864 20.1251 16.0785 20.1335 16.0717 20.1416C16.062 20.1536 16.0427 20.162 16.0196 20.1668L16.0156 20.1902C15.9878 20.1965 15.9768 20.1995 15.9539 20.2085C15.9534 20.2344 15.9102 20.2569 15.8731 20.2762C15.8466 20.2899 15.8233 20.3021 15.8212 20.3126C15.8163 20.3128 15.8119 20.3129 15.808 20.313C15.7841 20.3135 15.7747 20.3137 15.7665 20.3261C15.7858 20.3435 15.7849 20.3684 15.7595 20.3864C15.7061 20.4215 15.6484 20.4482 15.5908 20.4743C15.5875 20.4759 15.5837 20.4768 15.5802 20.4777C15.5785 20.4782 15.5768 20.4786 15.5752 20.4791C15.5724 20.4848 15.5671 20.4889 15.5616 20.4931C15.5566 20.4969 15.5516 20.5007 15.5483 20.5058C15.5482 20.5099 15.55 20.5128 15.5518 20.5156C15.5539 20.5191 15.556 20.5226 15.555 20.5283C15.5253 20.5249 15.4813 20.5513 15.4593 20.5645C15.4579 20.5654 15.4565 20.5662 15.4552 20.567C15.4626 20.5544 15.4596 20.5496 15.456 20.5441C15.4534 20.54 15.4505 20.5355 15.4513 20.5271C15.4419 20.5319 15.4316 20.5355 15.4213 20.5391C15.3972 20.5476 15.3731 20.5562 15.3594 20.5793L15.331 20.5739C15.3329 20.5598 15.3284 20.5501 15.3239 20.5405C15.3216 20.5356 15.3193 20.5307 15.3179 20.5253C15.3267 20.5092 15.3376 20.4961 15.3485 20.483C15.3629 20.4657 15.3773 20.4483 15.3869 20.4239C15.3895 20.423 15.3922 20.4225 15.395 20.4219C15.4002 20.4208 15.4054 20.4197 15.4092 20.417C15.4097 20.4111 15.4311 20.3986 15.4605 20.3815C15.5226 20.3453 15.6201 20.2885 15.6298 20.2301C15.5211 20.304 15.3685 20.3692 15.276 20.4087C15.2327 20.4272 15.2026 20.44 15.1964 20.4455C15.1837 20.4338 15.2213 20.4069 15.2575 20.381C15.29 20.3578 15.3213 20.3354 15.3142 20.3255C15.3281 20.2947 15.3548 20.281 15.3817 20.2672C15.3887 20.2637 15.3957 20.2601 15.4024 20.2562C15.4051 20.2472 15.4517 20.2066 15.498 20.1663C15.5441 20.1262 15.59 20.0864 15.592 20.078C15.5732 20.0733 15.5154 20.1196 15.4622 20.1621C15.4194 20.1964 15.3795 20.2283 15.3655 20.2292C15.3666 20.2239 15.3594 20.2341 15.3525 20.2439C15.346 20.2531 15.3398 20.2619 15.3408 20.2574C15.3298 20.232 15.328 20.2368 15.3243 20.2466C15.3205 20.2569 15.3146 20.2727 15.2938 20.2646C15.2804 20.2781 15.2553 20.2991 15.2346 20.3021C15.2412 20.308 15.2309 20.3098 15.2199 20.3116C15.208 20.3136 15.1954 20.3158 15.2025 20.3234C15.1897 20.3325 15.1556 20.3374 15.1192 20.3427C15.0705 20.3498 15.0176 20.3574 15.0057 20.3765C14.9977 20.3768 14.9878 20.3763 14.9773 20.3756C14.9525 20.3742 14.924 20.3725 14.9065 20.3822C14.9072 20.3743 14.9792 20.345 15.0412 20.3197C15.0875 20.3009 15.1282 20.2843 15.1299 20.2805C15.1343 20.2738 15.1303 20.2732 15.1264 20.2726C15.1233 20.2721 15.1203 20.2716 15.1217 20.2682C15.1235 20.2529 15.1485 20.2481 15.1592 20.2601C15.1673 20.2579 15.1719 20.251 15.1764 20.2443C15.1792 20.2401 15.1819 20.236 15.1855 20.2331C15.188 20.2263 15.1845 20.2235 15.181 20.2207C15.1778 20.2181 15.1745 20.2155 15.1757 20.21C15.1767 20.2011 15.1794 20.2029 15.183 20.2053C15.185 20.2067 15.1874 20.2082 15.1897 20.2079C15.4032 20.1235 15.3443 20.1287 15.3244 20.1305C15.3197 20.1309 15.3172 20.1311 15.321 20.1299C15.1967 20.1515 15.0628 20.1722 15.0182 20.1368C15.0275 20.1296 15.0399 20.1268 15.0524 20.1241C15.0719 20.1198 15.0913 20.1155 15.0979 20.0939C15.1406 20.0963 15.1897 20.0846 15.1909 20.042C15.2219 20.0266 15.2315 20.0122 15.2418 19.9967C15.2508 19.9831 15.2603 19.9686 15.2853 19.952C15.3268 19.9492 15.3356 19.9404 15.3516 19.9244C15.3578 19.9182 15.3652 19.9109 15.3759 19.9025C15.3764 19.8941 15.3977 19.8849 15.4141 19.8779C15.4274 19.8722 15.4375 19.8678 15.4302 19.8665C15.4355 19.8619 15.4418 19.8587 15.4481 19.8555C15.4616 19.8487 15.4753 19.8417 15.4791 19.8209C15.5065 19.8065 15.5648 19.769 15.5938 19.7492C15.5933 19.7441 15.6066 19.7305 15.6198 19.7171C15.6329 19.7036 15.646 19.6902 15.6451 19.6856C15.6484 19.6738 15.6582 19.6711 15.6682 19.6683C15.673 19.667 15.6778 19.6657 15.682 19.6634C15.6858 19.6559 15.683 19.6514 15.6809 19.6479C15.6788 19.6446 15.6773 19.6421 15.682 19.6388C15.7048 19.6413 15.7167 19.6215 15.7247 19.608C15.7264 19.6052 15.7279 19.6027 15.7293 19.6007C15.7269 19.5926 15.7223 19.5872 15.7098 19.5866C15.7135 19.5842 15.7168 19.5799 15.7201 19.5755C15.7273 19.5661 15.7347 19.5564 15.7467 19.5644C15.757 19.5287 15.8087 19.4834 15.8412 19.4549C15.8445 19.452 15.8476 19.4493 15.8505 19.4468C15.8865 19.3706 15.891 19.3655 15.9323 19.3188C15.9369 19.3136 15.9419 19.3079 15.9475 19.3016C15.9503 19.2965 15.9491 19.2942 15.948 19.2918C15.947 19.2897 15.9459 19.2876 15.9478 19.2836L15.9492 19.2824C15.9594 19.2737 15.9781 19.2577 15.9726 19.2425C15.9799 19.2379 15.9834 19.2327 15.9866 19.2279C15.9909 19.2215 15.9949 19.2156 16.007 19.2122C16.0077 19.2104 16.0086 19.2086 16.0092 19.2077C16.0096 19.2069 16.0094 19.206 16.0095 19.2052C16.0095 19.2048 16.0096 19.2045 16.0098 19.2041C16.0357 19.139 16.0647 19.0745 16.094 19.0118C16.0981 18.9995 16.1023 18.9872 16.1064 18.975C16.1281 18.9105 16.1498 18.8461 16.1657 18.7811C16.1685 18.7673 16.1831 18.7583 16.2011 18.7517V18.7499C16.2021 18.7454 16.203 18.7412 16.2036 18.737C16.1911 18.7322 16.1825 18.7256 16.1847 18.7169C16.1932 18.6791 16.2082 18.6461 16.2262 18.6146C16.2372 18.5585 16.2488 18.5021 16.2628 18.4463C16.2646 18.4382 16.2707 18.4307 16.2777 18.4241C16.2759 18.4175 16.274 18.411 16.272 18.4045C16.2634 18.3763 16.2549 18.3481 16.2579 18.3152C16.2613 18.2814 16.2618 18.2475 16.2623 18.2136C16.2629 18.1694 16.2635 18.1252 16.2707 18.0815C16.2716 18.0773 16.2753 18.0731 16.279 18.0689C16.279 18.066 16.2787 18.0634 16.2785 18.0608C16.2783 18.0582 16.2781 18.0555 16.2781 18.0527C16.2582 18.0233 16.2469 17.9954 16.2466 17.9654C16.2405 17.9561 16.2381 17.9432 16.2436 17.9291C16.2475 17.9175 16.2523 17.9083 16.258 17.8974C16.2543 17.8944 16.2503 17.8904 16.2484 17.885C16.2375 17.8565 16.2329 17.8298 16.232 17.8025C16.2073 17.7438 16.1955 17.6845 16.1836 17.6245C16.1729 17.5709 16.1621 17.5167 16.1419 17.462C16.1081 17.3987 16.0629 17.3141 16.0763 17.2376C16.0351 17.1653 16.0161 17.0667 15.9983 16.9742C15.9915 16.9392 15.985 16.9051 15.9774 16.8737C15.978 16.8686 15.9804 16.8663 15.9829 16.8639C15.9847 16.8621 15.9865 16.8604 15.9878 16.8575C15.9861 16.8534 15.9851 16.8487 15.9842 16.8441C15.9829 16.838 15.9816 16.832 15.9787 16.8272L15.9213 16.739C15.9122 16.6851 15.8961 16.6305 15.8799 16.5755C15.866 16.5284 15.852 16.4809 15.8422 16.4333C15.8339 16.3917 15.8301 16.3499 15.8262 16.3079C15.822 16.2613 15.8177 16.2144 15.8071 16.1672C15.798 16.1269 15.7829 16.0865 15.7676 16.0458C15.7532 16.0075 15.7388 15.9689 15.7293 15.9302C15.7161 15.8752 15.7076 15.8198 15.6991 15.7641C15.6898 15.7031 15.6804 15.6417 15.6646 15.5801C15.6537 15.5372 15.6371 15.4942 15.6204 15.451C15.6038 15.4081 15.5872 15.365 15.5761 15.3218C15.5658 15.2818 15.5609 15.2416 15.556 15.2013C15.551 15.1607 15.5461 15.1199 15.5355 15.0791C15.5239 15.034 15.5067 14.9887 15.4895 14.9434C15.4721 14.8973 15.4546 14.8511 15.4427 14.8049C15.4355 14.7769 15.434 14.7491 15.4325 14.7212C15.431 14.6936 15.4296 14.6661 15.4226 14.6384C15.4092 14.5853 15.3907 14.5319 15.3722 14.4784C15.3524 14.4209 15.3324 14.3633 15.3185 14.3054C15.2834 14.159 15.2495 14.0117 15.2178 13.8632C15.2108 13.7903 15.2047 13.7204 15.2001 13.6529C15.1949 13.5785 15.1909 13.5068 15.1885 13.4372C15.1852 13.3466 15.1842 13.2596 15.1861 13.1747C15.1894 13.0136 15.2016 12.8585 15.2239 12.6971C15.2164 12.6732 15.2228 12.6464 15.2294 12.6184C15.2328 12.6042 15.2362 12.5896 15.2379 12.575C15.2505 12.4709 15.2706 12.3617 15.3097 12.2846C15.3084 12.2465 15.3228 12.2225 15.3414 12.2039C15.3449 12.1713 15.3631 12.1374 15.3803 12.1057C15.3853 12.0962 15.3903 12.0869 15.3948 12.0779V12.0569C15.4129 12.0228 15.4281 11.9869 15.4431 11.9515C15.4713 11.8848 15.4989 11.8195 15.5444 11.7704C15.5454 11.7504 15.5586 11.7372 15.5719 11.7239C15.5773 11.7185 15.5828 11.713 15.5874 11.7071C15.6135 11.6722 15.6378 11.636 15.662 11.5998C15.7009 11.5417 15.7398 11.4837 15.7864 11.4311C15.8035 11.418 15.8178 11.4014 15.8321 11.3848C15.8358 11.3804 15.8396 11.376 15.8435 11.3717C15.8507 11.374 15.852 11.3712 15.8533 11.3684C15.8545 11.3659 15.8556 11.3634 15.8612 11.3648C15.8964 11.3317 15.9412 11.2831 15.9846 11.2362C16.0332 11.1835 16.0799 11.1329 16.109 11.1086C16.1204 11.0993 16.1422 11.075 16.1645 11.0502C16.1882 11.0238 16.2124 10.997 16.2246 10.9874C16.297 10.9536 16.3432 10.9048 16.3938 10.8514C16.4138 10.8302 16.4345 10.8083 16.4578 10.7864C16.4639 10.8272 16.4968 10.7997 16.5286 10.7731C16.5433 10.7608 16.5578 10.7487 16.5692 10.7438C16.6626 10.7042 16.8197 10.572 16.9091 10.4968C16.9396 10.4712 16.9622 10.4521 16.9718 10.4456C16.9721 10.4456 17.1042 10.3583 17.1677 10.2731C17.2281 10.193 17.2464 10.1585 17.2464 10.1585C17.2461 10.1579 17.2483 10.1538 17.2523 10.1466C17.2682 10.1178 17.3118 10.039 17.3264 9.93169C17.33 9.90508 17.338 9.87467 17.3464 9.84279C17.356 9.80639 17.3661 9.76807 17.3707 9.73129C17.3756 9.6904 17.3756 9.64649 17.3757 9.60173C17.3757 9.56077 17.3757 9.5191 17.3795 9.47839C17.3925 9.33625 17.3852 9.24011 17.3772 9.13626C17.3749 9.10618 17.3726 9.07546 17.3707 9.04279C17.3618 8.95189 17.3453 8.88559 17.2995 8.73769C17.2813 8.6784 17.2649 8.65268 17.2451 8.62183C17.2257 8.59164 17.2032 8.55655 17.1729 8.48029C17.1622 8.45989 17.1527 8.43949 17.146 8.41849C17.1195 8.38174 17.094 8.34378 17.0686 8.30581C17.0101 8.21857 16.9517 8.13132 16.8796 8.05879C16.8448 8.03449 16.8073 8.01589 16.7667 8.00329C16.7413 7.99549 16.738 7.98169 16.7453 7.96909C16.741 7.96579 16.7362 7.96309 16.7322 7.96069C16.7087 7.95049 16.6858 7.93699 16.6678 7.92139L16.6562 7.91599C16.6029 7.90217 16.5603 7.8803 16.5164 7.85779C16.486 7.84218 16.455 7.82625 16.4194 7.81249C16.3994 7.81729 16.3823 7.80987 16.365 7.80238C16.3477 7.79487 16.3303 7.78729 16.3095 7.79179C16.3087 7.79056 16.3074 7.78975 16.3062 7.78896C16.3038 7.78742 16.3015 7.78594 16.3025 7.78159C16.2636 7.77579 16.2246 7.76932 16.1854 7.76281C16.0582 7.7417 15.9292 7.7203 15.7974 7.72099C15.7043 7.72189 15.6417 7.72429 15.516 7.74019C15.4732 7.7456 15.4364 7.75371 15.3968 7.76245C15.3376 7.77552 15.2721 7.79 15.1702 7.79899C15.0608 7.80821 14.9465 7.8281 14.8311 7.84819C14.7437 7.8634 14.6556 7.87873 14.5687 7.88959C14.5412 7.89379 14.5082 7.90339 14.4872 7.91059C14.4605 7.92027 14.4313 7.92371 14.4027 7.92709C14.3852 7.92914 14.368 7.93118 14.3517 7.93459C14.334 7.93849 14.3169 7.94531 14.2999 7.95214C14.2829 7.95896 14.2659 7.96579 14.2482 7.96969C14.1727 7.98932 14.0967 8.00769 14.0208 8.02603C14.0063 8.02955 13.9917 8.03306 13.9772 8.03659C13.9535 8.04229 13.9286 8.04596 13.9034 8.04966C13.8757 8.05375 13.8477 8.05786 13.8209 8.06479C13.816 8.06608 13.8107 8.06745 13.8053 8.06888C13.7501 8.08339 13.6728 8.10368 13.607 8.10259C13.5008 8.13949 13.3335 8.15569 13.2087 8.16589C13.2052 8.16617 13.2012 8.16511 13.1972 8.16404C13.1927 8.16286 13.1882 8.16166 13.1843 8.16229C13.1756 8.16382 13.1679 8.16604 13.1601 8.16829C13.1465 8.1722 13.1326 8.17623 13.1123 8.17699C13.0158 8.18119 12.9267 8.18599 12.8635 8.21539C12.8469 8.20675 12.8315 8.21177 12.8156 8.21696C12.8017 8.22151 12.7873 8.22619 12.7714 8.22199C12.7777 8.21685 12.7886 8.21412 12.8006 8.21113C12.811 8.20853 12.8221 8.20573 12.8318 8.20099C12.8206 8.19174 12.8064 8.19391 12.791 8.19626C12.7744 8.19879 12.7564 8.20153 12.7393 8.19049C12.6749 8.19979 12.605 8.20879 12.5358 8.20819C12.5219 8.20819 12.5084 8.20559 12.4949 8.20301C12.4825 8.20063 12.4702 8.19828 12.4579 8.19799C12.4459 8.19778 12.433 8.1998 12.4202 8.20181C12.396 8.20561 12.372 8.20937 12.3545 8.19799C12.3337 8.20399 12.3059 8.20699 12.2867 8.19799C12.2013 8.20879 12.0728 8.20339 12.0056 8.18329C11.9435 8.19083 11.8816 8.18142 11.8196 8.17201C11.7855 8.16682 11.7514 8.16163 11.7172 8.15929C11.7157 8.15723 11.7134 8.15595 11.7111 8.15466C11.7074 8.15258 11.7036 8.15045 11.7029 8.14489C11.6782 8.15449 11.6376 8.14909 11.6104 8.13469C11.5262 8.12689 11.4389 8.11369 11.3543 8.08579C11.1584 8.05762 10.9754 7.99741 10.7991 7.93939C10.7801 7.93315 10.7613 7.92694 10.7424 7.92079C10.7409 7.91749 10.7388 7.91479 10.7368 7.91209C10.7347 7.90939 10.7327 7.90669 10.7311 7.90339C10.7076 7.90699 10.6686 7.90399 10.6634 7.87849C10.661 7.87903 10.6589 7.87979 10.6567 7.88054C10.6518 7.8823 10.6469 7.88404 10.639 7.88299C10.4211 7.79119 10.2093 7.69369 10.0194 7.57519C10.0207 7.5684 10.0191 7.56485 10.0176 7.56144C10.0162 7.55837 10.0149 7.55541 10.0158 7.55029C10.01 7.54871 10.0089 7.55194 10.0079 7.5551C10.007 7.55795 10.0061 7.56074 10.0017 7.55989C9.97416 7.54083 9.94602 7.52248 9.91794 7.50416C9.82973 7.44661 9.742 7.38938 9.67394 7.31179H9.6599C9.43803 7.11529 9.23812 6.89779 9.06538 6.65449C8.89356 6.43099 8.73791 6.19189 8.5844 5.95099C8.51532 5.85304 8.45108 5.7505 8.38681 5.6479C8.3304 5.55786 8.27397 5.46777 8.2142 5.38069V5.36629C8.03139 5.10094 7.87426 4.81035 7.71704 4.51959C7.71073 4.50792 7.70442 4.49625 7.69811 4.48459C7.67537 4.44728 7.65243 4.41008 7.62948 4.37287C7.55575 4.25329 7.48187 4.13348 7.41367 4.00879C7.36636 3.94579 7.3273 3.87409 7.28854 3.80239C7.13503 3.57889 6.97663 3.36019 6.81488 3.14419C6.7909 3.11207 6.77222 3.0801 6.75356 3.04817C6.73422 3.01507 6.71491 2.98202 6.68975 2.94889C6.67212 2.92563 6.64876 2.90244 6.62544 2.87929C6.60275 2.85677 6.5801 2.83428 6.56279 2.81179C6.54536 2.789 6.53335 2.7662 6.52134 2.74341C6.50916 2.7203 6.49699 2.6972 6.47916 2.67409C6.46338 2.65355 6.44187 2.63302 6.4204 2.61252Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.97712 17.8815C9.98567 17.9418 10.011 17.9943 9.99177 18.0699C10.0153 18.0882 9.99788 18.12 10.0275 18.1368C10.0232 18.1464 10.0281 18.1521 10.0168 18.1563C10.0434 18.183 10.0528 18.2148 10.0452 18.2532C10.116 18.3273 10.1001 18.4299 10.1599 18.5073C10.1578 18.5115 10.1566 18.5148 10.1541 18.519C10.195 18.5607 10.166 18.6252 10.2292 18.6597C10.2429 18.714 10.2823 18.7452 10.3101 18.7992C10.2942 18.825 10.3208 18.8367 10.326 18.8559C10.3202 18.8616 10.3119 18.8607 10.3076 18.8709C10.3073 18.8853 10.322 18.8955 10.3211 18.9117C10.2869 18.9201 10.2841 18.8679 10.2622 18.8526C10.2564 18.8448 10.242 18.8517 10.2393 18.8451C10.2405 18.8718 10.2991 18.9057 10.2887 18.9444C10.2594 18.9288 10.2426 18.9087 10.2396 18.8859C10.2249 18.8763 10.2158 18.8835 10.2008 18.8754C10.1926 18.8454 10.2149 18.8148 10.2155 18.7902C10.1782 18.7845 10.1911 18.7386 10.1636 18.7197C10.148 18.7218 10.1685 18.7404 10.1544 18.7539C10.1166 18.7629 10.12 18.7146 10.1181 18.6918C10.1224 18.6753 10.1334 18.6825 10.1398 18.6783C10.1453 18.6342 10.0839 18.6117 10.094 18.567C10.0717 18.5589 10.0812 18.5814 10.0662 18.5919C10.0504 18.5847 10.058 18.5547 10.0766 18.5628C10.0769 18.5475 10.0617 18.5313 10.0788 18.5196C10.047 18.4746 10.0485 18.42 10.0342 18.3696C10.0205 18.3585 10.0159 18.3744 10.0025 18.3636C10.0049 18.3456 10.018 18.3591 10.0263 18.3561C10.0418 18.3198 10.0028 18.3009 10.0253 18.2628C10.0269 18.2511 10.0089 18.2652 10 18.2553C9.9933 18.2313 9.99666 18.2148 10.0083 18.1908C9.9814 18.1617 9.99574 18.12 9.97773 18.0876C9.97499 18.0867 9.97224 18.0894 9.96797 18.087C9.96156 18.0837 9.96553 18.102 9.95637 18.1101C9.96949 18.1446 9.99299 18.1785 9.9524 18.2214C9.92555 18.1626 9.96736 18.1023 9.93012 18.048C9.9405 18.0297 9.95881 18.0303 9.97468 18.0279C9.9991 17.9688 9.92066 17.943 9.95179 17.8839C9.96034 17.8836 9.97041 17.8857 9.97712 17.8815ZM10.6525 12.7716C10.5954 12.7482 10.5365 12.7425 10.4804 12.6879C10.4523 12.6981 10.4334 12.6672 10.4038 12.6837C10.3977 12.6753 10.3897 12.6762 10.3922 12.6648C10.3553 12.6732 10.3226 12.6648 10.2927 12.639C10.1917 12.6609 10.1105 12.5952 10.0122 12.6057C10.0095 12.6021 10.007 12.5994 10.0049 12.5952C9.94752 12.6081 9.90601 12.5511 9.84375 12.5865C9.78912 12.5703 9.74182 12.5877 9.67986 12.5835C9.66582 12.5571 9.64202 12.5736 9.62249 12.5679C9.62066 12.5601 9.62554 12.5535 9.61882 12.5448C9.60631 12.5373 9.58983 12.5442 9.5761 12.5355C9.58617 12.5019 9.63347 12.5262 9.65789 12.5154C9.66766 12.5148 9.66888 12.4992 9.6762 12.5004C9.6524 12.4878 9.59258 12.5196 9.56419 12.4914C9.59258 12.4746 9.61882 12.4704 9.64049 12.4797C9.65606 12.4722 9.65453 12.4608 9.66949 12.4521C9.70001 12.4608 9.71496 12.495 9.73632 12.5085C9.76074 12.4797 9.7937 12.5136 9.82453 12.5004C9.83063 12.4863 9.80377 12.4938 9.7995 12.4752C9.81079 12.4383 9.85108 12.4662 9.87244 12.4761C9.88465 12.4884 9.87244 12.4938 9.87305 12.5013C9.90845 12.5289 9.95973 12.4884 9.9936 12.5196C10.0122 12.5052 9.9875 12.5013 9.98597 12.4836C10.0006 12.474 10.0226 12.4956 10.0064 12.5073C10.0195 12.5154 10.0415 12.5109 10.0427 12.5313C10.0986 12.5274 10.1453 12.5565 10.1966 12.5703C10.2136 12.564 10.2017 12.5523 10.2182 12.5463C10.2326 12.5577 10.2143 12.5619 10.2124 12.5703C10.2365 12.6021 10.2726 12.5787 10.2948 12.6174C10.3037 12.6246 10.3009 12.6021 10.3141 12.6C10.3388 12.6063 10.3513 12.618 10.3662 12.6396C10.4056 12.6318 10.4346 12.6654 10.4721 12.6666C10.4743 12.6648 10.4734 12.6615 10.4779 12.6591C10.4841 12.6552 10.4657 12.6492 10.4633 12.6375C10.4264 12.6303 10.3846 12.633 10.3681 12.5769C10.4334 12.5841 10.4645 12.6504 10.5311 12.6468C10.5417 12.6648 10.5317 12.6801 10.5259 12.6948C10.5652 12.7458 10.6275 12.6924 10.6635 12.7494C10.6592 12.7563 10.6525 12.7635 10.6525 12.7716ZM9.32584 13.0926C9.35453 13.0767 9.3591 13.0818 9.3881 13.0596C9.46134 13.0644 9.53795 13.0587 9.60631 13.0842C9.51079 13.0986 9.41587 13.1031 9.32584 13.0926ZM10.1328 17.9394C10.1267 18.0009 10.1459 18.0501 10.1645 18.1179C10.1541 18.1428 10.166 18.1545 10.1737 18.183C10.1294 18.1503 10.1334 18.0801 10.1004 18.0291C10.1105 18.0156 10.1102 18.0402 10.1187 18.0339C10.1087 18.0072 10.0641 17.9505 10.0443 17.9202C10.0556 17.871 10.0284 17.8131 10.0421 17.7645C10.0235 17.7444 10.0397 17.7318 10.0208 17.7129C10.0232 17.7003 10.0342 17.6916 10.0437 17.6829C10.0717 17.7684 10.0827 17.8662 10.1328 17.9394ZM9.08107 12.7146C9.0182 12.7101 8.96876 12.7299 8.90009 12.7494C8.87476 12.7395 8.86316 12.7515 8.83417 12.7596C8.86682 12.7152 8.93793 12.7179 8.98921 12.6849C9.00355 12.6942 8.97822 12.6942 8.98493 12.7029C9.01179 12.6924 9.06856 12.6474 9.09908 12.6273C9.14944 12.6378 9.20773 12.6102 9.25747 12.6228C9.27762 12.6039 9.29074 12.6198 9.30966 12.6003C9.32218 12.6027 9.33164 12.6135 9.34049 12.6228C9.25381 12.6513 9.15462 12.6642 9.08107 12.7146ZM7.05824 11.574C7.03474 11.5347 7.03535 11.5029 7.02406 11.4726C7.04176 11.4726 7.05702 11.4795 7.07564 11.4714C7.07777 11.4849 7.06862 11.4969 7.06404 11.5095C7.07228 11.5257 7.09425 11.5434 7.06953 11.5515C7.07319 11.5614 7.08021 11.5551 7.0854 11.5521C7.08693 11.5593 7.08601 11.5662 7.08754 11.5716C7.07625 11.5785 7.06862 11.5728 7.05824 11.574ZM6.8562 10.4214C6.84949 10.4034 6.84582 10.3875 6.8446 10.371C6.85437 10.3746 6.87451 10.3692 6.87726 10.3557C6.87451 10.3551 6.87055 10.3527 6.86658 10.3476C6.85437 10.3515 6.86047 10.3587 6.85071 10.3626C6.83331 10.3371 6.8208 10.2879 6.83667 10.2591C6.83301 10.2855 6.85742 10.2888 6.87726 10.2906C6.89679 10.2843 6.89191 10.2726 6.90229 10.2648C6.91266 10.2708 6.90198 10.2918 6.91785 10.2801C6.90717 10.3065 6.88733 10.3305 6.89008 10.3593C6.89252 10.362 6.89588 10.3608 6.89832 10.3641C6.90839 10.3734 6.90839 10.3551 6.91724 10.3527C6.91785 10.368 6.93097 10.3854 6.93097 10.3998C6.90351 10.3878 6.86475 10.4034 6.8562 10.4214ZM6.7915 12.3867C6.75671 12.3324 6.73443 12.2241 6.6917 12.1875C6.70055 12.147 6.6679 12.0963 6.65691 12.0504C6.66973 12.0285 6.66423 12.0051 6.64043 11.9835C6.63158 11.9736 6.64409 11.9679 6.64623 11.9595C6.63097 11.9517 6.62242 11.9349 6.61388 11.9172C6.60869 11.9046 6.60991 11.8998 6.60106 11.8797C6.58702 11.85 6.58183 11.8053 6.58702 11.7918C6.55803 11.7492 6.5446 11.7003 6.5449 11.6529C6.5214 11.5998 6.50034 11.5488 6.50736 11.5029C6.46219 11.4552 6.48692 11.3871 6.45823 11.3424C6.46403 11.3109 6.44297 11.274 6.44114 11.2419C6.44388 11.2341 6.45273 11.2293 6.45457 11.2224C6.44968 11.2107 6.43259 11.1963 6.44388 11.1879C6.49271 11.1987 6.46067 11.268 6.49851 11.3079C6.47288 11.3448 6.50584 11.3748 6.51713 11.4108C6.52384 11.4354 6.51927 11.4486 6.53361 11.4867C6.55864 11.5515 6.55375 11.6367 6.59587 11.7C6.58427 11.7186 6.58763 11.7468 6.60594 11.7642C6.61815 11.8563 6.65355 11.9481 6.67095 12.0312C6.68132 12.0468 6.69597 12.0408 6.70666 12.0552C6.68621 12.0918 6.71886 12.1563 6.74206 12.1926C6.72802 12.2505 6.80279 12.3234 6.7915 12.3867ZM6.67308 9.6066C6.69262 9.5955 6.70055 9.6234 6.7152 9.6315C6.69994 9.6342 6.68163 9.651 6.66637 9.6528C6.67095 9.6624 6.68255 9.6552 6.69018 9.657C6.69689 9.669 6.70666 9.6813 6.70482 9.6894C6.68499 9.6948 6.68468 9.6981 6.66637 9.7029C6.64134 9.651 6.66088 9.6384 6.67308 9.6066ZM5.52281 9.8634C5.51762 9.8382 5.45597 9.6294 5.44986 9.609C5.44345 9.5913 5.48862 9.5652 5.49137 9.5514C5.46146 9.4974 5.43643 9.4404 5.44712 9.3783C5.44101 9.363 5.43064 9.357 5.41965 9.3501C5.43064 9.321 5.40988 9.2925 5.4166 9.2637C5.40347 9.2508 5.39737 9.2211 5.3815 9.2121C5.35464 8.9799 5.28872 8.8227 5.23226 8.5668C5.19991 8.5227 5.18587 8.4429 5.17885 8.3781C5.14192 8.2719 5.07234 8.1276 5.05555 8.025C5.02259 8.0046 5.01282 7.9602 5.00703 7.9302C5.00001 7.8867 4.96979 7.8642 4.9524 7.824C4.93622 7.788 4.94293 7.737 4.8999 7.7169C4.86542 7.6002 4.79217 7.5081 4.76012 7.4007C4.7061 7.3494 4.6939 7.2834 4.65392 7.2192C4.70977 7.2102 4.69237 7.2618 4.7235 7.3119C4.73449 7.3284 4.75616 7.3323 4.76043 7.3689C4.76867 7.3821 4.78118 7.3899 4.79247 7.3998C4.7879 7.4211 4.8059 7.4394 4.8178 7.4511C4.82086 7.4634 4.82818 7.4778 4.82421 7.4862C4.90997 7.5885 4.94965 7.7604 5.02351 7.8621C5.02747 7.8936 5.04701 7.9467 5.06929 7.965C5.07997 8.0751 5.14986 8.1609 5.16206 8.2659C5.23012 8.3793 5.25393 8.529 5.29788 8.6427C5.30123 8.7462 5.35525 8.8572 5.39218 8.9628C5.38303 9.0078 5.40561 9.0462 5.41812 9.0921C5.43094 9.1383 5.41934 9.1977 5.45871 9.2391C5.45475 9.2502 5.44498 9.2586 5.44712 9.2742C5.47733 9.2985 5.46055 9.3369 5.4694 9.3768C5.47855 9.4185 5.51609 9.462 5.49473 9.5037C5.53562 9.5457 5.51518 9.6246 5.54997 9.6783C5.57377 10.0164 5.5051 9.891 5.52281 9.8634ZM4.63713 7.1961C4.64171 7.17 4.61271 7.1628 4.59929 7.149C4.57853 7.1004 4.55534 7.0542 4.52421 7.0257C4.53581 6.9912 4.49369 6.9777 4.48697 6.951C4.48697 6.951 4.4943 6.9303 4.49521 6.9306C4.48667 6.9147 4.45676 6.8967 4.44486 6.873C4.42929 6.843 4.43997 6.8076 4.40762 6.7971C4.40396 6.7869 4.39877 6.7743 4.40305 6.7674C4.37558 6.7449 4.34323 6.6954 4.34903 6.6696C4.2419 6.5415 4.16621 6.3948 4.06367 6.2241C4.05634 6.2142 4.042 6.2151 4.03193 6.2112C4.02582 6.1455 3.97181 6.1485 3.96356 6.1089C3.99042 6.1011 4.01606 6.153 4.02735 6.1806C4.08534 6.2352 4.13966 6.294 4.18666 6.369C4.20101 6.3834 4.20803 6.3741 4.22298 6.3807C4.22878 6.3936 4.23153 6.4056 4.22359 6.4125C4.2239 6.4248 4.24282 6.4023 4.24282 6.4161C4.2477 6.4257 4.2416 6.4308 4.23 6.4329C4.24801 6.4629 4.29043 6.5058 4.31454 6.5583C4.31881 6.5667 4.33163 6.5679 4.33224 6.5703C4.33499 6.5745 4.32431 6.5811 4.32827 6.5853C4.34536 6.6084 4.39908 6.6279 4.37955 6.6606C4.40823 6.7065 4.42319 6.7809 4.4708 6.7932C4.47721 6.8136 4.48881 6.819 4.47416 6.8328C4.4827 6.8526 4.49918 6.8595 4.51322 6.8712C4.54893 6.9867 4.6118 7.0692 4.65971 7.1946C4.65056 7.1985 4.64812 7.1898 4.63713 7.1961ZM3.08735 5.2944C3.09223 5.2644 3.13496 5.2896 3.16029 5.2761C3.18166 5.2995 3.23018 5.2998 3.20851 5.331C3.1606 5.3178 3.13282 5.3115 3.08735 5.2944ZM4.47782 6.4176C4.4824 6.405 4.47141 6.3834 4.48911 6.3804C4.48758 6.3621 4.46775 6.3699 4.46286 6.3585C4.46592 6.2913 4.39511 6.258 4.38107 6.2049C4.35391 6.1998 4.324 6.162 4.34292 6.1416C4.32369 6.1224 4.30935 6.0978 4.30203 6.0645C4.31027 6.0645 4.31393 6.0711 4.32522 6.0693C4.36703 6.1293 4.418 6.2193 4.46347 6.2916C4.465 6.3036 4.48148 6.3153 4.4653 6.3228C4.47599 6.3315 4.49094 6.3348 4.50132 6.3474C4.50468 6.3846 4.52116 6.4041 4.54435 6.4146C4.62218 6.585 4.71953 6.6783 4.79369 6.8514C4.79827 6.8616 4.80804 6.8649 4.81567 6.8703C4.80712 6.9057 4.84955 6.9339 4.86114 6.9729C4.86328 6.9801 4.85779 6.987 4.86023 6.9945C4.87701 7.0332 4.93073 7.0626 4.9176 7.1127C4.91333 7.1133 4.90875 7.1136 4.90448 7.1151C4.87823 7.077 4.87121 7.0401 4.85138 6.9921C4.83947 6.9639 4.81964 6.9582 4.80041 6.9351C4.78759 6.9177 4.78637 6.8946 4.77599 6.8769C4.74334 6.816 4.69451 6.7551 4.67619 6.6957C4.5883 6.6129 4.56541 6.4818 4.47782 6.4176ZM5.30306 8.0187C5.29391 7.9716 5.26644 7.9422 5.26034 7.8939C5.28933 7.9215 5.2933 7.9731 5.31649 7.9962C5.3226 8.0058 5.3052 8.0127 5.3171 8.0142C5.31619 8.0187 5.30856 8.0175 5.30306 8.0187ZM5.21792 7.6167C5.22127 7.602 5.20296 7.6107 5.20052 7.6044C5.21761 7.5888 5.16664 7.5714 5.19442 7.5606C5.19167 7.551 5.1874 7.5441 5.17214 7.5477C5.17061 7.5291 5.15932 7.5216 5.1581 7.5051C5.17061 7.5015 5.17244 7.4868 5.18404 7.4826C5.21425 7.5162 5.2289 7.572 5.23134 7.6119C5.24508 7.6257 5.26614 7.6533 5.25057 7.6725C5.22951 7.6692 5.19167 7.6236 5.21792 7.6167ZM5.6812 8.8086C5.64366 8.7786 5.63084 8.7063 5.6339 8.6619C5.58934 8.625 5.60124 8.5302 5.55424 8.4945C5.56889 8.4495 5.51151 8.4009 5.52433 8.3562C5.51365 8.3424 5.48252 8.3289 5.49625 8.3052C5.47947 8.3073 5.47764 8.3088 5.46543 8.3013C5.47397 8.2698 5.45841 8.2602 5.45017 8.232C5.45017 8.217 5.46268 8.2146 5.47153 8.2095C5.46665 8.1984 5.43766 8.2119 5.43186 8.2026C5.44162 8.1669 5.43308 8.1624 5.42148 8.1333C5.43979 8.1213 5.45505 8.1339 5.45719 8.154C5.45322 8.1537 5.44803 8.154 5.44376 8.1543C5.44468 8.1738 5.47214 8.1672 5.47977 8.1792C5.49045 8.2317 5.53196 8.2716 5.52769 8.3256C5.54386 8.3373 5.55455 8.3571 5.56889 8.3724C5.57286 8.3865 5.55394 8.3787 5.55638 8.3901C5.57194 8.4255 5.61345 8.4873 5.58537 8.5245C5.59025 8.5356 5.59819 8.5176 5.60399 8.5284C5.61803 8.5938 5.66045 8.6529 5.65648 8.7261C5.66991 8.7441 5.68029 8.7651 5.69829 8.7777C5.69463 8.7897 5.68425 8.7948 5.6812 8.8086ZM3.80029 5.7315C3.7539 5.7039 3.70781 5.6544 3.67363 5.6142C3.71605 5.6424 3.78258 5.6823 3.80029 5.7315ZM4.58708 6.6765C4.58769 6.6888 4.57914 6.6978 4.56236 6.7014C4.54588 6.6738 4.53123 6.6684 4.5236 6.6366C4.54191 6.6534 4.56785 6.6591 4.58708 6.6765ZM4.61546 6.9168C4.56388 6.8832 4.53428 6.81 4.49888 6.7482C4.50315 6.747 4.50559 6.7443 4.50529 6.7413C4.57884 6.7599 4.59349 6.8709 4.61546 6.9168ZM4.13325 6.1257C4.12654 6.1293 4.12044 6.1335 4.11464 6.1377C4.15462 6.1812 4.17751 6.216 4.22451 6.2709C4.17201 6.2394 4.12959 6.1629 4.08045 6.1167C4.10182 6.1047 4.11647 6.1185 4.13325 6.1257ZM4.81964 7.2783C4.82269 7.2885 4.81811 7.2954 4.80804 7.3002C4.83795 7.3425 4.86603 7.3821 4.88129 7.4325C4.90662 7.4439 4.92859 7.4898 4.93469 7.5156C4.9411 7.5348 4.92493 7.512 4.9173 7.5174C4.90967 7.4778 4.87335 7.4634 4.8764 7.4298C4.85931 7.4136 4.84619 7.3914 4.82513 7.386C4.83062 7.3431 4.79858 7.3077 4.78362 7.266C4.79736 7.2657 4.80529 7.2777 4.81964 7.2783ZM1.7564 4.0815C1.75884 4.0428 1.72099 4.0398 1.70451 3.9999C1.72771 4.0146 1.77532 4.0542 1.77532 4.08C1.81713 4.0968 1.86413 4.14 1.90533 4.1943C1.84734 4.1892 1.81255 4.0896 1.7564 4.0815ZM1.78508 4.2177C1.77715 4.2162 1.7686 4.2222 1.76128 4.2213C1.75457 4.2066 1.74877 4.2012 1.74816 4.1835C1.73534 4.1805 1.72099 4.1781 1.71642 4.167C1.71458 4.1622 1.71977 4.1502 1.72099 4.149C1.70726 4.1352 1.68895 4.1409 1.67186 4.1223C1.67582 4.1193 1.67186 4.116 1.67125 4.1127C1.72405 4.1001 1.75029 4.1799 1.78875 4.1997C1.78783 4.2057 1.77532 4.2087 1.78508 4.2177ZM1.4628 3.6684C1.50888 3.7149 1.53025 3.7992 1.59251 3.8643C1.52964 3.8313 1.50705 3.753 1.4628 3.6684ZM1.21376 3.4314C1.18293 3.4083 1.18232 3.3408 1.17347 3.3021C1.18538 3.2919 1.19209 3.3066 1.20186 3.3057C1.20155 3.3516 1.21742 3.384 1.21376 3.4314ZM0.621377 2.0031C0.630533 1.9515 0.667461 1.9083 0.699201 1.8627C0.710188 1.8099 0.747727 1.7628 0.789539 1.7169C0.798695 1.7316 0.810903 1.7238 0.811513 1.7439C0.724532 1.8117 0.694013 1.9317 0.621377 2.0031ZM1.21284 1.7691C1.21529 1.7823 1.22566 1.7964 1.22871 1.8108C1.19148 1.8348 1.12159 1.8465 1.15364 1.8975C1.11182 1.9101 1.0929 1.9443 1.07429 1.9614C1.07612 1.8897 1.15974 1.8087 1.21284 1.7691ZM1.76097 1.7964C1.76097 1.8213 1.78539 1.803 1.79882 1.815C1.79271 1.8186 1.786 1.8222 1.7799 1.8264C1.76128 1.8 1.71275 1.8393 1.70848 1.8033C1.72344 1.8105 1.74175 1.806 1.76097 1.7964ZM11.8635 13.821C11.88 13.8483 11.931 13.9101 11.876 13.9311C11.8629 13.9029 11.8486 13.8876 11.8318 13.8615C11.8461 13.8495 11.8458 13.8228 11.8635 13.821ZM6.03248 7.5606C6.01966 7.5606 5.90857 7.2879 5.90003 7.2717C5.9043 7.2318 5.80419 7.0257 5.74743 6.8562C5.51853 6.2952 5.42453 5.9574 4.54008 5.0151C4.46714 4.9374 4.28829 4.8093 4.27761 4.794C4.2239 4.7172 4.02918 4.6371 3.98432 4.5918C3.91321 4.5201 3.89429 4.524 3.75359 4.4721C3.71758 4.4523 3.67943 4.434 3.63853 4.4166C3.60618 4.4031 3.55033 4.4121 3.51493 4.4001C3.40964 4.3755 3.35195 4.362 3.28268 4.3539C3.14931 4.338 3.05439 4.3425 2.89111 4.3245C2.84319 4.3218 2.76842 4.3038 2.67534 4.3017C2.58866 4.3002 2.48642 4.2936 2.37533 4.2729C2.22426 4.2306 2.13575 4.1991 2.06556 4.1187C1.99933 4.0671 1.92944 4.0032 1.86291 3.93C1.77349 3.8316 1.68895 3.7167 1.62547 3.5922C1.57542 3.4941 1.53818 3.3897 1.52109 3.2832C1.50431 3.2469 1.46158 3.1227 1.46036 3.0975C1.45578 3.0363 1.45669 2.9598 1.47287 2.898C1.48172 2.8635 1.47318 2.7939 1.50827 2.7888C1.51255 2.6967 1.59708 2.6388 1.61082 2.5506C1.66423 2.4882 1.97034 2.1774 1.9975 2.1534C1.99109 2.1546 1.98682 2.1531 1.98255 2.1465C1.99842 2.1162 2.03138 2.0946 2.068 2.0844C2.06159 2.076 2.0561 2.0664 2.06403 2.0613C2.08112 2.0469 2.11012 2.0499 2.10462 2.0265C2.05182 2.0553 1.9679 2.0844 1.94195 2.1315C1.91601 2.1249 1.90106 2.1522 1.87481 2.1564C1.87847 2.1816 1.82751 2.2011 1.80889 2.1924C1.83361 2.1354 1.91266 2.1015 1.9447 2.0526C1.92486 2.0526 1.90472 2.0808 1.87359 2.0811C1.87054 2.106 1.84887 2.118 1.82323 2.1171C1.81286 2.124 1.82079 2.1351 1.81408 2.1429C1.80492 2.1363 1.79332 2.148 1.78539 2.1399C1.79485 2.1309 1.79058 2.1177 1.79058 2.1063C1.77532 2.1108 1.77929 2.1198 1.76677 2.1261C1.76097 2.1132 1.74907 2.1162 1.75273 2.1042C1.76494 2.1045 1.7799 2.0952 1.79332 2.0946C1.80034 2.1003 1.78997 2.1129 1.80431 2.103C1.84216 2.1027 1.85803 2.0571 1.88763 2.0364C1.90503 2.0229 1.94958 2.0229 1.94653 1.9905C1.90625 1.9815 1.87756 2.0313 1.8391 2.0349C1.83971 2.0253 1.86627 2.0199 1.85803 2.0082C1.79729 2.007 1.79332 2.0688 1.72893 2.0673C1.70848 2.0952 1.65538 2.1474 1.61723 2.1453C1.61906 2.13 1.63798 2.1186 1.63127 2.1012C1.64073 2.1045 1.64775 2.1108 1.65904 2.1045C1.68284 2.0763 1.70238 2.0394 1.73778 2.0313C1.71367 2.0118 1.70512 2.0364 1.68284 2.0439C1.6862 2.0499 1.69292 2.0565 1.68895 2.0613C1.63493 2.0598 1.61967 2.1186 1.56931 2.1186C1.57267 2.1045 1.58884 2.1081 1.59953 2.1003C1.64561 2.0313 1.74724 1.962 1.81866 1.9044C1.84887 1.8801 1.87023 1.8756 1.85772 1.8648C1.86932 1.8693 1.89251 1.8585 1.89434 1.8531C1.88885 1.857 1.87481 1.8459 1.88214 1.8399C1.89984 1.8258 1.92456 1.8333 1.93249 1.8198C1.90045 1.8105 1.88702 1.8207 1.84155 1.8498C1.8391 1.8462 1.83666 1.8423 1.83483 1.8387C1.82323 1.8456 1.81164 1.8525 1.80034 1.8591C1.81255 1.899 1.74785 1.9047 1.72344 1.9011C1.71062 1.9281 1.6746 1.9329 1.65629 1.9431C1.72588 1.875 1.84582 1.7997 1.95691 1.7274C1.95142 1.7151 1.93982 1.7259 1.93524 1.7103C1.95935 1.7037 1.92975 1.6932 1.93738 1.6884C1.94531 1.6839 1.95233 1.6797 1.95966 1.6758C1.95386 1.6629 1.9386 1.6677 1.94195 1.6551C1.93707 1.6758 1.89862 1.6872 1.88549 1.7058C1.87481 1.7019 1.88336 1.7001 1.87603 1.6905C1.86382 1.6977 1.85406 1.692 1.84155 1.7013C1.8446 1.7157 1.85436 1.6971 1.85803 1.7124C1.83208 1.7229 1.80309 1.7181 1.79271 1.7061C1.78264 1.722 1.77257 1.7181 1.77532 1.737C1.7451 1.7199 1.71519 1.7514 1.67033 1.7607C1.66942 1.7748 1.6746 1.7925 1.6685 1.8075C1.6334 1.7904 1.60014 1.845 1.5684 1.8222C1.56077 1.8366 1.58182 1.8399 1.57206 1.8513C1.55741 1.8423 1.55192 1.8666 1.53757 1.8465C1.6038 1.7697 1.6978 1.7181 1.78814 1.6524C1.77501 1.6608 1.76616 1.6464 1.7564 1.641C1.7451 1.6503 1.73931 1.6602 1.7332 1.6704C1.67186 1.6662 1.61967 1.7565 1.55863 1.7568C1.56412 1.7295 1.60929 1.7148 1.63676 1.6989C1.62394 1.6848 1.6038 1.7001 1.58762 1.7034C1.55863 1.7478 1.44693 1.8006 1.3984 1.8648C1.3221 1.9032 1.25649 1.9851 1.21101 2.0619C1.20247 2.0706 1.19881 2.0595 1.19118 2.0637C1.1985 2.1342 1.11305 2.1642 1.10389 2.2293C1.02027 2.3211 1.02027 2.448 0.940305 2.5296C0.943662 2.5578 0.953734 2.5872 0.914364 2.6064C0.888727 2.6823 0.897273 2.7651 0.85424 2.8377C0.862786 2.8476 0.858818 2.853 0.864617 2.8626C0.826773 2.9541 0.879266 3.0678 0.851188 3.1623C0.867058 3.1869 0.872857 3.2085 0.848747 3.225C0.884149 3.2868 0.884149 3.3663 0.892695 3.4332C0.862786 3.3633 0.827383 3.2964 0.85424 3.2418C0.848136 3.2322 0.841422 3.2343 0.836539 3.2214C0.839896 3.1791 0.831961 3.1131 0.821279 3.0576C0.838981 3.0174 0.821279 2.9694 0.814565 2.9235C0.824026 2.9094 0.8225 2.8938 0.827994 2.8794C0.814565 2.8341 0.830435 2.7678 0.853019 2.7213C0.853325 2.643 0.879266 2.5719 0.929623 2.5053C0.921078 2.4948 0.931149 2.4885 0.922909 2.4789C0.976929 2.3232 1.06147 2.1864 1.15974 2.0478C1.17744 2.0403 1.17561 2.0292 1.19118 2.0226C1.18904 1.986 1.22749 1.9464 1.26168 1.9281C1.26137 1.8999 1.28762 1.8957 1.30471 1.8816C1.3276 1.8618 1.34347 1.8282 1.363 1.8102C1.40603 1.77 1.46677 1.7454 1.50217 1.6995C1.50949 1.7016 1.51956 1.6968 1.52781 1.6992C1.52842 1.6908 1.52048 1.68 1.5333 1.6758C1.60868 1.6335 1.67369 1.5837 1.74358 1.5312C1.69292 1.491 1.63676 1.5756 1.58488 1.5675C1.58427 1.5744 1.59037 1.584 1.57694 1.5879C1.56931 1.5882 1.56473 1.5843 1.55894 1.5774C1.54245 1.5918 1.53818 1.5933 1.52018 1.5969C1.53086 1.6176 1.50034 1.614 1.48538 1.6329C1.47989 1.6308 1.4747 1.6251 1.47012 1.6164C1.46768 1.6608 1.38711 1.6941 1.34591 1.7082C1.3569 1.719 1.35262 1.7259 1.34652 1.7334C1.30532 1.7052 1.23787 1.8003 1.22994 1.7379C1.23665 1.734 1.23909 1.7484 1.24794 1.7427C1.24336 1.7289 1.24733 1.7253 1.26168 1.7238C1.25496 1.7148 1.24916 1.7058 1.25771 1.7007C1.35323 1.644 1.42556 1.5504 1.55344 1.4937C1.55955 1.4757 1.57877 1.461 1.60014 1.4601C1.59953 1.44 1.63371 1.3989 1.65904 1.4145C1.6566 1.4082 1.64866 1.4004 1.65355 1.3968C1.74236 1.3566 1.80034 1.3056 1.91082 1.2603C1.89923 1.2492 1.90686 1.242 1.89801 1.2327C1.87298 1.2468 1.85955 1.2258 1.84826 1.2519C1.85803 1.2684 1.87634 1.2486 1.88885 1.2585C1.86932 1.2729 1.84521 1.2684 1.82323 1.2627C1.83178 1.2702 1.83056 1.2762 1.81927 1.2807C1.81591 1.2756 1.82079 1.2717 1.81591 1.2672C1.80126 1.2864 1.78875 1.2765 1.77135 1.2792C1.73808 1.3125 1.67918 1.3266 1.6273 1.347C1.62303 1.3389 1.63768 1.3359 1.63127 1.3284C1.61326 1.3314 1.59495 1.3359 1.57877 1.3356C1.57114 1.3239 1.57267 1.3185 1.57328 1.3035C1.51255 1.296 1.47989 1.3416 1.4219 1.3599C1.4335 1.3716 1.42862 1.3803 1.41824 1.3875C1.40237 1.3965 1.39321 1.3782 1.37856 1.3812C1.36331 1.3968 1.35262 1.3956 1.34164 1.4142C1.32607 1.4205 1.31417 1.4178 1.30471 1.4052C1.29311 1.365 1.34042 1.3716 1.3569 1.3644C1.3691 1.3584 1.41153 1.2954 1.44815 1.3032C1.49881 1.2606 1.55466 1.2192 1.61936 1.2033C1.61601 1.1967 1.60899 1.1904 1.61326 1.1859C1.64958 1.1856 1.6746 1.1565 1.7094 1.1481C1.66453 1.1262 1.61936 1.1817 1.57511 1.1742C1.56565 1.1652 1.59373 1.1661 1.58549 1.1574C1.5684 1.1586 1.55253 1.176 1.54734 1.1799C1.55466 1.1769 1.55985 1.1811 1.56412 1.1904C1.56077 1.1928 1.56138 1.1955 1.55894 1.1991C1.52445 1.2078 1.47806 1.2297 1.45242 1.2441C1.43533 1.2399 1.45425 1.2306 1.45425 1.2225C1.38619 1.2477 1.33981 1.2711 1.27541 1.3011C1.29006 1.3173 1.26564 1.3257 1.25099 1.3359C1.24581 1.326 1.23909 1.3212 1.23024 1.3284C1.22292 1.3347 1.24336 1.3482 1.23085 1.3539C1.12525 1.3551 1.07734 1.467 0.997682 1.512C0.990968 1.5459 0.963805 1.581 0.916805 1.5975C0.913143 1.6233 0.862786 1.6389 0.873773 1.6695C0.844474 1.6872 0.825247 1.7253 0.794422 1.7079C0.810903 1.6455 0.891169 1.6128 0.914364 1.5525C1.00012 1.4877 1.03034 1.4127 1.12403 1.3587C1.12617 1.3281 1.1634 1.2927 1.19514 1.2894C1.2281 1.2519 1.26534 1.2126 1.31264 1.2123C1.30501 1.1745 1.38436 1.1907 1.36666 1.158C1.33095 1.1586 1.27785 1.2069 1.24336 1.218C1.23848 1.1769 1.29586 1.1853 1.28243 1.1484C1.23207 1.1952 1.14662 1.2033 1.11121 1.2633C1.07551 1.2537 1.0691 1.3194 1.02332 1.3224C1.02332 1.2906 1.05414 1.2702 1.08344 1.2603C1.12708 1.2033 1.23177 1.1235 1.31722 1.0962C1.32424 1.077 1.34591 1.0773 1.35445 1.0641C1.33492 1.0671 1.30654 1.0707 1.29311 1.0908C1.21651 1.0905 1.09718 1.1832 1.05231 1.2282C1.05781 1.2261 1.06208 1.2273 1.06635 1.2342C1.0459 1.2477 1.02637 1.2597 1.00928 1.2591C0.903377 1.3587 0.813955 1.4619 0.707136 1.5462C0.669292 1.6359 0.568578 1.7274 0.525851 1.8264C0.505708 1.8237 0.510286 1.8459 0.490753 1.8531C0.500519 1.8798 0.473357 1.9065 0.446805 1.9155C0.429104 1.9689 0.373864 2.0145 0.362877 2.0697C0.3525 2.0739 0.348227 2.0538 0.337545 2.064C0.327169 2.0817 0.350974 2.0913 0.354942 2.1153C0.32137 2.1411 0.322896 2.1747 0.301532 2.2038C0.291766 2.2152 0.290545 2.193 0.281695 2.2056C0.272234 2.2179 0.289325 2.2221 0.288714 2.2323C0.245071 2.2602 0.253006 2.325 0.221266 2.3658C0.209364 2.3325 0.2115 2.3046 0.241409 2.2818C0.240799 2.2713 0.231643 2.2581 0.236221 2.2491C0.244156 2.2491 0.248123 2.2467 0.251175 2.2398C0.251786 2.2329 0.245987 2.223 0.246597 2.2167C0.299701 2.1081 0.347312 1.9974 0.386377 1.8864C0.440091 1.8243 0.475799 1.7316 0.547825 1.6641C0.554539 1.6464 0.545383 1.626 0.560643 1.6107C0.574987 1.6068 0.569188 1.605 0.582617 1.5972C0.583532 1.5867 0.581701 1.5753 0.590247 1.5675C0.67326 1.4871 0.72148 1.3653 0.832877 1.3011C0.840812 1.2792 0.863396 1.2492 0.894221 1.2423C0.97113 1.1697 1.02759 1.0953 1.13532 1.0386C1.27053 0.893099 1.46921 0.8316 1.645 0.7422C1.62455 0.7185 1.60929 0.7593 1.5864 0.7482C1.59037 0.7539 1.58762 0.7587 1.57938 0.7617C1.4982 0.7641 1.38925 0.8052 1.32363 0.8517C1.25344 0.8538 1.20308 0.9297 1.14875 0.9285C1.13807 0.9504 1.13532 0.9477 1.10999 0.957C1.05964 1.0089 1.0044 1.0548 0.928708 1.0986C0.918026 1.1031 0.934201 1.1142 0.921078 1.119C0.725143 1.2306 0.623208 1.4028 0.481597 1.551C0.479461 1.5585 0.490753 1.5699 0.481597 1.5768C0.430935 1.6335 0.393396 1.6932 0.336019 1.7484C0.340903 1.7583 0.336935 1.7652 0.336019 1.7736C0.289019 1.8087 0.274065 1.8516 0.268266 1.8966C0.254532 1.9185 0.223708 1.9371 0.239273 1.9656C0.196851 2.0211 0.165416 2.0604 0.144052 2.127C0.137032 2.1309 0.131234 2.1351 0.124519 2.1384C0.120857 2.1495 0.131539 2.1525 0.138558 2.16C0.126045 2.1663 0.126656 2.1759 0.110786 2.1822C0.102851 2.2266 0.107429 2.274 0.0738571 2.3127C0.0705 2.3346 0.0854545 2.3613 0.0576818 2.3781C0.0613442 2.4366 0.0582922 2.4939 0.0277727 2.5449C0.0436429 2.6244 -0.00244156 2.6889 0.0134286 2.769C0.00885065 2.7708 0.00549351 2.7672 0 2.7723C0.0189221 2.8197 -0.0103766 2.871 0.0152597 2.9109C-0.0143442 2.9547 0.0396753 3.0162 0.00457792 3.0663C0.0436429 3.1431 0.0292987 3.2349 0.0381493 3.3171C0.0613442 3.3639 0.0631753 3.4065 0.0643961 3.4491C0.100409 3.5265 0.106513 3.6285 0.141916 3.7188C0.131539 3.7251 0.130318 3.717 0.126656 3.7278C0.134896 3.7407 0.147409 3.7329 0.154429 3.7467C0.151377 3.7953 0.207227 3.8616 0.206617 3.9198C0.232253 3.9474 0.271623 4.0128 0.27437 4.0518C0.356773 4.1481 0.35311 4.2927 0.437344 4.3953C0.438565 4.4007 0.437039 4.4064 0.43063 4.4097C0.462981 4.4268 0.50113 4.4694 0.509675 4.5099C0.514864 4.5165 0.524019 4.5045 0.528597 4.5144C0.523104 4.5477 0.614357 4.5708 0.596045 4.6209C0.623513 4.6332 0.631753 4.6395 0.647929 4.671C0.688519 4.6863 0.721481 4.719 0.73613 4.7607C0.819448 4.8264 0.886286 4.9467 0.973877 5.0061C0.988526 5.0439 1.03156 5.0433 1.03034 5.0784C1.08924 5.1069 1.14051 5.1864 1.18477 5.2086C1.18141 5.2122 1.17866 5.2176 1.17805 5.2227C1.22658 5.2149 1.2571 5.2794 1.29769 5.3037C1.2925 5.3085 1.30105 5.3163 1.28701 5.3202C1.33492 5.3343 1.35476 5.3715 1.39199 5.3943C1.53727 5.4753 1.71184 5.5788 1.79394 5.6118C1.84063 5.6268 1.92029 5.6733 1.9679 5.688C2.06007 5.7108 2.16414 5.7573 2.26668 5.7813C2.36984 5.805 2.47086 5.8062 2.55601 5.8254C2.70036 5.8227 2.77361 5.8464 2.77727 5.8476C2.96558 5.8566 3.12214 5.9232 3.18532 5.9922C3.34951 6.1203 3.57932 6.4311 3.6129 6.4806C4.08015 7.2549 4.4357 8.4114 4.82818 9.9774C4.83307 9.9867 4.82238 9.9924 4.82238 10.0011C4.84649 10.0029 4.82788 10.0401 4.85138 10.0551C4.84405 10.1007 4.89471 10.1697 4.86725 10.2192C4.89899 10.2375 4.88312 10.2732 4.90784 10.3071C4.88434 10.3299 4.93836 10.3824 4.92218 10.4214C4.95056 10.467 4.94019 10.5039 4.95636 10.548C4.94995 10.5519 4.94507 10.5558 4.94324 10.5615C4.9704 10.6089 4.98261 10.6896 4.99787 10.7535C4.98047 10.7697 4.97956 10.7889 4.99909 10.8141C4.99482 10.818 4.99634 10.824 4.98658 10.8261C5.01923 10.893 5.02351 10.9425 5.01435 10.9938C5.02045 11.0025 5.02778 11.0004 5.03144 11.0136C5.02778 11.0463 5.04975 11.0853 5.03388 11.1141C5.04487 11.1348 5.05128 11.1546 5.03693 11.1696C5.04609 11.1825 5.05128 11.1807 5.05372 11.1948C5.04731 11.1993 5.0409 11.2029 5.03449 11.2065C5.04304 11.2359 5.08058 11.2458 5.05281 11.2767C5.07875 11.3004 5.08851 11.343 5.07325 11.3664C5.08455 11.3823 5.0934 11.3829 5.07661 11.3958C5.08241 11.4051 5.08973 11.4027 5.09401 11.4156C5.08516 11.4756 5.16145 11.5626 5.13185 11.6232C5.14375 11.6442 5.15596 11.6658 5.14314 11.6817C5.15016 11.6958 5.1639 11.6781 5.16878 11.6976C5.17366 11.7075 5.15901 11.712 5.15657 11.7198C5.18984 11.7519 5.17244 11.7813 5.17977 11.8128C5.20388 11.8515 5.20296 11.8863 5.22402 11.9238L5.20876 11.9337C5.2289 11.943 5.21425 11.9535 5.21425 11.9658C5.23684 11.9619 5.22829 11.9883 5.2289 11.9976C5.25332 11.994 5.23623 12.0291 5.24111 12.042C5.25515 12.0558 5.26797 12.0768 5.25118 12.0912C5.28506 12.162 5.30886 12.2571 5.30947 12.3222C5.31588 12.3378 5.32504 12.3342 5.33206 12.3498C5.31832 12.3894 5.35464 12.4236 5.37234 12.4626C5.38211 12.4842 5.3812 12.5256 5.39249 12.5523C5.40408 12.5763 5.41446 12.5895 5.40195 12.6075C5.41171 12.6063 5.41934 12.618 5.42606 12.6303C5.42026 12.6375 5.42087 12.645 5.40836 12.6504C5.45261 12.663 5.42179 12.8355 5.46726 12.8616C5.45139 12.8799 5.48069 12.894 5.49198 12.9078C5.49473 12.9144 5.48618 12.9174 5.48466 12.9228C5.55149 13.0305 5.58903 13.2114 5.6577 13.3023C5.64305 13.3059 5.66014 13.317 5.65526 13.3236C5.67235 13.3242 5.69768 13.365 5.69066 13.3782C5.71447 13.3875 5.72393 13.401 5.73827 13.4217C5.73766 13.4295 5.72759 13.4361 5.72637 13.4439C5.7517 13.4319 5.77459 13.4718 5.76727 13.4916C5.83258 13.5282 5.84723 13.6275 5.90796 13.6554C5.91315 13.6668 5.91345 13.6782 5.91254 13.6878C5.969 13.7421 6.02546 13.7916 6.07155 13.8573C6.09535 13.8693 6.1277 13.9131 6.12526 13.9257C6.19149 13.9482 6.23696 14.0523 6.30258 14.0742C6.32699 14.1333 6.39353 14.127 6.39994 14.1783C6.44785 14.2017 6.52568 14.2287 6.54429 14.2833C6.62547 14.3193 6.70025 14.3724 6.76983 14.4168C6.77685 14.4252 6.76769 14.4294 6.77746 14.4375C6.81561 14.4234 6.85162 14.4408 6.86627 14.4741C6.92273 14.4801 7.00727 14.4855 7.05641 14.5191C7.10982 14.514 7.10951 14.5269 7.15438 14.5335C7.21175 14.5422 7.20504 14.5476 7.21328 14.5482C7.26821 14.5608 7.30972 14.5494 7.35245 14.577C7.38968 14.5644 7.43088 14.6157 7.45591 14.622C7.48307 14.6283 7.51542 14.5908 7.51298 14.616C7.57219 14.6037 7.6201 14.6343 7.67443 14.6403C7.68389 14.6361 7.68786 14.6313 7.69091 14.6259C7.74188 14.6373 7.79834 14.6253 7.84625 14.6484C7.92286 14.6211 7.97993 14.6553 8.0547 14.6361C8.09621 14.6634 8.15297 14.6208 8.19051 14.6613C8.19997 14.6565 8.19814 14.6487 8.21096 14.6436C8.32907 14.6319 8.43162 14.6184 8.54973 14.5638C8.59581 14.574 8.63945 14.5422 8.68676 14.5413C8.72979 14.4969 8.7948 14.5329 8.83539 14.4963C8.86682 14.514 8.89124 14.472 8.92023 14.4912C8.94068 14.4714 8.9712 14.472 8.99409 14.4756C9.03224 14.445 9.07466 14.4579 9.11342 14.4342C9.12044 14.4402 9.12716 14.4384 9.13265 14.4474C9.18179 14.4252 9.20071 14.4246 9.24801 14.4033C9.2529 14.4162 9.30325 14.3871 9.30722 14.4003C9.32492 14.3847 9.31577 14.3571 9.33438 14.3718C9.39207 14.3517 9.46897 14.3256 9.52269 14.3646C9.53581 14.3547 9.57213 14.3523 9.58647 14.3553C9.59563 14.3652 9.69818 14.3652 9.73358 14.394C9.83277 14.4291 9.82483 14.4342 9.88556 14.4807C9.89594 14.4873 9.97804 14.5632 9.98445 14.5704C10.0809 14.6289 10.0391 14.6172 10.0885 14.7186C10.1251 14.7591 10.1471 14.8242 10.1483 14.874C10.1999 14.9031 10.1709 15.0054 10.1901 15.0654C10.1758 15.0693 10.1844 15.0771 10.1798 15.0819C10.1859 15.0921 10.192 15.1011 10.1978 15.1116C10.1825 15.171 10.2268 15.2448 10.1923 15.2994C10.2124 15.3117 10.2155 15.3717 10.1953 15.3948C10.2298 15.4698 10.1917 15.5535 10.2057 15.6339C10.1996 15.6432 10.2033 15.6555 10.1895 15.6642C10.2036 15.6879 10.1947 15.7059 10.1728 15.7206C10.1947 15.7521 10.1621 15.7728 10.1425 15.795C10.1239 15.8427 10.0961 15.9321 10.0397 15.9705C10.0427 16.0035 10.029 16.047 9.99238 16.0611C9.99849 16.0728 9.99788 16.0839 9.99147 16.0926C9.96278 16.1055 9.89197 16.2843 9.88251 16.3047C9.88862 16.3104 9.80438 16.4613 9.80438 16.4613C9.78088 16.4688 9.74579 16.5765 9.72625 16.5696C9.73175 16.5804 9.73114 16.635 9.72564 16.644C9.71221 16.638 9.69421 16.6515 9.69726 16.6662C9.70245 16.6593 9.71832 16.6632 9.70947 16.6692C9.70611 16.6839 9.69421 16.6662 9.68078 16.6815C9.66918 16.7193 9.64721 16.7553 9.63805 16.7946C9.61516 16.797 9.61272 16.7946 9.59807 16.8132C9.60265 16.8234 9.61028 16.8174 9.61394 16.8291C9.54802 16.8978 9.60448 16.9821 9.53642 17.0478C9.54588 17.07 9.57976 17.088 9.55138 17.1009C9.55748 17.1345 9.54893 17.1549 9.51842 17.1726C9.52879 17.256 9.45951 17.3211 9.46714 17.403C9.42411 17.4483 9.46897 17.5065 9.43204 17.5509C9.43571 17.5938 9.42503 17.6331 9.39786 17.6694C9.41617 17.715 9.44822 17.7648 9.4119 17.799C9.42655 17.8536 9.4177 17.9031 9.42106 17.9547C9.42472 17.9694 9.42594 17.9838 9.42869 17.9982C9.44212 18.2055 9.43998 18.4071 9.48729 18.5763C9.49247 18.5814 9.50712 18.5769 9.50834 18.588C9.50804 18.5988 9.49186 18.6042 9.50041 18.6132C9.56664 18.8142 9.61791 19.0104 9.73114 19.1628C9.73816 19.1646 9.75311 19.1571 9.75311 19.1664C9.74304 19.2105 9.80805 19.2138 9.80652 19.2636C9.84528 19.2777 9.8639 19.3131 9.89869 19.332C9.89533 19.3611 9.92738 19.3863 9.95576 19.3965C10.0064 19.4682 10.0604 19.5357 10.1175 19.6005C10.12 19.6023 10.1227 19.6047 10.1254 19.6059C10.203 19.665 10.2344 19.7238 10.3076 19.7814C10.4853 19.9035 10.5405 20.0307 10.7364 20.1483C10.9898 20.2797 11.2498 20.3994 11.5061 20.5236C11.5217 20.5287 11.5364 20.5332 11.5516 20.5386C11.5287 20.5218 11.4958 20.5158 11.4775 20.4954C11.4595 20.5005 11.4375 20.4984 11.439 20.472C11.472 20.4801 11.4997 20.4819 11.5077 20.5023C11.5068 20.4948 11.5113 20.493 11.5205 20.4936C11.5293 20.4924 11.5181 20.5128 11.5333 20.5059C11.5965 20.4879 11.6032 20.5476 11.6621 20.547C11.6719 20.5434 11.6471 20.5353 11.6612 20.5263C11.7018 20.547 11.7503 20.5599 11.7949 20.5758C11.801 20.5926 11.8126 20.6055 11.8278 20.613C11.8318 20.6136 11.8367 20.6157 11.84 20.6163C11.8486 20.5989 11.8797 20.6031 11.8916 20.5884C11.9697 20.6349 12.108 20.6436 12.2081 20.6748C12.3689 20.697 12.5322 20.7162 12.6949 20.7351C12.6674 20.7129 12.614 20.7138 12.5737 20.7036C12.5771 20.6886 12.5667 20.688 12.5682 20.6742C12.5215 20.6658 12.4761 20.6586 12.4278 20.6541C12.4144 20.67 12.4556 20.6763 12.4416 20.691C12.3876 20.6988 12.3741 20.6652 12.3552 20.6355C12.3402 20.6658 12.325 20.6832 12.2923 20.6712C12.2929 20.6505 12.3067 20.6436 12.3134 20.6289C12.1584 20.5896 12.0051 20.5524 11.8593 20.4861L11.8248 20.4876C11.7112 20.4081 11.5596 20.3676 11.4494 20.2839C11.519 20.2989 11.5681 20.3553 11.6423 20.3517C11.6697 20.3892 11.7225 20.4003 11.7753 20.4018C11.8263 20.4309 11.8849 20.4753 11.9639 20.4621C11.9743 20.4909 12.0253 20.4879 12.0582 20.496C12.0799 20.5011 12.1092 20.5281 12.1175 20.5023C12.0817 20.4801 11.9887 20.4831 11.9588 20.4459C11.9752 20.4426 11.97 20.4186 11.9749 20.4156C12.0357 20.4291 12.0872 20.4615 12.1495 20.4426C12.1574 20.4738 12.1828 20.4597 12.2014 20.4627C12.2215 20.4648 12.235 20.4771 12.2478 20.4765C12.2725 20.4765 12.3097 20.4459 12.3164 20.4867C12.3195 20.4738 12.3244 20.4849 12.3372 20.4819C12.3384 20.4942 12.3213 20.4867 12.3207 20.4954C12.4043 20.5152 12.5044 20.5293 12.5804 20.5446C12.592 20.5194 12.6027 20.5029 12.6085 20.4813C12.632 20.496 12.6522 20.5146 12.6894 20.5035C12.6946 20.5176 12.675 20.5314 12.6989 20.5281C12.7089 20.5248 12.6903 20.5176 12.6946 20.5077C12.733 20.4885 12.7828 20.5218 12.8173 20.5029C12.8179 20.4795 12.7974 20.5035 12.795 20.4831C12.8093 20.4726 12.8521 20.4855 12.8618 20.4642C12.8267 20.4693 12.8121 20.4663 12.7645 20.4636C12.769 20.4897 12.7297 20.5017 12.7224 20.4693C12.7318 20.4771 12.7407 20.4627 12.752 20.4597C12.7318 20.4597 12.6885 20.4339 12.675 20.4585C12.6946 20.4603 12.6961 20.4585 12.7138 20.4648C12.6995 20.4759 12.7159 20.4936 12.6982 20.5029C12.69 20.4972 12.6982 20.4744 12.6802 20.4783C12.6702 20.4849 12.6885 20.4909 12.6769 20.4954C12.6555 20.4777 12.643 20.4699 12.6119 20.4765C12.6058 20.4543 12.6119 20.4519 12.6146 20.4309C12.5853 20.4279 12.5743 20.4252 12.5517 20.4123C12.5365 20.4081 12.5481 20.4258 12.534 20.421C12.5292 20.4168 12.5188 20.4168 12.5084 20.4174C12.5044 20.4099 12.4886 20.4129 12.4867 20.4024C12.4623 20.4081 12.4581 20.3928 12.4361 20.3958C12.4016 20.3517 12.2691 20.3763 12.2679 20.3226C12.3036 20.3592 12.3753 20.3307 12.4095 20.367C12.4254 20.3361 12.4782 20.3757 12.502 20.3634C12.4684 20.3529 12.4278 20.3337 12.4004 20.3511C12.404 20.3355 12.3903 20.3379 12.3869 20.3307C12.3335 20.3355 12.3018 20.2977 12.2673 20.3181C12.2246 20.2611 12.1263 20.2827 12.0701 20.2458C12.057 20.2404 12.0586 20.2476 12.0409 20.247C12.0415 20.2302 12.0207 20.2365 12.0186 20.223C11.9664 20.2029 11.9084 20.1924 11.8605 20.1699C11.8416 20.1615 11.8205 20.1453 11.8077 20.1303C11.8843 20.1477 11.9548 20.1708 12.0174 20.2017C12.032 20.2029 12.0329 20.1936 12.0473 20.1966C12.0701 20.2086 12.0964 20.2293 12.1287 20.2188C12.2334 20.2623 12.3644 20.2785 12.4794 20.3109C12.4898 20.3109 12.4913 20.3043 12.4996 20.3013C12.5282 20.3208 12.5597 20.3289 12.5981 20.3232C12.6436 20.3511 12.7056 20.3403 12.7556 20.3478C12.7639 20.3478 12.7742 20.3571 12.7822 20.3592C12.7938 20.361 12.8063 20.3517 12.8151 20.3529C12.8261 20.3541 12.8151 20.3658 12.8283 20.3652C12.8444 20.364 12.8582 20.3577 12.8704 20.3517C12.911 20.3781 12.9677 20.3787 13.0199 20.3838C13.0727 20.3898 13.1365 20.3916 13.1896 20.3865C13.2491 20.4018 13.3037 20.397 13.381 20.4003C13.3871 20.3988 13.3834 20.3877 13.3971 20.3916C13.4597 20.4162 13.5693 20.3826 13.6047 20.3886C13.608 20.3742 13.6376 20.3814 13.6337 20.3592C13.4975 20.367 13.3489 20.3424 13.2436 20.3592C13.2442 20.3502 13.2394 20.3466 13.2305 20.3478C13.0837 20.3442 12.9439 20.3232 12.8319 20.3244C12.8304 20.3175 12.8319 20.3091 12.8225 20.3115C12.7895 20.313 12.7883 20.2959 12.7504 20.3055C12.7288 20.2797 12.6976 20.2902 12.6653 20.3004C12.6625 20.277 12.6372 20.2989 12.6308 20.2764C12.6131 20.2764 12.5966 20.277 12.5841 20.2821C12.567 20.2674 12.5398 20.2488 12.5109 20.2605C12.4861 20.2332 12.4278 20.2308 12.4007 20.247C12.3622 20.2128 12.3143 20.2359 12.285 20.193C12.2841 20.1849 12.3006 20.1984 12.3055 20.1879C12.3024 20.1732 12.2759 20.1789 12.2874 20.1591C12.3042 20.1597 12.3061 20.1765 12.3219 20.1789C12.3259 20.1663 12.3323 20.1585 12.3473 20.1657C12.3579 20.1759 12.3488 20.1909 12.339 20.1954C12.3595 20.1972 12.3735 20.1867 12.3808 20.1687C12.3097 20.1477 12.2395 20.1231 12.1675 20.1048C12.0625 20.0781 11.9621 20.0442 11.8593 20.0157C11.8422 19.9959 11.8269 19.9743 11.79 19.9764C11.7872 19.9326 11.7115 19.9446 11.7152 19.9077C11.7421 19.911 11.7637 19.9206 11.772 19.944C11.7851 19.9494 11.7735 19.9308 11.7881 19.9353C11.8162 19.9743 11.8721 19.9611 11.9044 19.9977C11.9151 19.9977 11.9255 19.9977 11.9307 19.992C11.9942 20.0307 12.0686 20.0559 12.1574 20.0682C12.2527 20.1105 12.3753 20.1222 12.4831 20.1525C12.4837 20.1438 12.4745 20.1237 12.4892 20.127C12.506 20.1831 12.5658 20.1597 12.5966 20.1483C12.5981 20.1573 12.5908 20.1573 12.5887 20.1615C12.6091 20.1663 12.6073 20.1681 12.6311 20.1681C12.6406 20.1426 12.6515 20.1414 12.6717 20.1291C12.7056 20.1384 12.719 20.1609 12.7254 20.1897C12.7257 20.1837 12.7349 20.1861 12.7419 20.1849C12.744 20.1687 12.7214 20.1555 12.7318 20.1438C12.7504 20.1525 12.7877 20.1414 12.7956 20.163C12.8063 20.1453 12.8386 20.1477 12.8585 20.139C12.8441 20.1093 12.784 20.1081 12.7605 20.1222C12.7257 20.0922 12.6708 20.1093 12.6442 20.0682C12.6674 20.0586 12.7056 20.0604 12.7046 20.091C12.7166 20.0859 12.7178 20.0712 12.733 20.0688C12.7639 20.0859 12.7999 20.0712 12.8228 20.091C12.82 20.0994 12.7974 20.0892 12.802 20.1036C12.845 20.094 12.8853 20.067 12.9335 20.0958C12.9439 20.0898 12.9293 20.0706 12.9366 20.0706C12.95 20.0706 12.99 20.0676 13.0089 20.0757C13.0083 20.0877 13.0022 20.0934 13.0016 20.1054C13.0236 20.121 13.0623 20.0871 13.07 20.1237C13.0959 20.1048 13.127 20.1081 13.1548 20.1291C13.182 20.103 13.2195 20.1303 13.2601 20.1174C13.2552 20.103 13.2213 20.1186 13.2174 20.1024C13.2497 20.0877 13.297 20.1156 13.3141 20.082C13.2748 20.0742 13.2546 20.0505 13.2113 20.0559C13.2073 20.0646 13.2241 20.07 13.2119 20.0736C13.1756 20.0763 13.1695 20.0472 13.1402 20.064C13.149 20.0376 13.1112 20.0505 13.0974 20.0559C13.0855 20.0559 13.0916 20.0376 13.0758 20.0397C12.9476 20.0199 12.8347 19.9998 12.6873 19.9791C12.69 19.9938 12.7166 20.0061 12.7065 20.0199C12.6653 20.0109 12.6189 20.0085 12.5954 19.9827C12.5777 19.9785 12.5826 19.9926 12.5694 19.9914C12.4874 19.9779 12.3991 19.9458 12.3216 19.917C12.2527 19.9182 12.1934 19.8771 12.1574 19.8309C12.2029 19.8345 12.2389 19.8561 12.2716 19.8309C12.3125 19.8447 12.3464 19.8465 12.379 19.8732C12.404 19.8465 12.4501 19.9059 12.4727 19.8699C12.4373 19.8615 12.4101 19.8285 12.3689 19.8396C12.3384 19.8042 12.2643 19.8258 12.2438 19.7736C12.1397 19.7424 12.0375 19.689 11.9221 19.6554C11.9078 19.6353 11.8843 19.6236 11.8654 19.6071C11.8086 19.6122 11.779 19.5597 11.7527 19.5357C11.8751 19.5837 11.9932 19.641 12.1294 19.6482C12.1165 19.6293 12.1513 19.6392 12.1541 19.6224C12.2508 19.6827 12.3619 19.6662 12.4706 19.7115C12.4779 19.7043 12.4837 19.6932 12.5038 19.6983C12.5087 19.7169 12.5353 19.7136 12.5438 19.7295C12.5334 19.7559 12.5487 19.7706 12.5701 19.7748C12.5771 19.7712 12.5688 19.7547 12.5777 19.7535L12.5783 19.7706C12.5991 19.761 12.6174 19.7403 12.6332 19.764C12.6277 19.7751 12.6155 19.7577 12.6125 19.7688C12.629 19.7802 12.6494 19.7748 12.6674 19.7676C12.6961 19.791 12.7614 19.8252 12.795 19.7922C12.7925 19.8042 12.8023 19.8042 12.8005 19.8168C12.8423 19.8126 12.889 19.8408 12.932 19.8198C12.9738 19.8519 13.0721 19.8243 13.1283 19.8513C13.1475 19.8471 13.1499 19.8297 13.1695 19.8249C13.174 19.8408 13.1847 19.8333 13.2073 19.8363C13.2296 19.8513 13.2479 19.8681 13.2812 19.8714C13.2934 19.8561 13.333 19.8657 13.3398 19.8432C13.3633 19.8675 13.4115 19.839 13.4298 19.8663C13.4997 19.8465 13.5732 19.8561 13.6535 19.8537C13.6651 19.8384 13.6636 19.827 13.6733 19.8156C13.6712 19.8384 13.6904 19.8513 13.7124 19.8603C13.7136 19.8216 13.7451 19.8126 13.7698 19.7958C13.7457 19.8105 13.6672 19.7886 13.6437 19.8204C13.5897 19.8018 13.5027 19.8054 13.4408 19.8156C13.4023 19.8132 13.3712 19.797 13.333 19.7946C13.29 19.7922 13.2433 19.8075 13.1985 19.803C13.1917 19.8024 13.1881 19.7922 13.1811 19.7916C13.1719 19.7904 13.1621 19.7976 13.1521 19.7958C13.135 19.7946 13.1179 19.7844 13.0999 19.7814C13.0382 19.7712 12.9949 19.7802 12.9555 19.7652C12.9439 19.7652 12.9476 19.7793 12.9305 19.7748C12.9305 19.7688 12.9412 19.7712 12.9384 19.7622C12.8102 19.7415 12.6787 19.7367 12.5795 19.6827C12.6131 19.6845 12.6369 19.6857 12.6683 19.6797C12.6808 19.7013 12.7141 19.7013 12.7419 19.7061C12.7477 19.6839 12.7224 19.6926 12.7239 19.6737C12.6714 19.6737 12.5978 19.6542 12.5441 19.6293C12.5182 19.6338 12.4977 19.6206 12.4806 19.6275C12.4639 19.6047 12.4291 19.6005 12.3903 19.6017C12.3784 19.5909 12.3607 19.5876 12.3555 19.5699C12.328 19.572 12.3177 19.5549 12.2914 19.5555C12.2655 19.5243 12.2081 19.5198 12.1629 19.5054C12.1333 19.4964 12.0869 19.4853 12.0885 19.4535C12.1165 19.4523 12.1147 19.473 12.1443 19.4604C12.1584 19.4988 12.2105 19.4958 12.2511 19.5075C12.2597 19.4964 12.2661 19.4826 12.263 19.461C12.2508 19.4577 12.2417 19.4517 12.2289 19.449C12.2185 19.4478 12.2194 19.4748 12.2121 19.4628C12.2105 19.4226 12.1355 19.4289 12.1159 19.3953C12.1477 19.3983 12.1663 19.4136 12.2014 19.4127C12.2029 19.3998 12.1913 19.3971 12.2044 19.392C12.307 19.4163 12.4043 19.4664 12.5209 19.4646C12.4886 19.4331 12.4312 19.4376 12.3961 19.4187C12.3842 19.422 12.379 19.4313 12.3586 19.4283C12.347 19.4226 12.3427 19.4079 12.3366 19.3959C12.2835 19.3884 12.2569 19.3524 12.1959 19.3548C12.1037 19.299 11.9737 19.2837 11.9063 19.2024C12.0302 19.221 12.1495 19.332 12.2746 19.314C12.3006 19.3575 12.3723 19.3314 12.4156 19.3593C12.3958 19.338 12.3967 19.317 12.3756 19.3023C12.3705 19.3131 12.3882 19.32 12.376 19.323C12.3607 19.323 12.3494 19.3029 12.3579 19.2903C12.3125 19.2891 12.2914 19.2609 12.2429 19.2615C12.2258 19.2375 12.1876 19.2216 12.1571 19.227C12.1425 19.1916 12.0839 19.203 12.0738 19.1628C12.0955 19.1604 12.1101 19.1808 12.1294 19.1865C12.1486 19.191 12.1699 19.182 12.1843 19.1886C12.1974 19.1934 12.2054 19.2117 12.2203 19.2168C12.2282 19.2186 12.2423 19.2138 12.2539 19.215C12.2984 19.2204 12.3274 19.2609 12.3647 19.2327C12.3827 19.2669 12.4501 19.2753 12.4758 19.2573C12.4764 19.2759 12.4938 19.2759 12.502 19.2855C12.5487 19.2609 12.5749 19.3188 12.6293 19.3017C12.6409 19.3071 12.6467 19.3188 12.6604 19.3218C12.7605 19.3194 12.8637 19.35 12.9494 19.3494C13.0059 19.3902 13.117 19.3821 13.1743 19.3752C13.1859 19.3764 13.189 19.3884 13.2046 19.3863C13.2586 19.3743 13.3132 19.3932 13.37 19.3932C13.3675 19.3839 13.3773 19.3839 13.3736 19.3722C13.3535 19.3632 13.3526 19.3587 13.33 19.3524C13.3254 19.3674 13.3434 19.356 13.3398 19.3692C13.33 19.3611 13.3047 19.3791 13.297 19.3626C13.3001 19.356 13.3178 19.3617 13.3138 19.3494C13.2296 19.3494 13.1539 19.3152 13.0715 19.3122C13.0709 19.3047 13.0694 19.2996 13.066 19.2954C13.0394 19.3116 12.9967 19.2831 13.0221 19.2591C13.0498 19.3035 13.1118 19.2771 13.1454 19.2843C13.1475 19.2777 13.1402 19.263 13.1493 19.263C13.1768 19.2699 13.1753 19.2699 13.1914 19.2537C13.2024 19.2621 13.1902 19.2753 13.2052 19.2738C13.2085 19.2543 13.2473 19.2681 13.2558 19.2726C13.3019 19.2408 13.3846 19.2819 13.4551 19.2777C13.4484 19.2621 13.4734 19.2765 13.4667 19.2609C13.326 19.2531 13.1725 19.2327 13.0285 19.197C13.026 19.1892 13.0166 19.1898 13.0193 19.1757C12.9961 19.182 12.9906 19.1694 12.972 19.1694C12.9778 19.164 12.9778 19.1535 12.9717 19.149C12.9537 19.1523 12.9439 19.1466 12.9293 19.146C12.9226 19.164 12.9531 19.1448 12.9467 19.1622C12.936 19.1577 12.921 19.1571 12.9082 19.1553C12.903 19.1448 12.9204 19.1367 12.9033 19.1385C12.7797 19.1115 12.6702 19.068 12.5481 19.0386C12.5426 19.0338 12.5426 19.0218 12.531 19.0224C12.4474 18.9861 12.3613 18.9513 12.2813 18.9111C12.2841 18.888 12.2478 18.8583 12.2789 18.8478C12.2884 18.8484 12.2887 18.8577 12.2884 18.8682C12.3717 18.8952 12.4519 18.9705 12.5459 18.9597C12.5469 18.9783 12.5694 18.9783 12.5905 18.9789C12.581 18.9732 12.5716 18.9648 12.5633 18.9579C12.4086 18.9111 12.2603 18.8466 12.1159 18.7542C11.9911 18.6738 11.8861 18.5787 11.7985 18.4749C11.4927 18.2775 11.3651 17.8851 11.3923 17.5365C11.3972 17.466 11.4149 17.4003 11.4418 17.3403C11.4503 17.2995 11.4634 17.2617 11.4823 17.2275C11.5007 17.1414 11.5315 17.0571 11.5821 16.9839C11.6075 16.92 11.6398 16.8603 11.6804 16.8042C11.9932 16.1775 12.195 15.6321 12.1852 14.913C12.1852 14.8788 12.187 14.847 12.1907 14.8143C12.1895 14.8122 12.1895 14.8095 12.1895 14.8065C12.1504 14.7156 12.1303 14.6166 12.1385 14.5131C12.1437 14.4615 12.1464 14.4093 12.148 14.3571C12.1342 14.3331 12.1226 14.3091 12.1123 14.2839C12.1114 14.2863 12.1104 14.2878 12.1089 14.2902C12.0915 14.2746 12.0955 14.2572 12.0964 14.2386C12.0921 14.2263 12.086 14.2143 12.0836 14.2011C12.0827 14.2005 12.0827 14.2002 12.0821 14.2002C12.0821 14.199 12.0824 14.199 12.0824 14.1984C12.0686 14.1432 12.0515 14.088 12.032 14.0343C11.9606 13.95 11.9111 13.8525 11.8797 13.7505C11.8764 13.749 11.8745 13.746 11.8721 13.7448C11.8562 13.6776 11.7683 13.6326 11.7817 13.5693C11.7521 13.5711 11.7479 13.5384 11.7286 13.5093C11.7219 13.5117 11.7122 13.5258 11.7079 13.5174C11.6893 13.5015 11.7204 13.4817 11.6871 13.4688C11.7006 13.4589 11.6948 13.4505 11.7109 13.4496C11.6407 13.3908 11.5925 13.2939 11.5181 13.2753C11.5068 13.224 11.4494 13.2126 11.4192 13.1775C11.4088 13.1649 11.4076 13.1466 11.3972 13.1349C11.388 13.1244 11.3719 13.1211 11.3609 13.1109C11.287 13.047 11.2003 12.99 11.1182 12.9324C11.1274 12.9468 11.1128 12.954 11.1073 12.9636C11.0838 12.9534 11.0926 12.9261 11.0889 12.9096C11.0581 12.8883 11.0282 12.8625 10.9956 12.8535C10.8964 12.7569 10.7578 12.7119 10.6434 12.6336C10.6397 12.6354 10.6354 12.6384 10.6336 12.6348C10.6257 12.6432 10.6116 12.6492 10.6183 12.6603C10.6214 12.6768 10.6461 12.6642 10.6513 12.6963C10.6461 12.7035 10.6412 12.7101 10.6336 12.7167C10.6125 12.7134 10.5909 12.7059 10.5726 12.6873C10.5896 12.6807 10.586 12.6831 10.5994 12.6708C10.6055 12.6558 10.5964 12.6375 10.5924 12.6192C10.5472 12.6186 10.5033 12.5499 10.4599 12.5823C10.4026 12.528 10.2842 12.5064 10.2136 12.4974C10.1682 12.4932 10.1129 12.4722 10.0717 12.4626C10.0488 12.4569 10.0253 12.4629 10.0018 12.4587C9.96766 12.4533 9.93653 12.4317 9.90327 12.4269C9.86847 12.423 9.8288 12.4341 9.79279 12.4335C9.72595 12.4323 9.65667 12.4275 9.59166 12.444C9.58617 12.4317 9.57579 12.4407 9.56847 12.4323C9.49247 12.45 9.39939 12.45 9.31821 12.4728C9.28128 12.4842 9.2413 12.4908 9.21902 12.513C9.17843 12.4998 9.11708 12.522 9.07436 12.5559C8.96571 12.5736 8.87171 12.6519 8.7655 12.6672C8.71881 12.7152 8.65746 12.6924 8.60955 12.7425C8.60008 12.7425 8.59245 12.7329 8.58269 12.7329C8.57201 12.7419 8.56804 12.7527 8.55369 12.762C8.4896 12.7581 8.43772 12.8148 8.35898 12.7986C8.34311 12.8064 8.34036 12.816 8.33365 12.8247C8.29703 12.8097 8.24881 12.8406 8.21523 12.8103C8.18319 12.8367 8.15938 12.8208 8.13558 12.8079C8.09468 12.816 8.05867 12.8004 8.02205 12.7854C8.00007 12.8097 7.96131 12.7944 7.93659 12.7812C7.94086 12.7761 7.93873 12.7698 7.93476 12.762C7.9079 12.7503 7.87219 12.7629 7.85358 12.7401C7.8371 12.7203 7.80353 12.7128 7.77758 12.6942C7.75439 12.678 7.7373 12.6528 7.70525 12.6468C7.6613 12.6135 7.62316 12.5559 7.57463 12.5313C7.55998 12.4803 7.51542 12.4407 7.48948 12.3948C7.36344 12.1779 7.30453 11.9481 7.23098 11.724C7.20931 11.5914 7.14614 11.4546 7.11745 11.3232C7.12203 11.3208 7.12874 11.3178 7.1263 11.3127C7.08754 11.274 7.10341 11.2053 7.07075 11.1678C7.08662 11.1063 7.05397 11.0337 7.04176 10.9656C7.04603 10.9635 7.04939 10.9614 7.05336 10.9587C7.02314 10.9077 7.01246 10.8342 7.01795 10.7805C7.01338 10.7829 7.00849 10.7847 7.00605 10.7775C6.97645 10.5987 6.96149 10.4127 6.93494 10.2342C6.92914 10.2198 6.91693 10.2336 6.91083 10.2198C6.93494 10.2033 6.91144 10.1709 6.91083 10.1463C6.91083 10.1424 6.92212 10.1349 6.92182 10.1307C6.92029 10.1232 6.91266 10.1085 6.91083 10.0962C6.90229 10.062 6.89984 10.0119 6.87299 9.9873C6.87512 9.9684 6.87482 9.9297 6.85437 9.9252C6.84644 9.9444 6.8446 9.9648 6.85193 9.9882C6.8385 10.0029 6.81134 10.0002 6.80859 10.0095C6.8269 10.0077 6.80859 10.0242 6.81653 10.0305C6.8269 10.0347 6.83789 10.0299 6.84766 10.0377C6.84247 10.0551 6.8269 10.0575 6.80859 10.0668C6.83484 10.0842 6.79425 10.1103 6.83301 10.1382C6.8208 10.1481 6.81531 10.1721 6.80279 10.1721C6.78143 10.0848 6.75884 10.0164 6.73809 9.9303C6.75091 9.9156 6.75671 9.9309 6.76739 9.9285C6.76495 9.9174 6.77655 9.9093 6.78631 9.9003C6.79547 9.9141 6.7976 9.9261 6.80035 9.9384C6.82324 9.9222 6.82873 9.8958 6.8446 9.8853C6.59801 9.0174 6.28854 8.0352 6.03248 7.5606Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.64656 0.397688C3.63313 0.387788 3.61055 0.410288 3.63069 0.418388C3.63466 0.406088 3.64351 0.411788 3.64656 0.397688Z\" fill=\"#4A9228\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.64656 0.397688C3.63313 0.387788 3.61055 0.410288 3.63069 0.418388C3.63466 0.406088 3.64351 0.411788 3.64656 0.397688Z\" fill=\"#4A9228\"/><path d=\"M41.4712 16.5071H42.5519V11.2271H41.4712V16.5071Z\" fill=\"${l.color}\"/><path d=\"M41.4395 10.1849H42.5839V9.06079H41.4395V10.1849Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M27.5062 16.5062L25.9168 13.382H24.4873V16.5062H23.3428V9.09106H26.2665C27.6973 9.09106 28.608 9.99676 28.608 11.2571C28.608 12.3191 27.9512 12.9962 27.1037 13.2254L28.8412 16.5062H27.5062ZM26.182 10.1009H24.4873V12.4238H26.182C26.9447 12.4238 27.4641 11.9966 27.4641 11.2679C27.4641 10.5389 26.9447 10.1009 26.182 10.1009Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M30.738 14.1739C30.738 15.0799 31.2254 15.6526 32.1049 15.6526C32.7089 15.6526 33.0266 15.4858 33.4078 15.1108L34.0967 15.7465C33.5458 16.2874 33.0266 16.5691 32.0836 16.5691C30.738 16.5691 29.668 15.8713 29.668 13.861C29.668 12.1531 30.5689 11.1643 31.9459 11.1643C33.3871 11.1643 34.2239 12.2053 34.2239 13.705V14.1739H30.738ZM33.0053 12.7159C32.8362 12.3196 32.4547 12.0493 31.9459 12.0493C31.4372 12.0493 31.0453 12.3196 30.8756 12.7159C30.77 12.955 30.7487 13.111 30.738 13.4347H33.1536C33.1432 13.111 33.1115 12.955 33.0053 12.7159Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M35.5592 18.0058C36.1205 18.517 36.6393 18.7039 37.4554 18.7039C38.8855 18.7039 39.7544 17.7664 39.7544 16.4752V11.2267H38.7052V11.7886C38.3029 11.3098 37.8686 11.1643 37.2964 11.1643C36.7559 11.1643 36.3005 11.3302 36.0039 11.6218C35.4847 12.1324 35.3999 12.8719 35.3999 13.7674C35.3999 14.6626 35.4847 15.403 36.0039 15.9127C36.3005 16.2037 36.7455 16.3816 37.2857 16.3816C37.8369 16.3816 38.2819 16.2358 38.6734 15.7777V16.4545C38.6734 17.1628 38.324 17.7973 37.413 17.7973C36.8831 17.7973 36.5868 17.6416 36.2474 17.3293L35.5592 18.0058ZM36.4806 13.7674C36.4806 12.934 36.6076 12.1114 37.5823 12.1114C38.5571 12.1114 38.6734 12.934 38.6734 13.7674C38.6734 14.5999 38.5571 15.4228 37.5823 15.4228C36.6076 15.4228 36.4806 14.5999 36.4806 13.7674Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M46.2502 16.5691C46.9805 16.5691 47.5107 16.2985 47.8607 15.9442C48.3686 15.4228 48.4961 14.7565 48.4961 13.861C48.4961 12.9757 48.3686 12.3094 47.8607 11.7886C47.5107 11.4346 46.9805 11.1643 46.2502 11.1643C45.519 11.1643 44.9995 11.4346 44.6498 11.7886C44.1416 12.3094 44.0146 12.9757 44.0146 13.861C44.0146 14.7565 44.1416 15.4228 44.6498 15.9442C44.9995 16.2985 45.519 16.5691 46.2502 16.5691ZM46.2502 12.1114C46.5676 12.1114 46.8435 12.2158 47.0449 12.4132C47.373 12.7369 47.4154 13.2889 47.4154 13.861C47.4154 14.4337 47.373 14.986 47.0449 15.3082C46.8435 15.5068 46.5676 15.6214 46.2502 15.6214C45.9322 15.6214 45.6673 15.5068 45.4658 15.3082C45.1375 14.986 45.0947 14.4337 45.0947 13.861C45.0947 13.2889 45.1375 12.7369 45.4658 12.4132C45.6673 12.2158 45.9322 12.1114 46.2502 12.1114Z\" fill=\"${l.color}\"/><path d=\"M53.2315 16.5067V13.2889C53.2315 12.4654 52.7548 12.1117 52.1508 12.1117C51.5469 12.1117 51.0384 12.4765 51.0384 13.2889V16.5067H49.958V11.2267H51.0176V11.7577C51.3878 11.362 51.9076 11.1643 52.4475 11.1643C52.9984 11.1643 53.4537 11.341 53.7717 11.6428C54.185 12.0388 54.3125 12.5389 54.3125 13.1317V16.5067H53.2315Z\" fill=\"${l.color}\"/><path d=\"M62.8518 13.2671V16.5062H63.9962V9.09106H62.8518V12.257H59.7897V9.09106H58.6465V16.5062H59.7897V13.2671H62.8518Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M68.7321 16.5064V16.027C68.3402 16.4128 67.9697 16.5688 67.3022 16.5688C66.6345 16.5688 66.1898 16.4128 65.8614 16.0894C65.5861 15.8086 65.4375 15.403 65.4375 14.9548C65.4375 14.0698 66.0628 13.4344 67.2922 13.4344H68.7113V13.0591C68.7113 12.3928 68.3719 12.07 67.5354 12.07C66.9421 12.07 66.6561 12.2053 66.3592 12.5803L65.6499 11.9242C66.1581 11.341 66.6879 11.1643 67.5775 11.1643C69.0498 11.1643 69.792 11.7781 69.792 12.9757V16.5064H68.7321ZM68.7113 14.1739H67.4506C66.8145 14.1739 66.4861 14.4547 66.4861 14.9341C66.4861 15.4129 66.7938 15.6838 67.4719 15.6838C67.8852 15.6838 68.1925 15.6526 68.4782 15.3814C68.6372 15.2251 68.7113 14.9755 68.7113 14.5999V14.1739Z\" fill=\"${l.color}\"/><path d=\"M71.4238 15.0479C71.4238 15.8288 71.8691 16.5062 72.8967 16.5062H73.5645V15.6002H73.0874C72.6528 15.6002 72.5045 15.3911 72.5045 14.9858V9.09106H71.4238V15.0479Z\" fill=\"${l.color}\"/><path d=\"M76.1916 16.5062C75.164 16.5062 74.7188 15.8288 74.7188 15.0479V9.09106H75.7994V14.9858C75.7994 15.3911 75.9478 15.6002 76.3824 15.6002H76.8594V16.5062H76.1916Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M80.9381 16.027V16.5064H81.9978V12.9757C81.9978 11.7781 81.2561 11.1643 79.7833 11.1643C78.8933 11.1643 78.3641 11.341 77.8554 11.9242L78.5652 12.5803C78.8619 12.2053 79.1479 12.07 79.7412 12.07C80.578 12.07 80.9174 12.3928 80.9174 13.0591V13.4344H79.4979C78.2686 13.4344 77.6436 14.0698 77.6436 14.9548C77.6436 15.403 77.7919 15.8086 78.0672 16.0894C78.3956 16.4128 78.8402 16.5688 79.5086 16.5688C80.1754 16.5688 80.5463 16.4128 80.9381 16.027ZM79.6569 14.1739H80.9174V14.5999C80.9174 14.9755 80.8432 15.2251 80.6845 15.3814C80.3979 15.6526 80.0912 15.6838 79.6777 15.6838C78.9998 15.6838 78.6919 15.4129 78.6919 14.9341C78.6919 14.4547 79.0203 14.1739 79.6569 14.1739Z\" fill=\"${l.color}\"/><path d=\"M86.9348 16.5067V13.2889C86.9348 12.4654 86.4581 12.1117 85.8544 12.1117C85.2498 12.1117 84.7416 12.4765 84.7416 13.2889V16.5067H83.6606V11.2267H84.7203V11.7577C85.0914 11.362 85.6102 11.1643 86.151 11.1643C86.7016 11.1643 87.1573 11.341 87.4753 11.6428C87.8885 12.0388 88.0155 12.5389 88.0155 13.1317V16.5067H86.9348Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M92.7626 15.9434V16.5059H93.8219V9.09106H92.7409V11.7569C92.3494 11.2991 91.9044 11.1638 91.3318 11.1638C90.792 11.1638 90.3253 11.3405 90.029 11.6315C89.4891 12.1631 89.4253 13.0586 89.4253 13.8605C89.4253 14.6621 89.4891 15.569 90.029 16.1C90.3253 16.3916 90.8023 16.5683 91.3428 16.5683C91.9258 16.5683 92.3597 16.4228 92.7626 15.9434ZM90.5054 13.8605C90.5054 12.923 90.654 12.1109 91.6285 12.1109C92.6036 12.1109 92.7409 12.923 92.7409 13.8605C92.7409 14.798 92.6036 15.6209 91.6285 15.6209C90.654 15.6209 90.5054 14.798 90.5054 13.8605Z\" fill=\"${l.color}\"/></svg>`}),RC=()=>({getDefaultIconProps:()=>({width:\"30\",height:\"28\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 30 28\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13.0737 7.92867C13.5979 7.70041 14.1494 7.52794 14.6985 7.41067L14.6731 0C12.7746 0.0267826 11.0031 0.580493 9.49561 1.52438L12.775 8.06806C12.8732 8.02098 12.9704 7.97391 13.0737 7.92867\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.0274 8.47744L7.80698 2.85086C6.4668 4.15388 5.4823 5.82556 5.01672 7.70541L10.6433 9.87825C10.9199 9.33611 11.3957 8.87553 12.0274 8.47744\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.1324 8.57166C20.4077 11.2075 17.4742 11.1432 18.6861 13.2004C19.2491 14.156 21.0231 15.4026 22.7612 16.4642C24.111 14.7331 24.9186 12.5517 24.9186 10.179C24.9186 8.10682 24.3029 6.1805 23.2481 4.57233L18.855 8.16343C18.9623 8.2878 19.0593 8.4205 19.1324 8.57166\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M18.2101 7.65406L21.8599 2.8829C20.5229 1.57116 18.8273 0.629304 16.9344 0.22229L15.5372 7.27707C16.5551 7.17197 17.5115 7.28336 18.2101 7.65406\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14.0409 19.4058C13.435 19.4058 12.9437 18.911 12.9437 18.3004C12.9437 17.6899 13.435 17.1948 14.0409 17.1948C14.6464 17.1948 15.1375 17.6899 15.1375 18.3004C15.1375 18.911 14.6464 19.4058 14.0409 19.4058M16.7092 16.029C14.6683 14.1648 12.1808 15.5148 10.9052 13.0074C10.4521 12.1171 10.3012 11.3518 10.3929 10.6861L4.72004 9.9826C4.71883 10.0481 4.71521 10.1131 4.71521 10.179C4.71521 15.8023 9.23816 20.3615 14.8169 20.3615C16.363 20.3615 17.8275 20.0101 19.1373 19.3843C18.4664 18.1724 17.6128 16.8548 16.7092 16.029\" fill=\"${l.color}\"/><mask id=\"mask0_6775_6825\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"21\" width=\"5\" height=\"7\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.0159912 21.0752H4.93306V27.6313H0.0159912V21.0752Z\" fill=\"white\"/></mask><g mask=\"url(#mask0_6775_6825)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.64119 22.817C3.70862 22.4052 3.15267 22.2459 2.60657 22.2459C2.03189 22.2459 1.66434 22.4518 1.66434 22.7702C1.66434 23.735 4.93306 23.4635 4.93306 25.6925C4.93306 26.9195 3.89703 27.6314 2.46507 27.6314C1.34429 27.6314 0.788334 27.3407 0.148036 27.013V25.6363C1.07094 26.2452 1.63636 26.4605 2.34248 26.4605C2.955 26.4605 3.28491 26.2452 3.28491 25.8703C3.28491 24.8215 0.0159912 25.2054 0.0159912 22.9108C0.0159912 21.8056 0.976941 21.0752 2.46507 21.0752C3.18125 21.0752 3.83121 21.2251 4.64119 21.5715V22.817Z\" fill=\"${l.color}\"/></g><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.99331 24.1564L11.8289 27.547H9.82222L7.27854 24.5498V27.547H5.67749V21.1594H7.27854V24.0535H7.29766L9.32282 21.1594H11.0845L8.99331 24.1564Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M23.7779 27.5471H22.4311L19.6016 23.4541V27.5471H18.0001V21.1595H19.4697L22.1767 25.0651V21.1595H23.7779V27.5471Z\" fill=\"${l.color}\"/><mask id=\"mask1_6775_6825\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"24\" y=\"21\" width=\"6\" height=\"7\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M24.8203 21.1595H29.6521V27.5471H24.8203V21.1595Z\" fill=\"white\"/></mask><g mask=\"url(#mask1_6775_6825)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M29.6522 27.5471H24.8203V21.1595H29.5862V22.3304H26.4216V23.6695H29.4449V24.8403H26.4216V26.3762H29.6522V27.5471Z\" fill=\"${l.color}\"/></g><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.309581 19.6352H0.473229C0.558977 19.6352 0.643116 19.5918 0.643116 19.4656C0.643116 19.3548 0.582729 19.2982 0.466184 19.2982H0.309581V19.6352ZM0.555555 19.0263C0.810185 19.0263 0.961352 19.2306 0.961352 19.4526C0.961352 19.6155 0.8907 19.7374 0.748792 19.8158C0.876006 19.8918 0.91405 20.0747 1.08917 20.5097H0.748792C0.615539 20.1921 0.566224 19.9073 0.398752 19.9073H0.309581V20.5097H0V19.0263H0.555555Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.17151 20.5097H1.25525V19.0261H2.15903V19.2982H1.56483V19.6092H2.13166V19.8809H1.56483V20.2378H2.17151V20.5097Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.55738 19.4526C3.39917 19.3611 3.24619 19.3154 3.09321 19.3154C2.75625 19.3154 2.6379 19.5633 2.6379 19.7831C2.6379 20.0462 2.8108 20.2201 3.06765 20.2201C3.14414 20.2201 3.18258 20.2116 3.27336 20.168V19.9941H3.09321V19.7224H3.58315V20.3291C3.49035 20.4443 3.26068 20.5291 3.0604 20.5291C2.62703 20.5291 2.31946 20.2138 2.31946 19.7701C2.31946 19.3176 2.62501 19.0066 3.06765 19.0066C3.25323 19.0066 3.43379 19.0567 3.55738 19.1283V19.4526Z\" fill=\"${l.color}\"/><mask id=\"mask2_6775_6825\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"30\" height=\"28\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 27.6313H29.6522V0H0V27.6313Z\" fill=\"white\"/></mask><g mask=\"url(#mask2_6775_6825)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.87585 20.5096H4.18544V19.026H3.87585V20.5096Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.12199 19.3155C4.88507 19.3155 4.72867 19.496 4.72867 19.7677C4.72867 20.0396 4.88507 20.2202 5.12199 20.2202C5.35689 20.2202 5.5135 20.0396 5.5135 19.7677C5.5135 19.496 5.35689 19.3155 5.12199 19.3155M5.12199 20.5292C4.66668 20.5292 4.41003 20.1463 4.41003 19.7677C4.41003 19.409 4.6542 19.0067 5.12199 19.0067C5.58999 19.0067 5.83214 19.4112 5.83214 19.7677C5.83214 20.1486 5.56825 20.5292 5.12199 20.5292\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.2885 20.5097H7.02804L6.34124 19.5589V20.5097H6.03186V19.0261H6.31588L6.97892 19.9333V19.0261H7.2885V20.5097Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14.0412 22.6848L13.0989 25.1672H15.0774L14.0412 22.6848ZM17.8008 27.5468H16.0764L15.5488 26.282H12.675L12.1941 27.5468H10.4983L13.0893 21.1576H14.9454L17.8008 27.5468Z\" fill=\"${l.color}\"/></g></svg>`}),WC=()=>({getDefaultIconProps:()=>({width:\"95\",height:\"24\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 210 50\" fill=\"none\"><path fill=\"${l.color}\" d=\"M5.54548 20.6907C5.5454 20.6906 5.54557 20.6908 5.54548 20.6907H5.55123C5.54923 20.6906 5.54749 20.6908 5.54548 20.6907Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.64384 25.0805C0.753465 23.8739 -0.0279667 22.403 0.000762415 21.2021L0.00650824 21.1963C0.477666 20.2483 1.50042 19.6909 3.01732 19.4209C2.04301 17.1757 2.05575 16.0719 2.06696 15.1017C2.06943 14.8876 2.07183 14.6799 2.06351 14.468C5.80607 14.6549 7.10847 16.051 8.48146 17.5227C9.21848 18.3127 9.97584 19.1246 11.1419 19.7829C11.5499 20.0127 11.998 20.1678 12.4577 20.2598C14.3941 20.6505 18.6575 21.4836 18.6575 21.4836C18.6575 21.4836 15.8592 18.3005 14.4802 16.7204C14.1642 16.3584 13.8022 16.0423 13.3885 15.801C12.243 15.1324 11.1598 14.886 10.1055 14.6462C8.12457 14.1955 6.24571 13.7681 4.24693 10.6068C4.42859 10.5083 4.60072 10.4031 4.77775 10.295C5.59184 9.79781 6.5097 9.23722 8.93552 8.96349C8.67696 8.24526 8.29199 6.54449 9.06767 5.45279C10.0215 4.87246 11.5441 4.72881 13.6299 5.855C13.7275 3.60838 14.6066 2.20065 15.6581 1.62032C16.7039 1.55137 17.7036 2.16043 18.6919 3.34407C20.1416 1.37192 21.1017 0.83022 21.9447 0.354527C22.1308 0.249519 22.3112 0.147727 22.4899 0.0344749C24.1987 3.38095 23.6446 5.20911 23.0602 7.13719C22.7465 8.17198 22.4242 9.23555 22.4382 10.5781C22.4382 11.0492 22.5301 11.5146 22.6795 11.9571C23.3116 13.8359 24.725 17.9557 24.725 17.9557C24.725 17.9557 26.0696 13.9336 26.7476 11.9456C26.9027 11.4916 26.9946 11.0205 26.9946 10.5378C27.0006 9.20712 26.671 8.14182 26.3501 7.10468C25.7483 5.15932 25.177 3.31301 26.9085 0C27.0856 0.10981 27.2637 0.207666 27.447 0.308386C28.2803 0.766304 29.2213 1.28341 30.672 3.25214C31.1604 2.66606 32.4417 1.48242 33.769 1.60883C34.7458 2.14894 35.6364 3.39578 35.7053 5.77455C37.6876 4.73456 39.3482 4.79202 40.3709 5.41831C40.9513 6.29742 40.9225 7.46383 40.3997 8.91752C42.8296 9.19537 43.7775 9.75883 44.6098 10.2536C44.793 10.3625 44.9706 10.4681 45.1572 10.5666C43.1182 13.7279 41.262 14.1609 39.3045 14.6176C38.2556 14.8623 37.1777 15.1137 36.0271 15.7953C35.6249 16.0366 35.2686 16.3469 34.9584 16.6974C33.6541 18.1855 30.8041 21.4721 30.8041 21.4721C30.8041 21.4721 34.9469 20.6333 37.0039 20.2253C37.4693 20.1334 37.929 19.9725 38.3427 19.7369C39.4954 19.0756 40.2508 18.2566 40.9859 17.4597C42.365 15.9646 43.6726 14.547 47.3981 14.3933C47.3918 14.603 47.3965 14.8075 47.4013 15.0179C47.423 15.9719 47.4475 17.0479 46.473 19.2887C47.2199 19.4209 48.8805 19.938 49.4378 21.1561C49.4608 22.2708 48.8288 23.6728 46.812 24.9196C48.7024 26.1263 49.4838 27.5972 49.4551 28.7981C48.9839 29.7461 47.9612 30.3035 46.4443 30.5735C47.4186 32.8187 47.4058 33.9225 47.3946 34.8927C47.3922 35.1068 47.3898 35.3145 47.3981 35.5264C43.6555 35.3395 42.3531 33.9434 40.9801 32.4717C40.2431 31.6817 39.4857 30.8698 38.3197 30.2115C37.906 29.9817 37.4635 29.8266 37.0039 29.7346C35.0675 29.3439 30.8041 28.5108 30.8041 28.5108C30.8041 28.5108 33.6023 31.694 34.9813 33.2741C35.2974 33.6361 35.6593 33.9521 36.073 34.1934C37.2186 34.862 38.3018 35.1084 39.356 35.3482C41.337 35.7989 43.2159 36.2263 45.2147 39.3876C45.033 39.4862 44.8609 39.5913 44.6838 39.6994C43.8697 40.1966 42.9519 40.7572 40.5261 41.0309C40.7846 41.7492 41.1696 43.4499 40.3939 44.5416C39.4401 45.122 37.9175 45.2656 35.8317 44.1394C35.734 46.386 34.8549 47.7938 33.8035 48.3741C32.7577 48.443 31.7579 47.834 30.7697 46.6503C29.32 48.6225 28.3599 49.1642 27.5169 49.6399C27.3308 49.7449 27.1504 49.8467 26.9717 49.9599C25.2629 46.6135 25.817 44.7853 26.4014 42.8572C26.7151 41.8224 27.0374 40.7589 27.0234 39.4164C27.0176 38.9452 26.9257 38.4798 26.7763 38.0374C26.1443 36.1642 24.7308 32.0387 24.7308 32.0387C24.7308 32.0387 23.3863 36.0608 22.7083 38.0488C22.5531 38.5028 22.4612 38.9739 22.4612 39.4566C22.4552 40.7873 22.7848 41.8526 23.1057 42.8897C23.7076 44.8351 24.2788 46.6814 22.5474 49.9944C22.3702 49.8846 22.1922 49.7868 22.0089 49.686C21.1755 49.2281 20.2345 48.711 18.7839 46.7423C18.2955 47.3284 17.0141 48.512 15.6869 48.3856C14.7101 47.8455 13.8195 46.5986 13.7505 44.2199C11.7682 45.2599 10.1077 45.2024 9.08491 44.5761C8.50458 43.697 8.53331 42.5306 9.05618 41.0769C6.62621 40.7991 5.67835 40.2356 4.84604 39.7408C4.66283 39.6319 4.48522 39.5263 4.29864 39.4278C6.3376 36.2665 8.19387 35.8335 10.1514 35.3768C11.2002 35.1322 12.2781 34.8807 13.4288 34.1991C13.831 33.9578 14.1872 33.6475 14.4975 33.2971C15.8018 31.8089 18.6517 28.5223 18.6517 28.5223C18.6517 28.5223 14.509 29.3612 12.452 29.7691C11.9866 29.8611 11.5269 30.0219 11.1132 30.2575C9.96043 30.9188 9.20502 31.7378 8.46991 32.5347C7.09085 34.0298 5.78325 35.4475 2.05777 35.6011C2.064 35.3914 2.05935 35.1869 2.05456 34.9765C2.03286 34.0225 2.00838 32.9465 2.98285 30.7057C2.23589 30.5735 0.575345 30.0564 0.0179999 28.8383C-0.00498341 27.7236 0.627057 26.3274 2.64384 25.0805ZM3.47699 16.0596C3.47124 17.2719 4.4309 19.5185 5.54548 20.6907C4.29733 20.634 2.02231 20.7724 1.40849 21.5641C1.41998 22.8167 4.17223 24.5691 6.0741 25.0863C4.12052 25.6379 1.41998 27.2812 1.41998 28.4763C2.0865 29.3612 4.23543 29.5278 5.49952 29.4703C4.40781 30.6252 3.454 32.8489 3.46549 34.0325C4.73532 33.8831 6.68316 32.7167 7.70591 31.4124C8.75165 30.0794 9.9985 28.8498 11.5671 28.5395C14.7331 27.9132 22.3463 26.3848 22.3463 26.3848C22.3463 26.3848 17.267 32.2398 15.1238 34.6818C14.0608 35.8942 12.406 36.3596 10.7742 36.6009C9.13088 36.8422 7.16581 37.9684 6.38437 38.9912C7.43011 39.6002 9.84911 39.8875 11.4177 39.5083C10.7512 40.5655 9.72844 42.6168 10.1019 43.5476C11.1936 44.1681 14.0838 42.6455 15.48 41.255C14.9744 43.2258 15.0491 46.386 16.0776 46.9894C17.1693 46.8515 18.3931 45.0645 18.9735 43.9383C19.4216 45.4667 20.8639 47.4088 21.8924 47.9891C22.3922 46.8112 22.3635 44.5359 21.7487 42.996C21.1224 41.4216 20.68 39.7209 21.1971 38.204C22.2428 35.1415 24.7308 27.7638 24.7308 27.7638C24.7308 27.7638 27.2475 35.107 28.2817 38.1867C28.7931 39.7209 28.3679 41.3872 27.7588 42.9271C27.1498 44.4784 27.1325 46.748 27.6267 47.9374C28.6782 47.3341 30.1376 45.3748 30.5915 43.8234C31.1661 44.9323 32.4244 46.8457 33.4185 46.9836C34.4987 46.3458 34.6366 43.0764 34.131 41.1688C35.5789 42.588 38.3484 44.1107 39.3826 43.5131C39.8136 42.4961 38.877 40.5425 38.199 39.4738C39.7446 39.8473 42.1406 39.5657 43.1576 38.9624C42.3935 37.9339 40.4169 36.825 38.7793 36.5894C37.1073 36.3423 35.418 35.8769 34.3665 34.6703C32.2406 32.2283 27.1153 26.3791 27.1153 26.3791C27.1153 26.3791 34.7113 27.8673 37.8887 28.505C39.4688 28.8211 40.6927 30.0277 41.7212 31.3262C42.7497 32.6248 44.709 33.774 45.9788 33.9406C45.9846 32.7282 45.025 30.4816 43.9104 29.3095C45.1572 29.3669 47.4383 29.229 48.0531 28.4361C48.0416 27.1835 45.2894 25.431 43.3875 24.9139C45.3411 24.3623 48.0416 22.719 48.0416 21.5239C47.3751 20.639 45.2262 20.4724 43.9621 20.5298C45.0538 19.3749 46.0076 17.1513 45.9961 15.9676C44.7263 16.117 42.7784 17.2834 41.7557 18.5877C40.7099 19.9208 39.4631 21.1504 37.8945 21.4607C34.7285 22.087 27.1153 23.6153 27.1153 23.6153C27.1153 23.6153 32.1946 17.7603 34.3378 15.3184C35.4008 14.106 37.0498 13.6406 38.6874 13.3993C40.3307 13.1579 42.2958 12.0318 43.0772 11.009C42.0315 10.3999 39.6125 10.1127 38.0439 10.4919C38.7104 9.43464 39.7331 7.38338 39.3597 6.45256C38.268 5.83201 35.3778 7.35466 33.9816 8.74514C34.4872 6.77433 34.4125 3.61412 33.384 3.01081C32.2923 3.14871 31.0684 4.93566 30.4881 6.06184C30.0399 4.53346 28.5977 2.59137 27.5692 2.01104C27.0693 3.18893 27.0981 5.46428 27.7129 7.00416C28.3392 8.57852 28.7816 10.2793 28.2645 11.7962C27.2187 14.8587 24.7308 22.2363 24.7308 22.2363C24.7308 22.2363 22.2141 14.8932 21.1799 11.8134C20.6627 10.2793 21.0879 8.61299 21.697 7.07311C22.3061 5.52174 22.3233 3.25214 21.8292 2.06275C20.7777 2.66606 19.3182 4.62539 18.8643 6.17676C18.2897 5.06782 17.0314 3.15446 16.0374 3.01656C14.9571 3.65434 14.8192 6.92372 15.3249 8.83133C13.8769 7.41211 11.1074 5.88947 10.0732 6.48704C9.64226 7.50405 10.5788 9.45763 11.2568 10.5264C9.71121 10.1529 7.3152 10.4344 6.29819 11.0377C7.06238 12.0662 9.03895 13.1752 10.6765 13.4108C12.3485 13.6578 14.0378 14.1232 15.0893 15.3299C17.2153 17.7718 22.3405 23.6211 22.3405 23.6211C22.3405 23.6211 14.7445 22.1329 11.5671 21.4951C9.98701 21.1791 8.76314 19.9725 7.73464 18.6739C6.70614 17.3754 4.74681 16.2262 3.47699 16.0596Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M61.62 13.9548C61.4301 13.52 61.2528 13.1141 60.9869 12.7842C60.5617 12.2556 59.8664 12.1694 59.8664 12.1694C60.6306 12.0775 61.2282 11.7442 61.6764 11.296C62.136 10.8306 62.3831 10.1698 62.3831 9.38841C62.3831 8.53803 62.0786 7.78532 61.5097 7.21074C60.6823 6.3776 59.6596 6.31439 58.2001 6.31439H55.3272V17.3349H57.0165V12.698H57.6026C58.8552 12.698 59.2861 12.7727 60.0101 14.3988L61.3259 17.3349H63.1301L61.7166 14.1804V14.1747C61.6838 14.1009 61.6516 14.0273 61.62 13.9548ZM57.8784 11.4052H57.028V7.63593H58.4644C59.1769 7.63593 59.763 7.67041 60.2284 8.14156C60.4525 8.36565 60.6823 8.85405 60.6823 9.43437C60.6823 9.9515 60.4812 10.4571 60.1422 10.7961C59.5849 11.3592 58.8207 11.4052 57.8784 11.4052Z\"/><path fill=\"${l.color}\" d=\"M102.374 12.911V17.3238H104.006V12.7329C104.006 11.5722 104.006 10.5724 103.19 9.75651C102.863 9.42326 102.248 9.02679 101.208 9.02679C99.9551 9.02679 98.9381 9.76801 98.8232 9.85419L98.6394 9.99209V9.26812H97.2431V17.3295H98.8749V11.0666L98.9209 11.0321C99.0128 10.9689 99.8402 10.4 100.834 10.4C101.369 10.4 101.759 10.6012 101.949 10.7908C102.357 11.1987 102.374 11.7963 102.374 12.911Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M68.1921 9.03229C65.957 9.03229 64.3941 10.8077 64.3941 13.3531C64.3941 15.8985 65.934 17.5361 68.3128 17.5361C69.709 17.5361 70.749 17.0075 71.2259 16.7087L70.6858 15.6802C70.3468 15.8583 69.5194 16.2663 68.4679 16.2663C66.7729 16.2663 65.9972 15.0194 65.9972 13.8588V13.7439H71.6052C71.6052 13.7094 71.6052 13.6691 71.6109 13.6289C71.6224 13.5025 71.6339 13.3531 71.6339 13.198C71.6339 10.5894 70.3468 9.03229 68.1921 9.03229ZM70.0998 12.5832H65.98L65.9972 12.4568C66.1639 11.1065 67.0372 10.2332 68.2266 10.2332C69.6114 10.2332 70.0998 11.4398 70.0998 12.4683V12.5832Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M77.6211 9.03229C78.6266 9.03229 79.6838 9.2966 80.7583 9.81947H80.7641V17.289C80.7641 18.5531 80.7066 19.3748 79.9481 20.1505C79.2759 20.8227 78.3451 21.1502 77.0982 21.1502C75.2366 21.1502 74.0299 20.3516 73.7197 20.0758L74.3862 19.03C75.2136 19.5529 76.0582 19.9264 76.8914 19.9264C77.6039 19.9264 78.1382 19.6563 78.5404 19.3173C79.092 18.8404 79.138 18.1337 79.138 17.3293V16.6915L78.9714 16.7719L78.9024 16.8121L78.8873 16.8207C78.649 16.9554 77.9776 17.335 76.9431 17.335C74.5069 17.335 73.3979 15.278 73.3979 13.3704C73.3979 10.8537 75.1734 9.03229 77.6211 9.03229ZM79.0978 15.4619L79.1437 15.4274H79.138V10.6756L79.069 10.6469C78.4715 10.3826 77.9314 10.3308 77.5866 10.3308C76.0697 10.3308 75.0527 11.5202 75.0527 13.2842C75.0527 14.9103 75.9893 16.0479 77.3338 16.0479C78.3048 16.0479 79.0978 15.4619 79.0978 15.4619Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M87.1821 13.3187C87.1821 10.756 88.8024 9.03229 91.2157 9.03229C93.537 9.03229 95.0998 10.6871 95.0998 13.2497C95.0998 15.8124 93.3876 17.5361 91.0663 17.5361C88.7449 17.5361 87.1821 15.8813 87.1821 13.3187ZM88.8311 13.2497C88.8311 15.0022 89.7964 16.2203 91.1812 16.2203C92.5774 16.2203 93.445 15.0711 93.445 13.3187C93.445 11.5662 92.497 10.3481 91.1122 10.3481C89.7275 10.3481 88.8311 11.4972 88.8311 13.2497Z\"/><path fill=\"${l.color}\" d=\"M83.3497 17.3294H84.9873V9.6817H83.3497V17.3294Z\"/><path fill=\"${l.color}\" d=\"M84.1773 8.27416C83.6256 8.27416 83.1888 7.84887 83.1888 7.3029C83.1888 6.75692 83.6313 6.31439 84.1773 6.31439C84.7233 6.31439 85.1486 6.75117 85.1486 7.3029C85.1486 7.85462 84.7233 8.27416 84.1773 8.27416Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M126.983 29.7345C128.69 29.7345 130.483 30.1884 132.316 31.079L132.356 31.0963V43.4038C132.356 45.5527 132.264 46.9547 130.96 48.2878C129.81 49.4369 128.213 50 126.093 50C122.841 50 120.761 48.5636 120.295 48.1269L121.49 46.2537C122.892 47.1558 124.329 47.6155 125.748 47.6155C126.932 47.6155 127.828 47.3455 128.495 46.7824C129.414 45.9837 129.489 44.8058 129.489 43.4613V42.8522L129.299 42.9499C129.288 42.9553 129.274 42.9632 129.256 42.973L129.184 43.0131L129.177 43.0171C128.791 43.2396 127.628 43.9094 125.834 43.9094C121.669 43.9094 119.772 40.4045 119.772 37.1409C119.772 32.8487 122.806 29.7345 126.983 29.7345ZM129.437 40.6401L129.489 40.5998L129.494 40.6113V32.6361L129.414 32.6017C128.598 32.2454 127.771 32.073 126.926 32.073C124.398 32.073 122.697 34.0554 122.697 37.003C122.697 39.7207 124.26 41.6169 126.495 41.6169C128.104 41.6169 129.437 40.6401 129.437 40.6401Z\"/><path fill=\"${l.color}\" d=\"M156.844 44.2831C155.454 44.2831 154.288 43.8751 153.552 43.1396C152.529 42.1168 152.529 40.8894 152.529 39.2032V32.4639H150.093V30.1368H152.529V26.109H155.425V30.1368H159.551V32.4639H155.425V39.2095C155.425 40.3299 155.425 41.8698 157.448 41.8698C158.315 41.8698 158.942 41.6457 159.235 41.5308L159.953 43.5189C159.482 43.7889 158.402 44.2831 156.844 44.2831Z\"/><path fill=\"${l.color}\" d=\"M87.5499 43.1396C88.2853 43.875 89.4517 44.283 90.8422 44.283V44.2773C92.3993 44.2773 93.4796 43.7831 93.9507 43.5131L93.2325 41.525C92.9394 41.6399 92.3131 41.864 91.4455 41.864C89.423 41.864 89.423 40.3241 89.423 39.2037V32.4581H93.5485V30.131H89.423V26.1032H86.5271V30.131H84.0909V32.4581H86.5271V39.1975C86.5271 40.8894 86.5271 42.1168 87.5499 43.1396Z\"/><path fill=\"${l.color}\" d=\"M77.3511 44.283C74.6448 44.283 72.8233 43.1568 72.4154 42.881L73.4152 41.0251C73.4152 41.0251 73.4267 41.0308 73.4324 41.0366C73.8978 41.2951 75.3113 42.0766 77.035 42.0766C78.5922 42.0766 79.6034 41.3469 79.6034 40.2207C79.6034 39.1252 78.6628 38.7311 77.099 38.0758L76.9661 38.02L76.5179 37.8304L76.5073 37.8259C74.9799 37.1713 72.898 36.2791 72.898 33.8083C72.898 31.3319 74.9321 29.7403 77.9544 29.7403C80.3446 29.7403 81.8213 30.5792 82.3154 30.9182L81.3444 32.7109C80.9422 32.4925 79.5689 31.8088 78.1555 31.8088C76.4087 31.8088 75.7882 32.7281 75.7882 33.521C75.7882 34.5986 76.8916 35.0643 78.2886 35.6541L78.2991 35.6585L78.5002 35.7447C80.3963 36.5261 82.551 37.4167 82.551 40.0253C82.551 42.6339 80.5113 44.2945 77.3511 44.2945V44.283Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M206.253 30.3262V25.2526H209.149V43.9151H206.655V42.7831L206.385 42.9785C205.006 44.0357 203.598 44.2598 202.656 44.2598C198.996 44.2598 196.537 41.4616 196.537 37.204C196.537 32.9463 199.404 29.7401 203.202 29.7401C204.305 29.7401 205.311 29.9872 206.04 30.4296L206.236 30.5503L206.253 30.3262ZM206.126 40.9502L206.253 40.864V32.9405L206.195 32.9003C205.437 32.389 204.581 32.1304 203.661 32.1304C201.11 32.1304 199.461 34.0955 199.461 37.1465C199.461 39.9447 201.047 41.904 203.317 41.904C204.754 41.904 205.78 41.1908 206.123 40.9527L206.126 40.9502Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M101.946 29.7345C98.1266 29.736 95.4561 32.7694 95.4561 37.1121C95.4561 41.456 98.0819 44.2542 102.15 44.2542C104.632 44.2542 106.448 43.2774 107.166 42.8177L106.189 40.9676C105.655 41.2491 104.23 41.9846 102.403 41.9846C99.5758 41.9846 98.2888 39.9046 98.2888 37.974V37.8419H107.781C107.781 37.7963 107.785 37.7465 107.79 37.6924L107.793 37.6512C107.795 37.6292 107.797 37.6066 107.798 37.5833C107.815 37.3707 107.833 37.1121 107.833 36.8478C107.833 32.396 105.633 29.7359 101.946 29.7345ZM105.115 35.7446H98.2715L98.2888 35.601C98.5646 33.3486 100.018 31.8949 102.001 31.8949C104.299 31.8949 105.115 33.9002 105.115 35.6182V35.7446Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M173.944 29.7058C175.915 29.7058 177.19 30.1425 178.207 31.1653L178.219 31.1595C179.27 32.2167 179.27 33.5555 179.27 35.4114V43.9095H176.777V42.7488L176.57 42.8982C176.145 43.2028 174.599 44.1968 172.519 44.1968C169.905 44.1968 168.147 42.4673 168.147 39.8989C168.147 36.7215 170.755 35.1126 175.898 35.1126H176.541V34.4346C176.541 33.5613 176.461 33.0097 176.041 32.5902C175.57 32.1133 174.886 31.918 173.685 31.918C172.036 31.918 170.525 32.6534 169.956 32.9637L168.98 31.1365C169.359 30.8492 171.077 29.7058 173.944 29.7058ZM176.466 41.0538L176.535 41.0193L176.53 41.0136V37.0949H175.742C173.507 37.0949 172.054 37.4684 171.295 38.2269C170.899 38.6233 170.715 39.1117 170.715 39.7553C170.715 41.1285 171.738 42.0134 173.312 42.0134C174.789 42.0134 175.926 41.3641 176.352 41.117L176.414 41.0826L176.466 41.0538Z\"/><path fill=\"${l.color}\" d=\"M191.118 43.9094V36.3594C191.118 34.492 191.09 33.4865 190.423 32.8142C190.113 32.5039 189.469 32.1707 188.584 32.1707C186.956 32.1707 185.571 33.1026 185.4 33.2175L185.384 33.2279L185.332 33.2681V43.9036H182.436V30.1309H184.93V31.2973L185.137 31.1422C185.327 30.9985 187.068 29.7287 189.217 29.7287C190.998 29.7287 192.049 30.4125 192.624 30.987C194.02 32.389 194.02 34.0955 194.02 36.0663V43.9036H191.124L191.118 43.9094Z\"/><path fill=\"${l.color}\" d=\"M162.757 43.9096H165.647V25.2414H162.757V43.9096Z\"/><path fill=\"${l.color}\" d=\"M110.591 43.9095V30.1367H113.084V32.2799L113.326 31.8547C113.326 31.8547 114.871 29.7345 117.767 29.7345C118.537 29.7345 118.968 29.9069 119.158 29.9931L118.503 32.2167C118.29 32.188 117.917 32.1477 117.647 32.1477C116.446 32.1477 114.751 32.5327 113.498 34.3599L113.475 34.3944V43.9095H110.591Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M135.045 37.0547C135.045 32.6764 137.82 29.7345 141.94 29.7345C145.91 29.7345 148.576 32.5672 148.576 36.9398C148.576 41.3123 145.652 44.2542 141.681 44.2542C137.711 44.2542 135.045 41.433 135.045 37.0547ZM137.969 36.9398C137.969 39.8586 139.578 41.8984 141.882 41.8984C144.209 41.8984 145.652 39.9736 145.652 37.0547C145.652 34.1358 144.071 32.096 141.767 32.096C139.463 32.096 137.969 34.0209 137.969 36.9398Z\"/><path fill=\"${l.color}\" d=\"M144.422 28.5459C143.514 28.5459 142.773 27.8046 142.773 26.8908C142.773 25.977 143.514 25.2356 144.422 25.2356C145.33 25.2356 146.043 25.977 146.043 26.8908C146.043 27.8046 145.319 28.5459 144.422 28.5459Z\"/><path fill=\"${l.color}\" d=\"M137.584 26.8908C137.584 27.8046 138.326 28.5459 139.234 28.5459C140.13 28.5459 140.855 27.8046 140.855 26.8908C140.855 25.977 140.142 25.2356 139.234 25.2356C138.326 25.2356 137.584 25.977 137.584 26.8908Z\"/><path fill=\"${l.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M62.1878 25.1608C57.0567 25.1608 53.4771 29.0852 53.4771 34.7104C53.4771 40.3355 57.0338 44.3117 62.1361 44.3117C67.2383 44.3117 70.795 40.416 70.795 34.6242C70.795 28.8324 67.2613 25.1608 62.1935 25.1608H62.1878ZM62.185 41.8352C58.8539 41.8336 56.5281 38.9382 56.5281 34.7966C56.5281 30.6538 58.7345 27.5856 62.0154 27.5856C65.2963 27.5856 67.7267 30.4585 67.7267 34.5725C67.7267 38.0823 66.268 41.8334 62.185 41.8352Z\"/><path fill=\"${l.color}\" d=\"M63.0898 22.2539C63.0898 23.1677 63.8312 23.9091 64.7393 23.9091C65.6358 23.9091 66.3599 23.1677 66.3599 22.2539C66.3599 21.3401 65.6473 20.5988 64.7393 20.5988C63.8312 20.5988 63.0898 21.3401 63.0898 22.2539Z\"/><path fill=\"${l.color}\" d=\"M59.5508 23.9091C58.6428 23.9091 57.9014 23.1677 57.9014 22.2539C57.9014 21.3401 58.6428 20.5988 59.5508 20.5988C60.4589 20.5988 61.1715 21.3401 61.1715 22.2539C61.1715 23.1677 60.4474 23.9091 59.5508 23.9091Z\"/></svg>`}),XC=()=>({getDefaultIconProps:()=>({width:\"78\",height:\"30\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 78 30\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M31.5317 29.8053C30.0091 29.8053 28.8009 29.2922 27.9238 28.2654C27.0131 27.2067 26.5995 25.8661 26.5995 23.9957C26.5995 21.7119 27.2615 20.1392 28.5693 19.0633C29.3966 18.3847 30.307 18.0872 31.4325 18.0872C32.674 18.0872 33.7659 18.4506 34.6598 19.2288L33.8986 20.2218C33.0541 19.6099 32.3422 19.3615 31.4656 19.3615C30.3724 19.3615 29.5125 19.7919 29.0155 20.8178C28.4859 21.91 28.3868 22.7212 28.3868 24.0783C28.3868 25.6508 28.6682 26.8261 29.1975 27.5212C29.6943 28.1667 30.6714 28.5473 31.6476 28.5473C32.2926 28.5473 32.8718 28.3816 33.3352 28.1172V24.8726H31.2335L30.9683 23.565H34.9077V28.8949C33.9815 29.4743 32.7401 29.8053 31.5317 29.8053\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M40.1281 22.2908C38.8048 22.2908 38.2579 23.234 38.2579 25.3203C38.2579 27.8522 38.904 28.6966 40.195 28.6966C41.353 28.6966 42.0646 27.8024 42.0646 25.6345C42.0646 23.0688 41.32 22.2908 40.1281 22.2908M40.1622 29.8714C37.944 29.8714 36.5701 28.183 36.5701 25.485C36.5701 22.8036 37.944 21.1157 40.1281 21.1157C42.5782 21.1157 43.7698 23.0688 43.7698 25.5682C43.7698 28.2 42.3631 29.8714 40.1622 29.8714\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M48.7775 22.4231H47.139V27.4217C47.139 28.4478 47.3879 28.7623 48.2147 28.7623C48.4969 28.7623 48.7285 28.7129 48.9929 28.5965L49.1747 29.5235C48.7114 29.7556 48.2147 29.8712 47.6693 29.8712C47.1227 29.8712 46.5268 29.706 46.2619 29.4579C45.9141 29.1434 45.6499 28.9046 45.6499 27.6962V22.4231H44.6566V21.3474H45.6499C45.6499 20.7019 45.6657 19.8581 45.7486 19.2289L47.321 18.8648C47.2547 19.4607 47.1725 20.5031 47.1725 21.3474H49.1917L48.7775 22.4231Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M52.2018 29.8053C51.6066 29.8053 51.2255 29.6233 50.9111 29.1763C50.6627 28.8285 50.5963 28.5473 50.5963 27.7363V20.8714C50.5963 19.6958 50.5467 19.1334 50.415 18.4879L52.0038 18.1569C52.153 18.703 52.153 19.4975 52.153 20.5236V27.3395C52.153 28.2163 52.2018 28.4149 52.3678 28.5636C52.4667 28.6795 52.6986 28.7294 52.8806 28.6795L53.145 29.6233C52.8305 29.7557 52.5669 29.8053 52.2018 29.8053\" fill=\"${l.color}\"/><mask id=\"mask0_6775_6913\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"54\" y=\"21\" width=\"7\" height=\"9\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M54.0736 21.0995H60.9919V29.9873H54.0736V21.0995Z\" fill=\"white\"/></mask><g mask=\"url(#mask0_6775_6913)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M58.344 25.5349C57.2025 25.5349 56.5067 25.7502 56.1756 26.1308C55.8611 26.4949 55.7455 26.7929 55.7455 27.3395C55.7455 28.2491 56.2089 28.779 57.053 28.779C57.7481 28.779 58.4104 28.3486 58.7912 27.6865L58.8411 25.568C58.6092 25.5517 58.4765 25.5349 58.344 25.5349V25.5349ZM60.2137 29.9874C59.7011 29.7888 59.304 29.3749 59.1052 28.7958C58.8904 29.0607 58.1953 29.8877 56.755 29.8877C55.1 29.8877 54.0736 29.0439 54.0736 27.4552C54.0736 25.5349 55.613 24.5083 58.2944 24.5083C58.4935 24.5083 58.658 24.5083 58.8736 24.5253V23.9787C58.8736 23.0027 58.7411 22.3407 57.5823 22.3407C56.7052 22.3407 55.7119 22.7711 55.0334 23.2839L54.3383 22.1917C55.1493 21.7282 56.2089 21.0995 57.8144 21.0995C59.0223 21.0995 59.8997 21.5462 60.2137 22.423C60.3466 22.7874 60.3802 23.0688 60.3802 23.8798C60.3802 24.4755 60.3136 25.7502 60.3136 26.9584C60.3136 28.0999 60.3466 28.5636 60.9919 28.9615L60.2137 29.9874Z\" fill=\"${l.color}\"/></g><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M67.2862 29.6398V24.0456C67.2862 23.3004 67.2196 23.036 67.0216 22.7711C66.8561 22.556 66.5576 22.4401 66.1775 22.4401C65.5821 22.4401 64.6877 22.9033 64.1251 23.4992V29.6398H62.619V23.4662C62.619 22.4729 62.5358 22.0925 62.304 21.4966L63.744 21.0995C63.9433 21.4966 64.0264 21.8607 64.0264 22.374C64.5059 21.9764 64.754 21.7615 65.1021 21.5625C65.5821 21.2815 66.1277 21.1488 66.6407 21.1488C67.5178 21.1488 68.2963 21.6128 68.5935 22.3239C68.726 22.6216 68.7931 22.9859 68.7931 23.3665V29.6398H67.2862Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M75.8588 23.2017C75.4294 22.6884 74.8831 22.423 74.1053 22.423C73.4766 22.423 72.9796 22.7377 72.6653 23.2676C72.3503 23.8139 72.2344 24.4757 72.2344 25.5516C72.2344 27.1566 72.4332 27.6033 72.8807 28.0673C73.1619 28.3653 73.542 28.498 74.1053 28.498C74.9825 28.498 75.5781 28.0343 75.8588 27.5377V23.2017ZM76.1741 29.6398C76.0914 29.3919 76.0752 29.2757 76.0251 28.8623C75.4457 29.4743 74.7674 29.772 73.8903 29.772C71.7712 29.772 70.5305 28.183 70.5305 25.5682C70.5305 23.7804 71.1427 22.4067 72.268 21.6786C72.7815 21.3476 73.2941 21.1988 73.8903 21.1988C74.6842 21.1988 75.3463 21.4798 75.9094 22.1586C75.9094 21.9272 75.8759 21.2649 75.8759 20.7021V17.8172L77.3985 18.0654V26.8592C77.3985 28.2 77.4486 29.127 77.6303 29.6398H76.1741Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22.0502 7.14133C22.0115 7.33023 21.8694 7.44819 21.6297 7.39836C21.2554 7.32006 21.0223 7.03023 20.674 6.92446C21.6215 6.43862 22.0331 6.58989 22.3949 7.3465C22.2253 7.21328 22.1821 7.19548 22.0502 7.14133V7.14133ZM18.7568 23.1166C18.485 23.2401 18.277 23.337 18.0894 23.4133C18.1636 22.1894 18.4298 21.5034 18.4537 21.4167C18.6332 21.7053 18.7136 21.8434 18.8247 22.0658C18.993 22.4024 19.1712 22.7889 19.1529 22.8695C19.1343 22.9485 18.8676 23.0665 18.7568 23.1166V23.1166ZM15.4685 24.1305C14.9574 24.2787 15.0604 24.6084 14.2657 24.3283V20.8765C14.7932 21.1249 15.7875 21.4361 16.4539 21.4361C16.5258 21.6329 16.791 22.2883 16.9392 23.8831C16.206 24.1305 15.8752 24.0125 15.4685 24.1305V24.1305ZM13.1539 6.6865C12.8409 6.88455 12.5282 7.10345 12.213 7.3409C11.8913 6.97607 11.5682 6.63158 11.2446 6.30387C11.5682 6.0265 11.8913 5.76463 12.213 5.52158C12.5282 5.87828 12.8409 6.25506 13.1539 6.6537C13.1597 6.66082 13.1658 6.66794 13.1717 6.67582C13.1658 6.67887 13.1597 6.68294 13.1539 6.6865V6.6865ZM13.1539 8.47429C12.9289 8.1865 12.7036 7.9104 12.4776 7.64574C12.7036 7.48252 12.9289 7.32896 13.1539 7.18709V8.47429ZM11.2303 8.61896C11.554 8.34209 11.8756 8.08099 12.1964 7.83819C12.5165 8.19997 12.8353 8.58235 13.1524 8.98785C12.5165 8.78294 11.8756 8.66904 11.2303 8.61896V8.61896ZM9.97923 7.43802C10.3072 7.12557 10.6347 6.82302 10.9601 6.53548C11.285 6.85429 11.6086 7.18862 11.931 7.54201C11.6086 7.79574 11.285 8.06752 10.9601 8.35404C10.6347 8.03345 10.3072 7.72963 9.97923 7.43802V7.43802ZM8.69914 8.68607C9.03067 8.34972 9.36118 8.01997 9.69041 7.70014C10.0189 7.98489 10.3463 8.28082 10.6723 8.59048C10.0189 8.57523 9.36168 8.61641 8.69914 8.68607V8.68607ZM7.41346 7.69404C7.75033 7.34421 8.08592 6.99616 8.42075 6.65421C8.75431 6.91684 9.08762 7.18633 9.41863 7.46675C9.08762 7.79345 8.75431 8.12879 8.42075 8.46997C8.08592 8.20582 7.75033 7.94777 7.41346 7.69404V7.69404ZM6.15092 9.03133C6.15092 9.01633 6.79592 8.31921 7.11753 7.9859C7.45465 8.23836 7.78999 8.49235 8.12533 8.75243C7.47092 8.8348 6.81346 8.93701 6.15092 9.03133V9.03133ZM6.15092 7.26921C6.38024 7.43904 6.60906 7.6076 6.83787 7.77768C6.60906 8.01413 6.38024 8.26277 6.15092 8.49819V7.26921ZM7.13457 5.67031C7.47194 5.92302 7.80931 6.17701 8.14516 6.4376C7.80931 6.78387 7.47194 7.13345 7.13457 7.48455C6.80813 7.24048 6.48016 6.97963 6.15092 6.73658C6.44075 6.41497 6.80228 6.02574 7.13457 5.67031V5.67031ZM6.15092 4.94091C6.38635 5.1148 6.62101 5.28819 6.85465 5.46209C6.62101 5.70489 6.38635 5.94819 6.15092 6.18946V4.94091ZM8.16219 4.12124C7.8266 4.46726 7.48948 4.81735 7.1516 5.16921C6.81906 4.92082 6.48601 4.67446 6.15092 4.42785C6.81474 4.30938 7.48643 4.20616 8.16219 4.12124V4.12124ZM9.43541 5.15014C9.10414 5.47607 8.7716 5.81167 8.43804 6.15311C8.10346 5.88896 7.76762 5.63167 7.4305 5.37819C7.76762 5.02785 8.10346 4.67955 8.43804 4.33709C8.7716 4.59972 9.10414 4.86972 9.43541 5.15014V5.15014ZM10.7084 3.95879C10.3812 4.25421 10.053 4.56311 9.72423 4.88268C9.39372 4.59591 9.06245 4.32184 8.73016 4.05463C9.48092 3.96311 10.0125 3.93845 10.7084 3.95879V3.95879ZM10.6913 6.27616C10.3644 6.57107 10.0359 6.88074 9.70745 7.1998C9.37669 6.91404 9.04541 6.63921 8.71363 6.37201C9.04541 6.03438 9.37669 5.70387 9.70745 5.38277C10.0359 5.66802 10.3644 5.96497 10.6913 6.27616V6.27616ZM11.9475 5.22641C11.6252 5.47963 11.3015 5.7509 10.9771 6.03667C10.6504 5.71684 10.3237 5.41226 9.9955 5.1204C10.3237 4.80794 10.6504 4.50641 10.9771 4.21887C11.3015 4.53768 11.6252 4.87201 11.9475 5.22641V5.22641ZM13.1539 4.88141V6.13836C12.9345 5.85743 12.7138 5.5887 12.4936 5.32963C12.7138 5.17099 12.9345 5.02074 13.1539 4.88141V4.88141ZM13.1539 4.38133C12.8468 4.57658 12.5384 4.79192 12.2287 5.0248C11.9076 4.65972 11.5842 4.31446 11.2608 3.98726C11.9862 4.06201 12.4476 4.16929 13.1539 4.38133V4.38133ZM25.2661 8.12119C25.1031 7.87814 25.1865 7.69712 24.6885 7.38416C23.8452 6.8556 22.3589 6.25662 21.1495 5.94746C20.5785 5.25848 20.0156 4.81789 18.9915 4.55551C17.5958 4.19755 15.5901 4.75916 15.0862 6.39441C14.4023 8.61416 16.262 10.3646 17.9606 10.0219C20.3753 9.53551 19.396 6.6728 17.6723 7.01246C17.174 7.1106 17.1636 7.54306 17.506 7.53009C18.0498 7.51077 18.2822 7.72662 18.193 8.17255C18.1416 8.43162 17.7539 8.58645 17.34 8.44458C16.3538 8.10441 16.4649 7.08111 17.0619 6.6906C17.8111 6.19967 19.5925 6.47882 19.9261 8.20916C20.2358 9.81873 18.7444 10.5159 17.9507 10.5797C17.2035 10.6404 16.6474 10.5479 15.9506 10.0859C15.8413 10.3885 15.8418 10.627 15.9173 10.8542C15.6796 11.1184 15.3829 11.5496 15.3191 11.9475C14.9217 12.0497 14.5497 12.3067 14.2658 12.6657V2.29229L15.8746 2.46874V1.43831L14.2421 1.62746L14.4282 9.15527e-05H13.3958L13.5808 1.62746L11.9283 1.43831V2.46874L13.5623 2.28874V3.67001C8.90923 1.78484 4.58745 5.12806 0.000244141 3.23297C1.07745 4.81636 4.60626 4.93051 4.60626 4.93051C4.60626 4.93051 2.69846 5.29763 0.0383797 4.89162C1.88719 6.25992 3.55499 5.99424 4.61897 6.20958C4.28923 6.36162 2.54643 6.79229 0.0127018 6.41246C1.48296 7.72967 4.5938 7.6028 4.5938 7.6028C4.5938 7.6028 3.07779 8.18526 0.0254136 7.91984C1.63346 9.22382 4.5938 8.86992 4.5938 8.86992C4.5938 8.86992 3.05287 9.60441 0.0719391 9.63034C4.68253 11.5343 8.85685 8.10543 13.5623 10.0542C13.5623 10.0542 13.5648 12.8289 13.5623 12.8325C12.9081 12.742 12.1642 12.7938 11.433 13.089C10.6767 12.8709 10.0619 12.7676 9.22906 12.9921C8.30465 12.742 7.68177 12.7259 6.86821 12.986C5.71524 12.7915 4.45016 13.106 4.00423 14.0803C4.00423 14.0803 3.02287 13.7492 2.3705 14.902C1.57702 16.3036 0.0856679 16.4114 0.0856679 16.4114C0.0856679 16.4114 0.687448 17.1265 1.85007 16.8842C3.01346 16.6425 3.4833 15.7943 3.4833 15.7943C3.4833 15.7943 3.28753 17.0477 3.43931 18.249C3.70575 20.3569 2.03897 21.6377 2.03897 21.6377C2.03897 21.6377 2.00516 23.2125 1.90474 24.834C1.78804 26.7095 1.01897 27.4107 2.15694 28.5006C2.46355 28.794 2.44804 29.407 2.44296 29.6363H4.41126C4.30245 29.3274 3.88626 28.3127 3.36838 27.5416C2.52024 26.2831 3.42762 22.8972 4.03321 22.2431C4.79974 22.0554 5.1455 21.9464 5.71423 21.551C6.37016 22.1729 6.91906 23.3724 7.52262 24.699C8.61279 27.0975 8.06109 27.7437 8.88508 28.1475C9.66024 28.5268 9.62923 29.3668 9.62516 29.6363H11.4338C11.2825 29.1059 11.1648 28.5807 9.53872 26.2486C8.28584 24.4519 7.97694 21.6212 9.47084 20.5491C10.1517 20.7911 10.8089 20.8508 11.4941 20.7146C12.1365 20.9439 13.0497 20.9622 13.5623 20.8595V24.3283L12.8102 25.6137C12.8102 25.6137 13.1568 25.7129 13.5623 25.7871C13.5635 25.8967 13.5658 26.1161 13.5623 26.1161C13.4156 26.1161 12.4642 26.9167 13.9091 28.3491C15.3541 27.0761 14.4193 26.1214 14.2658 26.1214C14.2624 26.1214 14.264 25.9112 14.2658 25.8532C14.5663 25.8532 14.8441 25.7986 15.028 25.7703C15.4563 25.7047 15.7993 25.5169 16.9891 25.0946C17.0067 27.1071 16.6614 27.4915 16.9421 27.9118C17.2322 28.347 17.2703 28.5347 17.2955 29.14C17.308 29.4471 17.2996 29.5025 17.2955 29.6363H19.3469C19.3035 29.4804 19.1906 29.1237 18.7416 28.45C17.7165 26.9134 17.9667 26.8585 18.0689 24.6786C19.3009 24.1798 20.3807 23.9912 20.5991 23.5679C20.9016 22.9803 20.7658 22.6839 20.5124 22.0905C20.3207 21.6413 20.1292 21.0273 19.9996 20.7367C20.7409 20.4649 21.1645 19.9183 21.2786 19.3585C21.8227 18.9875 22.0457 18.3303 22.1908 17.5775C22.6358 17.0566 22.7385 15.9977 22.5432 15.1595C22.7741 13.8263 22.2155 12.8922 22.2155 12.8922C22.2155 12.8922 22.4687 11.8925 22.1232 11.1555C21.7619 10.389 21.8466 10.2293 23.2574 9.91026C23.7755 9.79229 24.2283 9.74399 24.6196 9.61356C24.96 9.50094 25.1441 9.34229 25.2516 9.09009C25.2737 9.03797 25.2302 9.01102 25.158 8.99348C24.8802 8.92636 24.5085 8.82568 24.5085 8.82568C24.5085 8.82568 24.8822 8.82467 25.1639 8.80001C25.2895 8.78933 25.367 8.78653 25.3884 8.71382C25.4761 8.41179 25.3668 8.27221 25.2661 8.12119V8.12119Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M31.6213 9.1545C31.3811 9.0589 31.045 8.99839 30.613 8.99839H29.7491V11.8784H30.5528C31.2847 11.8784 31.693 11.7584 31.9808 11.4823C32.233 11.2423 32.3891 10.8464 32.3891 10.3664C32.3891 9.7906 32.0769 9.3345 31.6213 9.1545V9.1545ZM32.6045 16.3179C32.365 15.8498 32.2569 15.6581 31.9211 15.0942C31.2847 14.0381 31.0811 13.6901 30.4928 13.0303C30.2769 12.7903 30.0972 12.6701 29.7491 12.6584V16.3179H28.5969V8.0506H30.913C31.8967 8.0506 32.4728 8.27865 32.8686 8.6506C33.2406 8.99839 33.6006 9.55034 33.6006 10.3545C33.6006 11.6384 32.773 12.6701 31.393 12.6223C31.7767 12.9342 31.9689 13.1984 32.113 13.3901C32.2806 13.6181 32.533 13.9779 32.8086 14.4101C33.1684 14.974 33.8408 16.054 34.0086 16.3179H32.6045Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M37.7423 11.3742C37.5501 11.1342 37.2618 10.9545 36.8779 10.9545C36.0382 10.9545 35.6182 11.6384 35.6182 12.7303H38.1138C38.1138 12.1542 37.9818 11.6742 37.7423 11.3742V11.3742ZM35.606 13.5462V13.6901C35.606 14.2059 35.6782 14.602 35.8584 14.8903C36.1699 15.3698 36.6623 15.5979 37.2384 15.5979C37.8018 15.5979 38.2818 15.4059 38.7138 15.0223L39.134 15.6818C38.546 16.1984 37.8382 16.4496 37.0582 16.4496C35.3904 16.4496 34.3704 15.2381 34.3704 13.2703C34.3704 12.2262 34.5743 11.5542 35.0901 10.9423C35.5701 10.3784 36.1584 10.1145 36.9021 10.1145C37.5735 10.1145 38.1138 10.3303 38.534 10.7623C39.0621 11.3023 39.2535 11.9742 39.2657 13.3545V13.5462H35.606Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M46.469 16.318V10.3426L47.6083 10.1626V16.318H46.469ZM47.0329 9.25066C46.601 9.25066 46.2649 8.89066 46.2649 8.45821C46.2649 8.01456 46.6127 7.65482 47.0446 7.65482C47.4766 7.65482 47.8366 8.00236 47.8366 8.45821C47.8366 8.89066 47.4766 9.25066 47.0329 9.25066V9.25066Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M51.2525 10.9902C50.2927 10.9902 49.8966 11.6741 49.8966 13.1863C49.8966 15.0221 50.3644 15.6341 51.3003 15.6341C52.1403 15.6341 52.6561 14.986 52.6561 13.4143C52.6561 11.5543 52.1164 10.9902 51.2525 10.9902M51.2764 16.486C49.6686 16.486 48.6727 15.2624 48.6727 13.3063C48.6727 11.3624 49.6686 10.1385 51.2525 10.1385C53.0283 10.1385 53.8922 11.5543 53.8922 13.366C53.8922 15.2743 52.8722 16.486 51.2764 16.486\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M58.4091 16.3179V12.2623C58.4091 11.7223 58.3613 11.5301 58.2171 11.3384C58.0969 11.1826 57.8813 11.0982 57.6052 11.0982C57.1732 11.0982 56.5252 11.4345 56.1174 11.8662V16.3179H55.0254V11.8423C55.0254 11.1226 54.9652 10.8465 54.7974 10.4145L55.8413 10.1265C55.9854 10.4145 56.0457 10.6782 56.0457 11.0506C56.3935 10.7623 56.5732 10.6062 56.8254 10.4623C57.1732 10.2587 57.5693 10.1626 57.941 10.1626C58.5771 10.1626 59.1415 10.4984 59.3571 11.0143C59.453 11.2304 59.5013 11.4943 59.5013 11.7701V16.3179H58.4091Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M41.3111 12.1542C41.3111 11.3862 41.695 11.0023 42.403 11.0023C43.1591 11.0023 43.5072 11.3623 43.5072 12.1306C43.5072 12.8745 43.1352 13.2703 42.415 13.2703C41.7069 13.2703 41.3111 12.8984 41.3111 12.1542M42.9791 14.9859H42.0552C41.7674 14.9859 41.623 14.8662 41.623 14.6862C41.623 14.4223 42.1991 14.1459 42.5708 14.0262C44.1435 14.0262 44.7308 13.0303 44.7308 12.1664C44.7308 11.7825 44.6106 11.4584 44.2989 11.0623C44.5872 11.1464 44.6347 11.1584 44.8147 11.1584C45.1867 11.1584 45.4745 11.0623 45.8106 10.7986L45.2467 10.1147C44.9225 10.3428 44.6225 10.4625 44.2628 10.4625C43.9986 10.4625 43.675 10.3664 43.3628 10.2706C43.0025 10.1625 42.7508 10.1384 42.4272 10.1384C41.0472 10.1384 40.1233 10.9423 40.1233 12.1542C40.1233 12.982 40.6152 13.6062 41.5389 13.8823C40.8552 14.1342 40.363 14.374 40.363 14.9381C40.363 15.382 40.6752 15.6817 41.203 15.7417C41.4313 15.7659 41.9111 15.8023 42.3308 15.8023C43.5189 15.8023 43.9869 16.1378 43.9869 16.7142C43.9869 17.3501 43.495 17.7459 42.5111 17.7459C41.5808 17.7459 41.0599 17.4065 41.0599 16.7973C41.0599 16.5454 41.2025 16.2868 41.2615 16.1846C41.05 16.1584 40.8308 16.1152 40.6577 16.0407C40.5329 15.9843 40.4309 15.9144 40.3465 15.8406C40.2865 15.9472 40.1642 16.1722 40.0879 16.3901H40.0872C40.0701 16.4404 40.0546 16.4915 40.0409 16.5439C40.0361 16.5594 40.0338 16.5739 40.0302 16.5889C40.0216 16.6224 40.0137 16.6562 40.0073 16.6916C40.0015 16.7244 39.9974 16.7541 39.9934 16.7839C39.9916 16.8024 39.9885 16.8205 39.9868 16.8398C39.9814 16.8967 39.9799 16.9458 39.9799 16.9878C39.9799 16.9926 39.9791 16.9967 39.9791 17.0017C39.9791 17.0045 39.9796 17.0071 39.9799 17.0101C39.9807 17.0556 39.9832 17.0882 39.9857 17.109C40.0534 18.039 41.0004 18.5856 42.6189 18.5856C44.0825 18.5856 45.1511 17.9381 45.1511 16.642C45.1511 15.7062 44.515 14.9859 42.9791 14.9859\" fill=\"${l.color}\"/></svg>`}),YC=()=>({getDefaultIconProps:()=>({width:\"81\",height:\"30\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 81 30\" fill=\"none\"><path fill=\"${l.color}\" d=\"M463.559 246.227h10.621c11.875 0 18.871 5.253 18.871 13.621 0 7.871-6 12.871-17.496 12.871h-11.996zm-12.5 37.488h21.371c17.25 0 33.871-2.742 33.871-23.613 0-10.625-7.879-18.125-18-19.872v-.253c3.879-1.497 5.754-3.372 8.5-8.743l16.496-34.746h-14.25l-13.367 30.246c-3.879 8.496-8 8.496-14.625 8.496h-7.496v-38.742h-12.5v87.227m112.738-49.238c0 9.746-5.746 17.746-15.871 17.746-11.496 0-16.246-9.493-17.117-17.746zm7.625-35.36c-4.5-1.633-9.621-4.133-20.121-4.133-22.617 0-32.992 13.75-32.992 34.493 0 18.878 11.875 32.246 29.867 32.246 21.246 0 28.121-15.496 28.121-35.996h-45.488c0-12.618 9.871-21.239 20.992-21.239 7.746 0 16.746 4.004 19.621 6.375v-11.746m64 28.485c0 13.253-6.121 24.621-18.617 24.621-11.871 0-17.746-12.871-17.746-23.743 0-12 6.75-22.488 17.746-22.488 10.996 0 18.617 9.746 18.617 21.61zm11.75-28.36c0-19.375-7.996-30.496-30.867-30.496-6.75 0-12.625.879-22.871 4.375l-.75 10.867c8.996-4.121 14.375-5.742 22.996-5.742 12.371 0 19.742 8.371 19.742 21.867v6.25h-.25c-4.992-6.621-13.246-9.875-21.367-9.875-18.246 0-27.246 14.875-27.246 31.367 0 16.368 9.25 33.868 28.496 33.868 11.246 0 17.496-4.121 20.992-10.996h.254v9.492h10.871v-60.977m18.262 60.977h11.742v-63.731h-11.742zm12.496 14.25h-13.25v13.25h13.25v-13.25m46.5-69.981c13.742 0 19.867 12.5 19.867 23.867 0 12.129-7.375 23.868-19.867 23.868-12.625 0-19.996-11.739-19.996-23.868 0-11.367 6.121-23.867 19.996-23.867zm0 57.235c19.367 0 32.363-13.993 32.363-33.368 0-18.242-13.242-33.371-32.363-33.371-19.25 0-32.496 15.129-32.496 33.371 0 19.375 12.996 33.368 32.496 33.368m46.25-1.504h11.375v-10.117h.25c3.496 7.246 11.996 11.621 20.867 11.621 16.496 0 23.867-10.243 23.867-27.371v-37.864h-11.746v32.989c0 14.875-3.246 22.121-13.496 22.746-13.371 0-19.371-10.743-19.371-26.243v-29.492H770.68v63.731m-277.004-86.754h11.75v-12.5h-11.75zm-20.496 0h11.746v-12.5H473.18Zm16.121-97.473c20.125 0 28.746 16.738 28.746 34.11 0 17.746-9.5 34.238-28.746 34.121-19.242.117-28.746-16.375-28.746-34.121 0-17.372 8.625-34.11 28.746-34.11zm0 79.227c26.496 0 41.988-19.246 41.988-45.117 0-26.493-15.371-45.118-41.988-45.118-26.617 0-41.992 18.625-41.992 45.118 0 25.871 15.5 45.117 41.992 45.117m55.137-25h10.996v-9.871h.25c3.125 6.629 9.875 11.375 16.621 11.375 3.5 0 5.25-.371 7.75-.879v-10.496c-2.125.879-4.5 1.132-6.5 1.132-10.496 0-17.371-10-17.371-25.996V66.488h-11.746v63.731m86.109-25.742c0 9.746-5.746 17.746-15.867 17.746-11.5 0-16.246-9.493-17.121-17.746zm7.629-35.36c-4.504-1.633-9.625-4.133-20.121-4.133-22.621 0-32.996 13.75-32.996 34.493 0 18.878 11.875 32.246 29.871 32.246 21.242 0 28.117-15.496 28.117-35.996h-45.488c0-12.618 9.875-21.239 20.992-21.239 7.75 0 16.75 4.004 19.625 6.375V69.117m50.004 53.106c-12.75 0-18.871-12.121-18.871-23.996 0-10.614 5.496-23.739 18.746-23.739 12.621 0 17.871 14.121 17.621 24.121.25 11.493-4.746 23.614-17.496 23.614zm-29.617 37.996h11.746l-1-38.739h.25c3.625 5.868 10 10.243 21.121 10.243 18.496 0 27.492-15.118 27.492-32.246 0-17.489-8.121-34.493-27.371-34.493-11.371 0-18.617 5.754-21.742 10.5h-.25v-8.996h-11.246l1 93.731m73.496-30h11v-9.871h.25c3.125 6.629 9.871 11.375 16.621 11.375 3.5 0 5.246-.371 7.746-.879v-10.496c-2.121.879-4.5 1.132-6.496 1.132-10.5 0-17.375-10-17.375-25.996V66.488h-11.746v63.731m73.117-55.731c13.746 0 19.871 12.5 19.871 23.867 0 12.129-7.375 23.868-19.871 23.868-12.621 0-19.992-11.739-19.992-23.868 0-11.367 6.121-23.867 19.992-23.867zm0 57.235c19.371 0 32.363-13.993 32.363-33.368 0-18.242-13.242-33.37-32.363-33.37-19.246 0-32.492 15.128-32.492 33.37 0 19.375 12.996 33.368 32.492 33.368m84.129 28.496h11.746v-93.73h-11.746v93.73m59.871-7.754h11.746v-12.488h-11.746zm-20.5 0h11.75v-12.488h-11.75zm29.246-55.606c-2.496 0-4.996.246-7.496.246-6.371 0-22.121-.996-22.121-12.246 0-6.75 6.5-10.37 11.871-10.37 11.621 0 17.746 7.245 17.746 16.745zm-34.867 28.868c5.875 3.496 12.875 5.996 21 5.996 18.242 0 25.613-8.993 25.613-26.368V78.988c0-7.254.25-10.625.504-12.5h-11v8.254h-.25c-2.75-3.879-9-9.758-19.746-9.758-13.746 0-23.371 6.008-23.371 19.875 0 15.996 17.496 20.996 29.621 20.996 4.625 0 7.871 0 12.496-.253 0 11.003-4 16.621-15.742 16.621-6.629 0-13.75-2.5-18.5-6.496l-.625 10m64.254 4.492h11.375v-10.117h.25c3.496 7.246 11.996 11.621 20.866 11.621 16.49 0 23.87-10.243 23.87-27.371V66.488h-11.75v32.989c0 14.875-3.25 22.121-13.5 22.746-13.37 0-19.365-10.743-19.365-26.243V66.488h-11.746v63.731\" fill-opacity=\"1\" fill-rule=\"nonzero\" stroke=\"none\" transform=\"matrix(.13333 0 0 -.13333 0 49.547)\"/><path fill=\"${l.color}\" d=\"M124.43 371.605c-25.121 0-45.563-20.437-45.563-45.562 0-25.121 20.442-45.559 45.563-45.559 25.125 0 45.562 20.438 45.562 45.559 0 25.125-20.437 45.562-45.562 45.562m110.742 0c-25.121 0-45.563-20.437-45.563-45.562 0-25.121 20.442-45.559 45.563-45.559 25.125 0 45.562 20.438 45.562 45.559 0 25.125-20.437 45.562-45.562 45.562\" fill-opacity=\"1\" fill-rule=\"evenodd\" stroke=\"none\" transform=\"matrix(.13333 0 0 -.13333 0 49.547)\"/><path fill=\"${l.color}\" d=\"M76.332 101.734a234.532 234.532 0 0 0-5.445-.066c-12.387 0-23.907 1.07-33.047 2.703 2.707-8.992 7.035-17.578 11.262-25.68 19.742-33.058 55.375-53.418 94.066-53.418 48.59 0 91.004 34 105.234 79.43-14.972-22.672-41.004-36.258-68.343-36.258-28.121 0-53.856 14.336-68.707 37.828-11.168-2.699-22.868-4.238-35.02-4.539m160.086 93.036-61.438 61.168s-9.031 8.175-16.511 11.8c-6.926 3.352-18.164 7.625-34.996 7.625-60.309 0-82.055-67.566-86.325-81.847 9.774-4.114 21.559-7.489 33.965-7.489 25.996 0 41.059 11.176 45.188 14.735 3.961 3.597 7.738 4.289 10.246 4.035 4.836-.484 8.363-4.527 9.637-5.746l51.449-51.207c10.394-10.164 35.488-27.68 63.172-33.996 1.414 7.047 2.722 16.504 2.722 23.898 0 40.82-17.109 57.024-17.109 57.024m122.227-67.633c.992 5.629 3.492 23.445-.266 43.386-3.074 16.325-5.984 24.602-7.785 28.567-3.645-2.41-11.289-7.449-18.864-11.645 2.754-12.621 4.176-26.101 4.176-40.312 0-10.531-.929-20.82-2.718-30.789 12.839 3.844 22.355 9.054 25.457 10.793\" fill-opacity=\"1\" fill-rule=\"nonzero\" stroke=\"none\" transform=\"matrix(.13333 0 0 -.13333 0 49.547)\"/><path fill=\"${l.color}\" d=\"M1.227 127.492c5.34-3.754 28.136-17.597 72.859-17.172 37.992.371 72.922 12.571 98.711 36.907l-44.152 44.894s-.52.582-1.407 1.43c-.675.644-1.574 1.179-2.336 1.191-.609.008-1.468-.359-2.062-.758-.723-.48-1.36-1-1.36-1-5.964-5.023-22.914-16.664-51.402-16.242-27.344.41-50.933 15.004-60.437 21.778-2.125-4.786-5.344-13.594-7.621-26.879-3.5-20.403-1.547-38.621-.793-44.149\" fill-opacity=\"1\" fill-rule=\"nonzero\" stroke=\"none\" transform=\"matrix(.13333 0 0 -.13333 0 49.547)\"/><path fill=\"${l.color}\" d=\"M284.555 40.73c28.422 27.192 44.074 65.528 44.074 107.95 0 20.715-2.926 38.238-7.707 53.054-4.805 12.739-30.508 73.629-82.559 73.629-19.402 0-32.73-5.445-40.496-10.015-5.015-2.95-8.414-5.918-10.359-7.852l55.648-55.687c3.133-3.129 19.34-20.106 19.34-64.063 0-65.828-54.644-121.445-119.328-121.445a118.332 118.332 0 0 0-48.457 10.37C118.8 9.75 148.082 0 179.375 0c40.375 0 77.73 14.465 105.18 40.73\" fill-opacity=\"1\" fill-rule=\"nonzero\" stroke=\"none\" transform=\"matrix(.13333 0 0 -.13333 0 49.547)\"/></svg>`}),Cl=()=>({getDefaultIconProps:()=>({width:\"120\",height:\"18\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 120 18\" fill=\"none\"><mask id=\"mask0_6775_3645\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"18\" y=\"0\" width=\"8\" height=\"7\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M18.9288 0.195679H25.4229V6.6919H18.9288V0.195679Z\" fill=\"white\"/></mask><g mask=\"url(#mask0_6775_3645)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22.1752 0.195663C23.9688 0.195663 25.4229 1.65034 25.4229 3.44388C25.4229 5.23801 23.9688 6.6919 22.1752 6.6919C20.3822 6.6919 18.9288 5.23801 18.9288 3.44388C18.9288 1.65034 20.3822 0.195663 22.1752 0.195663Z\" fill=\"${l.color}\"/></g><mask id=\"mask1_6775_3645\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"1\" width=\"34\" height=\"17\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 1.71526H33.4127V17.2594H0V1.71526Z\" fill=\"white\"/></mask><g mask=\"url(#mask1_6775_3645)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22.2331 13.6405L31.928 1.76221C32.4225 2.3341 32.8872 2.95315 33.4127 3.54069L22.2331 17.2594L12.5083 5.33502L4.36025 15.3571L2.89119 17.1663L2.73667 17.1976L0 17.182L12.5239 1.71526L22.2331 13.6405Z\" fill=\"${l.color}\"/></g><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M28.8351 14.5371L28.8194 14.5528C30.1805 14.8001 31.3711 15.4189 32.7776 15.5271C34.2464 15.7124 35.7783 15.5739 37.122 15.1403C38.9775 14.4604 41.2976 14.1349 43.3376 14.6459C45.2244 15.2336 47.1877 15.883 49.3687 15.5582C50.0633 15.4651 50.7142 15.2493 51.3633 15.0012C51.8734 15.5888 52.3992 16.2538 52.9091 16.8887C50.8378 18.0324 47.8997 18.1718 45.5499 17.584C43.8946 17.0278 42.1629 16.5011 40.2463 16.7179C38.4831 16.8415 36.9984 17.631 35.2682 17.8313C33.6755 18.0324 32.0359 17.847 30.6294 17.3674C28.5879 16.548 25.9126 16.4708 23.7952 17.1663L36.3335 1.77786L37.7729 3.55634L28.8351 14.5371Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M35.2213 12.0786L35.2056 12.0934C37.1848 11.9541 38.8696 10.9182 40.9424 10.9495C43.0749 10.825 44.8538 11.8156 46.8797 12.0786C47.5445 12.1553 48.3175 12.1091 48.9353 11.9854L50.575 14.0269C48.9199 14.7077 46.7858 14.491 45.1165 14.0112C43.3237 13.3619 41.2053 12.9291 39.195 13.4078C37.4475 13.7954 35.7783 14.5066 33.8758 14.4291C32.8089 14.4135 31.7576 14.2585 30.8141 13.9337L40.6938 1.82405L42.1175 3.58707L35.2213 12.0786Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M58.5531 3.92024C58.8862 3.92024 59.1502 3.90165 59.3442 3.86467C59.5386 3.82769 59.6896 3.74904 59.7976 3.62871C59.9054 3.50839 59.9596 3.32487 59.9596 3.07795C59.9596 2.83143 59.9069 2.64302 59.8023 2.5135C59.6973 2.38378 59.5447 2.29593 59.3442 2.24956C59.1438 2.20339 58.8801 2.1803 58.5531 2.1803H58.3403V3.92024H58.5531ZM56.9248 1.09737H58.9511C60.5547 1.09737 61.3566 1.72365 61.3566 2.97621C61.3566 3.27869 61.2933 3.55456 61.1667 3.80461C61.0404 4.05445 60.8661 4.25813 60.6441 4.41543C60.4223 4.57274 60.1694 4.66998 59.8854 4.70695L61.7081 7.71491H60.08L58.3403 4.62361V7.71491H56.9248V1.09737Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M62.8091 1.0974H66.7042V2.29127H64.2246V3.65183H66.7042V4.85509H64.2246V6.51168H66.7042V7.71474H62.8091V1.0974Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M69.443 7.43718C68.9063 7.1349 68.4868 6.71992 68.1846 6.19244C67.8824 5.66477 67.7312 5.07096 67.7312 4.41064C67.7312 3.75051 67.884 3.1567 68.1893 2.62903C68.4946 2.10155 68.9157 1.6897 69.4522 1.39349C69.9889 1.09746 70.5932 0.949356 71.2655 0.949356C71.8024 0.949356 72.2956 1.06205 72.7459 1.28705C73.1959 1.51244 73.5971 1.85014 73.9486 2.30053L72.9957 3.0039C72.7737 2.72627 72.5331 2.5181 72.2741 2.37918C72.015 2.24046 71.7036 2.17101 71.3396 2.17101C70.9077 2.17101 70.5301 2.26355 70.2062 2.44864C69.8823 2.63373 69.6309 2.89453 69.4522 3.23066C69.2732 3.56699 69.1838 3.96044 69.1838 4.41064C69.1838 4.85496 69.2732 5.24686 69.4522 5.58612C69.6309 5.92557 69.8823 6.18775 70.2062 6.37283C70.5301 6.55792 70.8984 6.65047 71.3118 6.65047C71.6203 6.65047 71.8931 6.5996 72.1306 6.49786C72.368 6.39592 72.5517 6.25564 72.6811 6.07662C72.8106 5.89779 72.8756 5.69412 72.8756 5.46579V5.39183H71.2841V4.22555H74.3002C74.3063 4.2997 74.3096 4.41064 74.3096 4.55894C74.3096 5.22514 74.1784 5.80994 73.9163 6.31257C73.654 6.8156 73.2933 7.20436 72.8339 7.47886C72.3743 7.75336 71.8515 7.8907 71.2655 7.8907C70.587 7.8907 69.9795 7.73927 69.443 7.43718Z\" fill=\"${l.color}\"/><mask id=\"mask2_6775_3645\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"120\" height=\"18\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 17.9239H119.626V0.195679H0V17.9239Z\" fill=\"white\"/></mask><g mask=\"url(#mask2_6775_3645)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M75.5491 7.71479H76.9647V1.09744H75.5491V7.71479Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M82.7007 6.34048C83.0152 6.146 83.2605 5.87932 83.4363 5.53987C83.612 5.20061 83.7 4.8273 83.7 4.41995C83.7 4.0128 83.6104 3.6395 83.4316 3.30004C83.2527 2.96098 83.0062 2.69235 82.6915 2.49493C82.377 2.29752 82.022 2.19891 81.6275 2.19891C81.2266 2.19891 80.8673 2.29752 80.5497 2.49493C80.232 2.69235 79.9852 2.96098 79.8095 3.30004C79.6337 3.6395 79.5457 4.0128 79.5457 4.41995C79.5457 4.83337 79.6321 5.20824 79.8049 5.54456C79.9774 5.88089 80.2213 6.146 80.5358 6.34048C80.8503 6.53476 81.2141 6.632 81.6275 6.632C82.0283 6.632 82.3862 6.53476 82.7007 6.34048ZM80.4388 7.68245C80.0531 7.54354 79.6998 7.34769 79.3794 7.09471C78.966 6.76152 78.6483 6.36513 78.4263 5.90534C78.2044 5.44595 78.0933 4.95076 78.0933 4.41995C78.0933 3.94491 78.1795 3.49921 78.3524 3.08267C78.5249 2.66613 78.7809 2.29458 79.1201 1.96745C79.4532 1.64658 79.8387 1.39674 80.2766 1.21771C80.7147 1.03889 81.1648 0.94928 81.6275 0.94928C82.0901 0.94928 82.539 1.03732 82.9738 1.21302C83.4086 1.38891 83.7925 1.64052 84.1256 1.96745C84.4587 2.29458 84.7131 2.66789 84.889 3.08737C85.0646 3.50704 85.1526 3.95117 85.1526 4.41995C85.1526 4.89519 85.0646 5.34245 84.889 5.76193C84.7131 6.18161 84.4587 6.55198 84.1256 6.87265C83.7862 7.19978 83.4007 7.451 82.9691 7.62689C82.5372 7.80278 82.0901 7.89063 81.6275 7.89063C81.2205 7.89063 80.8241 7.82117 80.4388 7.68245Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M86.2534 1.0974H87.7244L90.6483 4.94744C90.8271 5.17596 91.0244 5.56159 91.2403 6.10433C91.1971 5.85781 91.1711 5.63555 91.1617 5.43814C91.1525 5.24072 91.1476 5.02785 91.1476 4.79933V1.0974H92.4987V7.71474H91.1109L88.1039 3.79074C87.9312 3.56848 87.7336 3.17992 87.5118 2.62446C87.5547 2.87138 87.5811 3.09344 87.5905 3.29085C87.5997 3.48846 87.6042 3.70427 87.6042 3.93866V7.71474H86.2534V1.0974Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M56.9248 10.4888H58.396L61.3195 14.339C61.4982 14.5674 61.6958 14.9528 61.9117 15.4959C61.8685 15.249 61.8425 15.027 61.8329 14.8295C61.8237 14.6321 61.8192 14.4193 61.8192 14.1909V10.4888H63.1699V17.1061H61.782L58.7753 13.1821C58.6028 12.9599 58.4052 12.5713 58.1832 12.0159C58.2262 12.2626 58.2525 12.4848 58.2617 12.6823C58.271 12.8799 58.2757 13.0957 58.2757 13.3301V17.1061H56.9248V10.4888Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M68.8694 15.7319C69.1839 15.5376 69.4292 15.2707 69.605 14.9313C69.7807 14.592 69.8687 14.2187 69.8687 13.8115C69.8687 13.4042 69.7791 13.0309 69.6003 12.6916C69.4214 12.3524 69.1749 12.0837 68.8602 11.8863C68.5457 11.6889 68.1907 11.5901 67.7962 11.5901C67.3953 11.5901 67.036 11.6889 66.7184 11.8863C66.4007 12.0837 66.1539 12.3524 65.9782 12.6916C65.8024 13.0309 65.7144 13.4042 65.7144 13.8115C65.7144 14.225 65.8009 14.5996 65.9736 14.936C66.1461 15.2721 66.39 15.5376 66.7045 15.7319C67.019 15.9261 67.3828 16.0234 67.7962 16.0234C68.197 16.0234 68.5549 15.9261 68.8694 15.7319ZM66.6075 17.0736C66.2218 16.9349 65.8685 16.7391 65.5482 16.4861C65.1347 16.1529 64.817 15.7565 64.595 15.2967C64.3731 14.8373 64.262 14.342 64.262 13.8115C64.262 13.3363 64.3482 12.8906 64.5211 12.4741C64.6936 12.0575 64.9497 11.6858 65.2888 11.3586C65.6219 11.0382 66.0074 10.7881 66.4453 10.6091C66.8834 10.4303 67.3335 10.3407 67.7962 10.3407C68.2588 10.3407 68.7077 10.4287 69.1425 10.6046C69.5773 10.7803 69.9612 11.0319 70.2943 11.3586C70.6274 11.6858 70.8818 12.0593 71.0577 12.4786C71.2333 12.8984 71.3213 13.3426 71.3213 13.8115C71.3213 14.2866 71.2333 14.7338 71.0577 15.1533C70.8818 15.573 70.6274 15.9432 70.2943 16.264C69.9549 16.5912 69.5694 16.8424 69.1378 17.0183C68.7059 17.1942 68.2588 17.282 67.7962 17.282C67.3892 17.282 66.9928 17.2126 66.6075 17.0736Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M74.0504 13.3116C74.3835 13.3116 74.6473 13.293 74.8415 13.256C75.0358 13.2191 75.187 13.1404 75.2947 13.0201C75.4027 12.8998 75.4567 12.7162 75.4567 12.4693C75.4567 12.2228 75.4043 12.0344 75.2996 11.9049C75.1946 11.7752 75.0418 11.6873 74.8415 11.6411C74.6411 11.595 74.3774 11.5715 74.0504 11.5715H73.8376V13.3116H74.0504ZM72.4221 10.4887H74.4482C76.0518 10.4887 76.8538 11.115 76.8538 12.3676C76.8538 12.6701 76.7906 12.9461 76.664 13.1958C76.5377 13.4458 76.3634 13.6495 76.1414 13.8066C75.9194 13.9641 75.6665 14.0613 75.3827 14.0983L77.2054 17.1063H75.5772L73.8376 14.015V17.1063H72.4221V10.4887Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M80.1196 13.3116C80.4527 13.3116 80.7165 13.293 80.9108 13.256C81.105 13.2191 81.2562 13.1404 81.3639 13.0201C81.4719 12.8998 81.5259 12.7162 81.5259 12.4693C81.5259 12.2228 81.4735 12.0344 81.3688 11.9049C81.2638 11.7752 81.111 11.6873 80.9108 11.6411C80.7103 11.595 80.4466 11.5715 80.1196 11.5715H79.9068V13.3116H80.1196ZM78.4913 10.4887H80.5174C82.1211 10.4887 82.923 11.115 82.923 12.3676C82.923 12.6701 82.8598 12.9461 82.7333 13.1958C82.6069 13.4458 82.4326 13.6495 82.2106 13.8066C81.9886 13.9641 81.7358 14.0613 81.452 14.0983L83.2746 17.1063H81.6464L79.9068 14.015V17.1063H78.4913V10.4887Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M86.5314 16.0049C86.889 16.0049 87.1589 15.9262 87.341 15.7689C87.5227 15.6114 87.6138 15.3847 87.6138 15.0885C87.6138 14.8108 87.5227 14.5982 87.341 14.4501C87.1589 14.3019 86.8952 14.2278 86.55 14.2278H85.9761V16.0049H86.5314ZM86.2908 13.1359C86.5621 13.1359 86.7826 13.1128 86.9523 13.0662C87.1219 13.02 87.2498 12.94 87.3363 12.8257C87.4227 12.7117 87.4657 12.5526 87.4657 12.3489C87.4657 12.1517 87.4256 11.9976 87.3455 11.8862C87.2653 11.7753 87.1434 11.6964 86.9801 11.6503C86.8166 11.6041 86.5962 11.581 86.3186 11.581H85.9761V13.1359H86.2908ZM84.5607 10.4889H85.8005C86.1643 10.4889 86.4649 10.4951 86.7026 10.5073C86.94 10.5198 87.1665 10.5489 87.3826 10.5953C87.5983 10.6415 87.7957 10.7141 87.9747 10.8127C88.2276 10.9547 88.4249 11.1476 88.5667 11.3912C88.7087 11.635 88.7795 11.9081 88.7795 12.2102C88.7795 12.9938 88.3169 13.4659 87.3918 13.6264C87.9285 13.7066 88.3324 13.8809 88.6039 14.1493C88.8751 14.4176 89.0109 14.7739 89.0109 15.2182C89.0109 15.5391 88.9323 15.8353 88.775 16.1068C88.6178 16.3782 88.4032 16.5877 88.1321 16.7359C87.922 16.8472 87.6938 16.9303 87.4474 16.9859C87.2005 17.0415 86.9445 17.0755 86.6795 17.0876C86.4141 17.1002 86.0688 17.1062 85.6432 17.1062H84.5607V10.4889Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M94.3121 15.7319C94.6266 15.5376 94.8718 15.2707 95.0477 14.9313C95.2233 14.592 95.3113 14.2187 95.3113 13.8115C95.3113 13.4042 95.2217 13.0309 95.043 12.6916C94.864 12.3524 94.6176 12.0837 94.3029 11.8863C93.9884 11.6889 93.6334 11.5901 93.2389 11.5901C92.8379 11.5901 92.4786 11.6889 92.161 11.8863C91.8433 12.0837 91.5965 12.3524 91.4209 12.6916C91.245 13.0309 91.157 13.4042 91.157 13.8115C91.157 14.225 91.2435 14.5996 91.4162 14.936C91.5887 15.2721 91.8326 15.5376 92.1471 15.7319C92.4616 15.9261 92.8254 16.0234 93.2389 16.0234C93.6396 16.0234 93.9976 15.9261 94.3121 15.7319ZM92.0501 17.0736C91.6644 16.9349 91.3112 16.7391 90.9908 16.4861C90.5773 16.1529 90.2597 15.7565 90.0377 15.2967C89.8157 14.8373 89.7046 14.342 89.7046 13.8115C89.7046 13.3363 89.7908 12.8906 89.9637 12.4741C90.1363 12.0575 90.3923 11.6858 90.7314 11.3586C91.0645 11.0382 91.45 10.7881 91.8879 10.6091C92.3261 10.4303 92.7761 10.3407 93.2389 10.3407C93.7014 10.3407 94.1503 10.4287 94.5851 10.6046C95.0199 10.7803 95.4038 11.0319 95.7369 11.3586C96.07 11.6858 96.3245 12.0593 96.5003 12.4786C96.6759 12.8984 96.764 13.3426 96.764 13.8115C96.764 14.2866 96.6759 14.7338 96.5003 15.1533C96.3245 15.573 96.07 15.9432 95.7369 16.264C95.3976 16.5912 95.0121 16.8424 94.5804 17.0183C94.1486 17.1942 93.7014 17.282 93.2389 17.282C92.8319 17.282 92.4354 17.2126 92.0501 17.0736Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M98.7347 11.6919H97.1156V10.4889H101.779V11.6919H100.15V17.1062H98.7347V11.6919Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M104.138 11.6919H102.519V10.4889H107.182V11.6919H105.553V17.1062H104.138V11.6919Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M108.19 10.4888H112.085V11.6829H109.606V13.0432H112.085V14.2463H109.606V15.9031H112.085V17.1061H108.19V10.4888Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M113.381 10.4888H114.852L117.775 14.339C117.954 14.5674 118.152 14.9528 118.368 15.4959C118.324 15.249 118.298 15.027 118.289 14.8295C118.28 14.6321 118.275 14.4193 118.275 14.1909V10.4888H119.626V17.1061H118.238L115.231 13.1821C115.058 12.9599 114.861 12.5713 114.639 12.0159C114.682 12.2626 114.708 12.4848 114.718 12.6823C114.727 12.8799 114.731 13.0957 114.731 13.3301V17.1061H113.381V10.4888Z\" fill=\"${l.color}\"/></g></svg>`}),ll=()=>({getDefaultIconProps:()=>({width:\"95\",height:\"19\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 95 19\" fill=\"none\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M47.5795 16.0595H47.5982H49.7937C50.1846 16.0595 51.0936 15.9519 51.0936 14.9552C51.0936 14.1377 50.6146 13.7232 49.6698 13.7232H47.5982H47.5795V13.742V16.0406V16.0595ZM47.5795 12.7465H47.5982H49.6068C50.4519 12.7465 50.6773 12.0093 50.6773 11.5737C50.6773 10.8577 50.3473 10.5383 49.6068 10.5383H47.5982H47.5795V10.5571V12.7277V12.7465ZM49.8048 9.55188C50.4666 9.55188 51.7183 9.97459 51.7183 11.5737C51.7183 12.0022 51.5408 12.6292 51.1443 13.0644L51.1287 13.0819L51.1488 13.0935C51.7465 13.4387 52.1032 14.1345 52.1032 14.9552C52.1032 16.2835 51.2162 17.0454 49.6698 17.0454H46.5602V9.55188H49.8048Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M58.1126 1.75414C58.5626 1.75414 58.9949 1.80172 59.3971 1.8955L59.6239 1.95041V2.73621L59.266 2.65637C58.871 2.568 58.483 2.5232 58.1126 2.5232C57.1661 2.5232 56.1473 3.08692 56.1473 4.32489C56.1473 5.49522 57.0167 6.10758 57.8755 6.10758C58.1659 6.10758 58.6517 6.10758 59.0687 6.00369L59.0829 6.00003V5.98538V5.09796V5.07914H59.0642H57.7776V4.31059H59.8615V6.539L59.676 6.61325C59.0958 6.84666 58.4091 6.87664 57.8755 6.87664C56.6607 6.87664 55.3698 5.98225 55.3698 4.32489C55.3698 2.81116 56.4976 1.75414 58.1126 1.75414Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M47.2724 4.07398H47.2912H48.3509C48.8341 4.07398 49.2811 3.98159 49.2811 3.31137C49.2811 2.85502 49.0111 2.59337 48.5402 2.59337H47.2912H47.2724V2.6122V4.05515V4.07398ZM48.5468 1.82431C49.455 1.82431 50.0653 2.42185 50.0653 3.31137C50.0653 3.77103 49.9287 4.13935 49.6597 4.40604C49.5095 4.55369 49.3231 4.66542 49.1057 4.73776L49.0779 4.747L49.0979 4.76844C49.55 5.25634 49.9287 5.94992 50.1325 6.3226L50.1347 6.32696L50.3965 6.80684H49.5097L49.4253 6.65345C48.6232 5.19167 48.1352 4.86536 47.866 4.84897L47.2912 4.84932H47.2724V4.86815V6.80684H46.4945V1.82431H48.5468Z\" fill=\"${l.color}\"/><mask id=\"mask0_6775_500\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"95\" height=\"19\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 18.9034H94.9654V0H0V18.9034Z\" fill=\"white\"/></mask><g mask=\"url(#mask0_6775_500)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M61.0901 6.80688H61.8682V1.81755H61.0901V6.80688Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M65.4735 6.12046C66.5723 6.12046 67.3106 5.40142 67.3106 4.33115C67.3106 3.07296 66.3917 2.50976 65.4808 2.50976C64.5738 2.50976 63.6588 3.07296 63.6588 4.33115C63.6588 5.40142 64.388 6.12046 65.4735 6.12046ZM65.4808 1.75412C66.7753 1.75412 68.0816 2.5509 68.0816 4.33115C68.0816 5.85376 67.0334 6.87662 65.4735 6.87662C63.9021 6.8693 62.8866 5.87015 62.8866 4.33115C62.8866 2.5509 64.1895 1.75412 65.4808 1.75412Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M86.1215 9.45364C86.8077 9.45364 87.4654 9.52633 88.0762 9.66944L88.3582 9.73551V10.7657L87.9147 10.6674C87.3018 10.5298 86.6984 10.4601 86.1215 10.4601C84.6244 10.4601 83.0134 11.3545 83.0134 13.318C83.0134 15.1751 84.3941 16.1467 85.758 16.1467C86.23 16.1467 87.0201 16.1467 87.6877 15.9651L87.7014 15.9612V15.9469V14.4085V14.3896H87.6827H85.6944V13.3832H88.7221V16.6623L88.493 16.7545C87.6158 17.108 86.5706 17.1532 85.758 17.1532C83.8868 17.1532 81.9926 15.8359 81.9926 13.318C81.9926 11.0427 83.6904 9.45364 86.1215 9.45364Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M80.608 9.55196V17.0453H79.6432L79.5426 16.8434C78.5659 14.892 77.0865 12.6793 75.7736 11.206L75.7409 11.1694V11.2186V17.0453H74.7202V9.55196H75.5608L75.6671 9.65114C76.9096 10.8222 78.3981 12.7772 79.5524 14.7532L79.5873 14.8132V14.7438V9.55196H80.608Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M73.0392 1.81746V6.80679H72.3224L72.2385 6.64398C71.63 5.42833 70.7364 4.07619 69.9068 3.11539L69.8738 3.07721V3.12759V6.80679H69.0961V1.81746H69.7251L69.8083 1.89869C70.5812 2.62714 71.4853 3.79729 72.2267 5.02898L72.2615 5.08685V5.01939V1.81746H73.0392Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M94.9654 9.55196V10.5581H91.2511H91.2325V10.5769V12.7276V12.7464H91.2511H94.7155V13.7525H91.2511H91.2325V13.7714V15.5469C91.2426 15.8732 91.2775 16.0303 91.9515 16.0391H94.9654V17.0453H91.939C91.1517 17.0285 90.2437 16.8457 90.2118 15.5716V9.55196H94.9654Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M63.8136 9.55196V10.5581H60.0994H60.0806V10.5769V12.7276V12.7464H60.0994H63.5637V13.753H60.0994H60.0806V13.7717V15.5483C60.0912 15.8736 60.1263 16.0304 60.8005 16.0391H63.8136V17.0453H60.7871C60 17.0291 59.0924 16.8467 59.0608 15.5722V9.55196H63.8136Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M71.9944 17.0458H73.0151V9.55194H71.9944V17.0458Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M54.5237 1.81746V2.58705H52.1135H52.0947V2.6057V3.87643V3.89526H52.1135H54.3608V4.66467H52.1135H52.0947V4.6835V5.77504C52.1018 5.96591 52.1237 6.03232 52.5068 6.0372H54.5237V6.80679H52.4964C52.0006 6.79598 51.3392 6.67902 51.3179 5.79247V1.81746H54.5237Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M54.3691 9.55196V15.5631C54.3799 15.8786 54.4144 16.0308 55.0808 16.0391H58.1955V17.0453H55.0756C54.2885 17.0291 53.3809 16.8467 53.3491 15.5716V9.55196H54.3691Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M70.522 9.55196L70.0359 10.1491C69.1692 11.2135 68.2432 12.191 66.9394 13.4177L66.9226 13.4334L66.9413 13.4468C68.0942 14.2709 69.2592 15.3023 70.3108 16.4293L70.885 17.0453H69.5037L69.3961 16.9308C68.5101 15.9994 67.4467 15.0749 66.321 14.2573L66.2913 14.2357V14.2725V17.0453H65.2711V9.55196H66.2913V12.5798V12.6235L66.3229 12.5934C67.5218 11.4549 68.3778 10.5579 69.0986 9.68443L69.2078 9.55196H70.522Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M41.1856 4.66638C36.008 0.927566 21.4562 -0.00012207 21.4562 -0.00012207L21.4009 3.60099C23.3954 3.83056 34.6434 5.28484 39.969 9.39285L41.1856 4.66638ZM19.7852 3.60099L19.7295 -0.00012207C19.7295 -0.00012207 5.17799 0.927566 -0.00012207 4.66638L1.21664 9.39285C6.5422 5.28484 17.7906 3.83056 19.7852 3.60099ZM14.7634 16.8863C16.6999 17.5074 18.5231 18.2561 20.0214 18.9035L19.948 14.1552C18.2227 14.6919 15.8315 15.9315 14.7634 16.8863ZM19.9273 12.8249L19.8768 9.53823C17.2876 10.004 14.1667 11.068 11.4362 12.4311C9.64264 13.3258 8.28989 14.223 7.59588 14.9464C8.50142 15.2001 10.3485 15.7216 12.4477 16.3397C13.8761 14.7911 18.8432 13.0682 19.9273 12.8249ZM2.56835 11.0624L5.59689 13.9713C7.33016 11.9863 13.2997 9.28652 19.8561 8.1901L19.8045 4.87102C9.64958 5.97599 4.09252 9.53213 2.56835 11.0624ZM21.2377 14.1552L21.1646 18.9035C22.6625 18.2561 24.4857 17.5074 26.4227 16.8863C25.3541 15.9315 22.9635 14.6919 21.2377 14.1552ZM21.3811 4.87102L21.3301 8.1901C27.8865 9.28652 33.856 11.9863 35.5886 13.9713L38.6176 11.0619C37.0931 9.53213 31.5359 5.97546 21.3811 4.87102ZM21.3089 9.53404L21.2583 12.8249C22.3424 13.0682 27.3095 14.7911 28.738 16.3397C30.8381 15.7216 32.6853 15.2001 33.5903 14.9464C31.8584 13.1538 26.1054 10.3964 21.3089 9.53404Z\" fill=\"${l.color}\"/></g></svg>`}),ol=()=>({getDefaultIconProps:()=>({width:\"156\",height:\"45\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 156 45\" fill=\"none\"><path d=\"M121.649 13.1286L134.039 0.712891L155.147 21.9033H148.957L134.039 6.93713L124.748 16.2573L130.392 21.9033H124.175L115.45 13.1268L106.728 21.9033H100.507L115.452 6.90719L121.649 13.1286Z\" fill=\"${l.color}\"/><path d=\"M112.354 34.9053H118.546L115.45 38.0101L112.354 34.9053Z\" fill=\"${l.color}\"/><path d=\"M143.299 34.9053H137.105L134.038 37.9794L130.977 34.9053H124.756L129.84 39.9919H138.232L143.299 34.9053Z\" fill=\"${l.color}\"/><path d=\"M144.4 33.7986H138.207L142.293 29.6924H148.489L144.4 33.7986Z\" fill=\"${l.color}\"/><path d=\"M121.021 26.1875L118.635 28.5875H124.819L127.217 26.1875H121.021Z\" fill=\"${l.color}\"/><path d=\"M112.266 28.5875H106.062L103.666 26.1875H109.883L112.266 28.5875Z\" fill=\"${l.color}\"/><path d=\"M119.648 33.7986L121.647 31.7876L123.657 33.7986H129.871L125.781 29.6924H117.533L115.446 31.7876L113.37 29.6924H107.165L111.254 33.7986H119.648Z\" fill=\"${l.color}\"/><path d=\"M143.396 28.5875L145.792 26.1875H151.984L149.593 28.5875H143.396Z\" fill=\"${l.color}\"/><path d=\"M108.784 25.0786L106.726 23.0127H100.507L102.565 25.0786H108.784Z\" fill=\"${l.color}\"/><path d=\"M134.038 44.2027L130.945 41.0986H137.133L134.038 44.2027Z\" fill=\"${l.color}\"/><path d=\"M128.324 25.0786L130.39 23.0127H124.175L122.12 25.0786H128.324Z\" fill=\"${l.color}\"/><path d=\"M155.147 23.0127L153.085 25.0786H146.894L148.956 23.0127H155.147Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M83.1992 3.28186C83.1992 1.80307 84.3309 0.739258 85.7468 0.739258C87.1559 0.739258 88.2908 1.80307 88.2908 3.28186C88.2908 4.76457 87.1559 5.82838 85.7468 5.82838C84.3309 5.82838 83.1992 4.76457 83.1992 3.28186ZM87.5076 3.28186C87.5076 2.22803 86.779 1.43231 85.7468 1.43231C84.7174 1.43231 83.9853 2.22803 83.9853 3.28186C83.9853 4.34068 84.7174 5.13819 85.7468 5.13819C86.779 5.13819 87.5076 4.34068 87.5076 3.28186Z\" fill=\"${l.color}\"/><path d=\"M73.6406 3.28174C73.6406 1.80295 74.7084 0.748047 76.1729 0.748047C76.9277 0.748047 77.5238 0.958386 77.9259 1.40972L77.409 1.93093C77.1235 1.63004 76.7619 1.43967 76.1729 1.43967C75.1425 1.43967 74.4228 2.2279 74.4228 3.28174C74.4228 4.34056 75.151 5.13806 76.2734 5.13806C76.775 5.13806 77.2123 5.00509 77.4868 4.81507V3.88815H76.1562V3.2197H78.1912V5.19546C77.8719 5.48673 77.1892 5.82826 76.2734 5.82826C74.7304 5.82826 73.6406 4.76445 73.6406 3.28174Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M64.7179 0.805664H63.0615V5.76253H63.8313V3.92545H64.7246L65.7949 5.76253H66.6708L65.5107 3.80139C66.111 3.59069 66.5106 3.11725 66.5106 2.37964C66.5106 1.28516 65.7327 0.805664 64.7179 0.805664ZM65.7196 2.37964C65.7196 3.00852 65.3423 3.27625 64.6887 3.27625H63.8313V1.48481H64.6887C65.3366 1.48481 65.7196 1.74007 65.7196 2.37964Z\" fill=\"${l.color}\"/><path d=\"M71.7631 0.805664H68.6255V5.76253H71.8636V5.08624H69.3942V3.60459H71.492V2.94042H69.3942V1.48481H71.7631V0.805664Z\" fill=\"${l.color}\"/><path d=\"M81.1265 5.76253H80.3628V0.805664H81.1265V5.76253Z\" fill=\"${l.color}\"/><path d=\"M91.0047 2.31336C91.0047 2.31336 91.275 2.65703 91.4707 2.86951L94.1902 5.81496H94.2861V0.805336H93.5728V3.53225C93.5728 3.80997 93.6229 4.24455 93.6229 4.24455C93.6229 4.24455 93.3551 3.89625 93.1661 3.69375L90.4452 0.75293H90.3433V5.76256H91.0544V3.02887C91.0544 2.72298 91.0047 2.31336 91.0047 2.31336Z\" fill=\"${l.color}\"/><path d=\"M16.5947 18.3531L17.9232 17.5328C18.2923 18.1977 18.7239 18.6637 19.4993 18.6637C20.3791 18.6637 20.9535 18.2444 20.9535 17.0205V9.45117H22.5917V17.0526C22.5917 19.1449 21.34 20.1367 19.5746 20.1367C18.0159 20.1367 17.0881 19.331 16.5947 18.3531Z\" fill=\"${l.color}\"/><path d=\"M29.8061 6.50488C29.3276 6.50488 28.879 6.92378 28.879 7.44891C28.879 7.95943 29.3276 8.37868 29.8061 8.37868C30.3023 8.37868 30.7502 7.95943 30.7502 7.44891C30.7502 6.92378 30.3023 6.50488 29.8061 6.50488Z\" fill=\"${l.color}\"/><path d=\"M26.9008 6.50488C26.422 6.50488 25.9559 6.92378 25.9559 7.44891C25.9559 7.95943 26.422 8.37868 26.9008 8.37868C27.3928 8.37868 27.8258 7.95943 27.8258 7.44891C27.8258 6.92378 27.3928 6.50488 26.9008 6.50488Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M28.4584 9.34125H28.2737L23.7803 19.9986H25.3546L26.1282 18.0735H30.5953L31.369 19.9986H33.0665L28.4584 9.34125ZM28.8623 13.8404L30.0075 16.7106H26.6831L27.8258 13.8404C28.0303 13.3452 28.2322 12.652 28.3081 12.3912C28.3248 12.3338 28.3355 12.297 28.3387 12.2885C28.3533 12.3669 28.6307 13.2667 28.8623 13.8404Z\" fill=\"${l.color}\"/><path d=\"M34.3955 9.34082H34.5639L39.5869 15.2374L44.5627 9.34082H44.7336V19.9982H43.1731V14.5241C43.1731 14.0592 43.2136 13.3842 43.2292 13.124L43.2334 13.0541C43.2346 13.0333 43.2353 13.0205 43.2353 13.0171C43.2283 13.0246 43.1974 13.0694 43.1489 13.1396C42.9836 13.3791 42.6142 13.9145 42.2915 14.2745L39.6487 17.4702H39.4644L36.8205 14.2745C36.458 13.8525 36.0007 13.1732 35.9089 13.037L35.8956 13.0171C35.8956 13.0234 35.8978 13.0619 35.9015 13.124C35.9167 13.3842 35.9563 14.0593 35.9563 14.5241V19.9982H34.3955V9.34082Z\" fill=\"${l.color}\"/><path d=\"M46.644 10.8922H49.7692V19.9988H51.3936V10.8922H54.512V9.45117H46.644V10.8922Z\" fill=\"${l.color}\"/><path d=\"M56.4272 9.45117H58.0673V18.5553H62.9201V19.9988H56.4272V9.45117Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M68.8522 9.3418H68.6675L64.1694 19.9992H65.7473L66.5202 18.0737H70.9881L71.7589 19.9992H73.4575L68.8522 9.3418ZM69.2543 13.8405L70.4005 16.7111H67.0754L68.2178 13.8405C68.4311 13.3204 68.6454 12.5819 68.7111 12.3556C68.7216 12.3194 68.7285 12.2956 68.7307 12.289C68.7453 12.3675 69.0227 13.2669 69.2543 13.8405Z\" fill=\"${l.color}\"/><path d=\"M77.5679 13.8399C77.1502 13.3907 76.5801 12.6599 76.5801 12.6599C76.5801 12.6599 76.6856 13.5294 76.6856 14.1815V19.9982H75.1724V9.34082H75.3887L81.1854 15.5947C81.5882 16.0274 82.1572 16.7729 82.1572 16.7729C82.1572 16.7729 82.0503 15.8428 82.0503 15.251V9.45062H83.5649V20.1052H83.3617L77.5679 13.8399Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M89.1425 9.45117H86.2515V19.9991H89.1425C92.5266 19.9991 94.7524 17.8882 94.7524 14.7257C94.7524 11.5599 92.5092 9.45117 89.1425 9.45117ZM93.0506 14.7257C93.0506 16.9738 91.769 18.5553 89.0328 18.5553H87.8886V10.8925H89.0328C91.769 10.8925 93.0506 12.4761 93.0506 14.7257Z\" fill=\"${l.color}\"/><path d=\"M0.785645 24.6631H2.4253V29.3618H7.47639V24.6631H9.11427V35.21H7.47639V30.8199H2.4253V35.21H0.785645V24.6631Z\" fill=\"${l.color}\"/><path d=\"M17.0101 21.7148C16.5317 21.7148 16.083 22.1345 16.083 22.6621C16.083 23.1744 16.5317 23.5936 17.0101 23.5936C17.5064 23.5936 17.9543 23.1744 17.9543 22.6621C17.9543 22.1345 17.5064 21.7148 17.0101 21.7148Z\" fill=\"${l.color}\"/><path d=\"M14.1073 21.7148C13.6282 21.7148 13.1639 22.1345 13.1639 22.6621C13.1639 23.1744 13.6282 23.5936 14.1073 23.5936C14.6018 23.5936 15.0359 23.1744 15.0359 22.6621C15.0359 22.1345 14.6018 21.7148 14.1073 21.7148Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.6664 24.5566H15.4788L10.9829 35.21H12.5625L13.334 33.2885H17.8005L18.5731 35.21H20.2727L15.6664 24.5566ZM16.0667 29.0535L17.2137 31.923H13.8921L15.0359 29.0535C15.2612 28.4914 15.4899 27.6807 15.534 27.5245L15.541 27.4999C15.558 27.5787 15.8358 28.4774 16.0667 29.0535Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21.6011 24.6631H25.1216C27.2866 24.6631 28.9401 25.6859 28.9401 28.0128C28.9401 29.579 28.0886 30.5864 26.8078 31.0371L29.2793 35.21H27.4102L25.1383 31.3009H23.239V35.21H21.6011V24.6631ZM25.0605 29.918C26.4522 29.918 27.2557 29.3451 27.2557 28.0128C27.2557 26.6502 26.4355 26.1073 25.0605 26.1073H23.239V29.918H25.0605Z\" fill=\"${l.color}\"/><path d=\"M31.3838 32.7451L30.0532 33.5661C30.5491 34.5444 31.4766 35.3515 33.0352 35.3515C34.796 35.3515 36.0488 34.3601 36.0488 32.2634V24.6631H34.4127V32.2328C34.4127 33.4588 33.8383 33.8766 32.9588 33.8766C32.1852 33.8766 31.754 33.4128 31.3838 32.7451Z\" fill=\"${l.color}\"/><path d=\"M38.6733 24.6631H45.3488V26.1073H40.313V29.2043H44.7783V30.6178H40.313V33.7679H45.5662V35.21H38.6733V24.6631Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M50.7894 24.6631H47.8994V35.21H50.7894C54.1724 35.21 56.3982 33.1002 56.3982 29.934C56.3982 26.7736 54.1572 24.6631 50.7894 24.6631ZM54.6967 29.934C54.6967 32.1861 53.4183 33.7679 50.68 33.7679H49.5369V26.1073H50.68C53.4183 26.1073 54.6967 27.6855 54.6967 29.934Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M61.4208 24.5566H61.6087L66.2119 35.2101H64.5094L63.7364 33.2882H59.2743L58.4988 35.2101H56.9238L61.4208 24.5566ZM63.1496 31.9228L62.009 29.0533C61.7767 28.4775 61.4993 27.5784 61.483 27.5C61.4816 27.504 61.4787 27.514 61.4742 27.5295L61.4629 27.5689C61.3972 27.7977 61.1863 28.5321 60.9743 29.0533L59.8312 31.9228H63.1496Z\" fill=\"${l.color}\"/><path d=\"M69.7184 24.6631H68.0806V35.21H74.5706V33.7679H69.7184V24.6631Z\" fill=\"${l.color}\"/><path d=\"M76.6396 24.6631H83.3173V26.1073H78.2797V29.2043H82.7447V30.6178H78.2797V33.7679H83.5314V35.21H76.6396V24.6631Z\" fill=\"${l.color}\"/><path d=\"M87.2705 27.8729C87.2705 27.8729 87.8442 28.6005 88.2619 29.0533L94.0543 35.3185H94.2554V24.6632H92.7422V30.4625C92.7422 31.0504 92.8484 31.9841 92.8484 31.9841C92.8484 31.9841 92.2797 31.239 91.8787 30.8051L86.0806 24.5566H85.8643V35.2101H87.3796V29.393C87.3796 28.742 87.2705 27.8729 87.2705 27.8729Z\" fill=\"${l.color}\"/></svg>`}),el=()=>({getDefaultIconProps:()=>({width:\"75\",height:\"24\",color:\"var(--icon-color)\",color2:\"var(--icon-color2)\",disabledColor:\"var(--icon-disabled-color)\"}),render:l=>C`<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${l.width}\" height=\"${l.height}\" viewBox=\"0 0 75 24\" fill=\"none\"><mask id=\"mask0_6775_3580\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"17\" height=\"9\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 0.149544H16.7659V8.78541H0V0.149544Z\" fill=\"white\"/></mask><g mask=\"url(#mask0_6775_3580)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.7659 3.29092L11.0085 8.78541C11.0085 8.78541 9.54123 6.78643 7.10544 4.62542C4.77864 2.56211 1.74834 2.5599 0.534538 2.73343C0.211768 2.77919 -0.00012207 2.88374 -0.00012207 2.88374L0.0158379 0.327712C0.0158379 0.327712 2.78469 0.08367 5.87127 1.15091C8.61471 2.09989 11.0732 5.4232 11.0732 5.4232L16.7659 0.149544V3.29092Z\" fill=\"${l.color}\"/></g><mask id=\"mask1_6775_3580\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"6\" width=\"17\" height=\"13\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 6.98845H16.7728V18.1015H0V6.98845Z\" fill=\"white\"/></mask><g mask=\"url(#mask1_6775_3580)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.0158379 9.62794L-0.00012207 7.10372C-0.00012207 7.10372 2.82858 6.4954 4.98591 8.07368C6.64449 9.28667 8.58048 11.8757 9.02316 12.3501C9.45429 12.8137 10.8359 14.3351 12.1095 14.9745C13.0722 15.458 14.0369 15.7628 15.7534 15.6598C16.349 15.6238 16.7728 15.3986 16.7728 15.3986V17.8295C16.7728 17.8295 16.4712 17.9919 16.0122 18.0496C14.992 18.1768 13.119 18.1182 11.4972 17.3175C10.2481 16.7019 9.14748 15.5477 8.28942 14.7268C8.05527 14.5039 5.30469 11.1438 3.77631 10.0411C2.97684 9.46406 1.87602 9.19958 1.16538 9.24098C0.538528 9.27745 0.0158379 9.62794 0.0158379 9.62794Z\" fill=\"${l.color}\"/></g><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.76766 13.2632C5.76766 13.2632 7.15202 15.0086 9.6604 17.1427C11.605 18.7971 14.1392 19.193 16.0537 18.9648C16.5237 18.908 16.8 18.7313 16.8 18.7313V21.0703C16.8 21.0703 16.4102 21.2688 15.9346 21.2904C14.4189 21.3613 12.7277 21.1696 10.7998 20.4244C8.32613 19.4682 5.6597 16.4147 5.6597 16.4147L0 21.4737L0.00778674 18.427L5.76766 13.2632Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.7916 12.4506L16.8 14.8104C16.8 14.8104 16.586 14.9816 16.2474 15.0542C15.322 15.2504 13.5345 15.2787 11.9777 14.1169C10.3145 12.8753 7.77818 9.76229 7.38771 9.35739C6.99724 8.9525 5.99854 7.71872 4.65254 6.97038C3.30697 6.2227 1.48858 6.23191 0.569274 6.29753C0.206817 6.32321 0 6.40221 0 6.40221V3.91534C0 3.91534 2.84195 3.35683 5.25088 4.5928C6.49937 5.23339 7.73711 6.46366 8.40558 7.25984C8.61724 7.51112 11.4611 10.9096 12.9945 12.038C13.7959 12.6279 14.9003 12.8994 15.6132 12.8566C16.2415 12.8189 16.7916 12.4506 16.7916 12.4506Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M23.8297 4.57403C24.7339 4.57403 25.2973 4.00424 25.2973 3.08546C25.2973 2.48073 25.0627 2.05049 24.64 1.8179C24.4169 1.7015 24.1467 1.63162 23.5009 1.63162H22.1623V4.57403H23.8297ZM21 0.631584H23.5362C24.4052 0.631584 24.7692 0.701466 25.0861 0.817656C25.9317 1.1317 26.4834 1.95745 26.4834 3.03894C26.4834 4.0857 25.8964 4.96954 24.9923 5.26023V5.28359C24.9923 5.28359 25.0861 5.3882 25.2389 5.65574L27 8.84211H25.6849L23.9355 5.57428H22.1623V8.84211H21V0.631584Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M31.8671 4.9812C31.833 3.94442 31.2151 3.44404 30.4715 3.44404C29.6248 3.44404 28.9384 3.99208 28.7782 4.9812H31.8671ZM30.4943 2.52631C32.1303 2.52631 33 3.78956 33 5.35066C33 5.50552 32.9656 5.85104 32.9656 5.85104H28.744C28.8011 7.17381 29.705 7.84113 30.7345 7.84113C31.7299 7.84113 32.4506 7.13801 32.4506 7.13801L32.9082 7.98412C32.9082 7.98412 32.0502 8.8421 30.666 8.8421C28.8469 8.8421 27.6 7.47167 27.6 5.68432C27.6 3.76562 28.8469 2.52631 30.4943 2.52631Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M38.5176 5.61137C38.5176 4.00817 37.7885 3.54653 36.8885 3.54653C35.8858 3.54653 35.3165 4.32406 35.3165 5.57488C35.3165 6.85031 35.9542 7.72478 36.991 7.72478C37.7885 7.72478 38.5176 7.21457 38.5176 5.61137ZM36.672 10.3482C37.6745 10.3482 38.495 9.87469 38.495 8.62366V8.17411C38.495 7.97978 38.5061 7.78546 38.5061 7.78546H38.4834C38.1418 8.39284 37.6063 8.745 36.7747 8.745C35.1682 8.745 34.2 7.37262 34.2 5.59928C34.2 3.83824 35.1227 2.52631 36.7178 2.52631C38.1075 2.52631 38.5292 3.43728 38.5292 3.43728H38.5519C38.5519 3.43728 38.5403 3.35242 38.5403 3.24295V2.52631H39.6V8.56277C39.6 10.5911 38.1529 11.3684 36.6947 11.3684C35.9998 11.3684 35.2823 11.162 34.7241 10.8584L35.0884 9.93537C35.0884 9.93537 35.8064 10.3482 36.672 10.3482Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M45.9001 7.84113C47.0605 7.84113 48.0032 6.93548 48.0032 5.67224C48.0032 4.42107 47.0605 3.52729 45.9001 3.52729C44.7517 3.52729 43.7967 4.42107 43.7967 5.67224C43.7967 6.93548 44.7517 7.84113 45.9001 7.84113ZM45.9001 2.52631C47.7254 2.52631 49.2 3.84909 49.2 5.67224C49.2 7.50747 47.7254 8.8421 45.9001 8.8421C44.0746 8.8421 42.6 7.50747 42.6 5.67224C42.6 3.84909 44.0746 2.52631 45.9001 2.52631Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M50.4 2.52631H51.5081V3.48957C51.5081 3.73342 51.4847 3.94064 51.4847 3.94064H51.5081C51.7442 3.40417 52.4513 2.52631 53.7483 2.52631C55.1515 2.52631 55.8 3.31877 55.8 4.89176V8.8421H54.6563V5.1601C54.6563 4.29438 54.4794 3.61138 53.5245 3.61138C52.6167 3.61138 51.8856 4.23325 51.6381 5.12347C51.5673 5.36732 51.5436 5.6478 51.5436 5.95255V8.8421H50.4V2.52631Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M25.3067 12.6316C27.3286 12.6316 28.3813 13.6611 28.3813 13.6611L27.7832 14.5575C27.7832 14.5575 26.8379 13.7218 25.4024 13.7218C23.4168 13.7218 22.2203 15.1873 22.2203 17.0164C22.2203 19.0028 23.5603 20.3716 25.3305 20.3716C26.7903 20.3716 27.7233 19.3055 27.7233 19.3055V18.0702H26.3477V17.0284H28.8L28.7911 21.3788H27.764L27.7592 20.7954C27.7592 20.6139 27.7711 20.4324 27.7711 20.4324H27.7471C27.7471 20.4324 26.8262 21.4737 25.1513 21.4737C22.8783 21.4737 21 19.657 21 17.0407C21 14.5696 22.8423 12.6316 25.3067 12.6316Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32.185 20.5443C33.1131 20.5443 33.7133 19.5194 33.7133 18.6256V18.435H33.4303C32.6038 18.435 31.1095 18.4947 31.1095 19.5789C31.1095 20.0677 31.4719 20.5443 32.185 20.5443ZM33.4528 17.5651H33.7018V17.4577C33.7018 16.4688 33.1699 16.1351 32.4454 16.1351C31.5623 16.1351 30.8491 16.719 30.8491 16.719L30.3965 15.8729C30.3965 15.8729 31.2228 15.1579 32.5359 15.1579C33.9849 15.1579 34.8 15.9922 34.8 17.5174L34.7947 21.3801H33.7737L33.7811 20.7587C33.7811 20.4846 33.8038 20.282 33.8038 20.282H33.7811C33.7811 20.282 33.317 21.4737 31.9473 21.4737C30.9624 21.4737 30 20.8422 30 19.6387C30 17.6484 32.4905 17.5651 33.4528 17.5651Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M35.4 15.1579H36.5159L37.9015 19.4182C38.0118 19.7605 38.0779 20.2616 38.0891 20.2616H38.1111C38.1221 20.2616 38.1996 19.7605 38.3099 19.4182L39.696 15.1579H40.8L38.7 21.4737H37.524L35.4 15.1579Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M42 12.6316H43.0392V19.4934C43.0392 20.2532 43.2966 20.3902 43.6181 20.3902C43.7145 20.3902 43.8 20.3778 43.8 20.3778V21.4487C43.8 21.4487 43.6394 21.4737 43.4573 21.4737C42.868 21.4737 42 21.2866 42 19.7052V12.6316Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M49.2674 17.6126C49.233 16.5758 48.6153 16.0754 47.8718 16.0754C47.0251 16.0754 46.3385 16.6235 46.1784 17.6126H49.2674ZM47.8945 15.1579C49.5305 15.1579 50.4 16.421 50.4 17.9821C50.4 18.137 50.3656 18.4825 50.3656 18.4825H46.144C46.2012 19.8056 47.1052 20.4727 48.1347 20.4727C49.1301 20.4727 49.8507 19.7695 49.8507 19.7695L50.3085 20.6157C50.3085 20.6157 49.4504 21.4737 48.066 21.4737C46.2471 21.4737 45 20.1032 45 18.3158C45 16.397 46.2471 15.1579 47.8945 15.1579Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M54.2614 20.4515C55.1593 20.4515 55.9001 19.6388 55.9001 18.2226C55.9001 16.8679 55.238 15.9937 54.2949 15.9937C53.442 15.9937 52.6562 16.6461 52.6562 18.2349C52.6562 19.3433 53.1836 20.4515 54.2614 20.4515ZM51.601 12.6316H52.6899V15.4763C52.6899 15.7842 52.6674 16.0057 52.6674 16.0057H52.6899C52.6899 16.0057 53.1724 14.9468 54.5082 14.9468C56.0348 14.9468 57 16.2768 57 18.2103C57 20.193 55.9112 21.4737 54.4182 21.4737C53.1501 21.4737 52.6337 20.4023 52.6337 20.4023H52.6113C52.6113 20.4023 52.6337 20.5995 52.6337 20.8701L52.6369 21.377H51.6L51.601 12.6316Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M61.4998 20.4727C62.6605 20.4727 63.6032 19.5671 63.6032 18.304C63.6032 17.0527 62.6605 16.1591 61.4998 16.1591C60.3515 16.1591 59.3967 17.0527 59.3967 18.304C59.3967 19.5671 60.3515 20.4727 61.4998 20.4727ZM61.4998 15.1579C63.3251 15.1579 64.8 16.4807 64.8 18.304C64.8 20.1393 63.3251 21.4737 61.4998 21.4737C59.6745 21.4737 58.2 20.1393 58.2 18.304C58.2 16.4807 59.6745 15.1579 61.4998 15.1579Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M66 15.1579H67.0106V16.3131C67.0106 16.5697 66.9892 16.7775 66.9892 16.7775H67.0106C67.258 15.873 67.8924 15.1639 68.7312 15.1639C68.871 15.1639 69 15.1884 69 15.1884V16.362C69 16.362 68.8603 16.3253 68.6989 16.3253C68.0322 16.3253 67.4193 16.8633 67.172 17.78C67.0753 18.1347 67.0429 18.5137 67.0429 18.8925L67.0334 21.4737H66.0047L66 15.1579Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M73.9177 18.243C73.9177 16.6398 73.1886 16.1781 72.2887 16.1781C71.2858 16.1781 70.7165 16.9554 70.7165 18.2062C70.7165 19.4819 71.3543 20.3564 72.3912 20.3564C73.1886 20.3564 73.9177 19.8462 73.9177 18.243ZM72.072 22.9798C73.0745 22.9798 73.895 22.5063 73.895 21.255V20.8057C73.895 20.6114 73.9061 20.417 73.9061 20.417H73.8834C73.5418 21.0242 73.0063 21.3766 72.1745 21.3766C70.5683 21.3766 69.6 20.004 69.6 18.2309C69.6 16.4696 70.5227 15.1579 72.1178 15.1579C73.5075 15.1579 73.929 16.0689 73.929 16.0689H73.9517C73.9517 16.0689 73.9403 15.9838 73.9403 15.8745V15.2247H75V21.1943C75 23.2227 73.5531 24 72.0949 24C71.3998 24 70.6823 23.7936 70.1239 23.4898L70.4885 22.5667C70.4885 22.5667 71.2062 22.9798 72.072 22.9798Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M41.9889 2.78352C41.8508 2.49621 41.3692 2.5273 41.3692 2.5273C41.0205 2.52134 40.875 2.68253 40.8249 2.76124C40.8224 2.76632 40.7964 2.80953 40.8005 2.87502V8.8421H42V2.85231C41.9983 2.83665 41.9994 2.80953 41.9889 2.78352Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M42 1.26316C42 1.61188 41.7312 1.89474 41.4001 1.89474C41.0687 1.89474 40.8 1.61188 40.8 1.26316C40.8 0.914445 41.0687 0.631584 41.4001 0.631584C41.7312 0.631584 42 0.914445 42 1.26316Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M33.6 13.8949C33.6 14.2436 33.3314 14.5263 33.0001 14.5263C32.6687 14.5263 32.4 14.2436 32.4 13.8949C32.4 13.5459 32.6687 13.2632 33.0001 13.2632C33.3314 13.2632 33.6 13.5459 33.6 13.8949Z\" fill=\"${l.color}\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M31.8 13.8949C31.8 14.2436 31.5313 14.5263 31.2001 14.5263C30.8686 14.5263 30.6 14.2436 30.6 13.8949C30.6 13.5459 30.8686 13.2632 31.2001 13.2632C31.5313 13.2632 31.8 13.5459 31.8 13.8949Z\" fill=\"${l.color}\"/></svg>`});export{l as agent,o as arrow,e as attention,d as bookmark,yC as brand1177,ll as brandblekinge,qC as branddalarna,el as brandgavleborg,XC as brandgotland,QC as brandhalland,UC as brandinera,zC as brandineralegacy,ol as brandjamtlandharjedalen,JC as brandjonkoping,EC as brandkalmar,AC as brandkronoberg,Cl as brandnorrbotten,YC as brandorebro,WC as brandostergotland,RC as brandskane,NC as brandsormland,OC as brandstockholm,KC as branduppsala,jC as brandvarmland,SC as brandvasterbotten,GC as brandvasternorrland,TC as brandvastmanland,FC as brandvastragotaland,c as calendar,i as call,r as callactive,t as cameraoff,h as cameraon,n as cameraswitch,v as chartbar,a as chartline,H as check,V as chevron,p as chevronbold,f as clipboard,L as clipboardcross,s as clipboardtext,M as clock,Z as close,u as closebold,g as cog,m as computer,x as computerinera,w as copyfile,$ as copylink,k as doctorsbag,b as dragndrop,_ as earhearing,D as edit,B as email,P as expand,I as external,y as facebook,O as fileexcel,z as fileother,S as filepdf,U as filepicture,A as filepowerpoint,F as fileword,G as findcare,E as findregion,q as house,T as idcard,j as idcardlocked,J as image,K as information,N as lightbulb,R as linkedin,Q as list,Y as lock,CC as lockopen,W as log,X as loglocked,lC as menu,oC as minus,eC as officebuilding,dC as organization,iC as plus,rC as print,cC as question,tC as reload,hC as reply,nC as search,vC as searchinera,aC as shieldlocked,HC as shieldlockedprimary,pC as star,VC as starfilled,fC as success,LC as swap,sC as telephone,uC as testtube,MC as testtubeanalyze,ZC as testtubeempty,gC as togglecard,wC as togglelist,$C as trash,mC as twitter,kC as user,bC as videooff,BC as videoon,_C as videoswitch,DC as visibility,PC as visibilityoff,IC as warning,xC as x};\n", "import{css as i}from\"lit\";var l=i`:host{display:flex}:host([inline]){display:inline-flex}`;export{l as default};\n", "import{__decorate as t}from\"tslib\";import{LitElement as o,html as i}from\"lit\";import{property as e,state as s}from\"lit/decorators.js\";import*as r from\"./icons/icons.js\";import{generateId as h,logWarning as l}from\"../../utilities/utils.js\";import c from\"./icon-styles.js\";class n extends o{constructor(){super(...arguments),this.name=\"\",this.title=\"\",this.colorpreset=-1,this.color=\"\",this.color2=\"\",this.size=\"m\",this.width=\"\",this.height=\"\",this.rotate=\"\",this.inline=!1,this.isDisabled=!1,this.medium={height:\"40\",width:\"40\"},this.small={height:\"20\",width:\"20\"},this.xsmall={height:\"12\",width:\"12\"}}get iconSvg(){return this.shadowRoot?.querySelector(\"svg\")}connectedCallback(){super.connectedCallback(),this.classList.add(\"ids-icon\")}firstUpdated(t){super.firstUpdated(t);try{this.title?this.setTitle():this.shadowRoot?.querySelector(\"svg\")?.setAttribute(\"aria-hidden\",\"true\")}catch(t){}this.setupRotation()}updated(t){super.updated(t),this.setupRotation()}setupRotation(){this.iconSvg&&(this.iconSvg.style.transform=`rotate(${this.rotate}deg)`)}setTitle(){const t=h(),o=document.createElement(\"title\");o.setAttribute(\"id\",t),o.innerText=this.title,this.shadowRoot?.querySelector(\"svg\")?.setAttribute(\"role\",\"img\"),this.shadowRoot?.querySelector(\"svg\")?.prepend(o),this.shadowRoot?.querySelector(\"svg\")?.setAttribute(\"aria-labelledby\",t)}getDimensions(){if(this.width&&this.height)return{width:this.width,height:this.height};switch(this.size){case\"xs\":return this.xsmall;case\"s\":default:return this.small;case\"m\":return this.medium}}getIconColors(t){if(this.isDisabled)return{color:\"var(--input-icon-disabled_fill)\",color2:\"var(--input-icon-disabled_fill)\"};const o={color:t.color,color2:t.color2};return o.color=this.color?this.color:t.color,o.color2=this.color2?this.color2:t.color2,!isNaN(this.colorpreset)&&this.colorpreset>0&&(o.color=`var(--icon-color-preset${this.colorpreset})`,o.color2=`var(--icon-color2-preset${this.colorpreset})`),o}getIcon(){const t=this.name?.replaceAll(\"-\",\"\");if(t in r){const o=r[t](),i=o.getDefaultIconProps(),{width:e,height:s}=this.getDimensions();i.width=e||i.width,i.height=s||i.height;const{color:h,color2:l}=this.getIconColors(i);return i.title=this.title,i.color=h,i.color2=l,o.render(i)}l(this,this.name+\" is not a registered icon.\")}render(){return i`${this.getIcon()}`}}n.styles=[c],t([e({type:String})],n.prototype,\"name\",void 0),t([e({type:String})],n.prototype,\"title\",void 0),t([e({type:Number})],n.prototype,\"colorpreset\",void 0),t([e({type:String})],n.prototype,\"color\",void 0),t([e({type:String})],n.prototype,\"color2\",void 0),t([e({type:String})],n.prototype,\"size\",void 0),t([e({type:String})],n.prototype,\"width\",void 0),t([e({type:String})],n.prototype,\"height\",void 0),t([e({type:String})],n.prototype,\"rotate\",void 0),t([e({type:Boolean})],n.prototype,\"inline\",void 0),t([s()],n.prototype,\"isDisabled\",void 0);export{n as IDSIcon};\n", "import{IDSIcon as i}from\"./icon-element.js\";import{registerComponent as o}from\"../../utilities/utils.js\";o(\"ids-icon\",i);\n", "import * as React from 'react';\nimport { createComponent } from '@lit-labs/react';\nimport '@inera/ids-core/components/button/register';\nimport { IDSButton as IDSButton$1 } from '@inera/ids-core/components/button/button-element';\n\nconst IDSButton = createComponent({\r\n    tagName: 'ids-button',\r\n    elementClass: IDSButton$1,\r\n    react: React,\r\n    events: {\r\n        onClicked: 'clicked'\r\n    }\r\n});\n\nexport { IDSButton };\n", "/**\n * @license\n * Copyright 2018 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {nothing} from '../lit-html.js';\n\n/**\n * For AttributeParts, sets the attribute if the value is defined and removes\n * the attribute if the value is undefined.\n *\n * For other part types, this directive is a no-op.\n */\nexport const ifDefined = <T>(value: T) => value ?? nothing;\n", "import{css as r}from\"lit\";var s=r`:host{display:inline-block;border-radius:var(--btn_border-radius)}:host([block]){display:block}:host([disabled]){pointer-events:none}:host([submit]){height:var(--btn-submit_height);border-radius:var(--btn-submit_border-radius)}:host([fab]),:host([icon]){border-radius:100%}:host([search]){border-radius:var(--btn-search_border-radius);height:var(--btn-search_height)}@media only screen and (max-width:1024px){:host([mblock]){display:block;width:100%}:host([search]){height:var(--btn-search-mobile_height)}}@media only screen and (max-width:640px){:host([sblock]){display:block;width:100%}}`;export{s as default};\n", "import { css, unsafeCSS } from 'lit';\n\nvar css_248z = \".ids .ids-button.ids-button--disabled,.ids .ids-button.ids-button--secondary.ids-button--disabled,.ids .ids-button.ids-button--secondary[disabled],.ids .ids-button[disabled],.ids button.ids-button.ids-button--disabled,.ids button.ids-button.ids-button--secondary.ids-button--disabled,.ids button.ids-button.ids-button--secondary[disabled],.ids button.ids-button[disabled],.ids-button.ids-button--disabled,.ids-button.ids-button--secondary.ids-button--disabled,.ids-button.ids-button--secondary[disabled],.ids-button[disabled]{background-color:#fff;border:var(--btn-disabled_border);color:var(--btn-disabled_color)}.ids button.ids-button{background:none;border:none;color:inherit;cursor:pointer;font:inherit;min-height:24px;min-width:24px;outline:inherit;padding:0;-moz-user-select:-moz-none;-khtml-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.ids button.ids-button:focus{outline:var(--focus_outline);outline-offset:var(--focus_outline-offset)}.ids .ids-button,.ids button.ids-button,.ids-button{align-items:center;background-color:var(--btn_background-color);border:var(--btn_border);border-radius:var(--btn_border-radius);box-sizing:border-box;color:#fff;cursor:pointer;display:inline-flex;font-family:var(--btn_font-family);font-size:1rem;font-weight:var(--btn_font-weight);gap:10px;line-height:var(--btn-m_height);min-height:var(--btn-m_height);padding:0 30px;text-align:center;text-transform:uppercase;user-select:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none}.ids .ids-button:focus,.ids button.ids-button:focus,.ids-button:focus{outline:var(--focus_outline);outline-offset:var(--focus_outline-offset)}.ids .ids-button.ids-button--active,.ids .ids-button:active,.ids .ids-button:focus,.ids .ids-button:hover,.ids button.ids-button.ids-button--active,.ids button.ids-button:active,.ids button.ids-button:focus,.ids button.ids-button:hover,.ids-button.ids-button--active,.ids-button:active,.ids-button:focus,.ids-button:hover{background-color:var(--btn-active_background-color);box-shadow:var(--btn-active_box-shadow)}.ids .ids-button.ids-button--s,.ids button.ids-button.ids-button--s,.ids-button.ids-button--s{font-size:.875rem;line-height:var(--btn-s_height);min-height:var(--btn-s_height)}.ids .ids-button.ids-button--l,.ids button.ids-button.ids-button--l,.ids-button.ids-button--l{font-size:1.125rem;line-height:var(--btn-l_height);min-height:var(--btn-l_height)}.ids .ids-button.ids-button--secondary,.ids button.ids-button.ids-button--secondary,.ids-button.ids-button--secondary{background-color:#fff;border:var(--btn-secondary_border);color:var(--btn-secondary_color)}.ids .ids-button.ids-button--secondary.ids-button--size-s,.ids button.ids-button.ids-button--secondary.ids-button--size-s,.ids-button.ids-button--secondary.ids-button--size-s{min-height:var(--btn-secondary-s_height)}.ids .ids-button.ids-button--secondary.ids-button--size-m,.ids button.ids-button.ids-button--secondary.ids-button--size-m,.ids-button.ids-button--secondary.ids-button--size-m{min-height:var(--btn-secondary-m_height)}.ids .ids-button.ids-button--secondary.ids-button--size-l,.ids button.ids-button.ids-button--secondary.ids-button--size-l,.ids-button.ids-button--secondary.ids-button--size-l{min-height:var(--btn-secondary-l_height)}.ids .ids-button.ids-button--secondary.ids-button--active,.ids .ids-button.ids-button--secondary:active,.ids .ids-button.ids-button--secondary:focus,.ids .ids-button.ids-button--secondary:hover,.ids button.ids-button.ids-button--secondary.ids-button--active,.ids button.ids-button.ids-button--secondary:active,.ids button.ids-button.ids-button--secondary:focus,.ids button.ids-button.ids-button--secondary:hover,.ids-button.ids-button--secondary.ids-button--active,.ids-button.ids-button--secondary:active,.ids-button.ids-button--secondary:focus,.ids-button.ids-button--secondary:hover{background-color:var(--btn-active_background-color);border:1px solid var(--btn-active_background-color);color:#fff}.ids .ids-button.ids-button--tertiary,.ids button.ids-button.ids-button--tertiary,.ids-button.ids-button--tertiary{background:transparent;border:none;border-radius:0;box-shadow:none;color:var(--btn-tertiary_color);font-family:var(--font-family_2);line-height:22px;text-decoration:underline}.ids .ids-button.ids-button--tertiary.ids-button--active,.ids .ids-button.ids-button--tertiary:active,.ids .ids-button.ids-button--tertiary:focus,.ids .ids-button.ids-button--tertiary:hover,.ids button.ids-button.ids-button--tertiary.ids-button--active,.ids button.ids-button.ids-button--tertiary:active,.ids button.ids-button.ids-button--tertiary:focus,.ids button.ids-button.ids-button--tertiary:hover,.ids-button.ids-button--tertiary.ids-button--active,.ids-button.ids-button--tertiary:active,.ids-button.ids-button--tertiary:focus,.ids-button.ids-button--tertiary:hover{background-color:var(--btn-active_background-color);border-radius:var(--btn_border-radius);color:#fff}.ids .ids-button.ids-button--tertiary.ids-button--disabled,.ids .ids-button.ids-button--tertiary[disabled],.ids button.ids-button.ids-button--tertiary.ids-button--disabled,.ids button.ids-button.ids-button--tertiary[disabled],.ids-button.ids-button--tertiary.ids-button--disabled,.ids-button.ids-button--tertiary[disabled]{color:var(--btn-disabled_color);text-decoration:none}.ids .ids-button.ids-button--submit,.ids button.ids-button.ids-button--submit,.ids-button.ids-button--submit{height:3.75em!important}.ids .ids-button.ids-button--fab,.ids .ids-button.ids-button--icon,.ids button.ids-button.ids-button--fab,.ids button.ids-button.ids-button--icon,.ids-button.ids-button--fab,.ids-button.ids-button--icon{border-radius:100%;font-family:Open Sans;font-size:20px;font-style:normal;font-weight:400;height:44px!important;justify-content:center;line-height:0px!important;padding:0;width:44px}.ids .ids-button.ids-button--fab.ids-button--s,.ids .ids-button.ids-button--icon.ids-button--s,.ids button.ids-button.ids-button--fab.ids-button--s,.ids button.ids-button.ids-button--icon.ids-button--s,.ids-button.ids-button--fab.ids-button--s,.ids-button.ids-button--icon.ids-button--s{height:30px!important;width:30px}.ids .ids-button.ids-button--fab.ids-button--l,.ids .ids-button.ids-button--icon.ids-button--l,.ids button.ids-button.ids-button--fab.ids-button--l,.ids button.ids-button.ids-button--icon.ids-button--l,.ids-button.ids-button--fab.ids-button--l,.ids-button.ids-button--icon.ids-button--l{height:60px!important;width:60px}.ids .ids-button.ids-button--fab,.ids button.ids-button.ids-button--fab,.ids-button.ids-button--fab{background-color:#fff;border:var(--btn-fab_border);filter:drop-shadow(0 0 6px rgba(0,0,0,.3))}.ids .ids-button.ids-button--icon.ids-button--secondary,.ids button.ids-button.ids-button--icon.ids-button--secondary,.ids-button.ids-button--icon.ids-button--secondary{background-color:var(--btn-icon-secondary_background-color)}.ids .ids-button.ids-button--icon.ids-button--active,.ids .ids-button.ids-button--icon:active,.ids .ids-button.ids-button--icon:focus,.ids .ids-button.ids-button--icon:hover,.ids button.ids-button.ids-button--icon.ids-button--active,.ids button.ids-button.ids-button--icon:active,.ids button.ids-button.ids-button--icon:focus,.ids button.ids-button.ids-button--icon:hover,.ids-button.ids-button--icon.ids-button--active,.ids-button.ids-button--icon:active,.ids-button.ids-button--icon:focus,.ids-button.ids-button--icon:hover{background-color:var(--btn-icon-secondary--hover_background-color);color:#fff}.ids .ids-button.ids-button--submit,.ids button.ids-button.ids-button--submit,.ids-button.ids-button--submit{border-radius:var(--btn-submit_border-radius);height:var(--btn-submit_height);line-height:var(--btn-submit_height)}.ids .ids-button.ids-button--search,.ids button.ids-button.ids-button--search,.ids-button.ids-button--search{border-radius:var(--btn-search_border-radius);font-size:1rem;height:var(--btn-search_height)!important;padding:0 30px!important}@media (max-width:1024px){.ids .ids-button.ids-button--search,.ids button.ids-button.ids-button--search,.ids-button.ids-button--search{height:var(--btn-search-mobile_height)!important}}.ids .ids-button.ids-button--block,.ids button.ids-button.ids-button--block,.ids-button.ids-button--block{align-items:center;display:flex;justify-content:center;width:100%}@media (max-width:1024px){.ids .ids-button.ids-button--m-block,.ids button.ids-button.ids-button--m-block,.ids-button.ids-button--m-block{align-items:center;display:flex;justify-content:center;width:100%}}@media (max-width:640px){.ids .ids-button.ids-button--s-block,.ids button.ids-button.ids-button--s-block,.ids-button.ids-button--s-block{align-items:center;display:flex;justify-content:center;width:100%}}.ids .ids-button.ids-button--disabled,.ids .ids-button[disabled],.ids button.ids-button.ids-button--disabled,.ids button.ids-button[disabled],.ids-button.ids-button--disabled,.ids-button[disabled]{pointer-events:none}\";\n\nvar buttonLit = css`${unsafeCSS(css_248z)}`;\n\nexport { buttonLit as default };\n", "import{__decorate as t}from\"tslib\";import{LitElement as o,html as e}from\"lit\";import{property as i,state as r}from\"lit/decorators.js\";import{ifDefined as s}from\"lit/directives/if-defined.js\";import c from\"./button-styles.js\";import d from\"@inera/ids-design/components/button/button-lit\";class n extends o{constructor(){super(...arguments),this.active=!1,this.block=!1,this.disabled=!1,this.fab=!1,this.icon=!1,this.mblock=!1,this.sblock=!1,this.tertiary=!1,this.search=!1,this.secondary=!1,this.size=\"m\",this.submit=!1,this.toggle=!1,this.type=\"\",this.color=\"\",this.coloractive=\"\",this.colordisabled=\"\",this.colorhover=\"\",this.backgroundcolor=\"\",this.backgroundcoloractive=\"\",this.backgroundcolordisabled=\"\",this.backgroundcolorhover=\"\",this.bordercoloractive=\"\",this.bordercolordisabled=\"\",this.bordercolorhover=\"\",this.bordercolor=\"\",this.isHovered=!1,this.handleKeypress=t=>{switch(t.code){case\"Enter\":case\"NumpadEnter\":case\"Space\":this.click()}},this.clicked=()=>{let t=new CustomEvent(\"clicked\");this.dispatchEvent(t),\"submit\"===this.type&&this.submitForm()},this.submitForm=()=>{let t=this.closest(\"form\");t&&t.checkValidity()&&t.submit()},this.setIconAttributes=()=>{if(this.iconComponent&&!this.fab){this.iconComponent.isDisabled=this.disabled;let t=\"var(--btn-icon_color)\",o=\"var(--btn-icon_color2)\";(this.secondary||this.tertiary)&&(t=\"var(--btn-secondary-icon_color)\",o=\"var(--btn-secondary-icon_color2)\"),this.setIconColors(t,o)}},this.setIconHoveredAttributes=()=>{if(this.iconComponent&&!this.fab){let t=\"var(--btn-active-icon_color)\",o=\"var(--btn-active-icon_color)\";this.secondary?this.icon?(t=\"var(--btn-icon-secondary-active-icon_color)\",o=\"var(--btn-icon-secondary-active-icon_color2)\"):(t=\"var(--btn-secondary-active-icon_color)\",o=\"var(--btn-secondary-active-icon_color2)\"):this.tertiary&&(t=\"var(--btn-tertiary-active-icon_color)\",o=\"var(--btn-tertiary-active-icon_color2)\"),this.setIconColors(t,o)}}}get iconComponent(){return this.querySelector(\".ids-icon\")}firstUpdated(t){super.firstUpdated(t),this.setAttribute(\"role\",\"button\"),this.getAttribute(\"tabindex\")||this.setAttribute(\"tabindex\",this.disabled?\"-1\":\"0\"),this.addEventListener(\"keypress\",this.handleKeypress),this.addEventListener(\"focus\",this.setFocusTrue),this.addEventListener(\"blur\",this.setFocusFalse),this.addEventListener(\"click\",this.clicked),this.setupIcon()}setupIcon(){this.iconComponent&&(this.iconComponent.setAttribute(\"slot\",\"icon\"),this.iconComponent.getAttribute(\"size\")||this.iconComponent.setAttribute(\"size\",\"s\"),this.fab||this.setIconAttributes())}updated(t){super.updated(t),this.disabled?this.setAttribute(\"aria-disabled\",\"true\"):this.removeAttribute(\"aria-disabled\"),this.setAttribute(\"tabindex\",this.disabled?\"-1\":\"0\"),this.toggle&&this.setAttribute(\"aria-pressed\",\"\"+this.active)}setIconColors(t,o){this.iconComponent.setAttribute(\"color\",t),this.iconComponent.setAttribute(\"color2\",o)}getCustomBackgroundColor(){return this.disabled&&this.backgroundcolordisabled?`background-color: ${this.backgroundcolordisabled};`:this.active&&this.backgroundcoloractive?`background-color: ${this.backgroundcoloractive};`:this.isHovered&&(this.backgroundcoloractive||this.backgroundcolorhover)?`background-color: ${this.backgroundcolorhover||this.backgroundcoloractive};`:this.backgroundcolor?`background-color: ${this.backgroundcolor};`:void 0}getCustomColor(){return this.disabled&&this.colordisabled||this.active&&this.coloractive?`color: ${this.colordisabled};`:this.isHovered&&(this.coloractive||this.colorhover)?`color: ${this.colorhover||this.coloractive};`:this.color?`color: ${this.color};`:void 0}getCustomBorderColor(){return this.disabled&&this.bordercolordisabled||this.active&&this.bordercoloractive?`border: 1px solid ${this.bordercolordisabled};`:this.isHovered&&(this.bordercoloractive||this.bordercolorhover)?`border: 1px solid ${this.bordercolorhover||this.bordercoloractive};`:this.bordercolor?`border: 1px solid ${this.bordercolor};`:void 0}getStyles(){const t=this.getCustomColor(),o=this.getCustomBackgroundColor(),e=this.getCustomBorderColor();let i=\"\";return t&&(i+=t),o&&(i+=o),e&&(i+=e),i||void 0}onMouseEnter(){this.isHovered=!0,this.setIconHoveredAttributes()}onMouseLeave(){this.isHovered=!1,this.active||this.setIconAttributes()}setFocusTrue(){this.active=!0,this.setIconHoveredAttributes()}setFocusFalse(){this.active=!1,this.setIconAttributes()}getButtonClasses(){let t=`ids-button--${this.size}`;return t+=this.active?\" ids-button--active\":\"\",t+=this.fab?\" ids-button--fab\":\"\",t+=this.icon?\" ids-button--icon\":\"\",t+=this.secondary?\" ids-button--secondary\":\"\",t+=this.tertiary?\" ids-button--tertiary\":\"\",t+=this.disabled?\" ids-button--disabled\":\"\",t+=this.block?\" ids-button--block\":\"\",t+=this.search?\" ids-button--search\":\"\",t+=this.mblock?\" ids-button--m-block\":\"\",t+=this.sblock?\" ids-button--s-block\":\"\",t+=this.submit?\" ids-button--submit\":\"\",t}render(){return e`<div class=\"ids-button ${this.getButtonClasses()}\" @mouseenter=\"${this.onMouseEnter}\" @mouseleave=\"${this.onMouseLeave}\" style=\"${s(this.getStyles())}\"><slot name=\"icon\"></slot><slot></slot></div>`}}n.styles=[c,d],t([i({type:Boolean,reflect:!0})],n.prototype,\"active\",void 0),t([i({type:Boolean,reflect:!0})],n.prototype,\"block\",void 0),t([i({type:Boolean,reflect:!0})],n.prototype,\"disabled\",void 0),t([i({type:Boolean,reflect:!0})],n.prototype,\"fab\",void 0),t([i({type:Boolean,reflect:!0})],n.prototype,\"icon\",void 0),t([i({type:Boolean,reflect:!0})],n.prototype,\"mblock\",void 0),t([i({type:Boolean,reflect:!0})],n.prototype,\"sblock\",void 0),t([i({type:Boolean,reflect:!0})],n.prototype,\"tertiary\",void 0),t([i({type:Boolean,reflect:!0})],n.prototype,\"search\",void 0),t([i({type:Boolean,reflect:!0})],n.prototype,\"secondary\",void 0),t([i({type:String,reflect:!0})],n.prototype,\"size\",void 0),t([i({type:Boolean,reflect:!0})],n.prototype,\"submit\",void 0),t([i({type:Boolean,reflect:!0})],n.prototype,\"toggle\",void 0),t([i({type:String,reflect:!0})],n.prototype,\"type\",void 0),t([i({type:String})],n.prototype,\"color\",void 0),t([i({type:String})],n.prototype,\"coloractive\",void 0),t([i({type:String})],n.prototype,\"colordisabled\",void 0),t([i({type:String})],n.prototype,\"colorhover\",void 0),t([i({type:String})],n.prototype,\"backgroundcolor\",void 0),t([i({type:String})],n.prototype,\"backgroundcoloractive\",void 0),t([i({type:String})],n.prototype,\"backgroundcolordisabled\",void 0),t([i({type:String})],n.prototype,\"backgroundcolorhover\",void 0),t([i({type:String})],n.prototype,\"bordercoloractive\",void 0),t([i({type:String})],n.prototype,\"bordercolordisabled\",void 0),t([i({type:String})],n.prototype,\"bordercolorhover\",void 0),t([i({type:String})],n.prototype,\"bordercolor\",void 0),t([r()],n.prototype,\"isHovered\",void 0);export{n as IDSButton};\n", "import{IDSButton as t}from\"./button-element.js\";import{registerComponent as i}from\"../../utilities/utils.js\";i(\"ids-button\",t);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/button-group/register';\nimport { IDSButtonGroup as IDSButtonGroup$1 } from '@inera/ids-core/components/button-group/button-group-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSButtonGroup = createComponent({\r\n    tagName: 'ids-button-group',\r\n    elementClass: IDSButtonGroup$1,\r\n    react: React,\r\n});\n\nexport { IDSButtonGroup };\n", "import { css, unsafeCSS } from 'lit';\n\nvar css_248z = \".ids-button-group{align-items:center;display:flex;flex-direction:row;gap:20px}.ids-button-group.ids-button-group--rtl{direction:rtl}@media (max-width:1024px){.ids-button-group:not(.ids-button-group--unresponsive){flex-direction:column}}\";\n\nvar buttonGroupLit = css`${unsafeCSS(css_248z)}`;\n\nexport { buttonGroupLit as default };\n", "import{__decorate as t}from\"tslib\";import{LitElement as o,html as r}from\"lit\";import{property as s}from\"lit/decorators.js\";import e from\"@inera/ids-design/components/button-group/button-group-lit\";class i extends o{constructor(){super(...arguments),this.rtl=!1,this.unresponsive=!1}updated(t){super.updated(t)}render(){return r`<div class=\"ids-button-group ${this.rtl?\"ids-button-group--rtl\":\"\"} ${this.unresponsive?\"ids-button-group--unresponsive\":\"\"}\"><slot></slot></div>`}}i.styles=[e],t([s({type:Boolean})],i.prototype,\"rtl\",void 0),t([s({type:Boolean,reflect:!0})],i.prototype,\"unresponsive\",void 0);export{i as IDSButtonGroup};\n", "import{IDSButtonGroup as t}from\"./button-group-element.js\";import{registerComponent as o}from\"../../utilities/utils.js\";o(\"ids-button-group\",t);\n", "import * as React from 'react';\nimport { createComponent } from '@lit-labs/react';\nimport '@inera/ids-core/components/grid/column/register';\nimport '@inera/ids-core/components/grid/row/register';\nimport '@inera/ids-core/components/grid/container/register';\nimport { IDSRow as IDSRow$1 } from '@inera/ids-core/components/grid/row/row-element';\nimport { IDSColumn } from '@inera/ids-core/components/grid/column/column-element';\nimport { IDSContainer as IDSContainer$1 } from '@inera/ids-core/components/grid/container/container-element';\n\nconst IDSRow = createComponent({\r\n    tagName: 'ids-row',\r\n    elementClass: IDSRow$1,\r\n    react: React,\r\n});\r\nconst IDSCol = createComponent({\r\n    tagName: 'ids-col',\r\n    elementClass: IDSColumn,\r\n    react: React,\r\n});\r\nconst IDSContainer = createComponent({\r\n    tagName: 'ids-container',\r\n    elementClass: IDSContainer$1,\r\n    react: React,\r\n});\n\nexport { IDSCol, IDSContainer, IDSRow };\n", "import{css as s}from\"lit\";var o=s`.ids .col,:host{display:block;flex-basis:0;flex-grow:1;max-width:100%}.ids .col-auto,:host([cols=auto]){flex:0 0 auto;width:auto}.ids .col-1,:host([cols=\"1\"]){flex:0 0 8.3%;max-width:8.3%}.ids .col-2,:host([cols=\"2\"]){flex:0 0 16%;max-width:16%}.ids .col-3,:host([cols=\"3\"]){flex:0 0 25%;max-width:25%}.ids .col-4,:host([cols=\"4\"]){flex:0 0 33.3%;max-width:33.3%}.ids .col-5,:host([cols=\"5\"]){flex:0 0 41.6%;max-width:41.6%}.ids .col-6,:host([cols=\"6\"]){flex:0 0 50%;max-width:50%}.ids .col-7,:host([cols=\"7\"]){flex:0 0 58%;max-width:58.3%}.ids .col-8,:host([cols=\"8\"]){flex:0 0 66.6%;max-width:66.6%}.ids .col-9,:host([cols=\"9\"]){flex:0 0 75%;max-width:75%}.ids .col-10,:host([cols=\"10\"]){flex:0 0 83.3%;max-width:83.3%}.ids .col-11,:host([cols=\"11\"]){flex:0 0 91.6%;max-width:91.6%}.ids .col-12,:host([cols=\"12\"]){flex:0 0 100%;max-width:100%}.ids .col-offset-none,:host([offset=none]){margin-left:0}.ids .col .offset-1,:host([offset=\"1\"]){margin-left:8.3%}.ids .col .offset-2,:host([offset=\"2\"]){margin-left:16%}.ids .col .offset-3,:host([offset=\"3\"]){margin-left:25%}.ids .col .offset-4,:host([offset=\"4\"]){margin-left:33.3%}.ids .col .offset-5,:host([offset=\"5\"]){margin-left:41.6%}.ids .col .offset-6,:host([offset=\"6\"]){margin-left:50%}.ids .col .offset-7,:host([offset=\"7\"]){margin-left:58.3%}.ids .col .offset-8,:host([offset=\"8\"]){margin-left:66.6%}.ids .col .offset-9,:host([offset=\"9\"]){margin-left:75%}.ids .col .offset-10,:host([offset=\"10\"]){margin-left:83.3%}.ids .col .offset-11,:host([offset=\"11\"]){margin-left:91.6%}.ids .col .offset-12,:host([offset=\"12\"]){margin-left:100%}.ids .col .align-start,:host([alignself=start]){align-self:start}.ids .col .align-center,:host([alignself=center]){align-self:center}.ids .col .align-end,:host([alignself=end]){align-self:end}.ids .col .align-auto,:host([alignself=auto]){align-self:auto}.ids .col .align-baseline,:host([alignself=baseline]){align-self:baseline}.ids .col .align-stretch,:host([alignself=stretch]){align-self:stretch}@media only screen and (max-width:1024px){.ids .col .m-auto,:host([m=auto]){flex:0 0 auto;width:auto}.ids .col .m-1,:host([m=\"1\"]){flex:0 0 8.3%;max-width:8.3%}.ids .col .m-2,:host([m=\"2\"]){flex:0 0 16%;max-width:16%}.ids .col .m-3,:host([m=\"3\"]){flex:0 0 25%;max-width:25%}.ids .col .m-4,:host([m=\"4\"]){flex:0 0 33.3%;max-width:33.3%}.ids .col .m-5,:host([m=\"5\"]){flex:0 0 41.6%;max-width:41.6%}.ids .col .m-6,:host([m=\"6\"]){flex:0 0 50%;max-width:50%}.ids .col .m-7,:host([m=\"7\"]){flex:0 0 58%;max-width:58.3%}.ids .col .m-8,:host([m=\"8\"]){flex:0 0 66.6%;max-width:66.6%}.ids .col .m-9,:host([m=\"9\"]){flex:0 0 75%;max-width:75%}.ids .col .m-10,:host([m=\"10\"]){flex:0 0 83.3%;max-width:83.3%}.ids .col .m-11,:host([m=\"11\"]){flex:0 0 91.6%;max-width:91.6%}.ids .col .m-12,:host([m=\"12\"]){flex:0 0 100%;max-width:100%}.ids .col .m-offset-none,:host([moffset=none]){margin-left:0}.ids .col .m-offset-1,:host([moffset=\"1\"]){margin-left:8.3%}.ids .col .m-offset-2,:host([moffset=\"2\"]){margin-left:16%}.ids .col .m-offset-3,:host([moffset=\"3\"]){margin-left:25%}.ids .col .m-offset-4,:host([moffset=\"4\"]){margin-left:33.3%}.ids .col .m-offset-5,:host([moffset=\"5\"]){margin-left:41.6%}.ids .col .m-offset-6,:host([moffset=\"6\"]){margin-left:50%}.ids .col .m-offset-7,:host([moffset=\"7\"]){margin-left:58.3%}.ids .col .m-offset-8,:host([moffset=\"8\"]){margin-left:66.6%}.ids .col .m-offset-9,:host([moffset=\"9\"]){margin-left:75%}.ids .col .m-offset-10,:host([moffset=\"10\"]){margin-left:83.3%}.ids .col .m-offset-11,:host([moffset=\"11\"]){margin-left:91.6%}.ids .col .m-offset-12,:host([moffset=\"12\"]){margin-left:100%}}@media only screen and (max-width:640px){.ids .col .s-auto,:host([s=auto]){flex:0 0 auto;width:auto}.ids .col .s-1,:host([s=\"1\"]){flex:0 0 8.3%;max-width:8.3%}.ids .col .s-2,:host([s=\"2\"]){flex:0 0 16%;max-width:16%}.ids .col .s-3,:host([s=\"3\"]){flex:0 0 25%;max-width:25%}.ids .col .s-4,:host([s=\"4\"]){flex:0 0 33.3%;max-width:33.3%}.ids .col .s-5,:host([s=\"5\"]){flex:0 0 41.6%;max-width:41.6%}.ids .col .s-6,:host([s=\"6\"]){flex:0 0 50%;max-width:50%}.ids .col .s-7,:host([s=\"7\"]){flex:0 0 58%;max-width:58.3%}.ids .col .s-8,:host([s=\"8\"]){flex:0 0 66.6%;max-width:66.6%}.ids .col .s-9,:host([s=\"9\"]){flex:0 0 75%;max-width:75%}.ids .col .s-10,:host([s=\"10\"]){flex:0 0 83.3%;max-width:83.3%}.ids .col .s-11,:host([s=\"11\"]){flex:0 0 91.6%;max-width:91.6%}.ids .col .s-12,:host([s=\"12\"]){flex:0 0 100%;max-width:100%}.ids .col .s-offset-none,:host([soffset=none]){margin-left:0}.ids .col .s-offset-1,:host([soffset=\"1\"]){margin-left:8.3%}.ids .col .s-offset-2,:host([soffset=\"2\"]){margin-left:16%}.ids .col .s-offset-3,:host([soffset=\"3\"]){margin-left:25%}.ids .col .s-offset-4,:host([soffset=\"4\"]){margin-left:33.3%}.ids .col .s-offset-5,:host([soffset=\"5\"]){margin-left:41.6%}.ids .col .s-offset-6,:host([soffset=\"6\"]){margin-left:50%}.ids .col .s-offset-7,:host([soffset=\"7\"]){margin-left:58.3%}.ids .col .s-offset-8,:host([soffset=\"8\"]){margin-left:66.6%}.ids .col .s-offset-9,:host([soffset=\"9\"]){margin-left:75%}.ids .col .s-offset-10,:host([soffset=\"10\"]){margin-left:83.3%}.ids .col .s-offset-11,:host([soffset=\"11\"]){margin-left:91.6%}.ids .col .s-offset-12,:host([soffset=\"12\"]){margin-left:100%}}`;export{o as default};\n", "import{__decorate as t}from\"tslib\";import{LitElement as o,html as e}from\"lit\";import{property as r}from\"lit/decorators.js\";import i from\"./column-styles.js\";class s extends o{constructor(){super(...arguments),this.s=void 0,this.m=void 0,this.cols=void 0,this.offset=void 0,this.moffset=void 0,this.soffset=void 0,this.alignself=void 0}render(){return e`<slot></slot>`}}s.styles=[i],t([r({type:String,reflect:!0})],s.prototype,\"s\",void 0),t([r({type:String,reflect:!0})],s.prototype,\"m\",void 0),t([r({type:String,reflect:!0})],s.prototype,\"cols\",void 0),t([r({type:String,reflect:!0})],s.prototype,\"offset\",void 0),t([r({type:String,reflect:!0})],s.prototype,\"moffset\",void 0),t([r({type:String,reflect:!0})],s.prototype,\"soffset\",void 0),t([r({type:String,reflect:!0})],s.prototype,\"alignself\",void 0);export{s as IDSColumn};\n", "import{IDSColumn as i}from\"./column-element.js\";import{registerComponent as m}from\"../../../utilities/utils.js\";m(\"ids-col\",i);\n", "import{css as t}from\"lit\";var s=t`.ids .row,:host{display:flex;flex-wrap:wrap;flex:1 1 auto;box-sizing:border-box}.ids .row .align-start,:host([align=start]){align-items:start}.ids .row .align-center,:host([align=center]){align-items:center}.ids .row .align-end,:host([align=end]){align-items:end}.ids .row .align-baseline,:host([align=baseline]){align-items:baseline}.ids .row .align-stretch,:host([align=stretch]){align-items:stretch}.ids .row .justify-start,:host([justify=start]){justify-content:start}.ids .row .justify-center,:host([justify=center]){justify-content:center}.ids .row .justify-end,:host([justify=end]){justify-content:end}.ids .row .justify-space-between,:host([justify=space-between]){justify-content:space-between}.ids .row .justify-space-around,:host([justify=space-around]){justify-content:space-around}`;export{s as default};\n", "import{__decorate as t}from\"tslib\";import{LitElement as o,html as r}from\"lit\";import{property as e}from\"lit/decorators.js\";import i from\"./row-styles.js\";class s extends o{constructor(){super(...arguments),this.align=void 0,this.justify=void 0,this.gap=void 0}updated(t){super.updated(t),t.has(\"gap\")?this.style.gap=this.gap:this.style.gap=void 0}render(){return r`<slot></slot>`}}s.styles=[i],t([e({type:String,reflect:!0})],s.prototype,\"align\",void 0),t([e({type:String,reflect:!0})],s.prototype,\"justify\",void 0),t([e({type:String,reflect:!0})],s.prototype,\"gap\",void 0);export{s as IDSRow};\n", "import{IDSRow as i}from\"./row-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-row\",i);\n", "import{css as t}from\"lit\";var i=t`:host{max-width:var(--IDS_MAX-WIDTH);display:grid;margin-left:auto;margin-right:auto;padding-left:10px;padding-right:10px}:host([gutterless]){padding-left:0!important;padding-right:0!important}:host([fluid]){max-width:100%}`;export{i as default};\n", "import{__decorate as t}from\"tslib\";import{LitElement as e,html as r}from\"lit\";import{property as s}from\"lit/decorators.js\";import i from\"./container-styles.js\";class o extends e{constructor(){super(...arguments),this.fluid=!1,this.width=\"\",this.gutterless=!1}firstUpdated(t){super.firstUpdated(t),!this.fluid&&this.width&&(this.style.maxWidth=`${this.width}px`)}render(){return r`<slot></slot>`}}o.styles=[i],t([s({type:Boolean,reflect:!0})],o.prototype,\"fluid\",void 0),t([s({type:String})],o.prototype,\"width\",void 0),t([s({type:Boolean,reflect:!0})],o.prototype,\"gutterless\",void 0);export{o as IDSContainer};\n", "import{IDSContainer as i}from\"./container-element.js\";import{registerComponent as t}from\"../../../utilities/utils.js\";t(\"ids-container\",i);\n", "import React__default from 'react';\nimport { createComponent } from '@lit-labs/react';\nimport '@inera/ids-core/components/alert/register';\nimport { IDSAlert as IDSAlert$1 } from '@inera/ids-core/components/alert/alert-element';\n\nconst IDSAlert = createComponent({\r\n    displayName: 'IDSAlert',\r\n    tagName: 'ids-alert',\r\n    elementClass: IDSAlert$1,\r\n    react: React__default,\r\n    events: {\r\n        onClosed: 'closed',\r\n        onCollapsed: 'collapsed'\r\n    }\r\n});\n\nexport { IDSAlert };\n", "import { css, unsafeCSS } from 'lit';\n\nvar css_248z = \".ids-alert{background-color:var(--IDS-ALERT--INFO__BACKGROUND-COLOR);border-color:var(--IDS-ALERT--INFO__BORDER-COLOR);border-radius:.625rem;border-style:solid;border-width:.0625rem;color:var(--IDS-ALERT--INFO__COLOR);column-gap:1rem;display:grid;font-size:1rem;grid-template-columns:30px 1fr;line-height:26px;padding:30px}.ids-alert:has(.ids-alert__button){grid-template-columns:30px 1fr auto}.ids-alert.ids-alert--collapsed{padding:20px 30px}.ids-alert.ids-alert--collapsed .ids-alert__content{display:none}.ids-alert.ids-alert--attention{background-color:var(--IDS-ALERT--ATTENTION__BACKGROUND-COLOR);border-color:var(--IDS-ALERT--ATTENTION__BORDER-COLOR)}.ids-alert.ids-alert--success{background-color:var(--IDS-ALERT--SUCCESS__BACKGROUND-COLOR);border-color:var(--IDS-ALERT--SUCCESS__BORDER-COLOR)}.ids-alert.ids-alert--error{background-color:var(--IDS-ALERT--ERROR__BACKGROUND-COLOR);border-color:var(--IDS-ALERT---ERROR__BORDER-COLOR)}.ids-alert.ids-alert--compact{grid-template-columns:1fr}.ids-alert.ids-alert--compact:has(.ids-alert__button){grid-template-columns:1fr auto}.ids-alert.ids-alert--compact .ids-alert__button{grid-column:2;grid-row:1}.ids-alert.ids-alert--compact .ids-alert__content{align-items:center;display:flex;grid-column-end:2;grid-column-start:1;grid-row-start:1;margin-top:0}@media (max-width:1024px){.ids-alert.ids-alert--compact .ids-alert__content{display:block}}.ids-alert.ids-alert--compact .ids-alert__content .ids-alert__content__icon{align-self:start;height:50px;margin-right:10px;max-height:50px;max-width:50px;min-height:50px;min-width:50px;width:50px}@media (max-width:1024px){.ids-alert.ids-alert--compact .ids-alert__content .ids-alert__content__icon{float:left;height:30px;margin-top:-5px;max-height:30px;max-width:30px;min-height:30px;min-width:30px;width:30px}}.ids-alert.ids-alert--compact .ids-alert__button{flex:0 0 auto;width:auto}.ids-alert.ids-alert--compact .ids-alert__button .ids-alert__expand{float:right}.ids-alert .ids-alert__headline *{font-family:var(--IDS-ALERT__HEADLINE__FONT-FAMILY);font-size:1.17rem;font-weight:var(--IDS-ALERT__HEADLINE__FONT-WEIGHT);margin:0}.ids-alert .ids-alert__button{grid-column:3;grid-row:1}.ids-alert .ids-alert__expand{align-items:center;background:none;border:none;color:inherit;cursor:pointer;display:flex;font:inherit;justify-content:center;min-height:24px;min-width:24px;outline:inherit;padding:0;-moz-user-select:-moz-none;-khtml-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.ids-alert .ids-alert__expand:focus{outline:var(--focus_outline);outline-offset:var(--focus_outline-offset)}.ids-alert .ids-alert__expand .ids-icon{align-items:center;display:flex;height:24px;justify-content:center;width:24px}.ids-alert .ids-alert__close{background:none;border:none;color:inherit;cursor:pointer;font:inherit;min-height:24px;min-width:24px;outline:inherit;padding:0;-moz-user-select:-moz-none;-khtml-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.ids-alert .ids-alert__close:focus{outline:var(--focus_outline);outline-offset:var(--focus_outline-offset)}.ids-alert .ids-alert__content{grid-column:1/-1;grid-row-start:2;margin-top:.5rem}\";\n\nvar alertLit = css`${unsafeCSS(css_248z)}`;\n\nexport { alertLit as default };\n", "import{__decorate as t}from\"tslib\";import{css as e,LitElement as s,html as i}from\"lit\";import{property as o,state as l}from\"lit/decorators.js\";import r from\"@inera/ids-design/components/alert/alert-lit\";class a extends s{constructor(){super(...arguments),this.collapsable=!1,this.collapsed=!1,this.dismissible=!1,this.headline=\"\",this.compact=!1,this.type=\"info\",this.srclosetext=\"Stäng alert\",this.srcollapsetext=\"Minimera alertmeddelande\",this.srexpandtext=\"Expandera alertmeddelande\",this.sricontitle=\"\",this.isCollapsed=!1}connectedCallback(){super.connectedCallback(),this.getAttribute(\"role\")||this.setAttribute(\"role\",\"alert\")}firstUpdated(t){super.firstUpdated(t),this.collapsable&&(this.isCollapsed=this.collapsed),this.compact=\"\"===this.headline}close(){let t=new CustomEvent(\"closed\");this.dispatchEvent(t)}toggleCollapse(){this.isCollapsed=!this.isCollapsed,this.collapsed=this.isCollapsed;let t=new CustomEvent(\"collapsed\",{detail:{isCollapsed:this.isCollapsed}});this.dispatchEvent(t)}getIconColor(){switch(this.type){case\"attention\":return{color:\"var(--IDS-ALERT--ATTENTION__ICON__COLOR-1)\",color2:\"var(--IDS-ALERT--ATTENTION__ICON__COLOR-2)\"};case\"success\":return{color:\"var(--IDS-ALERT--SUCCESS__ICON__COLOR-1)\",color2:\"var(--IDS-ALERT--SUCCESS__ICON__COLOR-2)\"};case\"error\":return{color:\"var(--IDS-ALERT--ERROR__ICON__COLOR-1)\",color2:\"var(--IDS-ALERT--ERROR__ICON__COLOR-2)\"};default:return{color:\"var(--IDS-ALERT--INFO__ICON__COLOR-1)\",color2:\"var(--IDS-ALERT--INFO__ICON__COLOR-2)\"}}}renderButton(){return this.dismissible?i`<div class=\"ids-alert__button\"><button class=\"ids-alert__close\" @click=\"${this.close}\" aria-label=\"${this.srclosetext}\"><ids-icon-close-bold color=\"var(--IDS-ALERT__BUTTON__ICON__COLOR)\" width=\"100%\" height=\"24\"></ids-icon-close-bold></button></div>`:this.collapsable?i`<div class=\"ids-alert__button\"><button class=\"ids-alert__expand\" @click=\"${this.toggleCollapse}\" aria-expanded=\"${!this.isCollapsed}\" aria-controls=\"alert-content\" aria-label=\"${this.isCollapsed?this.srexpandtext:this.srcollapsetext}\"><ids-icon-chevron-bold color=\"var(--IDS-ALERT__BUTTON__ICON__COLOR)\" width=\"100%\" height=\"24\" rotate=\"${this.isCollapsed?\"90\":\"-90\"}\"></ids-icon-chevron-bold></button></div>`:i``}renderIcon(){const t=this.headline?\"\":\"ids-alert__state-icon\",{color:e,color2:s}=this.getIconColor();return\"attention\"===this.type?i`<ids-icon-attention title=\"${this.sricontitle}\" color=\"${e}\" color2=\"${s}\" width=\"100%\" height=\"100%\" class=\"${t}\"></ids-icon-attention>`:\"success\"===this.type?i`<ids-icon-success title=\"${this.sricontitle}\" color=\"${e}\" color2=\"${s}\" width=\"100%\" height=\"100%\" class=\"${t}\"></ids-icon-success>`:\"error\"===this.type?i`<ids-icon-warning title=\"${this.sricontitle}\" color=\"${e}\" color2=\"${s}\" width=\"100%\" height=\"100%\" class=\"${t}\"></ids-icon-warning>`:i`<ids-icon-information title=\"${this.sricontitle}\" color=\"var(--IDS-ALERT--INFO__ICON__COLOR-1)\" color2=\"var(--IDS-ALERT--INFO__ICON__COLOR-2)\" width=\"100%\" height=\"100%\" class=\"${t}\"></ids-icon-information>`}renderWithHeadline(){return i`${this.renderIcon()}<div class=\"ids-alert__headline\"><h2>${this.headline}</h2></div>${this.renderButton()}<div class=\"ids-alert__content\">${this.renderContent()}</div>`}renderContent(){return this.isCollapsed?i``:i`<slot></slot>`}renderWithoutHeadline(){return i`<div class=\"ids-alert__content\"><div class=\"ids-alert__content__icon\">${this.renderIcon()}</div><div class=\"ids-alert__content__text\">${this.renderContent()}</div></div>${this.renderButton()}`}renderAlert(){return this.headline?this.renderWithHeadline():this.renderWithoutHeadline()}getAlertStateClasses(){return`ids-alert--${this.type.toLowerCase()} \\n    ${this.isCollapsed?\" ids-alert--collapsed\":\"\"}\\n    ${this.compact?\" ids-alert--compact\":\"\"}`}render(){return i`<div class=\"ids-alert ${this.getAlertStateClasses()}\">${this.renderAlert()}</div>`}}a.styles=[e`:host{display:block}`,r],t([o({type:Boolean})],a.prototype,\"collapsable\",void 0),t([o({type:Boolean,reflect:!0})],a.prototype,\"collapsed\",void 0),t([o({type:Boolean})],a.prototype,\"dismissible\",void 0),t([o({type:String})],a.prototype,\"headline\",void 0),t([o({type:Boolean,reflect:!0})],a.prototype,\"compact\",void 0),t([o({type:String})],a.prototype,\"type\",void 0),t([o({type:String})],a.prototype,\"srclosetext\",void 0),t([o({type:String})],a.prototype,\"srcollapsetext\",void 0),t([o({type:String})],a.prototype,\"srexpandtext\",void 0),t([o({type:String})],a.prototype,\"sricontitle\",void 0),t([l()],a.prototype,\"isCollapsed\",void 0);export{a as IDSAlert};\n", "import{svg as e}from\"lit\";import{IDSIconBase as C}from\"../icon-base-element.js\";class l extends C{constructor(){super(),this.vbHeight=40,this.vbWidth=41}renderIcon(){return e`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20 38.8867C29.9411 38.8867 38 30.8278 38 20.8867C38 10.9456 29.9411 2.88672 20 2.88672C10.0589 2.88672 2 10.9456 2 20.8867C2 30.8278 10.0589 38.8867 20 38.8867ZM20 40.8867C31.0457 40.8867 40 31.9324 40 20.8867C40 9.84102 31.0457 0.886719 20 0.886719C8.9543 0.886719 0 9.84102 0 20.8867C0 31.9324 8.9543 40.8867 20 40.8867Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.3811 24.5539C20.3554 24.7445 20.1928 24.8867 20.0005 24.8867C19.8078 24.8867 19.6449 24.7439 19.6197 24.5528L18.1062 13.0677C18.0354 12.5521 18 12.1678 18 11.9149C18 11.3021 18.1976 10.8108 18.5929 10.4412C18.9882 10.0715 19.4631 9.88672 20.0177 9.88672C20.5723 9.88672 21.0413 10.0715 21.4248 10.4412C21.8083 10.8108 22 11.3605 22 12.09C22 12.3235 21.9764 12.6494 21.9292 13.0677L20.3811 24.5539ZM21.4144 31.2985C21.024 31.6906 20.5526 31.8867 20 31.8867C19.4474 31.8867 18.976 31.6906 18.5856 31.2985C18.1952 30.9063 18 30.4327 18 29.8777C18 29.3347 18.1952 28.8671 18.5856 28.475C18.976 28.0828 19.4474 27.8867 20 27.8867C20.5526 27.8867 21.024 28.0828 21.4144 28.475C21.8048 28.8671 22 29.3347 22 29.8777C22 30.4327 21.8048 30.9063 21.4144 31.2985Z\"></path>`}}export{l as IDSIconAttention};\n", "import{IDSIconAttention as t}from\"./icon-attention-element.js\";import{registerComponent as i}from\"../../../utilities/utils.js\";i(\"ids-icon-attention\",t);\n", "import{svg as e}from\"lit\";import{IDSIconBase as l}from\"../icon-base-element.js\";class o extends l{constructor(){super(),this.vbHeight=41,this.vbWidth=40}renderIcon(){return e`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20 2.88672C10.0589 2.88672 2 10.9456 2 20.8867C2 30.8278 10.0589 38.8867 20 38.8867C29.9411 38.8867 38 30.8278 38 20.8867C38 10.9456 29.9411 2.88672 20 2.88672ZM0 20.8867C0 9.84102 8.95431 0.886719 20 0.886719C31.0457 0.886719 40 9.84102 40 20.8867C40 31.9324 31.0457 40.8867 20 40.8867C8.95431 40.8867 0 31.9324 0 20.8867Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M30.6282 13.288C31.1239 13.823 31.1239 14.6904 30.6282 15.2254C30.6282 15.2254 18.4197 28.4473 18.3393 28.5334C17.8418 29.0664 16.9679 28.9874 16.3875 28.3571L11.4833 23.0309C10.9029 22.4006 10.8358 21.4575 11.3333 20.9245C11.8309 20.3916 12.7047 20.4705 13.2851 21.1008L17.4254 25.5987L28.8329 13.288C29.3287 12.753 30.1324 12.753 30.6282 13.288Z\"></path>`}}export{o as IDSIconSuccess};\n", "import{IDSIconSuccess as s}from\"./icon-success-element.js\";import{registerComponent as i}from\"../../../utilities/utils.js\";i(\"ids-icon-success\",s);\n", "import{svg as C}from\"lit\";import{IDSIconBase as o}from\"../icon-base-element.js\";class t extends o{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return C`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20 38C29.9411 38 38 29.9411 38 20C38 10.0589 29.9411 2 20 2C10.0589 2 2 10.0589 2 20C2 29.9411 10.0589 38 20 38ZM20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z\"></path><path fill=\"${this.colors.color}\" d=\"M19.4535 12C20.0052 12 20.4748 11.803 20.8623 11.4089C21.2498 11.0148 21.4436 10.5419 21.4436 9.99015C21.4436 9.43842 21.2498 8.9688 20.8623 8.58128C20.4748 8.19376 20.0052 8 19.4535 8C18.8886 8 18.4124 8.19376 18.0249 8.58128C17.6374 8.9688 17.4436 9.43842 17.4436 9.99015C17.4436 10.5419 17.6406 11.0148 18.0347 11.4089C18.4288 11.803 18.9017 12 19.4535 12Z\"></path><path fill=\"${this.colors.color}\" d=\"M23.6733 29.9961C23.8538 29.9961 24 29.8498 24 29.6694C24 29.4972 23.8664 29.3544 23.6949 29.339C23.3021 29.3036 22.6471 29.2297 22.4536 29.1172C22.1714 28.9531 21.9583 28.7041 21.8143 28.3701C21.6703 28.0361 21.5983 27.3652 21.5983 26.3574L21.5351 15.99C21.5317 15.4401 21.085 14.9961 20.5351 14.9961H16.5127C16.2295 14.9961 16 15.2256 16 15.5088C16 15.7919 16.2295 16.0215 16.5127 16.0215H17.6378C18.1648 16.0215 18.6009 16.4298 18.6285 16.9561C18.6735 17.8105 18.7302 19.0979 18.7302 20.1523V26.3574C18.7302 27.3535 18.6524 28.0273 18.4969 28.3789C18.3414 28.7305 18.1312 28.9824 17.8663 29.1348C17.684 29.2396 17.0162 29.3084 16.6175 29.3411C16.4456 29.3551 16.3112 29.4979 16.3112 29.6704C16.3112 29.8503 16.4571 29.9961 16.637 29.9961H23.6733Z\"></path>`}}export{t as IDSIconInformation};\n", "import{IDSIconInformation as i}from\"./icon-information-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-information\",i);\n", "import{IDSAlert as r}from\"./alert-element.js\";import{registerComponent as i}from\"../../utilities/utils.js\";import\"../icons/chevron-bold/register.js\";import\"../icons/close-bold/register.js\";import\"../icons/attention/register.js\";import\"../icons/success/register.js\";import\"../icons/warning/register.js\";import\"../icons/information/register.js\";import\"../grid/column/register.js\";import\"../grid/row/register.js\";i(\"ids-alert\",r);\n", "import React__default from 'react';\nimport { createComponent } from '@lit-labs/react';\nimport '@inera/ids-core/components/alert-global/register';\nimport { IDSAlertGlobal as IDSAlertGlobal$1 } from '@inera/ids-core/components/alert-global/alert-global-element';\n\nconst IDSAlertGlobal = createComponent({\r\n    displayName: 'IDSAlertGlobal',\r\n    tagName: 'ids-alert-global',\r\n    elementClass: IDSAlertGlobal$1,\r\n    react: React__default,\r\n    events: {\r\n        onDidToggleExpansion: 'didToggleExpansion'\r\n    }\r\n});\n\nexport { IDSAlertGlobal };\n", "import { css, unsafeCSS } from 'lit';\n\nvar css_248z = \".ids-alert-global{align-items:center;background-color:var(--IDS-ALERT-GLOBAL__BACKGROUND-COLOR);border:none;box-shadow:0 0 10px rgba(0,0,0,.3);color:var(--IDS-ALERT-GLOBAL__COLOR);display:block;flex-wrap:wrap;font-size:1rem;line-height:26px;padding:1.875rem;position:relative;z-index:1}.ids-alert-global.ids-alert-global--collapsed .ids-alert-global__content{display:none}@media (max-width:1024px){.ids-alert-global.ids-alert-global--hide-icon-on-m .ids-alert-global__headline{grid-column-end:3;grid-column-start:1}.ids-alert-global.ids-alert-global--hide-icon-on-m .ids-alert-global__icon{display:none}.ids-alert-global .alert-global-headline{grid-column-end:3;grid-column-start:1}}.ids-alert-global.ids-alert-global--agent{background-color:var(--IDS-ALERT-GLOBAL--AGENT__BACKGROUND-COLOR)!important;color:var(--IDS-ALERT-GLOBAL--AGENT__COLOR)!important}.ids-alert-global.ids-alert-global--agent .ids-alert-global__inner{grid-template-columns:2.5rem 1fr 13.75rem}.ids-alert-global .ids-alert-global__inner{column-gap:1.25rem;display:grid;grid-template-columns:1.875rem 1fr 13.75rem;margin-left:auto;margin-right:auto;max-width:var(--IDS_MAX-WIDTH)}@media (max-width:1024px){.ids-alert-global .ids-alert-global__inner{grid-template-columns:1.25rem 1fr 13.75rem}.ids-alert-global .ids-alert-global__inner .alert-global-icon.hide{display:none}}@media (max-width:640px){.ids-alert-global .ids-alert-global__inner{grid-template-columns:1.25rem 1fr 1fr!important}}.ids-alert-global .ids-alert-global__inner .ids-alert-global__content{grid-column:2/-1;margin-top:.25rem}@media (max-width:1024px){.ids-alert-global .ids-alert-global__inner .ids-alert-global__content{grid-column:1/-1}}.ids-alert-global .ids-alert-global__inner .ids-alert-global__expand{align-items:center;background:none;border:none;color:inherit;color:var(--alert-text-toggle_color);cursor:pointer;display:flex;font:inherit;font-size:.875rem;justify-content:center;justify-self:end;letter-spacing:.09375rem;min-height:24px;min-width:24px;outline:inherit;padding:0;text-transform:uppercase;-moz-user-select:-moz-none;-khtml-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.ids-alert-global .ids-alert-global__inner .ids-alert-global__expand:focus{outline:var(--focus_outline);outline-offset:var(--focus_outline-offset)}.ids-alert-global .ids-alert-global__inner .ids-alert-global__expand .ids-icon{align-items:center;display:flex;height:24px;justify-content:center;width:24px}.ids-alert-global .ids-alert-global__headline{align-items:center;color:var(--IDS-ALERT-GLOBAL__HEADLINE__COLOR);display:flex;font-family:var(--IDS-ALERT-GLOBAL__HEADLINE__FONT-FAMILY);font-size:1.125rem;font-weight:var(--IDS-ALERT__HEADLINE__FONT-WEIGHT);line-height:28px;margin:0}@media (max-width:1024px){.ids-alert-global .ids-alert-global__headline .no-mobile-icon{grid-column-end:3;grid-column-start:1}}.ids-alert-global .ids-alert-global__expand-text{margin-right:1rem}@media (max-width:1024px){.ids-alert-global .ids-alert-global__expand-text{display:none}}.ids-alert-global .ids-alert-global__sub-content{grid-column-start:2;margin-top:.75rem}@media (max-width:1024px){.ids-alert-global .ids-alert-global__sub-content{grid-column:1/-1}}\";\n\nvar alertGlobalLit = css`${unsafeCSS(css_248z)}`;\n\nexport { alertGlobalLit as default };\n", "import{__decorate as t}from\"tslib\";import{LitElement as e,html as i}from\"lit\";import{property as o}from\"lit/decorators.js\";import{generateId as s}from\"../../utilities/utils.js\";import l from\"@inera/ids-design/components/alert-global/alert-global-lit\";class n extends e{constructor(){super(...arguments),this.headline=\"\",this.dismissible=!1,this.hidemobileicon=!1,this.showtext=\"Visa meddelande\",this.hidetext=\"Dölj meddelande\",this.expanded=!0,this.agent=!1,this.contentId=s()}get icon(){return this.querySelector(\".ids-icon\")}get headlineComponent(){return this.querySelector(\"h3\")}connectedCallback(){super.connectedCallback(),this.getAttribute(\"role\")||this.setAttribute(\"role\",\"alert\"),this.headlineComponent&&this.headlineComponent.setAttribute(\"slot\",\"alert-headline\")}firstUpdated(t){super.firstUpdated(t),this.icon&&(this.icon.setAttribute(\"slot\",\"icon\"),this.icon.getAttribute(\"width\")||this.icon.setAttribute(\"width\",\"28\"),this.icon.getAttribute(\"height\")||this.icon.setAttribute(\"height\",\"28\"),this.icon.setAttribute(\"color\",\"var(--IDS-ALERT-GLOBAL__ICON__COLOR-1)\"),this.icon.setAttribute(\"color2\",\"var(--IDS-ALERT-GLOBAL__ICON__COLOR-2)\"))}getButtonText(){return this.expanded?this.hidetext:this.showtext}toggleExpanded(){this.expanded=!this.expanded;let t=new CustomEvent(\"didToggleExpansion\",{detail:{isExpanded:this.expanded}});this.dispatchEvent(t)}renderActions(){return this.querySelector(\"[slot=actions]\")}renderGlobalAlert(){return i`<div class=\"ids-alert-global__inner\"><div class=\"ids-alert-global__icon\"><slot name=\"icon\"></slot></div><h1 class=\"ids-alert-global__headline\">${this.headline}</h1><button class=\"ids-alert-global__expand\" aria-label=\"${this.getButtonText()}\" aria-controls=\"${this.contentId}\" aria-expanded=\"${this.expanded}\" class=\"alert-toggle-wrap no-select\" @click=\"${this.toggleExpanded}\"><span class=\"ids-alert-global__expand-text\">${this.getButtonText()}</span><ids-icon-chevron rotate=\"${this.expanded?\"-90\":\"90\"}\" color=\"var(--IDS-ALERT-GLOBAL__BUTTON__ICON__COLOR)\" width=\"11\" height=\"19\"></ids-icon-chevron></button><div id=\"${this.contentId}\" class=\"ids-alert-global__content\"><slot></slot></div><div class=\"ids-alert-global__sub-content\"><slot name=\"actions\"></slot></div></div>`}render(){return i`<div class=\"ids-alert-global ${this.expanded?\"\":\"ids-alert-global--collapsed\"} ${this.agent?\" ids-alert-global--agent\":\"\"} ${this.hidemobileicon?\"ids-alert-global--hide-icon-on-m\":\"\"}\">${this.renderGlobalAlert()}</div>`}}n.styles=[l],t([o({type:String})],n.prototype,\"headline\",void 0),t([o({type:Boolean})],n.prototype,\"dismissible\",void 0),t([o({type:Boolean})],n.prototype,\"hidemobileicon\",void 0),t([o({type:String})],n.prototype,\"showtext\",void 0),t([o({type:String})],n.prototype,\"hidetext\",void 0),t([o({type:Boolean,reflect:!0})],n.prototype,\"expanded\",void 0),t([o({type:Boolean,reflect:!0})],n.prototype,\"agent\",void 0);export{n as IDSAlertGlobal};\n", "import{IDSAlertGlobal as r}from\"./alert-global-element.js\";import{registerComponent as i}from\"../../utilities/utils.js\";import\"../icons/chevron-bold/register.js\";import\"../grid/column/register.js\";import\"../grid/row/register.js\";import\"../grid/container/register.js\";i(\"ids-alert-global\",r);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/header/register';\nimport { IDSHeader as IDSHeader$1 } from '@inera/ids-core/components/header/header-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSHeader = createComponent({\r\n    tagName: 'ids-header',\r\n    elementClass: IDSHeader$1,\r\n    react: React,\r\n    events: {\r\n        onDidToggleRegion: 'didToggleRegion'\r\n    }\r\n});\n\nexport { IDSHeader };\n", "import{css as e}from\"lit\";e``;const t=e`:host{display:block;position:relative;z-index:3}:host([type=\"1177\"]),:host([type=\"1177-pro\"]),:host([type=inera-admin-legacy]),:host([type=inera-admin]),:host([type=inera]){box-shadow:0 0 10px rgb(0 0 0 / 30%)}header{position:relative}.header-main{background:var(--header-main_background);padding:var(--header-main_padding);position:relative;z-index:2}.header-inner{background:var(--header-inner_background);width:100%;height:var(--header-inner_height);padding-right:20px;margin-left:auto;margin-right:auto;display:flex;align-items:center}.header-logo{width:107px;height:40px;margin:0 20px}.header-logo-col{display:flex;align-items:center;justify-content:center}.pick-region-btn,.pick-region-mobile-btn{outline-offset:-2px!important;display:flex;justify-content:center;align-items:center}.logo-btn,::slotted([slot=logo]){display:block}.logo-btn:focus,::slotted([slot=logo]:focus){outline:var(--focus_outline);outline-offset:var(--focus_outline-offset)}.logo-btn-spacer{margin:0 50px 0 10px}.logo-region-divider{width:1px;background-color:#fff;height:64px;margin-right:20px}.service-name-col{min-width:0}@media only screen and (max-width:1024px){:host([type=\"1177\"]:not([unresponsive])),:host([type=\"1177-pro\"]:not([unresponsive])),:host([type=inera-admin]:not([unresponsive])),:host([type=inera]:not([unresponsive])){box-shadow:0 2px 4px rgb(0 0 0 / 20%)}:host(:not([unresponsive])) .header-main{padding:var(--header-main-mobile_padding)}:host(:not([unresponsive])) .header-inner{height:3.125rem}:host([type=\"1177\"]:not([unresponsive])) .header-inner{padding-right:0}:host(:not([unresponsive])) .header-logo-col{margin-right:0}:host([type=\"1177\"]:not([unresponsive])) .header-logo,:host([type=\"1177-pro\"]:not([unresponsive])) .header-logo{width:58px;height:20px!important}:host(:not([unresponsive])) .logo-btn-spacer{margin:0 10px}}`,o=e`:host([type=\"1177\"]) .header-fill{position:relative;background:#c12143;height:100%;margin-left:0!important;margin-right:0}:host([type=\"1177\"]) .header-fill:after{content:\"\";background-color:#c12143;position:absolute;z-index:1;border-radius:100%;right:-.5625rem;top:50%;margin-top:-12.5rem;clip:rect(8.75rem,25rem,16.25rem,24.375rem);height:25rem;width:25rem;left:auto}::slotted([slot=region]){max-width:200px;margin-right:20px;height:45px}.logo-btn-with-region,.pick-region-btn{outline-offset:2px!important}.change-region-chevron{margin-left:.8rem;margin-right:.4rem;transform:rotate(90deg)}.change-region-chevron.expanded{transform:rotate(270deg)}.pick-region-btn{font-size:.85rem;color:#a00b36;margin-left:2rem;cursor:pointer}.pick-region-mobile-btn{font-size:.875rem;margin-left:20px;outline-offset:2px!important}.pick-region-mobile-btn,:host([type=\"1177\"]) .logo-btn,:host([type=\"1177\"]) ::slotted([slot=logo]:focus){outline-color:#fff!important;color:#fff}@media only screen and (max-width:1024px){:host([type=\"1177\"]:not([unresponsive])) .header-fill{padding-left:10px}:host([type=\"1177\"]:not([unresponsive])) .header-inner{box-shadow:0 2px 4px rgba(0,0,0,.2)}:host([type=\"1177\"]:not([unresponsive])) .pick-region-mobile-col{display:flex;align-items:center;padding-left:0;margin-right:10px;padding-right:13px}:host([type=\"1177\"]:not([unresponsive])) .pick-region-mobile-btn{margin-left:10px;width:100%}:host([type=\"1177\"]:not([unresponsive])) .header-fill:after{top:0;margin-top:-7.8125rem;clip:rect(7.8125rem,18.75rem,10.9375rem,18.125rem);height:18.75rem;width:18.75rem}:host([type=\"1177\"]:not([unresponsive])) .header-logo-col:after{display:none}:host([type=\"1177\"]:not([unresponsive])) .header-logo-col:before{content:\"\";background-color:#fff;position:absolute;display:block;right:0;top:10px;bottom:10px;width:1px}:host([type=\"1177\"]:not([unresponsive])) .header-logo-col.no-picker:before{content:none}:host(:not([unresponsive])) ::slotted([slot=region]){display:none}:host(:not([unresponsive])) ::slotted([slot=region-mobile]){max-width:150px;margin-right:20px;height:34px}:host(:not([unresponsive])) .logo-region-divider{display:none}}`,n=e`:host([type=\"1177-pro\"]) header{padding:0 20px}:host([type=\"1177-pro\"]) .header-service-name,:host([type=\"1177-pro\"]) ::slotted([slot=brand-text]){margin:0;color:#6a0032;margin-left:20px!important;overflow:hidden;text-overflow:ellipsis;font-size:1.5rem;font-family:var(--font-family_2);text-decoration:none;font-weight:700}:host([type=\"1177-pro\"]) .header-service-name.is-supplemented,:host([type=\"1177-pro\"]) .is-supplemented ::slotted([slot=brand-text]){letter-spacing:-.4px;font-size:1.875rem}:host([type=\"1177-pro\"]) .header-unit-name{margin:0;color:#6a0032;margin-left:20px!important;overflow:hidden;text-overflow:ellipsis;font-weight:400;font-size:.875rem;font-family:var(--font-family_2)}:host([type=\"1177-pro\"]) .header-unit-name.top{margin-bottom:-7px}:host([type=\"1177-pro\"]) .header-unit-name.bottom{margin-top:-7px}:host([type=\"1177-pro\"]) ids-container{border-bottom:1px solid #c12143;padding-left:0;padding-right:0}:host([type=\"1177-pro\"]) .header-fill{background:#fff;height:44px;border-right:1px solid #c12143}:host([type=\"1177-pro\"]) .header-logo{height:24px;width:63px;margin:0 20px 0 0}:host([type=\"1177-pro\"]) .header-inner{height:auto;padding:5px 0}@media all and (max-width:1024px){:host([type=\"1177-pro\"]:not([unresponsive])) header{padding:0}:host([type=\"1177-pro\"]:not([unresponsive])) ids-container{border-bottom:none}:host([type=\"1177-pro\"]:not([unresponsive])) .header-fill{height:50px}:host([type=\"1177-pro\"]:not([unresponsive])){font-size:.875rem;text-overflow:ellipsis}:host([type=\"1177-pro\"]) ::slotted([slot=brand-text]),:host([type=\"1177-pro\"]:not([unresponsive])) .header-service-name{margin-left:10px!important}:host([type=\"1177-pro\"]:not([unresponsive])) .header-unit-name{margin-left:10px!important;font-size:.75rem}:host([type=\"1177-pro\"]:not([unresponsive])) .header-service-name.is-supplemented{font-size:.875rem;margin-left:10px}:host([type=\"1177-pro\"]:not([unresponsive])) .header-unit-name.top{margin-bottom:-5px}:host([type=\"1177-pro\"]:not([unresponsive])) .header-unit-name.bottom{margin-top:-5px}:host([type=\"1177-pro\"]:not([unresponsive])) .header-inner{height:60px}:host([type=\"1177-pro\"]:not([unresponsive])) .header-logo-col{height:70%}:host([type=\"1177-pro\"]:not([unresponsive])) .header-logo{margin:0 10px}}`,i=e`:host([type=inera]) header{padding:0 20px}:host([type=inera]) .header-main{position:relative;background-color:var(--IDS-COLOR-BACKGROUND)}:host([type=inera]) .header-inner{padding:10px 20px 10px 0;height:auto}:host([type=inera]) .header-fill::after{display:none}:host([type=inera]) .header-items-wrapper{height:100%;display:flex;flex-direction:column}:host([type=inera]) .header-nav{flex:1}:host([type=inera]) .header-logo{width:147px;height:50px;padding-top:10px;padding-bottom:10px}:host([type=inera]:not([unresponsive])) .logo-btn{display:block;outline-offset:5px;margin:0}@media all and (max-width:1024px){:host([type=inera]) header{padding:0}:host([type=inera]:not([unresponsive])) .header-items{margin-bottom:0;padding-top:0}:host([type=inera]:not([unresponsive])) .header-main{background-position:0 0,right -39px top -60px;background-size:0,200px}:host([type=inera]:not([unresponsive])) .header-inner{height:auto}:host([type=inera]:not([unresponsive])) .header-logo{width:113px;height:36px;padding:0 10px}:host(:not([unresponsive])) .header-nav{display:none}}@media only screen and (max-width:640px){:host([type=inera]:not([unresponsive])) .header-logo{padding:0}}`,r=e`:host([type=inera-legacy]) .header-main{position:relative;background-color:#f1edea;background-image:url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 192 186'%3E%3Cdefs%3E%3Cpath id='a' d='M0 .424h178.903v101.649H0z'/%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(0 83.231)'%3E%3Cmask id='b' fill='%23fff'%3E%3Cuse xlink:href='%23a'/%3E%3C/mask%3E%3Cpath d='M171.55 10.807c-1.053 15.669-18.674 25.783-37.589 24.761-26.07-1.407-45.086-14.048-64.967-26.757-45.91-29.346-88.425 24.614-59.595 64.896 28.84 40.28 108.781 38.855 152.385-11.959 2.654-3.085 5.161-6.727 7.524-10.742 19.82-33.704 2.893-49.874 2.243-40.2' fill='%2300706E' mask='url(%23b)'/%3E%3C/g%3E%3Cpath d='M150.57 47.752c10.782 14.496 37.36 55.623 10.203 98.393 40.521-45.842 38.987-116.583 10.784-139.964-10.183-8.447-26.286-8.001-32.462-.097-7.949 10.173-5.407 18.977 11.476 41.668' fill='%2341C0C2'/%3E%3C/g%3E%3C/svg%3E\"),url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 172 154'%3E%3Cdefs%3E%3Cpath id='a' d='M0 .055h172.006v153.46H0z'/%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(0 .38)'%3E%3Cmask id='b' fill='%23fff'%3E%3Cuse xlink:href='%23a'/%3E%3C/mask%3E%3Cpath d='M157.332 50.314C135.45 11.094 87.278-7.444 52.702 2.867c-79.435 23.674-67.27 136.17 24.328 130.217 56.154-3.648 71.726-2.17 81.028 18.552 1.32 2.942 4.274 2.02 5.398.029 10.073-15.473 14.75-63.952-6.124-101.35' fill='%2300706E' mask='url(%23b)'/%3E%3C/g%3E%3Cpath d='M60.496 133.368c-17.418-1.91-27.77-8.326-27.77-8.326 23.006 11.513 39.679-4.556 60.48-8.938 19.896-4.191 50.88 2.88 64.51 35.17-2.687-5.08-6.033-9.523-11.198-12.657-19.851-12.043-63.592-2.79-86.022-5.25' fill='%2341C0C2'/%3E%3C/g%3E%3C/svg%3E%0A\");background-position:left calc(50vw - 1340px) top -348px,left calc(50vw + 500px) top -839px;background-repeat:no-repeat;background-size:660px,1270px}:host([type=inera-legacy]) .header-fill::after{display:none}:host([type=inera-legacy]) .header-items-wrapper{height:100%;display:flex;flex-direction:column}:host([type=inera-legacy]) .header-nav{flex:1}:host([type=inera-legacy]) .header-items{padding-top:20px;margin-bottom:30px}:host([type=inera-legacy]) .header-logo{width:120px;height:72px;padding:20px 0}:host([type=inera-legacy]:not([unresponsive])) .logo-btn{display:block;outline-offset:5px}@media all and (max-width:1024px){:host([type=inera-legacy]:not([unresponsive])) .header-items{margin-bottom:0;padding-top:0}:host([type=inera-legacy]:not([unresponsive])) .header-main{background-position:0 0,right -39px top -60px;background-size:0,200px}:host([type=inera-legacy]:not([unresponsive])) .header-inner{height:auto}:host([type=inera-legacy]:not([unresponsive])) .header-logo{width:60px;height:36px;padding:10px 0}:host(:not([unresponsive])) .header-nav{display:none}}`,a=e`:host([type=inera-admin]) header{padding:0 20px}:host([type=inera-admin]) .header-main{background-color:var(--IDS-COLOR-BACKGROUND)}:host([type=inera-admin]) .header-inner{padding:5px 20px 0 0;height:auto}:host([type=inera-admin]) .header-service-name,:host([type=inera-admin]) ::slotted([slot=brand-text]){display:block;font-style:normal;font-weight:600;font-family:var(--font-family_2);font-size:1.875rem;line-height:45px;margin:0;color:var(--IDS-COLOR-PRIMARY-40);display:inline-block;text-align:left;overflow:hidden;text-overflow:ellipsis;text-decoration:none}:host([type=inera-admin]) .header-service-name-inera{font-style:normal;font-weight:400;font-size:.875rem;margin:0;margin-bottom:12px;color:var(--IDS-COLOR-NEUTRAL-20);padding:0;line-height:19px}@media all and (max-width:1024px){:host([type=inera-admin]:not([unresponsive])) header{padding:0}:host([type=inera-admin]:not([unresponsive])) .header-service-name-inera{margin:0;padding-left:20px;font-size:.625rem}:host([type=inera-admin]:not([unresponsive])) .header-inner{padding:5px 0;padding-right:0;position:relative;border-bottom:none}:host([type=inera-admin]) ::slotted([slot=brand-text]),:host([type=inera-admin]:not([unresponsive])) .header-service-name{margin-left:20px;font-size:1rem;line-height:normal}}`,p=e`:host([type=inera-admin-legacy]) .header-main{background-color:#f1edea}:host([type=inera-admin-legacy]) .header-inner{padding:10px 20px 10px 0;height:auto}:host([type=inera-admin-legacy]) .header-service-name,:host([type=inera-admin-legacy]) ::slotted([slot=brand-text]){font-style:normal;font-weight:400;font-size:1.875rem;line-height:200%;margin:0 0 0 20px;color:var(--color-grey-base);display:inline-block;text-align:left;overflow:hidden;text-overflow:ellipsis;text-decoration:none}@media all and (max-width:1024px){:host([type=inera-admin-legacy]:not([unresponsive])) .header-inner{padding-right:0;position:relative;border-bottom:none}:host([type=inera-admin-legacy]) ::slotted([slot=brand-text]),:host([type=inera-admin-legacy]:not([unresponsive])) .header-service-name{font-size:1.25rem;margin-left:10px}}@media all and (max-width:600px){:host([type=inera-admin-legacy]) ::slotted([slot=brand-text]),:host([type=inera-admin-legacy]:not([unresponsive])) .header-service-name{font-size:1.0625rem}}`;export{o as styles1177,n as styles1177pro,t as stylesBase,i as stylesInera,a as stylesIneraAdmin,p as stylesIneraAdminLegacy,r as stylesIneraLegacy};\n", "import{__decorate as e}from\"tslib\";import{LitElement as i,html as t}from\"lit\";import o from\"../styles/global-styles.js\";import{stylesBase as s,styles1177 as r,styles1177pro as n,stylesInera as d,stylesIneraAdmin as a,stylesIneraLegacy as l,stylesIneraAdminLegacy as c}from\"./header-styles.js\";import{property as h,state as g}from\"lit/decorators.js\";import{generateId as p}from\"../../utilities/utils.js\";class u extends i{constructor(){super(...arguments),this.type=\"\",this.brandtext=\"\",this.brandtexttop=\"\",this.brandtextbottom=\"\",this.pickregiontext=\"Välj region\",this.hidebrand=!1,this.fluid=!1,this.hideregionpicker=!1,this.srlogolabel=\"Logotyp\",this.unresponsive=!1,this.logohref=\"javascript:void()\",this.isRegionExpanded=!1,this.hasViewPortResizeEvent=!1,this.lastKnownRegionId=\"\",this.handleVPResize=()=>{this.regionIcon&&(visualViewport.width>1024&&this.regionIcon?this.regionIcon.setAttribute(\"slot\",\"region\"):this.regionIcon.setAttribute(\"slot\",\"region-mobile\"))}}firstUpdated(e){\"1177\"!==this.type||this.unresponsive||this.setup1177RegionIcon()}updated(e){super.updated(e),\"1177\"===this.type&&(this.hasViewPortResizeEvent||this.setup1177RegionIcon(),this.regionIcon=this.querySelector(\"[slot=region]\")||this.querySelector(\"[slot=region-mobile]\"),this.regionIcon&&this.regionIcon.getAttribute(\"id\")!==this.lastKnownRegionId&&this.setRegionIconAttributes())}setRegionIconAttributes(){this.lastKnownRegionId=this.regionIcon.getAttribute(\"id\")||p(),this.regionIcon.setAttribute(\"id\",this.lastKnownRegionId),this.regionIcon.setAttribute(\"colorpreset\",\"4\"),this.regionIcon.setAttribute(\"width\",\"100%\"),this.regionIcon.setAttribute(\"height\",\"100%\")}setup1177RegionIcon(){this.regionIcon=this.querySelector(\"[slot=region]\")||this.querySelector(\"[slot=region-mobile]\"),this.addEventListenerForRegionIcon()}addEventListenerForRegionIcon(){visualViewport.addEventListener(\"resize\",this.handleVPResize),this.hasViewPortResizeEvent=!0,this.handleVPResize()}renderLogo(){return\"1177\"===this.type&&this.regionIcon?t`<ids-col cols=\"auto\" class=\"header-logo-col header-fill\"><ids-row align=\"center\"><ids-col cols=\"auto\">${this.renderLogoLink()}</ids-col><ids-col cols=\"auto\"><div class=\"logo-region-divider\"></div></ids-col><ids-col cols=\"auto\"><slot name=\"region\"></slot></ids-col></ids-row></ids-col>`:t`<ids-col cols=\"auto\" class=\"header-logo-col header-fill ${this.hideregionpicker?\"no-picker\":\"\"}\">${this.renderLogoLink()}</ids-col>`}renderLogoLink(){return t`<div class=\"header-logo ${this.regionIcon||\"1177\"!==this.type?\"\":\"logo-btn-spacer\"}\">${this.querySelector('[slot=\"logo\"]')?t`<slot name=\"logo\"></slot>`:t`<a href=\"${this.logohref}\" aria-label=\"${this.srlogolabel}\" class=\"logo-btn btn-no-styles\">${this.renderLogoIcon()}</a>`}</div>`}renderLogoIcon(){if(!this.hidebrand)switch(this.type){case\"1177\":return t`<ids-icon-1177 colorpreset=\"4\" width=\"100%\" height=\"100%\"></ids-icon-1177>`;case\"1177-pro\":return t`<ids-icon-1177 color=\"#c12143\" width=\"100%\" height=\"100%\"></ids-icon-1177>`;case\"inera\":return t`<ids-icon-inera color=\"var(--IDS-COLOR-PRIMARY-40)\" width=\"100%\" height=\"100%\"></ids-icon-inera>`;case\"inera-legacy\":return t`<ids-icon-inera-legacy width=\"100%\" height=\"100%\"></ids-icon-inera-legacy>`}return t``}renderRegionPickerMobile(){return this.unresponsive?null:t`<ids-col class=\"hide-on-desktop header-fill pick-region-mobile-col\"><button @click=\"${this.toggleRegion}\" class=\"btn-no-styles pick-region-mobile-btn\"><ids-col cols=\"auto\">${this.regionIcon?t`<slot name=\"region-mobile\"></slot>`:t`${this.pickregiontext}`}<slot name=\"avatar-left\"></slot></ids-col><div class=\"grid-spacer\"></div><ids-col cols=\"auto\"><ids-icon-chevron-bold class=\"change-region-chevron ${this.isRegionExpanded?\"expanded\":\"\"}\" color=\"white\" width=\"7\" height=\"12\"></ids-icon-chevron-bold></ids-col></button></ids-col>`}renderRegionPicker(){return this.hideregionpicker?t`<ids-col cols=\"auto\" class=\"no-picker header-fill\"></ids-col><div class=\"grid-spacer\"></div>`:t`${this.renderRegionPickerMobile()} ${this.renderRegionPickerDesktop()}`}renderRegionPickerDesktop(){return t`<ids-col cols=\"auto\" class=\"region-picker-col no-select ${this.unresponsive?\"\":\"hide-on-mobile\"}\"><button @click=\"${this.toggleRegion}\" class=\"btn-no-styles pick-region-btn\"><ids-col class=\"change-region\" cols=\"auto\">${this.pickregiontext}</ids-col><ids-col alignself=\"center\" cols=\"auto\"><ids-icon-chevron-bold class=\"change-region-chevron ${this.isRegionExpanded?\"expanded\":\"\"}\" color=\"#A00B36\" width=\"7\" height=\"12\"></ids-icon-chevron-bold></ids-col></button></ids-col>`}toggleRegion(e){if(this.isValidKey(e)){this.isRegionExpanded=!this.isRegionExpanded;let e=new CustomEvent(\"didToggleRegion\",{detail:{isExpanded:this.isRegionExpanded}});this.dispatchEvent(e)}}isValidKey(e){return\"Space\"===e.code||\"Enter\"===e.code&&\"keydown\"===e.type||\"click\"===e.type}renderItems(){switch(this.type){case\"1177\":case\"1177-pro\":case\"inera\":case\"inera-admin\":case\"inera-admin-legacy\":return t`<ids-col class=\"header-items-wrapper\" cols=\"auto\"><ids-row class=\"header-items\" align=\"center\"><slot></slot></ids-row></ids-col>`;case\"inera-legacy\":return t`<ids-col class=\"header-items-wrapper\" cols=\"auto\"><ids-row justify=\"end\" class=\"header-items\" align=\"center\"><slot></slot></ids-row><ids-row justify=\"end\" class=\"header-nav\"><slot name=\"header-nav\"></slot></ids-row></ids-col>`;default:return t``}}renderServiceName(){return\"inera-admin\"===this.type?t`<ids-col>${this.renderBrandText()}<h2 class=\"header-service-name-inera\">EN TJÄNST FRÅN INERA</h2></ids-col>`:t`<ids-col class=\"service-name-col\">${this.brandtexttop?t`<p class=\"header-unit-name top\">${this.brandtexttop}</p>`:\"\"} ${this.renderBrandText()} ${this.brandtextbottom?t`<p class=\"header-unit-name bottom\">${this.brandtextbottom}</p>`:\"\"}</ids-col>`}renderBrandText(){return this.brandtext?t`<h1 class=\"header-service-name ${this.brandtexttop||this.brandtextbottom?\"is-supplemented\":\"\"}\">${this.brandtext}</h1>`:this.querySelector('[slot=\"brand-text\"]')?t`<span class=\"${this.brandtexttop||this.brandtextbottom?\"is-supplemented\":\"\"}\"><slot name=\"brand-text\"></slot></span>`:t``}renderHeader(){switch(this.type){case\"1177\":return t`${this.renderLogo()} ${this.renderRegionPicker()}<div class=\"${this.unresponsive?\"grid-spacer\":\"grid-spacer-desktop\"}\"></div>${this.renderItems()}`;case\"1177-pro\":return t`${this.renderLogo()} ${this.renderServiceName()} ${this.renderItems()}`;case\"inera\":case\"inera-legacy\":return t`${this.renderLogo()}<div class=\"grid-spacer\"></div>${this.renderItems()}`;case\"inera-admin\":case\"inera-admin-legacy\":return t`${this.renderServiceName()} ${this.renderItems()}`;default:return t``}}render(){return t`<header><div class=\"header-main\"><ids-container gutterless ?fluid=\"${this.fluid}\"><ids-row class=\"header-inner\">${this.renderHeader()}</ids-row></ids-container></div>${\"inera-legacy\"===this.type?t``:t`<slot name=\"header-nav\"></slot>`}</header>`}}u.styles=[o,s,r,n,d,a,l,c],e([h({type:String,reflect:!0})],u.prototype,\"type\",void 0),e([h({type:String})],u.prototype,\"brandtext\",void 0),e([h({type:String})],u.prototype,\"brandtexttop\",void 0),e([h({type:String})],u.prototype,\"brandtextbottom\",void 0),e([h({type:String})],u.prototype,\"pickregiontext\",void 0),e([h({type:Boolean})],u.prototype,\"hidebrand\",void 0),e([h({type:Boolean,reflect:!0})],u.prototype,\"fluid\",void 0),e([h({type:Boolean})],u.prototype,\"hideregionpicker\",void 0),e([h({type:String})],u.prototype,\"srlogolabel\",void 0),e([h({type:Boolean,reflect:!0})],u.prototype,\"unresponsive\",void 0),e([h({type:String})],u.prototype,\"logohref\",void 0),e([g()],u.prototype,\"isRegionExpanded\",void 0),e([g()],u.prototype,\"regionIcon\",void 0);export{u as IDSHeader};\n", "import{css as e}from\"lit\";const t=e`::slotted(*){color:#a00b36}.avatar-icon{display:flex;margin-right:.625rem;width:44px;height:44px}.unit{pointer-events:none}.username{margin-right:10px}.unit,.username{text-align:left;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}`,a=e`:host([type=\"1177\"]) .avatar-box{max-height:80px;height:80px;padding-right:2.5rem;padding-left:2.5rem;background-color:#fff;border-radius:3.125rem}:host([type=\"1177\"]) .avatar-link-divider{padding-right:.5rem}:host([type=\"1177\"]) .avatar-link-divider:after{content:\"\";border-left:1px solid #dadbdc;margin-left:.5rem}:host([type=\"1177\"]) .avatar-username{text-align:start;max-width:30rem;white-space:nowrap;overflow:hidden;position:relative;text-overflow:ellipsis}@media all and (max-width:1024px){:host([type=\"1177\"]) .avatar-box{height:32px;font-size:.75rem;padding-right:.625rem;padding-left:.625rem;margin-left:20px;margin-right:20px}}@media all and (max-width:350px){:host([type=\"1177\"]) .avatar-box{margin-left:5px;margin-right:5px}}@media only screen and (max-width:1024px){:host([type=\"1177\"]) .avatar-icon{margin-right:.625rem;width:22px;height:22px}:host([type=\"1177\"]) .avatar-username{max-width:8.125rem}}@media only screen and (max-width:640px){:host([type=\"1177\"]) .avatar-username{max-width:7rem}}`,r=e`:host([type=\"1177-pro\"]){position:relative;margin-left:20px}:host([type=\"1177-pro\"]) .dropdown{right:0}:host([type=\"1177-pro\"]) .avatar-box{background-color:transparent}:host([type=\"1177-pro\"]) .avatar-box button{display:flex}:host([type=\"1177-pro\"]) .avatar-icon{display:-webkit-box;width:30px;height:30px}@media all and (max-width:1024px){:host([type=\"1177-pro\"]:not([unresponsive])){display:none}}`,i=e`:host([type=inera-admin]) .avatar-box{position:relative;border-left:1px solid var(--IDS-COLOR-NEUTRAL-90);padding:10px 0 10px 20px;margin-left:15px;min-width:200px;flex-direction:row-reverse}:host([type=inera-admin]) .avatar-box .username{font-size:1.0625rem;line-height:23px;letter-spacing:1px;color:var(--color-grey-base)}.chevron .ids-icon{transform:rotate(90deg)}.chevron .ids-icon.expanded{transform:rotate(270deg)}:host([type=inera-admin]) .avatar-box ::slotted(*){font-style:normal;font-weight:400;font-size:1rem;line-height:24px;color:var(--color-grey-base)}@media all and (max-width:1024px){:host([type=inera-admin]:not([unresponsive])){display:none}}`,o=e`:host([type=inera-admin-legacy]) .avatar-box{position:relative;border-left:1px solid grey;padding:10px 0 10px 20px;margin-left:15px;min-width:200px;flex-direction:row-reverse}:host([type=inera-admin-legacy]) .avatar-box .username{font-size:1.0625rem;line-height:23px;letter-spacing:1px;color:var(--color-grey-base)}.chevron .ids-icon{transform:rotate(90deg)}.chevron .ids-icon.expanded{transform:rotate(270deg)}.dropdown{margin-top:5px;top:100%;left:0;right:0;background-color:#fff;padding:20px;position:absolute;min-width:200px;box-shadow:0 0 6px rgba(0,0,0,.3)}:host([type=inera-admin-legacy]) .avatar-box .unit{font-style:normal;font-weight:400;font-size:1rem;line-height:24px;color:var(--color-grey-base)}@media all and (max-width:1024px){:host([type=inera-admin-legacy]:not([unresponsive])){display:none}}`;export{a as styles1177,r as styles1177pro,t as stylesBase,i as stylesIneraAdmin,o as stylesIneraAdminLegacy};\n", "import{__decorate as t}from\"tslib\";import{LitElement as e,html as s}from\"lit\";import{stylesBase as i,styles1177 as o,styles1177pro as a,stylesIneraAdmin as r,stylesIneraAdminLegacy as d}from\"./header-avatar-styles.js\";import n from\"../../styles/global-styles.js\";import{property as l,state as c}from\"lit/decorators.js\";class h extends e{constructor(){super(...arguments),this.username=\"\",this.maxwidth=\"\",this.unit=\"\",this.type=void 0,this.expanded=!1,this.unresponsive=!1,this.detectClickOutside=t=>{!this.contains(t.target)&&this.expanded&&this.tooggleExpand()}}tooggleExpand(){this.expanded=!this.expanded}firstUpdated(t){super.firstUpdated(t),document.addEventListener(\"click\",this.detectClickOutside);const e=this.closest(\"ids-header\");this.setAttribute(\"type\",e.getAttribute(\"type\")),null!==e.getAttribute(\"unresponsive\")&&(this.unresponsive=!0)}disconnectedCallback(){super.disconnectedCallback(),document.removeEventListener(\"click\",this.detectClickOutside)}renderAvatarBox(){switch(this.type){case\"1177\":case\"inera\":case\"inera-legacy\":return s`<ids-row class=\"avatar-box\">${this.renderIcon()}<ids-col alignself=\"center\"><div style=\"${this.maxwidth?`max-width: ${this.maxwidth}`:\"\"}\" class=\"avatar-username\">${this.username}</div><ids-row class=\"hide-on-mobile\"><ids-col cols=\"auto\" align=\"start\" class=\"avatar-link avatar-link-divider\"><slot name=\"avatar-left\"></slot></ids-col><ids-col cols=\"auto\" class=\"avatar-link\"><slot name=\"avatar-right\"></slot></ids-col></ids-row></ids-col></ids-row>`;case\"1177-pro\":case\"inera-admin\":case\"inera-admin-legacy\":return s`<ids-row class=\"avatar-box\"><button aria-expanded=\"${this.expanded}\" @click=\"${this.tooggleExpand}\" class=\"btn-no-styles\">${this.renderIcon()}<ids-col alignself=\"center\"><ids-row align=\"center\"><ids-col style=\"${this.maxwidth?`max-width: ${this.maxwidth}`:\"\"}\" class=\"username\">${this.username}</ids-col><ids-col cols=\"auto\" class=\"chevron\"><ids-icon-chevron-bold class=\"ids-icon ${this.expanded?\"expanded\":\"\"}\" color=\"var(--avatar-chevron-icon)\" height=\"13\" width=\"13\"></ids-icon-chevron-bold></ids-col></ids-row><ids-row align=\"start\" class=\"hide-on-mobile\"><ids-col style=\"${this.maxwidth?`max-width: ${this.maxwidth}`:\"\"}\" class=\"unit\">${this.unit}</ids-col></ids-row></ids-col></button> ${this.renderDropdown()}</ids-row>`}}renderIcon(){return\"inera-admin-legacy\"===this.type||\"inera-admin\"===this.type?s``:s`<ids-col class=\"avatar-icon\" alignself=\"center\" cols=\"auto\"><ids-icon-user width=\"100%\" height=\"100%\" colorpreset=\"2\"></ids-icon-user></ids-col>`}renderDropdown(){return this.expanded?s`<div class=\"dropdown\"><slot name=\"dropdown\"></slot></div>`:s``}render(){return this.renderAvatarBox()}}h.styles=[n,i,o,a,r,d],t([l({type:String})],h.prototype,\"username\",void 0),t([l({type:String})],h.prototype,\"maxwidth\",void 0),t([l({type:String})],h.prototype,\"unit\",void 0),t([l({type:String,reflect:!0})],h.prototype,\"type\",void 0),t([c()],h.prototype,\"expanded\",void 0),t([l({type:Boolean,reflect:!0})],h.prototype,\"unresponsive\",void 0);export{h as IDSHeaderAvatar};\n", "import{css as e}from\"lit\";const t=e`:host{position:relative}:host(:focus-within){outline:var(--focus_outline);outline-offset:var(--focus_outline-offset)}::slotted(:not([slot=icon])){opacity:0;position:absolute;top:0;bottom:0;left:0;right:0;z-index:1}.item{align-items:center;justify-content:center;display:flex}.item-link-text{text-decoration:none}.item-link{margin-right:.6rem;margin-left:.6rem}.item-link-icon{display:flex}button{margin:0}`,i=e`:host([type=\"1177\"]) .item-link{color:var(--color-web-nav);flex-direction:column}:host([type=\"1177\"]) .item-link-text{margin-top:.5rem}:host([type=\"1177\"]) .item-link-icon{width:32px;height:32px}@media only screen and (max-width:1024px){:host([type=\"1177\"]:not([unresponsive])) .item{height:50px}:host([type=\"1177\"]:not([unresponsive])) button{height:50px;width:50px;outline-offset:-2px}:host([type=\"1177\"]:not([unresponsive])) .item-link-icon{width:24px;height:24px}}`,n=e`:host([type=\"1177-pro\"]){height:30px;margin-left:20px}:host([type=\"1177-pro\"]) .item-link{flex-direction:row}:host([type=\"1177-pro\"]) .item-link-text{margin-left:10px;color:var(--color-web-nav)}:host([type=\"1177-pro\"]) .item-link-icon{display:flex;width:1.875rem;height:1.875rem}@media only screen and (max-width:1024px){:host([type=\"1177-pro\"]:not([unresponsive])){margin-left:10px}:host([type=\"1177-pro\"]:not([unresponsive])){padding-left:0;padding-right:0}:host([type=\"1177-pro\"]:not([unresponsive])) .item-link-icon{width:1.75rem;height:1.75rem}}`,o=e`:host([type=inera-admin]) .item-link-text,:host([type=inera]) .item-link-text{color:var(--IDS-COLOR-NEUTRAL-20);font-family:var(--font-family_2);margin-left:10px;font-weight:600;font-size:.9375rem;line-height:1.1rem}:host([type=inera-admin]) ::slotted(.ids-icon),:host([type=inera]) ::slotted(.ids-icon){fill:var(--IDS-COLOR-NEUTRAL-20)}:host([type=inera-admin]) .item,:host([type=inera]) .item{height:1.75rem}:host([type=inera-admin]) .item-link-icon,:host([type=inera]) .item-link-icon{width:1.75rem;height:1.75rem}@media all and (max-width:600px){:host([type=inera-admin]:not([unresponsive])),:host([type=inera]:not([unresponsive])){padding:0}}`,r=e`:host([type=inera-admin]) .item{position:relative}:host([type=inera-admin][separatorleft]){margin-left:2rem}:host([type=inera-admin][separatorleft]) .item::after{content:\"\";background-color:var(--IDS-COLOR-NEUTRAL-90);width:1px;position:absolute;top:-20px;bottom:-15px;left:-1rem}`,a=e`:host([type=inera-legacy]){--header-item-icon-color:#6f5e4d}:host([type=inera-legacy]) ::slotted(.ids-icon){fill:#6f5e4d}:host([type=inera-legacy]) .item-link-icon{width:1.125rem;height:1.125rem;margin-right:10px}:host([type=inera-legacy]) .item-link-text{line-height:23px;letter-spacing:1.0625px;text-transform:uppercase;color:#3e3e3e}@media only screen and (max-width:1024px){:host([type=inera-legacy]:not([unresponsive])){--header-item-icon-color:white}:host([type=inera-legacy]:not([unresponsive])) .item{height:1.75rem}:host([type=inera-legacy]:not([unresponsive])) .item-link-icon{width:1.75rem;height:1.75rem;margin-right:0}:host([type=inera-legacy]:not([unresponsive])) .item-link{margin-right:0;margin-left:0}:host([type=inera-legacy]:not([unresponsive])) button{outline-color:#fff}:host([type=inera-legacy]:not([unresponsive])) ::slotted(.ids-icon){margin-right:0}}`,s=e`:host([type=inera-admin-legacy]){--header-item-icon-color:#6f5e4d}:host([type=inera-admin-legacy]) .item-link-text{color:#00706e;margin-left:5px;font-size:1rem;line-height:1.1rem}:host([type=inera-admin-legacy]) ::slotted(.ids-icon){fill:#6f5e4d}:host([type=inera-admin-legacy]) .item{height:1.75rem}:host([type=inera-admin-legacy]) .item-link-icon{width:1.75rem;height:1.75rem}@media all and (max-width:600px){:host([type=inera-admin-legacy]:not([unresponsive])){padding:0}}`;export{i as styles1177,n as styles1177pro,t as stylesBase,o as stylesInera,r as stylesIneraAdmin,s as stylesIneraAdminLegacy,a as stylesIneraLegacy};\n", "import{__decorate as t}from\"tslib\";import{LitElement as e,html as i}from\"lit\";import{stylesBase as s,styles1177 as o,styles1177pro as r,stylesInera as l,stylesIneraAdmin as n,stylesIneraLegacy as c,stylesIneraAdminLegacy as p}from\"./header-item-styles.js\";import d from\"../../styles/global-styles.js\";import{property as h,state as u}from\"lit/decorators.js\";import{setClassOnTarget as a}from\"../../../utilities/utils.js\";class m extends e{constructor(){super(...arguments),this.mobile=!1,this.separatorleft=!1,this.type=void 0,this.unresponsive=!1,this.linkId=\"\"}get link(){return this.querySelector(\"a\")}get icon(){return this.querySelector(\".ids-icon\")}firstUpdated(t){super.firstUpdated(t);const e=this.closest(\"ids-header\");this.setAttribute(\"type\",e.getAttribute(\"type\")),null!==e.getAttribute(\"unresponsive\")&&(this.unresponsive=!0),a(this,\"ids-hide-on-m\",!this.mobile&&!this.unresponsive),this.setupIcon()}setupIcon(){this.icon&&(this.icon.setAttribute(\"slot\",\"icon\"),this.icon.setAttribute(\"width\",\"100%\"),this.icon.setAttribute(\"height\",\"100%\"),\"1177\"===this.type||\"1177-pro\"===this.type?this.icon.setAttribute(\"colorpreset\",\"2\"):(this.icon.setAttribute(\"color\",\"var(--header-item-icon-color)\"),this.icon.setAttribute(\"color2\",\"var(--header-item-icon-color2)\")))}render(){return i`<slot></slot><ids-col class=\"item\" cols=\"auto\"><ids-row class=\"item-link\" align=\"center\"><ids-col alignself=\"center\" cols=\"auto\"><div class=\"item-link-icon\"><slot name=\"icon\"></slot></div></ids-col><ids-col class=\"item-link-text ${this.unresponsive?\"\":\"hide-on-m\"}\" cols=\"auto\">${this.link?.innerText}</ids-col></ids-row></ids-col>`}}m.styles=[d,s,o,r,l,n,c,p],t([h({type:Boolean})],m.prototype,\"mobile\",void 0),t([h({type:Boolean})],m.prototype,\"separatorleft\",void 0),t([h({type:String,reflect:!0})],m.prototype,\"type\",void 0),t([h({type:Boolean,reflect:!0})],m.prototype,\"unresponsive\",void 0),t([u()],m.prototype,\"linkId\",void 0);export{m as IDSHeaderItem};\n", "import{css as o}from\"lit\";const r=o`nav{background-color:var(--header-nav_background-color)}.nav-row{border-top:var(--header-nav_border-top)}@media all and (max-width:1024px){:host(:not([unresponsive])) nav{background-color:var(--header-nav-mobile_background-color)}}`;export{r as stylesBase};\n", "import{__decorate as t}from\"tslib\";import{LitElement as e,html as i}from\"lit\";import{stylesBase as s}from\"./navigation-styles.js\";import r from\"../../styles/global-styles.js\";import{property as o}from\"lit/decorators.js\";import{setPotentialAttribute as l}from\"../../../utilities/utils.js\";class n extends e{constructor(){super(...arguments),this.icon=\"\",this.srtext=\"Huvudmeny\",this.unresponsive=!1,this.fluid=!1,this.type=void 0}firstUpdated(t){super.firstUpdated(t);const e=this.closest(\"ids-header\");this.setAttribute(\"slot\",\"header-nav\"),this.setAttribute(\"type\",e.getAttribute(\"type\")),null!==e.getAttribute(\"unresponsive\")&&(this.unresponsive=!0),null!==e.getAttribute(\"fluid\")&&(this.fluid=!0),this.querySelectorAll(\"ids-header-nav-item\")?.forEach((t=>{l(t,\"type\",this.type),l(t,\"unresponsive\",this.unresponsive),l(t,\"fluid\",this.fluid)}))}render(){return i`<nav class=\"navigation type-${this.type}\" aria-label=\"${this.srtext}\"><ids-container ?fluid=\"${this.fluid}\" gutterless><ids-row class=\"nav-row\"><slot></slot></ids-row></ids-container></nav>`}}n.styles=[r,s],t([o({type:String})],n.prototype,\"icon\",void 0),t([o({type:String})],n.prototype,\"srtext\",void 0),t([o({type:Boolean,reflect:!0})],n.prototype,\"unresponsive\",void 0),t([o({type:Boolean,reflect:!0})],n.prototype,\"fluid\",void 0),t([o({type:String,reflect:!0})],n.prototype,\"type\",void 0);export{n as IDSHeaderNav};\n", "import{css as e}from\"lit\";const t=e`:host{position:relative;padding-top:0!important;padding-bottom:0!important}:host(:not([label]):focus-within) .nav-item{outline:var(--focus_outline);outline-offset:-5px}:host([label]){position:static!important}::slotted(.ids-link),::slotted(a){position:absolute;top:0;bottom:0;left:0;right:0;opacity:0}@media only screen and (max-width:1440px){:host .nav-item{font-size:1.0625rem!important}}::slotted(ids-link){display:block;margin-bottom:10px;padding-bottom:10px;margin-right:40px;font-size:1rem;line-height:24px;border-bottom:var(--header-nav-item-link_border-bottom)}button:hover{text-decoration:none}.nav-item{display:block;padding:var(--header-nav-item_padding);position:relative;outline-offset:-2px!important;text-decoration:none;margin-right:.3125rem;font-size:var(--header-nav-item_font-size);font-weight:var(--header-nav-item_font-weight);font-family:var(--header-nav-item_font-family);border:var(--header-nav-item_border);border-radius:var(--header-nav-item_border-radius);color:var(--header-nav-item_color)}:host([type=\"1177\"]) .nav-item{margin-left:0}.nav-item:hover{border:var(--header-nav-item-hover_border)}.nav-item.expanded{background-color:var(--header-nav-item-expanded_background-color);border:var(--header-nav-item-expanded_border)!important;color:var(--header-nav-item-expanded_color)}.nav-item.active{background-color:var(--header-nav-item-active_background-color);border:var(--header-nav-item-active_border);color:var(--header-nav-item-active_color)}.nav-item:after{background:var(--header-nav-item-after_background);bottom:0;content:var(--header-nav-item-after_content);display:block;height:5px;left:0;right:100%;position:absolute;transition:all .3s ease;width:0;margin-left:10px;margin-right:10px}.nav-item.active:after,.nav-item.expanded:after,.nav-item:focus-within::after,.nav-item:focus:after,.nav-item:hover:after{width:auto;right:0}.header-nav-item-content{background-color:var(--header-nav-item-content_background);left:0;min-height:173px;overflow:hidden;padding:40px 0 50px;position:absolute;width:100%;z-index:20}.header-nav-item-content{box-shadow:0 4px 8px 0 rgb(53 53 53 / 20%)}.nav-item-content{position:relative}.mega-menu-row{padding:0 10px}:host([fluid=true]) .mega-menu-row{padding:0 20px}@media only screen and (max-width:1024px){:host(:not([unresponsive])){display:none}}`,a=e`:host([type=\"1177-pro\"]) .nav-item{margin-left:-10px;margin-top:7px;margin-bottom:7px;outline-offset:2px!important;margin-right:20px}:host([type=\"1177-pro\"]) .header-nav-item-content{padding:40px 20 50px}`,n=e`:host([type=inera]) .header-nav-item-content{-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box;padding:20px 0 20px 5px}:host([type=inera]) .nav-item{margin-left:-10px}:host([type=inera]) .nav-item-content{padding:5px 0;border-radius:10px}`,o=e`:host([type=inera-legacy]) .header-nav-item-content{-moz-box-sizing:border-box;-webkit-box-sizing:border-box;box-sizing:border-box;border:30px solid #fff;padding:20px 0 20px}:host([type=inera-legacy]) .nav-item-content{padding:5px 0;border-radius:10px}:host([type=inera-legacy]) .nav-item{margin-left:-10px}:host([type=inera-legacy]) .nav-item-content .graphic{background-image:url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 192 186'%3E%3Cdefs%3E%3Cpath id='a' d='M0 .424h178.903v101.649H0z'/%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(0 83.231)'%3E%3Cmask id='b' fill='%23fff'%3E%3Cuse xlink:href='%23a'/%3E%3C/mask%3E%3Cpath d='M171.55 10.807c-1.053 15.669-18.674 25.783-37.589 24.761-26.07-1.407-45.086-14.048-64.967-26.757-45.91-29.346-88.425 24.614-59.595 64.896 28.84 40.28 108.781 38.855 152.385-11.959 2.654-3.085 5.161-6.727 7.524-10.742 19.82-33.704 2.893-49.874 2.243-40.2' fill='%2300706E' mask='url(%23b)'/%3E%3C/g%3E%3Cpath d='M150.57 47.752c10.782 14.496 37.36 55.623 10.203 98.393 40.521-45.842 38.987-116.583 10.784-139.964-10.183-8.447-26.286-8.001-32.462-.097-7.949 10.173-5.407 18.977 11.476 41.668' fill='%2341C0C2'/%3E%3C/g%3E%3C/svg%3E\");background-repeat:no-repeat;background-repeat:no-repeat;background-size:600px;background-position:10px -300px;width:2000px;height:2000px;position:absolute;z-index:-1;left:-40px;top:-40px}`,i=e`:host([type=inera-admin]){position:relative}:host([type=inera-admin]) .mega-menu-row{padding:0 20px}:host([type=inera-admin]) .nav-item{font-size:1.125rem}:host([type=inera-admin]) .nav-item-link-col{column-count:4;column-gap:30px}:host([type=inera-admin]) .header-nav-item-content{background:#fff;box-shadow:rgb(0 0 0 / 30%) 0 2px 7px -1px,rgb(53 53 53 / 20%) 0 15px 7px -13px inset;padding:40px 0}:host([type=inera-admin]) .header-nav-item-content::before{display:none}`,r=e`:host([type=inera-admin-legacy]){position:relative}:host([type=inera-admin-legacy]) .mega-menu-row{padding:0 20px}:host([type=inera-admin-legacy]) .nav-item{font-size:1.125rem;font-weight:400}:host([type=inera-admin-legacy]) .nav-item-link-col{column-count:4;column-gap:30px}:host([type=inera-admin-legacy]) .header-nav-item-content{background:#fff;padding:40px 0}:host([type=inera-admin-legacy]) .header-nav-item-content::before{display:none}`;export{a as styles1177pro,t as stylesBase,n as stylesInera,i as stylesIneraAdmin,r as stylesIneraAdminLegacy,o as stylesIneraLegacy};\n", "import{__decorate as t}from\"tslib\";import{LitElement as e,html as i}from\"lit\";import{property as s,state as o}from\"lit/decorators.js\";import n from\"../../../styles/global-styles.js\";import{stylesBase as l,styles1177pro as d,stylesInera as r,stylesIneraAdmin as c,stylesIneraLegacy as a,stylesIneraAdminLegacy as p}from\"./navigation-item-styles.js\";import{generateId as h}from\"../../../../utilities/utils.js\";class u extends e{constructor(){super(...arguments),this.label=\"\",this.type=void 0,this.link=!1,this.fluid=!1,this.active=!1,this.expanded=!1,this.unresponsive=!1,this.isExpanded=!1,this.contentId=h(),this.detectClickOutside=t=>{this.contains(t.target)||(this.isExpanded=!1)}}get linkText(){return this.querySelector(\"a\")?.innerText}disconnectedCallback(){document.removeEventListener(\"click\",this.detectClickOutside),super.disconnectedCallback()}firstUpdated(t){super.firstUpdated(t),this.querySelectorAll(\"ids-link\").forEach((t=>{t.setAttribute(\"activeicon\",\"true\"),t.setAttribute(\"colorpreset\",\"2\");const e=t.querySelector(\".ids-icon\");e?.setAttribute(\"width\",\"10px\"),e?.setAttribute(\"height\",\"10px\")})),this.isExpanded=this.expanded,document.addEventListener(\"click\",this.detectClickOutside)}toggleActive(){this.isExpanded=!this.isExpanded}renderContent(){return this.isExpanded?i`<div id=\"${this.contentId}\" class=\"header-nav-item-content\"><ids-container ?fluid=\"${this.fluid}\" gutterless><ids-row class=\"mega-menu-row\"><ids-col cols=\"3\"><slot name=\"col-1\"></slot></ids-col><ids-col cols=\"3\"><slot name=\"col-2\"></slot></ids-col><ids-col cols=\"3\"><slot name=\"col-3\"></slot></ids-col><ids-col cols=\"3\"><div class=\"nav-item-content\"><slot name=\"col-4\"></slot></div></ids-col></ids-row></ids-container></div>`:i``}clickLink(){this.querySelector(\"a\")?.click()}renderNavItem(){return this.link?i`<span class=\"nav-item ${this.active?\"active\":\"\"}\">${this.linkText}<slot></slot></span>`:i`<button aria-controls=\"${this.contentId}\" aria-expanded=\"${this.isExpanded}\" class=\"btn-no-styles nav-item ${this.isExpanded?\"expanded\":\"\"} ${this.active?\"active\":\"\"}\" @click=\"${this.toggleActive}\">${this.label}</button>`}render(){return i`${this.renderNavItem()} ${this.renderContent()}`}}u.styles=[n,l,d,r,c,a,p],t([s({type:String,reflect:!0})],u.prototype,\"label\",void 0),t([s({type:String,reflect:!0})],u.prototype,\"type\",void 0),t([s({type:Boolean})],u.prototype,\"link\",void 0),t([s({type:Boolean})],u.prototype,\"fluid\",void 0),t([s({type:Boolean})],u.prototype,\"active\",void 0),t([s({type:Boolean})],u.prototype,\"expanded\",void 0),t([s({type:Boolean,reflect:!0})],u.prototype,\"unresponsive\",void 0),t([o()],u.prototype,\"isExpanded\",void 0);export{u as IDSHeaderNavItem};\n", "import{css as t}from\"lit\";var e=t`:host{display:none}@media only screen and (max-width:1024px){:host(:not([unresponsive])){display:flex;flex-grow:1;border-right:1px solid rgba(160,11,54,.2);color:var(--color-web-nav)}.mobile-item-text{margin-left:5px}button{justify-content:center;align-items:center;display:flex;flex:1 1 auto;height:50px;outline-offset:-2px!important;font-size:.875rem!important}}`;export{e as default};\n", "import{__decorate as t}from\"tslib\";import{LitElement as s,html as i}from\"lit\";import{property as e}from\"lit/decorators.js\";import o from\"../../../styles/global-styles.js\";import r from\"./mobile-item-styles.js\";class l extends s{constructor(){super(...arguments),this.unresponsive=!1}get link(){return this.querySelector(\"a\")}get icon(){return this.querySelector(\".ids-icon\")}firstUpdated(t){super.firstUpdated(t),this.setupIcon()}setupIcon(){this.icon&&(this.icon.setAttribute(\"slot\",\"icon\"),this.icon.setAttribute(\"width\",\"30\"),this.icon.setAttribute(\"height\",\"30\"),this.icon.setAttribute(\"colorpreset\",\"2\"))}click(){this.link?.click()}render(){return i`<button @click=\"${this.click}\" aria-label=\"${this.link?.innerText||\"\"}\" class=\"btn-no-styles\"><ids-col class=\"ids-mr-1\" cols=\"auto\"><slot name=\"icon\"></slot></ids-col><ids-col class=\"mobile-item-text\" cols=\"auto\">${this.link?.innerText} <span class=\"hide\"><slot></slot></span></ids-col></button>`}}l.styles=[o,r],t([e({type:Boolean,reflect:!0})],l.prototype,\"unresponsive\",void 0);export{l as IDSHeaderMobileItem};\n", "import{css as e}from\"lit\";const t=e`:host{position:static!important;display:none}@media only screen and (max-width:1024px){:host(:not([unresponsive])){display:flex;flex-grow:1;padding-left:10px;padding-right:10px}}.menu-btn{justify-content:center;align-items:center;display:flex;flex:1 1 auto;height:30px}.mobile-menu-items{position:absolute;left:0;right:0;z-index:10;box-shadow:var(--header-nav-mobile-menu-items_box-shadow);top:100%}.lines-button{transition:.2s;cursor:pointer;user-select:none;position:relative}.lines{display:block;width:1.3125rem;border-radius:2px;transition:.2s;background:var(--header-nav-menu_color);position:relative;height:3px;width:1.875rem}.lines:after,.lines:before{display:inline-block;width:1.3125rem;border-radius:2px;transition:.2s;background:var(--header-nav-menu_color);position:absolute;left:0;content:\"\";-webkit-transform-origin:.09375rem center;transform-origin:.09375rem center}.lines:after,.lines:before{height:3px;width:1.875rem}.lines:after,.lines:before{-webkit-transform-origin:.13393rem center;transform-origin:.13393rem center}.lines:before{top:10px}.lines:after{top:-10px}.lines-button.close{-webkit-transform:scale3d(.8,.8,.8);transform:scale3d(.8,.8,.8)}.lines-button.x.close .lines{background:0 0}.lines-button.x.close .lines:after,.lines-button.x.close .lines:before{-ms-transform-origin:50% 50%;-webkit-transform-origin:50% 50%;transform-origin:50% 50%;top:0;width:2.5rem;left:-5px}.lines-button.x.close .lines:before{-ms-transform:rotate(45deg);-webkit-transform:rotate3d(0,0,1,45deg);transform:rotate3d(0,0,1,45deg)}.lines-button.x.close .lines:after{-ms-transform:rotate(-45deg);-webkit-transform:rotate3d(0,0,1,-45deg);transform:rotate3d(0,0,1,-45deg)}`,o=e`:host([type=\"1177\"]){padding:0}:host([type=\"1177\"]) .menu-btn{height:50px;outline-offset:-2px!important}:host([type=\"1177\"]) .menu-txt{margin-left:10px;font-size:.875rem;color:var(--color-web-nav)}`,n=e`:host([type=inera]) .menu-btn:focus{outline-color:var(--focus-outline-color)}@media only screen and (max-width:1024px){:host([type=inera]){flex-grow:0}}`,r=e`:host([type=inera-legacy]) .menu-btn:focus{outline-color:#fff}@media only screen and (max-width:1024px){:host([type=inera-legacy]) .lines{background:#fff}:host([type=inera-legacy]) .lines:after,:host([type=inera-legacy]) .lines:before{background:#fff}:host([type=inera-legacy]){flex-grow:0}}`;export{o as styles1177,t as stylesBase,n as stylesInera,r as stylesIneraLegacy};\n", "import{__decorate as e}from\"tslib\";import{LitElement as t,html as s}from\"lit\";import{property as i,state as o}from\"lit/decorators.js\";import l from\"../../styles/global-styles.js\";import{stylesBase as n,styles1177 as d,stylesInera as r,stylesIneraLegacy as p}from\"./header-mobile-menu-styles.js\";class a extends t{constructor(){super(...arguments),this.expanded=!1,this.persistent=!1,this.unresponsive=!1,this.fluid=!1,this.type=void 0,this.isExpanded=!1,this.label=\"Meny\",this.closeMenu=()=>{this.isExpanded&&this.toggleExpanded()}}firstUpdated(e){super.firstUpdated(e),this.querySelector(\"ids-mobile-menu-avatar\")?.setAttribute(\"slot\",\"menu-link\"),this.querySelectorAll(\"ids-mobile-menu-item\")?.forEach((e=>{e.setAttribute(\"slot\",\"menu-link\")})),this.isExpanded=this.expanded,this.persistent||this.setupLinkClicks(),this.setupProperties()}setupProperties(){const e=this.closest(\"ids-header\");this.setAttribute(\"type\",e.getAttribute(\"type\")),null!==e.getAttribute(\"unresponsive\")&&(this.unresponsive=!0),null!==e.getAttribute(\"fluid\")&&(this.fluid=!0)}setupLinkClicks(){this.querySelectorAll(\"a\")?.forEach((e=>e.addEventListener(\"click\",this.closeMenu)))}toggleExpanded(){this.isExpanded=!this.isExpanded;let e=new CustomEvent(\"didToggleExpansion\",{detail:{isExpanded:this.expanded}});this.dispatchEvent(e)}renderItems(){return this.isExpanded?s`<ids-row class=\"mobile-menu-items\"><slot name=\"menu-link\"></slot></ids-row>`:s``}render(){return s`<button aria-label=\"${this.label}\" aria-expanded=\"${this.isExpanded}\" @click=\"${this.toggleExpanded}\" class=\"btn-no-styles clickable menu-btn\" justify=\"center\" align=\"center\"><ids-col cols=\"auto\"><div class=\"lines-button x ${this.isExpanded?\"close\":\"\"}\"><span class=\"lines\"></span></div></ids-col><ids-col class=\"menu-txt\" cols=\"auto\"><slot></slot></ids-col></button> ${this.renderItems()}`}}a.styles=[l,n,d,r,p],e([i({type:Boolean})],a.prototype,\"expanded\",void 0),e([i({type:Boolean})],a.prototype,\"persistent\",void 0),e([i({type:Boolean,reflect:!0})],a.prototype,\"unresponsive\",void 0),e([i({type:Boolean,reflect:!0})],a.prototype,\"fluid\",void 0),e([i({type:String,reflect:!0})],a.prototype,\"type\",void 0),e([o()],a.prototype,\"isExpanded\",void 0),e([i()],a.prototype,\"label\",void 0);export{a as IDSHeaderMobileMenu};\n", "import{css as o}from\"lit\";var r=o`:host{display:block;width:100%;padding:15px 10px;display:flex;flex-grow:1;background-color:#fff}.user-icon{margin-right:10px}.user-info{color:var(--color-grey-base);text-align:left;display:block;font-size:1rem;margin:10px 0}::slotted(a){color:var(--mobile-menu-avatar-link);text-decoration:none}`;export{r as default};\n", "import{__decorate as t}from\"tslib\";import{LitElement as s,html as e}from\"lit\";import{property as r}from\"lit/decorators.js\";import i from\"./mobile-menu-avatar-styles.js\";class o extends s{constructor(){super(...arguments),this.username=\"\",this.unit=\"\",this.type=\"\"}firstUpdated(t){super.firstUpdated(t),this.setAttribute(\"type\",this.closest(\"ids-header\").getAttribute(\"type\"))}renderAvatar(){switch(this.type){case\"1177-pro\":return e`<ids-row align=\"center\"><ids-col class=\"user-icon\" cols=\"auto\"><ids-icon-user colorpreset=\"2\" width=\"26\" height=\"26\"></ids-icon-user></ids-col><ids-col class=\"username\" align=\"start\">${this.username}</ids-col><ids-col cols=\"auto\" align=\"end\"><slot></slot></ids-col></ids-row>`;case\"inera-admin\":case\"inera-admin-legacy\":return e`<ids-row><ids-col cols=\"12\"><p class=\"user-info\">${this.username}<br>${this.unit}</p></ids-col><ids-col><slot></slot></ids-col></ids-row>`;default:return e``}}render(){return e`${this.renderAvatar()}`}}o.styles=[i],t([r({type:String})],o.prototype,\"username\",void 0),t([r({type:String})],o.prototype,\"unit\",void 0),t([r({type:String,reflect:!0})],o.prototype,\"type\",void 0);export{o as IDSMobileMenuAvatar};\n", "import{svg as C}from\"lit\";import{IDSIconBase as e}from\"../icon-base-element.js\";class l extends e{constructor(){super(),this.vbHeight=40,this.vbWidth=33}renderIcon(){return C`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.4783 9.03711C10.4783 8.48482 10.926 8.03711 11.4783 8.03711H16.0248C16.5771 8.03711 17.0248 8.48482 17.0248 9.03711V13.7781H18.2972C18.8495 13.7781 19.2972 14.2258 19.2972 14.7781C19.2972 15.3304 18.8495 15.7781 18.2972 15.7781H16.0248C15.4726 15.7781 15.0248 15.3304 15.0248 14.7781V10.0371H11.4783C10.926 10.0371 10.4783 9.58939 10.4783 9.03711Z\"></path><path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.9724 0C10.4949 0 5.74097 4.70796 5.74097 10.2731C5.74097 13.2732 6.96254 16.3354 8.79884 18.6489C10.6234 20.9477 13.1906 22.666 15.9724 22.666C19.1145 22.666 21.9432 21.0682 23.9616 18.7678C25.9795 16.468 27.259 13.3903 27.259 10.2731C27.259 4.44581 22.2296 0 15.9724 0ZM7.74097 10.2731C7.74097 5.81306 11.599 2 15.9724 2C21.3183 2 25.259 5.73422 25.259 10.2731C25.259 12.859 24.1876 15.4778 22.4583 17.4487C20.7295 19.419 18.4149 20.666 15.9724 20.666C14.022 20.666 11.9734 19.4315 10.3654 17.4055C8.769 15.3944 7.74097 12.7602 7.74097 10.2731Z\"></path><path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.074 24.111C11.5327 24.111 7.57437 25.1938 4.92309 27.7531C3.03475 29.5759 2.20773 31.3453 0.922996 35.7553L0.922707 35.7563L0.6496 36.6868L0.649092 36.6885C0.423954 37.4454 0.244358 38.0176 0.0557032 38.5589C-0.0508641 38.8647 -0.0027492 39.2032 0.184815 39.4672C0.372379 39.7312 0.676169 39.888 1.00001 39.888H32C32.3236 39.888 32.6271 39.7315 32.8147 39.4679C33.0023 39.2043 33.0508 38.8662 32.9448 38.5605C32.7545 38.0113 32.57 37.4289 32.3526 36.6902L32.3522 36.6886L32.0204 35.5452L32.0201 35.544C30.7894 31.2703 29.975 29.4691 28.2369 27.6951C25.7703 25.1774 22.1271 24.111 17.074 24.111ZM6.31213 29.1921C8.41201 27.165 11.7338 26.111 17.074 26.111C21.8889 26.111 24.8855 27.1321 26.8083 29.0947C28.1807 30.4955 28.8855 31.8863 30.0985 36.0986L30.4325 37.2496L30.4335 37.2531C30.4992 37.4763 30.5623 37.687 30.6239 37.888H26.5773L25.6946 34.1008C25.5692 33.5629 25.0316 33.2285 24.4937 33.3538C23.9558 33.4792 23.6214 34.0168 23.7468 34.5547L24.5237 37.888H8.47591L9.25278 34.5547C9.37814 34.0168 9.04373 33.4792 8.50586 33.3538C7.96799 33.2285 7.43034 33.5629 7.30498 34.1008L6.42231 37.888H2.37627C2.43726 37.6891 2.50029 37.4799 2.56662 37.2569L2.56763 37.2535L2.84289 36.3157C4.10596 31.9799 4.81532 30.6369 6.31213 29.1921Z\"></path>`}}export{l as IDSIconUser};\n", "import{IDSIconUser as i}from\"./icon-user-element.js\";import{registerComponent as s}from\"../../../utilities/utils.js\";s(\"ids-icon-user\",i);\n", "import{svg as s}from\"lit\";import{IDSIconBase as t}from\"../icon-base-element.js\";class l extends t{constructor(){super(),this.vbHeight=99,this.vbWidth=255}renderIcon(){return s`<g><path fill=\"${this.colors.color}\" class=\"st0\" d=\"M14.7,87.5c0,6.4,5.2,11.5,11.6,11.5s11.6-5.2,11.6-11.5v-76C37.9,5.2,32.7,0,26.3,0H12.6C5.6,0,0,5.7,0,12.5   C0,19.5,5.7,25,12.7,25h2.1L14.7,87.5L14.7,87.5z\"></path><path fill=\"${this.colors.color}\" class=\"st0\" d=\"M69.1,25.2v62.3c0,6.4,5.2,11.5,11.6,11.5s11.6-5.2,11.6-11.5v-76C92.3,5.2,87.1,0,80.7,0H67   c-7,0-12.6,5.7-12.6,12.5c0,7,5.7,12.5,12.7,12.5L69.1,25.2L69.1,25.2z\"></path><g><path fill=\"${this.colors.color}\" class=\"st0\" d=\"M198.1,25.2h18.6L226.9,0h-28.8c-7,0-12.6,5.7-12.6,12.5C185.4,19.5,191.1,25.2,198.1,25.2z\"></path><path fill=\"${this.colors.color}\" class=\"st0\" d=\"M247.7,0.9c-6-2.4-12.7,0.5-15.1,6.5L202,83.1c-2.4,6,0.5,12.6,6.5,15s12.7-0.5,15.1-6.5l30.6-75.8    C256.5,10,253.6,3.2,247.7,0.9z\"></path></g><g><path fill=\"${this.colors.color}\" class=\"st0\" d=\"M118.2,25.2h18.6L147,0h-28.8c-7,0-12.6,5.7-12.6,12.5C105.5,19.5,111.2,25.2,118.2,25.2z\"></path><path fill=\"${this.colors.color}\" class=\"st0\" d=\"M167.8,0.9c-6-2.4-12.7,0.5-15.1,6.5l-30.6,75.7c-2.4,6,0.5,12.6,6.5,15c6,2.4,12.7-0.5,15.1-6.5l30.6-75.8    C176.6,10,173.7,3.2,167.8,0.9z\"></path></g></g>`}}export{l as IDSIcon1177};\n", "import{IDSIcon1177 as i}from\"./icon-1177-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-1177\",i);\n", "import{svg as C}from\"lit\";import{IDSIconBase as l}from\"../icon-base-element.js\";class o extends l{constructor(){super(),this.vbHeight=50,this.vbWidth=148}renderIcon(){return C`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13.9074 22.0607C11.7258 22.0607 9.5932 21.4138 7.77927 20.2018C5.96533 18.9897 4.55155 17.267 3.71668 15.2515C2.88182 13.236 2.66339 11.0181 3.08899 8.87844C3.5146 6.73876 4.56514 4.77334 6.10777 3.23072C7.65039 1.6881 9.61581 0.637559 11.7555 0.21195C13.8952 -0.213659 16.113 0.00477928 18.1285 0.839641C20.1441 1.6745 21.8668 3.08829 23.0788 4.90222C24.2908 6.71615 24.9378 8.84876 24.9378 11.0304C24.9336 13.9545 23.7702 16.7577 21.7025 18.8254C19.6348 20.8931 16.8316 22.0566 13.9074 22.0607ZM13.9074 6.83945C13.0785 6.83945 12.2682 7.08524 11.5791 7.54574C10.8899 8.00625 10.3527 8.66078 10.0355 9.42657C9.7183 10.1924 9.63531 11.035 9.79702 11.848C9.95873 12.6609 10.3579 13.4077 10.944 13.9938C11.5301 14.5799 12.2768 14.979 13.0898 15.1407C13.9028 15.3024 14.7454 15.2195 15.5112 14.9023C16.277 14.5851 16.9315 14.0479 17.392 13.3587C17.8525 12.6695 18.0983 11.8592 18.0983 11.0304C18.0969 9.91928 17.655 8.8541 16.8693 8.06845C16.0837 7.2828 15.0185 6.84082 13.9074 6.83945Z\"></path><path fill=\"${this.colors.color}\" d=\"M27.8252 39.006C27.8252 35.3162 26.3594 31.7775 23.7503 29.1683C21.1412 26.5592 17.6024 25.0934 13.9126 25.0934C10.2227 25.0934 6.68403 26.5592 4.07491 29.1683C1.4658 31.7775 1.44326e-05 35.3162 1.44326e-05 39.006V49.2574C-0.000478048 49.3022 0.0116421 49.3462 0.0349905 49.3845C0.0583389 49.4227 0.0919739 49.4536 0.132054 49.4737C0.172133 49.4937 0.217041 49.5021 0.261648 49.4978C0.306254 49.4935 0.34876 49.4768 0.384311 49.4495L6.74598 44.7185C6.77511 44.6957 6.79867 44.6665 6.81486 44.6332C6.83106 44.5999 6.83947 44.5634 6.83946 44.5264V39.006C6.88938 37.164 7.65622 35.4141 8.97675 34.1289C10.2973 32.8437 12.0673 32.1245 13.91 32.1245C15.7527 32.1245 17.5227 32.8437 18.8432 34.1289C20.1638 35.4141 20.9306 37.164 20.9805 39.006V49.2574C20.9805 49.3221 21.0062 49.3842 21.052 49.43C21.0978 49.4758 21.1599 49.5015 21.2246 49.5015H27.5811C27.6458 49.5015 27.7079 49.4758 27.7537 49.43C27.7995 49.3842 27.8252 49.3221 27.8252 49.2574V39.006Z\"></path><path fill=\"${this.colors.color}\" d=\"M49.0238 18.4151C49.0341 19.2389 48.7992 20.0472 48.349 20.7372C47.8988 21.4272 47.2536 21.9678 46.4954 22.2903C45.7373 22.6127 44.9003 22.7024 44.091 22.548C43.2817 22.3936 42.5366 22.0021 41.9504 21.4232C41.3642 20.8443 40.9633 20.1041 40.7987 19.2968C40.6342 18.4896 40.7134 17.6516 41.0262 16.8894C41.3391 16.1272 41.8715 15.4753 42.5558 15.0164C43.2401 14.5576 44.0454 14.3125 44.8692 14.3125C45.9601 14.3191 47.0052 14.7518 47.7814 15.5183C48.5577 16.2848 49.0035 17.3244 49.0238 18.4151Z\"></path><path fill=\"${this.colors.color}\" d=\"M48.0579 25.7999H41.7326C41.6006 25.7999 41.4937 25.9069 41.4937 26.0388V49.2576C41.4937 49.3895 41.6006 49.4965 41.7326 49.4965H48.0579C48.1898 49.4965 48.2968 49.3895 48.2968 49.2576V26.0388C48.2968 25.9069 48.1898 25.7999 48.0579 25.7999Z\"></path><path fill=\"${this.colors.color}\" d=\"M75.8103 36.0823V49.2574C75.8103 49.3213 75.7853 49.3826 75.7407 49.4282C75.696 49.4738 75.6353 49.5001 75.5714 49.5015H69.2461C69.1823 49.5001 69.1215 49.4738 69.0769 49.4282C69.0322 49.3826 69.0072 49.3213 69.0072 49.2574V37.2403C69.0072 33.9582 67.2208 32.0783 64.4216 32.0783H64.2087C62.9803 32.1437 61.8244 32.6799 60.981 33.5755C60.1377 34.471 59.6718 35.6571 59.6803 36.8872V49.2574C59.6803 49.3213 59.6553 49.3826 59.6106 49.4282C59.566 49.4738 59.5052 49.5001 59.4414 49.5015H53.1264C53.0946 49.5015 53.0631 49.4952 53.0338 49.4828C53.0045 49.4705 52.9779 49.4524 52.9557 49.4297C52.9334 49.407 52.9159 49.38 52.9042 49.3504C52.8925 49.3208 52.8869 49.2892 52.8875 49.2574V26.0438C52.8869 26.012 52.8925 25.9804 52.9042 25.9508C52.9159 25.9212 52.9334 25.8943 52.9557 25.8715C52.9779 25.8488 53.0045 25.8307 53.0338 25.8184C53.0631 25.8061 53.0946 25.7997 53.1264 25.7997H59.4517C59.5156 25.8011 59.5763 25.8274 59.621 25.873C59.6656 25.9187 59.6907 25.98 59.6906 26.0438V28.5002C59.6931 28.5058 59.6971 28.5105 59.7021 28.5138C59.7072 28.5171 59.7131 28.5189 59.7192 28.5189C59.7215 28.5189 59.7237 28.5187 59.726 28.5182C59.7296 28.5173 59.7331 28.5159 59.7363 28.5138C59.7413 28.5105 59.7453 28.5058 59.7478 28.5002C60.4772 27.4881 61.4415 26.6682 62.5578 26.111C63.674 25.5538 64.9088 25.2759 66.1562 25.3012C72.1439 25.3168 75.8103 29.4194 75.8103 36.0823Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M102.784 39.2657H85.8903C85.8883 39.2657 85.8862 39.2659 85.8842 39.2662C85.8818 39.2667 85.8794 39.2674 85.8771 39.2685C85.8729 39.2703 85.8692 39.2731 85.8662 39.2766L85.8644 39.2789C85.8624 39.2819 85.8608 39.2851 85.8599 39.2885C85.8594 39.2902 85.8591 39.2918 85.8589 39.2935C85.8586 39.2963 85.8587 39.2992 85.8592 39.3021C86.4979 42.5167 88.7102 44.1889 91.9352 44.1889C93.9554 44.1889 96.0898 43.3164 96.9726 41.9818C97.0059 41.9283 97.0589 41.8901 97.1202 41.8755C97.1814 41.8609 97.246 41.8711 97.2998 41.9039L102.207 44.8899C102.261 44.9233 102.299 44.9759 102.315 45.0368C102.33 45.0978 102.321 45.1624 102.29 45.2171C100.494 48.2292 96.5779 49.9845 91.7898 49.9845C88.5306 50.0313 85.3853 48.7861 83.0415 46.5209C80.6976 44.2558 79.3456 41.1549 79.2811 37.896C79.2166 34.6371 80.4448 31.4851 82.6972 29.129C84.9496 26.7729 88.0431 25.4041 91.3016 25.322C92.8261 25.2516 94.3491 25.4918 95.7779 26.0279C97.2068 26.564 98.5119 27.3849 99.6138 28.4407C100.716 29.4965 101.592 30.7653 102.188 32.1699C102.785 33.5746 103.09 35.0859 103.085 36.612C103.089 37.4653 103.028 38.3177 102.903 39.1618C102.901 39.1912 102.887 39.2185 102.864 39.2378C102.842 39.2572 102.813 39.2672 102.784 39.2657ZM96.2404 34.9242C96.2425 34.9242 96.2447 34.924 96.2468 34.9236C96.2491 34.9232 96.2514 34.9224 96.2536 34.9214C96.2578 34.9196 96.2615 34.9168 96.2645 34.9133C96.2674 34.9099 96.2696 34.9058 96.2708 34.9014C96.2713 34.8997 96.2716 34.898 96.2718 34.8962C96.2721 34.8935 96.272 34.8906 96.2715 34.8878C95.9651 32.5405 93.8047 30.8216 91.3068 30.8216C88.4713 30.8216 86.5966 32.3484 85.9578 34.8827C85.9561 34.8875 85.9556 34.8927 85.9564 34.8978C85.9572 34.9029 85.9592 34.9077 85.9623 34.9118C85.9636 34.9136 85.9652 34.9153 85.9669 34.9167L85.969 34.9184C85.9706 34.9195 85.9723 34.9205 85.9741 34.9214C85.9787 34.9235 85.9839 34.9245 85.989 34.9242H96.2404Z\"></path><path fill=\"${this.colors.color}\" d=\"M122.045 25.8414L121.677 31.9693C121.675 31.9873 121.67 32.0047 121.661 32.0202C121.651 32.0357 121.639 32.049 121.624 32.0589C121.609 32.0689 121.592 32.0754 121.574 32.0779C121.556 32.0803 121.538 32.0788 121.521 32.0732C120.586 31.7637 119.608 31.6025 118.623 31.5954C118.173 31.604 117.728 31.6847 117.304 31.8343C116.169 32.2356 115.188 32.9823 114.498 33.9695C113.809 34.9568 113.446 36.1351 113.461 37.3391V49.2835C113.461 49.3482 113.435 49.4103 113.39 49.4561C113.344 49.5018 113.282 49.5275 113.217 49.5275H106.897C106.832 49.5275 106.77 49.5018 106.724 49.4561C106.678 49.4103 106.653 49.3482 106.653 49.2835V26.0439C106.653 25.9792 106.678 25.9171 106.724 25.8713C106.77 25.8255 106.832 25.7998 106.897 25.7998H113.217C113.282 25.7998 113.344 25.8255 113.39 25.8713C113.435 25.9171 113.461 25.9792 113.461 26.0439V28.4951C113.461 28.502 113.464 28.5086 113.469 28.5135C113.473 28.5183 113.48 28.5211 113.487 28.5211C113.491 28.5211 113.494 28.5203 113.497 28.5189C113.5 28.5177 113.503 28.5158 113.505 28.5135C113.51 28.5086 113.513 28.502 113.513 28.4951C114.131 27.5508 114.965 26.7681 115.947 26.2125C116.93 25.6568 118.03 25.3444 119.158 25.3013C120.111 25.2696 121.062 25.4067 121.967 25.7063C121.995 25.7148 122.019 25.7334 122.033 25.7585C122.047 25.7836 122.052 25.8132 122.045 25.8414Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M147.201 26.0438V49.2574C147.201 49.3221 147.176 49.3842 147.13 49.43C147.084 49.4757 147.022 49.5015 146.957 49.5015H140.632C140.568 49.5001 140.507 49.4738 140.463 49.4282C140.418 49.3825 140.393 49.3212 140.393 49.2574V46.8062C140.393 46.7993 140.39 46.7927 140.385 46.7878C140.38 46.783 140.374 46.7802 140.367 46.7802C140.36 46.7802 140.353 46.783 140.349 46.7878C140.344 46.7927 140.341 46.7993 140.341 46.8062C139.147 48.6861 136.342 50 133.393 50C127.218 50 122.341 44.4952 122.341 37.6402C122.341 30.7852 127.218 25.3323 133.393 25.3323C136.296 25.3323 139.147 26.6462 140.341 28.5261C140.341 28.5284 140.341 28.5306 140.342 28.5327C140.343 28.5371 140.345 28.5412 140.349 28.5445C140.353 28.5494 140.36 28.5521 140.367 28.5521C140.371 28.5521 140.374 28.5513 140.377 28.5499C140.38 28.5486 140.383 28.5468 140.385 28.5445C140.39 28.5396 140.393 28.533 140.393 28.5261V26.0438C140.393 25.9799 140.418 25.9186 140.463 25.873C140.507 25.8274 140.568 25.8011 140.632 25.7997H146.957C147.022 25.7997 147.084 25.8254 147.13 25.8712C147.176 25.917 147.201 25.979 147.201 26.0438ZM140.393 40.5328V34.8203C140.398 34.7981 140.398 34.775 140.393 34.7528C139.808 33.8272 138.997 33.0654 138.037 32.5386C137.077 32.0118 135.999 31.7373 134.904 31.7407C133.342 31.7407 131.844 32.3612 130.74 33.4656C129.635 34.57 129.015 36.0679 129.015 37.6298C129.015 39.1917 129.635 40.6896 130.74 41.794C131.844 42.8984 133.342 43.5189 134.904 43.5189C135.989 43.5311 137.059 43.2708 138.017 42.7618C138.976 42.2527 139.791 41.5113 140.388 40.6055C140.398 40.5827 140.4 40.5569 140.393 40.5328Z\"></path>`}}export{o as IDSIconInera};\n", "import{IDSIconInera as i}from\"./icon-inera-element.js\";import{registerComponent as e}from\"../../../utilities/utils.js\";e(\"ids-icon-inera\",i);\n", "import{svg as t}from\"lit\";import{IDSIconBase as o}from\"../icon-base-element.js\";class r extends o{constructor(){super(),this.vbHeight=73,this.vbWidth=120}renderIcon(){return t`<defs><radialGradient id=\"prefix__a\" cx=\"45.9%\" cy=\"63.38%\" r=\"49.714%\" fx=\"45.9%\" fy=\"63.38%\" gradientTransform=\"matrix(.93609 0 0 1 .03 0)\"><stop offset=\"0%\" stop-color=\"#F3BC5C\"></stop><stop offset=\"44.748%\" stop-color=\"#F6A519\"></stop><stop offset=\"100%\" stop-color=\"#E87513\"></stop></radialGradient><radialGradient id=\"prefix__b\" cx=\"43.613%\" cy=\"58.996%\" r=\"56.387%\" fx=\"43.613%\" fy=\"58.996%\" gradientTransform=\"matrix(1 0 0 .9432 0 .034)\"><stop offset=\"0%\" stop-color=\"#41C0C2\"></stop><stop offset=\"75.071%\" stop-color=\"#01A5A3\"></stop><stop offset=\"100%\" stop-color=\"#009391\"></stop></radialGradient><radialGradient id=\"prefix__c\" cx=\"34.464%\" cy=\"32.46%\" r=\"93.744%\" fx=\"34.464%\" fy=\"32.46%\" gradientTransform=\"matrix(1 0 0 .94786 0 .017)\"><stop offset=\"0%\" stop-color=\"#BBDFE7\"></stop><stop offset=\"22.51%\" stop-color=\"#B0DAE3\"></stop><stop offset=\"61.07%\" stop-color=\"#92CEDA\"></stop><stop offset=\"76.92%\" stop-color=\"#83C8D5\"></stop></radialGradient></defs><g fill=\"none\" fill-rule=\"evenodd\"><path fill=\"url(#prefix__a)\" d=\"M34.53 2.064l-.244-.278c-4.8-4.8-21.461.452-30.713 11.235-4.905 5.704-4.765 13.774.452 19.026 1.809 1.809 4.174 1.148 5.322 0 .521-.522 1.148-1.357 1.704-2.4-1.009-.383-1.983-.974-2.817-1.809-3.061-3.06-3.061-8.07 0-11.13 3.06-3.061 8.07-3.061 11.13 0 .661.66 1.183 1.426 1.565 2.226.8-.313 1.6-.591 2.4-.904 8.105-3.34 11.34-7.618 11.93-11.096.349-1.635.21-3.652-.73-4.87z\" transform=\"translate(0 .869)\"></path><path fill=\"#FFF\" fill-rule=\"nonzero\" d=\"M19.364 27.838c-3.06 3.061-8.07 3.061-11.13 0-3.061-3.06-3.061-8.07 0-11.13 3.06-3.061 8.07-3.061 11.13 0 3.096 3.096 3.096 8.07 0 11.13z\" transform=\"translate(0 .869)\"></path><path fill=\"url(#prefix__b)\" fill-rule=\"nonzero\" d=\"M34.495 2.03c.939 1.217 1.078 3.2.73 4.834-.626 3.479-3.826 7.757-11.93 11.096-.8.313-1.6.626-2.4.904 1.39 2.922.904 6.54-1.53 8.974-2.262 2.261-5.566 2.852-8.384 1.774-.556 1.044-1.147 1.844-1.67 2.365-1.147 1.148-3.512 1.81-5.32 0l.034.035c5.217 5.183 13.287 5.287 18.956.418 10.61-9.044 15.861-25.287 11.514-30.4z\" transform=\"translate(0 .869)\"></path><path fill=\"url(#prefix__c)\" fill-rule=\"nonzero\" d=\"M19.364 27.838c2.435-2.434 2.922-6.017 1.53-8.974-2.086.8-4.243 1.74-6.26 4-2.087 2.4-2.992 5.566-3.653 6.748 2.818 1.078 6.122.487 8.383-1.774z\" transform=\"translate(0 .869)\"></path><path fill=\"#382819\" fill-rule=\"nonzero\" d=\"M11.608 71.282v-28h5.217v28h-5.217zm29.67 0V52.22c0-2.887-1.218-4.8-4.28-4.8-2.747 0-5.564 1.809-8.103 4.522v19.374h-5.218v-28h4.174l.66 4.034c2.644-2.4 5.914-4.626 9.914-4.626 5.287 0 8.104 3.165 8.104 8.209v20.383h-5.252v-.035zM75.12 57.856H56.129c.174 6.504 3.305 9.565 8.174 9.565 4.035 0 6.992-1.6 10.052-4l.766 4.696c-2.992 2.365-6.574 3.756-11.2 3.756-7.27 0-12.974-4.417-12.974-14.678 0-8.974 5.287-14.505 12.313-14.505 8.174 0 11.93 6.296 11.93 14.018-.07.313-.07.8-.07 1.148zM63.155 46.795c-3.234 0-5.982 2.295-6.817 7.095h13.496c-.626-4.486-2.609-7.095-6.679-7.095zm22.61 7.93v16.557h-5.218v-28h4.174l.87 5.704c1.982-3.165 5.217-6.052 9.808-6.296l.835 4.974c-4.661.244-8.592 3.374-10.47 7.061zm29.912 16.557l-.591-3.757c-2.226 2.296-5.287 4.348-9.878 4.348-5.044 0-8.21-3.06-8.21-7.791 0-6.992 5.983-9.74 17.67-10.992v-1.182c0-3.513-2.121-4.765-5.356-4.765-3.409 0-6.644 1.043-9.67 2.4l-.695-4.522c3.339-1.357 6.504-2.365 10.852-2.365 6.817 0 10.087 2.748 10.087 8.974v19.617h-4.209v.035zm-1.009-14.192c-10.33 1.01-12.487 3.827-12.487 6.679 0 2.295 1.53 3.756 4.174 3.756 3.061 0 5.983-1.53 8.348-3.93V57.09h-.035z\" transform=\"translate(0 .869)\"></path></g>`}}export{r as IDSIconIneraLegacy};\n", "import{IDSIconIneraLegacy as i}from\"./icon-inera-legacy-element.js\";import{registerComponent as e}from\"../../../utilities/utils.js\";e(\"ids-icon-inera-legacy\",i);\n", "import { css, unsafeCSS } from 'lit';\n\nvar css_248z = \".ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner ::slotted([slot=link]),.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__link,.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner>a,.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner ::slotted([slot=link]),.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__link,.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner>a,.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item>.ids-mobile-menu-item__inner ::slotted([slot=link]),.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__link,.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item>.ids-mobile-menu-item__inner>a,.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner ::slotted([slot=link]),.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__link,.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner>a,.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner ::slotted([slot=link]),.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__link,.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner>a,.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item.ids-mobile-menu-item--secondary>.ids-mobile-menu-item__inner ::slotted([slot=link]),.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item.ids-mobile-menu-item--secondary>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__link,.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item.ids-mobile-menu-item--secondary>.ids-mobile-menu-item__inner>a,.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item>.ids-mobile-menu-item__inner ::slotted([slot=link]),.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__link,.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item>.ids-mobile-menu-item__inner>a{color:inherit!important;display:inline-block;flex-grow:1;font-weight:inherit!important;padding:13px 13px 13px 20px!important;text-align:start;text-decoration:none!important;width:100%}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item>.ids-mobile-menu-item__inner ::slotted([slot=link]),.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__link,.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item>.ids-mobile-menu-item__inner>a,.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item.ids-mobile-menu-item--secondary>.ids-mobile-menu-item__inner ::slotted([slot=link]),.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item.ids-mobile-menu-item--secondary>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__link,.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item.ids-mobile-menu-item--secondary>.ids-mobile-menu-item__inner>a,.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item>.ids-mobile-menu-item__inner ::slotted([slot=link]),.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__link,.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item>.ids-mobile-menu-item__inner>a{padding-left:20px!important}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner ::slotted([slot=link]),.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__link,.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner>a,.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner ::slotted([slot=link]),.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__link,.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner>a{padding-left:40px!important}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner ::slotted([slot=link]),.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__link,.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner>a,.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner ::slotted([slot=link]),.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__link,.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner>a{padding-left:60px!important}.ids-mobile-menu-item__sub-items{display:none}.ids-mobile-menu-item--expanded>.ids-mobile-menu-item__sub-items{display:block}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item{position:relative}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item.ids-mobile-menu-item--secondary>.ids-mobile-menu-item__inner{background-color:var(--IDS-MOBILE-MENU-ITEM__INNER__BACKGROUND-COLOR);background-color:var(--IDS-MOBILE-MENU-ITEM--SECONDARY__INNER__BACKGROUND-COLOR);border-bottom:var(--IDS-MOBILE-MENU-ITEM__INNER__BORDER-BOTTOM);color:var(--IDS-MOBILE-MENU-ITEM__INNER__COLOR);color:var(--IDS-MOBILE-MENU-ITEM--SECONDARY__INNER__COLOR);cursor:pointer;display:flex;font-family:var(--mobile-menu-item_font-family);font-weight:var(--IDS-MOBILE-MENU-ITEM__INNER__FONT-WEIGHT);position:relative;width:100%}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item.ids-mobile-menu-item--secondary>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__link:focus,.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item.ids-mobile-menu-item--secondary>.ids-mobile-menu-item__inner>a:focus{outline:2px solid;outline-color:var(--IDS-MOBILE-MENU-ITEM--SECONDARY--FOCUS--OUTLINE-COLOR)!important;outline-offset:-2px!important;z-index:1}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item.ids-mobile-menu-item--secondary>.ids-mobile-menu-item__inner ::slotted([slot=link]):focus{outline:2px solid;outline-color:var(--IDS-MOBILE-MENU-ITEM--SECONDARY--FOCUS--OUTLINE-COLOR)!important;outline-offset:-2px!important;z-index:1}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item.ids-mobile-menu-item--secondary>.ids-mobile-menu-item__inner ::slotted(:focus-within){outline:2px solid;outline-color:var(--IDS-MOBILE-MENU-ITEM--SECONDARY--FOCUS--OUTLINE-COLOR)!important;outline-offset:-2px!important;z-index:1}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item.ids-mobile-menu-item--secondary.ids-mobile-menu-item--active>.ids-mobile-menu-item__inner:before{background-color:var(--IDS-MOBILE-MENU-ITEM--SECONDARY--ACTIVE__INNER__BEFORE__BACKGROUND-COLOR);content:\\\"\\\";display:block;height:100%;left:0;position:absolute;width:10px;z-index:0}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item>.ids-mobile-menu-item__inner{background-color:var(--IDS-MOBILE-MENU-ITEM__INNER__BACKGROUND-COLOR);border-bottom:var(--IDS-MOBILE-MENU-ITEM__INNER__BORDER-BOTTOM);color:var(--IDS-MOBILE-MENU-ITEM__INNER__COLOR);cursor:pointer;display:flex;font-family:var(--mobile-menu-item_font-family);font-weight:var(--IDS-MOBILE-MENU-ITEM__INNER__FONT-WEIGHT);position:relative;width:100%}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__link:focus,.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item>.ids-mobile-menu-item__inner>a:focus{outline:2px solid;outline-color:var(--IDS-MOBILE-MENU-ITEM--FOCUS--OUTLINE-COLOR)!important;outline-offset:-2px!important;z-index:1}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item>.ids-mobile-menu-item__inner ::slotted([slot=link]):focus{outline:2px solid;outline-color:var(--IDS-MOBILE-MENU-ITEM--FOCUS--OUTLINE-COLOR)!important;outline-offset:-2px!important;z-index:1}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item>.ids-mobile-menu-item__inner ::slotted(:focus-within){outline:2px solid;outline-color:var(--IDS-MOBILE-MENU-ITEM--FOCUS--OUTLINE-COLOR)!important;outline-offset:-2px!important;z-index:1}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__expand-btn{align-items:center;background:none;border:none;color:inherit;cursor:pointer;display:flex;font:inherit;font-weight:var(--IDS-MOBILE-MENU-ITEM--HAS-CHILDREN__INNER__FONT-WEIGHT);justify-content:center;min-height:24px;min-height:50px;min-width:24px;min-width:50px;outline:inherit;padding:0;text-align:start;-moz-user-select:-moz-none;-khtml-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__expand-btn:focus{outline:var(--focus_outline);outline:2px solid;outline-color:var(--IDS-MOBILE-MENU-ITEM--FOCUS--OUTLINE-COLOR)!important;outline-offset:var(--focus_outline-offset);outline-offset:-2px!important;z-index:1}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__expand-btn:only-child{justify-content:space-between;padding-left:20px;width:100%}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__expand-btn:only-child .ids-icon{margin-right:20px}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__expand-btn .ids-icon{transform:rotate(90deg)}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item.ids-mobile-menu-item--active>.ids-mobile-menu-item__inner:before{background-color:var(--IDS-MOBILE-MENU-ITEM--ACTIVE__INNER__BEFORE__BACKGROUND-COLOR);content:\\\"\\\";display:block;height:100%;left:0;position:absolute;width:10px;z-index:0}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item.ids-mobile-menu-item--expanded .ids-mobile-menu-item__expand-btn{align-items:center;background:none;border:none;color:inherit;cursor:pointer;display:flex;font:inherit;font-weight:var(--IDS-MOBILE-MENU-ITEM--HAS-CHILDREN__INNER__FONT-WEIGHT);justify-content:center;min-height:24px;min-height:50px;min-width:24px;min-width:50px;outline:inherit;padding:0;text-align:start;-moz-user-select:-moz-none;-khtml-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item.ids-mobile-menu-item--expanded .ids-mobile-menu-item__expand-btn:focus{outline:var(--focus_outline);outline:2px solid;outline-color:var(--IDS-MOBILE-MENU-ITEM--FOCUS--OUTLINE-COLOR)!important;outline-offset:var(--focus_outline-offset);outline-offset:-2px!important;z-index:1}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item.ids-mobile-menu-item--expanded .ids-mobile-menu-item__expand-btn:only-child{justify-content:space-between;padding-left:20px;width:100%}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item.ids-mobile-menu-item--expanded .ids-mobile-menu-item__expand-btn:only-child .ids-icon{margin-right:20px}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item.ids-mobile-menu-item--expanded .ids-mobile-menu-item__expand-btn .ids-icon{transform:rotate(-90deg)}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--2{position:relative}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner{background-color:var(--IDS-MOBILE-MENU-ITEM--2__INNER__BACKGROUND-COLOR);border-bottom:var(--IDS-MOBILE-MENU-ITEM--2__INNER__BORDER-BOTTOM);color:var(--IDS-MOBILE-MENU-ITEM--2__INNER__COLOR);cursor:pointer;display:flex;font-family:var(--mobile-menu-item_font-family);font-weight:var(--IDS-MOBILE-MENU-ITEM--2__INNER__FONT-WEIGHT);position:relative;width:100%}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__link:focus,.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner>a:focus{outline:2px solid;outline-color:var(--IDS-MOBILE-MENU-ITEM--2--FOCUS--OUTLINE-COLOR)!important;outline-offset:-2px!important;z-index:1}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner ::slotted([slot=link]):focus{outline:2px solid;outline-color:var(--IDS-MOBILE-MENU-ITEM--2--FOCUS--OUTLINE-COLOR)!important;outline-offset:-2px!important;z-index:1}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner ::slotted(:focus-within){outline:2px solid;outline-color:var(--IDS-MOBILE-MENU-ITEM--2--FOCUS--OUTLINE-COLOR)!important;outline-offset:-2px!important;z-index:1}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner:has(.ids-mobile-menu-item__expand-btn){font-weight:var(--IDS-MOBILE-MENU-ITEM--2--HAS-CHILDREN__INNER__FONT-WEIGHT)}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner:before{background-color:var(--IDS-MOBILE-MENU-ITEM--2__INNER__BEFORE__BACKGROUND-COLOR);content:\\\"\\\";display:block;height:100%;left:0;position:absolute;width:10px;z-index:0}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner .ids-mobile-menu-item__expand-btn{align-items:center;background:none;border:none;color:inherit;cursor:pointer;display:flex;font:inherit;justify-content:center;min-height:24px;min-height:50px;min-width:24px;min-width:50px;outline:inherit;padding:0;text-align:start;-moz-user-select:-moz-none;-khtml-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner .ids-mobile-menu-item__expand-btn:focus{outline:var(--focus_outline);outline:2px solid;outline-color:var(--IDS-MOBILE-MENU-ITEM--2--FOCUS--OUTLINE-COLOR)!important;outline-offset:var(--focus_outline-offset);outline-offset:-2px!important;z-index:1}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner .ids-mobile-menu-item__expand-btn:only-child{justify-content:space-between;padding-left:40px;width:100%}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner .ids-mobile-menu-item__expand-btn:only-child .ids-icon{margin-right:20px}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner .ids-mobile-menu-item__expand-btn .ids-icon{transform:rotate(90deg)}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--2.ids-mobile-menu-item--expanded .ids-mobile-menu-item__expand-btn{align-items:center;background:none;border:none;color:inherit;cursor:pointer;display:flex;font:inherit;justify-content:center;min-height:24px;min-height:50px;min-width:24px;min-width:50px;outline:inherit;padding:0;text-align:start;-moz-user-select:-moz-none;-khtml-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--2.ids-mobile-menu-item--expanded .ids-mobile-menu-item__expand-btn:focus{outline:var(--focus_outline);outline:2px solid;outline-color:var(--IDS-MOBILE-MENU-ITEM--2--FOCUS--OUTLINE-COLOR)!important;outline-offset:var(--focus_outline-offset);outline-offset:-2px!important;z-index:1}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--2.ids-mobile-menu-item--expanded .ids-mobile-menu-item__expand-btn:only-child{justify-content:space-between;padding-left:40px;width:100%}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--2.ids-mobile-menu-item--expanded .ids-mobile-menu-item__expand-btn:only-child .ids-icon{margin-right:20px}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--2.ids-mobile-menu-item--expanded .ids-mobile-menu-item__expand-btn .ids-icon{transform:rotate(-90deg)}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--2.ids-mobile-menu-item--active>.ids-mobile-menu-item__inner:before{background-color:var(--IDS-MOBILE-MENU-ITEM--2--ACTIVE__INNER__BEFORE__BACKGROUND-COLOR);content:\\\"\\\";display:block;height:100%;left:0;position:absolute;width:10px;z-index:0}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--3{position:relative}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner{background-color:var(--IDS-MOBILE-MENU-ITEM--2__INNER__BACKGROUND-COLOR);border-bottom:var(--IDS-MOBILE-MENU-ITEM--2__INNER__BORDER-BOTTOM);color:var(--IDS-MOBILE-MENU-ITEM--2__INNER__COLOR);cursor:pointer;display:flex;font-family:var(--mobile-menu-item_font-family);font-weight:var(--IDS-MOBILE-MENU-ITEM--2__INNER__FONT-WEIGHT);position:relative;width:100%}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__link:focus,.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner>a:focus{outline:2px solid;outline-color:var(--IDS-MOBILE-MENU-ITEM--3--FOCUS--OUTLINE-COLOR)!important;outline-offset:-2px!important;z-index:1}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner ::slotted([slot=link]):focus{outline:2px solid;outline-color:var(--IDS-MOBILE-MENU-ITEM--3--FOCUS--OUTLINE-COLOR)!important;outline-offset:-2px!important;z-index:1}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner ::slotted(:focus-within){outline:2px solid;outline-color:var(--IDS-MOBILE-MENU-ITEM--3--FOCUS--OUTLINE-COLOR)!important;outline-offset:-2px!important;z-index:1}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner:before{background-color:var(--IDS-MOBILE-MENU-ITEM--2__INNER__BEFORE__BACKGROUND-COLOR);content:\\\"\\\";display:block;height:100%;left:0;position:absolute;width:10px;z-index:0}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner .ids-mobile-menu-item__expand-btn{align-items:center;background:none;border:none;color:inherit;cursor:pointer;display:flex;font:inherit;justify-content:center;min-height:24px;min-height:50px;min-width:24px;min-width:50px;outline:inherit;padding:0;text-align:start;-moz-user-select:-moz-none;-khtml-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner .ids-mobile-menu-item__expand-btn:focus{outline:var(--focus_outline);outline:2px solid;outline-color:var(--IDS-MOBILE-MENU--2-ITEM--3--FOCUS--OUTLINE-COLOR)!important;outline-offset:var(--focus_outline-offset);outline-offset:-2px!important;z-index:1}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner .ids-mobile-menu-item__expand-btn:only-child{justify-content:space-between;padding-left:60px;width:100%}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner .ids-mobile-menu-item__expand-btn:only-child .ids-icon{margin-right:20px}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner .ids-mobile-menu-item__expand-btn .ids-icon{transform:rotate(90deg)}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--3.ids-mobile-menu-item--active>.ids-mobile-menu-item__inner:before{background-color:var(--IDS-MOBILE-MENU-ITEM--2--ACTIVE__INNER__BEFORE__BACKGROUND-COLOR);content:\\\"\\\";display:block;height:100%;left:0;position:absolute;width:10px;z-index:0}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--3.ids-mobile-menu-item--expanded .ids-mobile-menu-item__expand-btn{align-items:center;background:none;border:none;color:inherit;cursor:pointer;display:flex;font:inherit;justify-content:center;min-height:24px;min-height:50px;min-width:24px;min-width:50px;outline:inherit;padding:0;text-align:start;-moz-user-select:-moz-none;-khtml-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--3.ids-mobile-menu-item--expanded .ids-mobile-menu-item__expand-btn:focus{outline:var(--focus_outline);outline:2px solid;outline-color:var(--IDS-MOBILE-MENU--2-ITEM--3--FOCUS--OUTLINE-COLOR)!important;outline-offset:var(--focus_outline-offset);outline-offset:-2px!important;z-index:1}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--3.ids-mobile-menu-item--expanded .ids-mobile-menu-item__expand-btn:only-child{justify-content:space-between;padding-left:60px;width:100%}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--3.ids-mobile-menu-item--expanded .ids-mobile-menu-item__expand-btn:only-child .ids-icon{margin-right:20px}.ids-mobile-menu:not(.ids-mobile-menu--variation-2) .ids-mobile-menu-item--3.ids-mobile-menu-item--expanded .ids-mobile-menu-item__expand-btn .ids-icon{transform:rotate(-90deg)}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item{position:relative}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item>.ids-mobile-menu-item__inner{background-color:var(--IDS-MOBILE-MENU--2-ITEM__INNER__BACKGROUND-COLOR);border-bottom:none;color:var(--IDS-MOBILE-MENU--2-ITEM__INNER__COLOR);cursor:pointer;display:flex;font-family:var(--mobile-menu-item_font-family);font-weight:var(--IDS-MOBILE-MENU--2-ITEM__INNER__FONT-WEIGHT);position:relative;width:100%}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__link:focus,.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item>.ids-mobile-menu-item__inner>a:focus{outline:2px solid;outline-color:var(--IDS-MOBILE-MENU--2-ITEM--FOCUS--OUTLINE-COLOR)!important;outline-offset:-2px!important;z-index:1}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item>.ids-mobile-menu-item__inner ::slotted([slot=link]):focus{outline:2px solid;outline-color:var(--IDS-MOBILE-MENU--2-ITEM--FOCUS--OUTLINE-COLOR)!important;outline-offset:-2px!important;z-index:1}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item>.ids-mobile-menu-item__inner ::slotted(:focus-within){outline:2px solid;outline-color:var(--IDS-MOBILE-MENU--2-ITEM--FOCUS--OUTLINE-COLOR)!important;outline-offset:-2px!important;z-index:1}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item>.ids-mobile-menu-item__inner:after{background-color:var(--IDS-MOBILE-MENU--2-ITEM__INNER__BORDER-BOTTOM-COLOR);bottom:0;content:\\\"\\\";display:block;height:1px;left:20px;position:absolute;right:20px}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__expand-btn{align-items:center;background:none;border:none;color:inherit;cursor:pointer;display:flex;font:inherit;font-weight:var(--IDS-MOBILE-MENU-ITEM--HAS-CHILDREN__INNER__FONT-WEIGHT);justify-content:center;min-height:24px;min-height:50px;min-width:24px;min-width:50px;outline:inherit;padding:0;text-align:start;-moz-user-select:-moz-none;-khtml-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__expand-btn:focus{outline:var(--focus_outline);outline:2px solid;outline-color:var(--IDS-MOBILE-MENU--2-ITEM--FOCUS--OUTLINE-COLOR)!important;outline-offset:var(--focus_outline-offset);outline-offset:-2px!important;z-index:1}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__expand-btn:only-child{justify-content:space-between;padding-left:20px;width:100%}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__expand-btn:only-child .ids-icon{margin-right:20px}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__expand-btn .ids-icon{transform:rotate(90deg)}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item.ids-mobile-menu-item--expanded .ids-mobile-menu-item__expand-btn{align-items:center;background:none;border:none;color:inherit;cursor:pointer;display:flex;font:inherit;font-weight:var(--IDS-MOBILE-MENU-ITEM--HAS-CHILDREN__INNER__FONT-WEIGHT);justify-content:center;min-height:24px;min-height:50px;min-width:24px;min-width:50px;outline:inherit;padding:0;text-align:start;-moz-user-select:-moz-none;-khtml-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item.ids-mobile-menu-item--expanded .ids-mobile-menu-item__expand-btn:focus{outline:var(--focus_outline);outline:2px solid;outline-color:var(--IDS-MOBILE-MENU--2-ITEM--FOCUS--OUTLINE-COLOR)!important;outline-offset:var(--focus_outline-offset);outline-offset:-2px!important;z-index:1}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item.ids-mobile-menu-item--expanded .ids-mobile-menu-item__expand-btn:only-child{justify-content:space-between;padding-left:20px;width:100%}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item.ids-mobile-menu-item--expanded .ids-mobile-menu-item__expand-btn:only-child .ids-icon{margin-right:20px}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item.ids-mobile-menu-item--expanded .ids-mobile-menu-item__expand-btn .ids-icon{transform:rotate(-90deg)}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--2{position:relative}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner{background-color:var(--IDS-MOBILE-MENU--2-ITEM--2__INNER__BACKGROUND-COLOR);border-bottom:none;color:var(--IDS-MOBILE-MENU--2-ITEM--2__INNER__COLOR);cursor:pointer;display:flex;font-family:var(--mobile-menu-item_font-family);font-weight:var(--IDS-MOBILE-MENU--2-ITEM--2__INNER__FONT-WEIGHT);position:relative;width:100%}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__link:focus,.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner>a:focus{outline:2px solid;outline-color:var(--IDS-MOBILE-MENU--2-ITEM--2--FOCUS--OUTLINE-COLOR)!important;outline-offset:-2px!important;z-index:1}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner ::slotted([slot=link]):focus{outline:2px solid;outline-color:var(--IDS-MOBILE-MENU--2-ITEM--2--FOCUS--OUTLINE-COLOR)!important;outline-offset:-2px!important;z-index:1}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner ::slotted(:focus-within){outline:2px solid;outline-color:var(--IDS-MOBILE-MENU--2-ITEM--2--FOCUS--OUTLINE-COLOR)!important;outline-offset:-2px!important;z-index:1}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner:after{background-color:var(--IDS-MOBILE-MENU--2-ITEM--2__INNER__BORDER-BOTTOM-COLOR);bottom:0;content:\\\"\\\";display:block;height:1px;left:20px;position:absolute;right:20px}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner:before{background-color:var(--IDS-MOBILE-MENU--2-ITEM--2__INNER__BEFORE__BACKGROUND-COLOR);content:\\\"\\\";display:block;height:100%;left:0;position:absolute;width:10px;z-index:0}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner .ids-mobile-menu-item__expand-btn{align-items:center;background:none;border:none;color:inherit;cursor:pointer;display:flex;font:inherit;justify-content:center;min-height:24px;min-height:50px;min-width:24px;min-width:50px;outline:inherit;padding:0;text-align:start;-moz-user-select:-moz-none;-khtml-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner .ids-mobile-menu-item__expand-btn:focus{outline:var(--focus_outline);outline:2px solid;outline-color:var(--IDS-MOBILE-MENU--2-ITEM--2--FOCUS--OUTLINE-COLOR)!important;outline-offset:var(--focus_outline-offset);outline-offset:-2px!important;z-index:1}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner .ids-mobile-menu-item__expand-btn:only-child{justify-content:space-between;padding-left:40px;width:100%}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner .ids-mobile-menu-item__expand-btn:only-child .ids-icon{margin-right:20px}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--2>.ids-mobile-menu-item__inner .ids-mobile-menu-item__expand-btn .ids-icon{transform:rotate(90deg)}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--2.ids-mobile-menu-item--expanded .ids-mobile-menu-item__expand-btn{align-items:center;background:none;border:none;color:inherit;cursor:pointer;display:flex;font:inherit;justify-content:center;min-height:24px;min-height:50px;min-width:24px;min-width:50px;outline:inherit;padding:0;text-align:start;-moz-user-select:-moz-none;-khtml-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--2.ids-mobile-menu-item--expanded .ids-mobile-menu-item__expand-btn:focus{outline:var(--focus_outline);outline:2px solid;outline-color:var(--IDS-MOBILE-MENU--2-ITEM--2--FOCUS--OUTLINE-COLOR)!important;outline-offset:var(--focus_outline-offset);outline-offset:-2px!important;z-index:1}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--2.ids-mobile-menu-item--expanded .ids-mobile-menu-item__expand-btn:only-child{justify-content:space-between;padding-left:40px;width:100%}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--2.ids-mobile-menu-item--expanded .ids-mobile-menu-item__expand-btn:only-child .ids-icon{margin-right:20px}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--2.ids-mobile-menu-item--expanded .ids-mobile-menu-item__expand-btn .ids-icon{transform:rotate(-90deg)}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--3{position:relative}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner{background-color:var(--IDS-MOBILE-MENU--2-ITEM--3__INNER__BACKGROUND-COLOR);border-bottom:none;color:var(--IDS-MOBILE-MENU--2-ITEM--3__INNER__COLOR);cursor:pointer;display:flex;font-family:var(--mobile-menu-item_font-family);font-weight:var(--IDS-MOBILE-MENU--2-ITEM--3__INNER__FONT-WEIGHT);position:relative;width:100%}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner>.ids-mobile-menu-item__link:focus,.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner>a:focus{outline:2px solid;outline-color:var(--IDS-MOBILE-MENU--2-ITEM--3--FOCUS--OUTLINE-COLOR)!important;outline-offset:-2px!important;z-index:1}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner ::slotted([slot=link]):focus{outline:2px solid;outline-color:var(--IDS-MOBILE-MENU--2-ITEM--3--FOCUS--OUTLINE-COLOR)!important;outline-offset:-2px!important;z-index:1}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner ::slotted(:focus-within){outline:2px solid;outline-color:var(--IDS-MOBILE-MENU--2-ITEM--3--FOCUS--OUTLINE-COLOR)!important;outline-offset:-2px!important;z-index:1}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner:after{background-color:var(--IDS-MOBILE-MENU--2-ITEM--3__INNER__BORDER-BOTTOM-COLOR);bottom:0;content:\\\"\\\";display:block;height:1px;left:20px;position:absolute;right:20px}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner:has(.ids-mobile-menu-item__expand-btn){font-weight:var(--IDS-MOBILE-MENU--2-ITEM--3--HAS-CHILDREN__INNER__FONT-WEIGHT)}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner:before{background-color:var(--IDS-MOBILE-MENU--2-ITEM--3__INNER__BEFORE__BACKGROUND-COLOR);content:\\\"\\\";display:block;height:100%;left:0;position:absolute;width:10px;z-index:0}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner .ids-mobile-menu-item__expand-btn{align-items:center;background:none;border:none;color:inherit;cursor:pointer;display:flex;font:inherit;justify-content:center;min-height:24px;min-height:50px;min-width:24px;min-width:50px;outline:inherit;padding:0;text-align:start;-moz-user-select:-moz-none;-khtml-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner .ids-mobile-menu-item__expand-btn:focus{outline:var(--focus_outline);outline:2px solid;outline-color:var(--IDS-MOBILE-MENU--2-ITEM--3--FOCUS--OUTLINE-COLOR)!important;outline-offset:var(--focus_outline-offset);outline-offset:-2px!important;z-index:1}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner .ids-mobile-menu-item__expand-btn:only-child{justify-content:space-between;padding-left:60px;width:100%}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner .ids-mobile-menu-item__expand-btn:only-child .ids-icon{margin-right:20px}.ids-mobile-menu.ids-mobile-menu--variation-2 .ids-mobile-menu-item--3>.ids-mobile-menu-item__inner .ids-mobile-menu-item__expand-btn .ids-icon{transform:rotate(90deg)}.ids-mobile-menu ul{list-style:none;margin:0;padding:0}\";\n\nvar mobileMenuLit = css`${unsafeCSS(css_248z)}`;\n\nexport { mobileMenuLit as default };\n", "import{__decorate as t}from\"tslib\";import{LitElement as r,html as i}from\"lit\";import{property as o}from\"lit/decorators.js\";import e from\"@inera/ids-design/components/mobile-menu/mobile-menu-lit\";class s extends r{constructor(){super(...arguments),this.variation=1}firstUpdated(t){super.firstUpdated(t),this.querySelectorAll(\"ids-mobile-menu-item\")?.forEach((t=>{t.setAttribute(\"variation\",\"\"+this.variation)}))}render(){return i`<ids-row><slot></slot></ids-row>`}}s.styles=[e],t([o({type:Number})],s.prototype,\"variation\",void 0);export{s as IDSMobileMenu};\n", "import{css as t}from\"lit\";var i=t`:host{position:relative;width:100%;z-index:2}`;export{i as default};\n", "import{__decorate as e}from\"tslib\";import{LitElement as t,html as i}from\"lit\";import{property as s,state as d}from\"lit/decorators.js\";import n from\"./mobile-menu-item-styles.js\";import o from\"@inera/ids-design/components/mobile-menu/mobile-menu-lit\";import{generateId as l}from\"../../../../utilities/utils.js\";class r extends t{constructor(){super(...arguments),this.level=1,this.secondary=!1,this.expanded=!1,this.variation=1,this.headline=\"\",this.active=!1,this.isExpanded=!1,this.hasChildren=!1,this.showtext=\"Visa meddelande\",this.hidetext=\"Dölj meddelande\",this.subItemId=l()}get childrenItems(){return this.querySelectorAll(\"ids-mobile-menu-item\")}get link(){return this.querySelector(\"a\")}firstUpdated(e){super.firstUpdated(e),this.isExpanded=this.expanded,this.link?.setAttribute(\"slot\",\"link\"),this.setupChildren()}setupChildren(){this.hasChildren=this.childrenItems?.length>0,this.childrenItems?.forEach((e=>{e.setAttribute(\"level\",this.level+1+\"\"),e.setAttribute(\"slot\",\"sub-item\")}))}toggleExpanded(){if(this.hasChildren||this.headline){this.isExpanded=!this.isExpanded,this.expanded=this.isExpanded;let e=new CustomEvent(\"didToggleExpansion\",{detail:{isExpanded:this.expanded}});this.dispatchEvent(e)}}getLevelClass(){return this.level>1?`--${this.level}`:\"\"}getVariationClass(){return 2===this.variation?\"--2\":\"\"}getButtonText(){return this.expanded?this.hidetext:this.showtext}renderItem(){return this.headline?i`<button @click=\"${this.toggleExpanded}\" aria-expanded=\"${this.isExpanded}\" aria-controls=\"${this.subItemId}\" class=\"ids-mobile-menu-item__expand-btn\">${this.headline}<ids-icon-chevron-bold width=\"7\" height=\"12\" class=\"ids-icon chevron expanded\" color=\"var(--IDS-MOBILE-MENU${this.getVariationClass()}-ITEM${this.getLevelClass()}__ICON__COLOR)\" size=\"m\"></ids-icon-chevron-bold></button>`:this.link&&this.hasChildren?i`<slot name=\"link\"></slot><button aria-label=\"${this.getButtonText()}\" @click=\"${this.toggleExpanded}\" aria-expanded=\"${this.isExpanded}\" aria-controls=\"${this.subItemId}\" class=\"ids-mobile-menu-item__expand-btn\"><ids-icon-chevron-bold width=\"7\" height=\"12\" class=\"ids-icon chevron expanded\" color=\"var(--IDS-MOBILE-MENU${this.getVariationClass()}-ITEM${this.getLevelClass()}__ICON__COLOR)\" size=\"m\"></ids-icon-chevron-bold></button>`:i`<slot name=\"link\"></slot>`}getItemLevelClass(){switch(this.level){case 1:default:return\"ids-mobile-menu-item\";case 2:return\"ids-mobile-menu-item--2\";case 3:return\"ids-mobile-menu-item--3\"}}render(){return i`<div class=\"ids-mobile-menu ${2===this.variation?\"ids-mobile-menu--variation-2\":\"\"}\"><div class=\"${this.getItemLevelClass()} ${this.isExpanded?\"ids-mobile-menu-item--expanded\":\"\"} ${this.active?\"ids-mobile-menu-item--active\":\"\"} ${this.secondary?\"ids-mobile-menu-item--secondary\":\"\"}\"><div class=\"ids-mobile-menu-item__inner\">${this.renderItem()}</div><div id=\"${this.subItemId}\" class=\"ids-mobile-menu-item__sub-items\"><slot name=\"sub-item\"></slot></div></div></div>`}}r.styles=[o,n],e([s({type:Number})],r.prototype,\"level\",void 0),e([s({type:Boolean})],r.prototype,\"secondary\",void 0),e([s({type:Boolean,reflect:!0})],r.prototype,\"expanded\",void 0),e([s({type:Number})],r.prototype,\"variation\",void 0),e([s({type:String})],r.prototype,\"headline\",void 0),e([s({type:Boolean,reflect:!0})],r.prototype,\"active\",void 0),e([d()],r.prototype,\"isExpanded\",void 0),e([d()],r.prototype,\"hasChildren\",void 0),e([s({type:String})],r.prototype,\"showtext\",void 0),e([s({type:String})],r.prototype,\"hidetext\",void 0);export{r as IDSMobileMenuItem};\n", "import{registerComponent as e}from\"../../../utilities/utils.js\";import{IDSMobileMenu as m}from\"./mobile-menu-element.js\";import{IDSMobileMenuItem as i}from\"./item/mobile-menu-item-element.js\";import{IDSMobileMenuAvatar as o}from\"./avatar/mobile-menu-avatar-element.js\";import\"../../icons/user/register.js\";import\"../../icons/chevron-bold/register.js\";e(\"ids-mobile-menu\",m),e(\"ids-mobile-menu-item\",i),e(\"ids-mobile-menu-avatar\",o);\n", "import{registerComponent as e}from\"../../utilities/utils.js\";import{IDSHeader as i}from\"./header-element.js\";import{IDSHeaderAvatar as r}from\"./avatar/header-avatar-element.js\";import{IDSHeaderItem as m}from\"./item/header-item-element.js\";import{IDSHeaderNav as t}from\"./navigation/navigation-element.js\";import{IDSHeaderNavItem as o}from\"./navigation/item/navigation-item-element.js\";import{IDSHeaderMobileItem as a}from\"./navigation/mobile-item/mobile-item-element.js\";import{IDSHeaderMobileMenu as s}from\"./mobile-menu/header-mobile-menu-element.js\";import{IDSMobileMenuAvatar as n}from\"../mobile/menu/avatar/mobile-menu-avatar-element.js\";import\"../icons/chevron-bold/register.js\";import\"../icons/user/register.js\";import\"../icons/1177/register.js\";import\"../icons/inera/register.js\";import\"../icons/inera-legacy/register.js\";import\"../grid/column/register.js\";import\"../grid/row/register.js\";import\"../grid/container/register.js\";import\"../mobile/menu/register.js\";e(\"ids-header\",i),e(\"ids-header-avatar\",r),e(\"ids-header-item\",m),e(\"ids-header-nav\",t),e(\"ids-header-nav-item\",o),e(\"ids-header-mobile-item\",a),e(\"ids-header-mobile-menu\",s),e(\"ids-mobile-menu-avatar\",n);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/header/register';\nimport { IDSHeaderItem as IDSHeaderItem$1 } from '@inera/ids-core/components/header/item/header-item-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSHeaderItem = createComponent({\r\n    tagName: 'ids-header-item',\r\n    elementClass: IDSHeaderItem$1,\r\n    react: React,\r\n});\n\nexport { IDSHeaderItem };\n", "import * as React from 'react';\nimport { IDSHeaderAvatar as IDSHeaderAvatar$1 } from '@inera/ids-core/components/header/avatar/header-avatar-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSHeaderAvatar = createComponent({\r\n    tagName: 'ids-header-avatar',\r\n    elementClass: IDSHeaderAvatar$1,\r\n    react: React,\r\n});\n\nexport { IDSHeaderAvatar };\n", "import * as React from 'react';\nimport { IDSHeaderNav as IDSHeaderNav$1 } from '@inera/ids-core/components/header/navigation/navigation-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSHeaderNav = createComponent({\r\n    tagName: 'ids-header-nav',\r\n    elementClass: IDSHeaderNav$1,\r\n    react: React,\r\n});\n\nexport { IDSHeaderNav };\n", "import * as React from 'react';\nimport { IDSHeaderNavItem as IDSHeaderNavItem$1 } from '@inera/ids-core/components/header/navigation/item/navigation-item-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSHeaderNavItem = createComponent({\r\n    tagName: 'ids-header-nav-item',\r\n    elementClass: IDSHeaderNavItem$1,\r\n    react: React,\r\n});\n\nexport { IDSHeaderNavItem };\n", "import * as React from 'react';\nimport { IDSHeaderMobileItem as IDSHeaderMobileItem$1 } from '@inera/ids-core/components/header/navigation/mobile-item/mobile-item-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSHeaderMobileItem = createComponent({\r\n    tagName: 'ids-header-mobile-item',\r\n    elementClass: IDSHeaderMobileItem$1,\r\n    react: React,\r\n});\n\nexport { IDSHeaderMobileItem };\n", "import * as React from 'react';\nimport { IDSHeaderMobileMenu as IDSHeaderMobileMenu$1 } from '@inera/ids-core/components/header/mobile-menu/header-mobile-menu-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSHeaderMobileMenu = createComponent({\r\n    tagName: 'ids-header-mobile-menu',\r\n    elementClass: IDSHeaderMobileMenu$1,\r\n    react: React,\r\n    events: {\r\n        onDidToggleExpansion: 'didToggleExpansion'\r\n    },\r\n});\n\nexport { IDSHeaderMobileMenu };\n", "import * as React from 'react';\nimport { IDSMobileMenuAvatar as IDSMobileMenuAvatar$1 } from '@inera/ids-core/components/mobile/menu/avatar/mobile-menu-avatar-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSMobileMenuAvatar = createComponent({\r\n    tagName: 'ids-mobile-menu-avatar',\r\n    elementClass: IDSMobileMenuAvatar$1,\r\n    react: React,\r\n});\n\nexport { IDSMobileMenuAvatar };\n", "import * as React from 'react';\nimport { IDSMobileMenuItem as IDSMobileMenuItem$1 } from '@inera/ids-core/components/mobile/menu/item/mobile-menu-item-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSMobileMenuItem = createComponent({\r\n    tagName: 'ids-mobile-menu-item',\r\n    elementClass: IDSMobileMenuItem$1,\r\n    react: React,\r\n    events: {\r\n        onDidToggleExpansion: 'didToggleExpansion'\r\n    }\r\n});\n\nexport { IDSMobileMenuItem };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/mobile/menu/register';\nimport { IDSMobileMenu as IDSMobileMenu$1 } from '@inera/ids-core/components/mobile/menu/mobile-menu-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSMobileMenu = createComponent({\r\n    tagName: 'ids-mobile-menu',\r\n    elementClass: IDSMobileMenu$1,\r\n    react: React\r\n});\n\nexport { IDSMobileMenu };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/link/register';\nimport { IDSLink as IDSLink$1 } from '@inera/ids-core/components/link/link-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSLink = createComponent({\r\n    tagName: 'ids-link',\r\n    elementClass: IDSLink$1,\r\n    react: React,\r\n});\n\nexport { IDSLink };\n", "import{css as t}from\"lit\";var o=t`:host{position:relative;text-align:start}:host([block]){display:block}::slotted(.ids-link),::slotted(a){position:absolute;opacity:0;left:0;bottom:0;top:0;right:0}:host(:focus-within) .ids-link{position:relative;outline:var(--focus_outline);outline-offset:var(--focus_outline-offset)}`;export{o as default};\n", "import { css, unsafeCSS } from 'lit';\n\nvar css_248z = \".ids-link{align-items:center;color:var(--link-colorpreset-1_color);cursor:pointer;display:inline-flex;justify-content:start;line-height:1.5rem;text-decoration-color:var(--link-colorpreset-1_color);text-decoration:none}.ids-link:focus:focus{outline:var(--focus_outline);outline-offset:var(--focus_outline-offset)}.ids-link:hover{color:var(--link-colorpreset-1-hover_color);text-decoration:underline}.ids-link:hover .ids-link__icon:has(+.ids-link__icon--hover){display:none}.ids-link:hover .ids-link__icon--hover{display:inline-flex}.ids-link.ids-link--block{display:flex}.ids-link.ids-link--underlined{text-decoration:underline}.ids-link.ids-link--active-icon .ids-link__icon,.ids-link.ids-link--active-icon .ids-link__icon--hover{align-items:center;border-radius:100%;justify-content:center;padding:3px}.ids-link.ids-link--active-icon:hover .ids-link__icon{background-color:var(--link-colorpreset-1-hover_color)}.ids-link.ids-link--active-icon.ids-link--active .ids-link__icon{background-color:var(--link-colorpreset-1_color)}.ids-link.ids-link--active-icon .ids-link__icon--hover,.ids-link.ids-link--active-icon.ids-link--active:hover .ids-link__icon{background-color:var(--link-colorpreset-1-hover_color)}.ids-link.ids-link--active-icon.ids-link--color-2 .ids-link__icon,.ids-link.ids-link--active-icon.ids-link--color-2 .ids-link__icon--hover{align-items:center;border-radius:100%;justify-content:center;padding:3px}.ids-link.ids-link--active-icon.ids-link--color-2:hover .ids-link__icon{background-color:var(--link-colorpreset-2-hover_color)}.ids-link.ids-link--active-icon.ids-link--color-2.ids-link--active .ids-link__icon{background-color:var(--link-colorpreset-2_color)}.ids-link.ids-link--active-icon.ids-link--color-2 .ids-link__icon--hover,.ids-link.ids-link--active-icon.ids-link--color-2.ids-link--active:hover .ids-link__icon{background-color:var(--link-colorpreset-2-hover_color)}.ids-link.ids-link--color-2{color:var(--link-colorpreset-2_color);text-decoration-color:var(--link-colorpreset-2_color)}.ids-link.ids-link--color-2:hover{color:var(--link-colorpreset-2-hover_color);text-decoration-color:var(--link-colorpreset-2-hover_color)}.ids-link.ids-link--light{color:#fff;text-decoration-color:#fff}.ids-link.ids-link--light:focus{outline-color:#fff}.ids-link.ids-link--light:hover{color:#fff}.ids-link .ids-link__icon,.ids-link .ids-link__icon--hover{margin-right:10px}.ids-link .ids-link__text~.ids-link__icon,.ids-link .ids-link__text~.ids-link__icon--hover{margin-left:5px;margin-right:0}.ids-link .ids-link__text{display:inline}.ids-link .ids-link__icon{display:inline-flex}.ids-link .ids-link__icon--hover{display:none}\";\n\nvar linkLit = css`${unsafeCSS(css_248z)}`;\n\nexport { linkLit as default };\n", "import{__decorate as t}from\"tslib\";import{LitElement as e,html as o}from\"lit\";import{property as i,state as s}from\"lit/decorators.js\";import r from\"../styles/global-styles.js\";import n from\"./link-styles.js\";import c from\"@inera/ids-design/components/link/link-lit\";class l extends e{constructor(){super(...arguments),this.padding=\"\",this.color=\"\",this.hovercolor=\"\",this.colorpreset=0,this.light=!1,this.outline=\"\",this.active=!1,this.activeicon=!1,this.block=!1,this.size=\"\",this.bold=!1,this.underlined=!1,this.isHovered=!1,this.isFocused=!1,this.activeIconBackgroundColor=\"\"}get notificationBadge(){return this.querySelector(\"ids-notification-badge\")}get link(){return this.querySelector(\"a\")}get linkText(){return this.querySelector(\"a\")?.innerText}get prependIcon(){return this.querySelector('.ids-icon:not([slot=\"append-icon\"])')}get appendIcon(){return this.querySelector('.ids-icon[slot=\"append-icon\"]')}firstUpdated(t){super.firstUpdated(t),this.setupColors(),this.setupIcons(),this.notificationBadge?.setAttribute(\"slot\",\"badge\"),this.setActiveTriggers()}setupColors(){if(!this.color&&!this.hovercolor){if(this.light)return this.color=\"white\",this.hovercolor=\"white\",void(this.outline=\"white\");switch(this.colorpreset){case 1:default:this.color=\"var(--link-colorpreset-1_color)\",this.hovercolor=\"var(--link-colorpreset-1-hover_color)\";break;case 2:this.color=\"var(--link-colorpreset-2_color)\",this.hovercolor=\"var(--link-colorpreset-2-hover_color)\"}}}updated(t){super.updated(t),this.active&&this.colorizeIcon()}disconnectedCallback(){this.removeEventListener(\"mouseenter\",this.setHoverTrue),this.removeEventListener(\"mouseleave\",this.setHoverFalse),super.disconnectedCallback()}setActiveTriggers(){this.addEventListener(\"mouseenter\",this.setHoverTrue),this.addEventListener(\"mouseleave\",this.setHoverFalse)}setupIcons(){if(this.prependIcon){this.setIconSlot(this.prependIcon,\"prepend-icon\"),this.setIconColor(this.prependIcon);this.prependIcon.tagName.toLowerCase().includes(\"chevron\")||this.prependIcon.getAttribute(\"name\")?.toLowerCase().includes(\"chevron\")?this.setIconWidthAndHeight(this.prependIcon,\"0.625rem\",\"0.625rem\"):this.setIconWidthAndHeight(this.prependIcon,\"1rem\",\"1rem\")}this.appendIcon&&(this.setIconSlot(this.appendIcon,\"append-icon\"),this.setIconWidthAndHeight(this.appendIcon,\"1rem\",\"1rem\"),this.setIconColor(this.appendIcon))}setIconSlot(t,e){t.getAttribute(\"slot\")||t.setAttribute(\"slot\",e)}setIconWidthAndHeight(t,e,o){t.getAttribute(\"size\")||t.getAttribute(\"width\")||t.getAttribute(\"height\")||(t.setAttribute(\"width\",e),t.setAttribute(\"height\",o))}setIconColor(t){t.getAttribute(\"color\")||t.setAttribute(\"color\",this.color),t.getAttribute(\"color2\")||t.setAttribute(\"color2\",this.color)}renderNotificationBadge(){return this.notificationBadge?o`<ids-col class=\"notification-badge\"><slot name=\"badge\"></slot></ids-col>`:o``}setHoverTrue(){this.isHovered=!0,this.colorizeIcon()}colorizeIcon(){this.prependIcon&&(this.activeicon&&this.active||this.activeicon?(this.prependIcon.setAttribute(\"color\",\"white\"),this.prependIcon.setAttribute(\"color2\",\"white\")):this.isFocused||this.isHovered?(this.prependIcon.setAttribute(\"color\",this.hovercolor),this.prependIcon.setAttribute(\"color2\",this.hovercolor)):(this.prependIcon.setAttribute(\"color\",this.color),this.prependIcon.setAttribute(\"color2\",this.color))),this.appendIcon&&(this.isFocused||this.isHovered)&&(this.appendIcon?.setAttribute(\"color\",this.hovercolor),this.appendIcon?.setAttribute(\"color2\",this.hovercolor))}setHoverFalse(){this.isHovered=!1,this.prependIcon&&!this.isFocused&&(this.prependIcon.setAttribute(\"color\",this.color),this.prependIcon.setAttribute(\"color2\",this.color)),this.appendIcon&&!this.isFocused&&(this.appendIcon.setAttribute(\"color\",this.color),this.appendIcon.setAttribute(\"color2\",this.color))}setFocusTrue(){this.isFocused=!0,this.setHoverTrue()}setFocusFalse(){this.isFocused=!1,this.setHoverFalse()}renderPrependIcon(){return this.prependIcon?o`<span class=\"ids-link__icon\"><slot name=\"prepend-icon\"></slot></span>`:o``}renderAppendIcon(){return this.appendIcon?o`<span class=\"ids-link__icon\"><slot name=\"append-icon\"></slot></span>`:o``}render(){return o`<span class=\"ids-link ${this.light?\"ids-link--light\":\"\"} ${this.active?\"ids-link--active\":\"\"} ${this.underlined?\"ids-link--underlined\":\"\"} ${this.block?\"ids-link--block\":\"\"} ${this.colorpreset>1?`ids-link--color-${this.colorpreset}`:\"\"} ${this.activeicon?\"ids-link--active-icon\":\"\"}\" style=\"${this.outline?`outline-color:${this.outline};`:\"\"}${this.padding?`padding:${this.padding};`:\"\"}${this.color?`color:${this.color}; text-decoration-color: ${this.color};`:\"\"}${this.isHovered||this.isFocused?`color:${this.hovercolor}; text-decoration-color: ${this.hovercolor};`:\"\"}${this.underlined?\"text-decoration: underline;\":\"\"}${this.size?`font-size: ${this.size}; line-height: inherit;`:\"\"}${this.bold?\"font-weight: 600;\":\"\"}\">${this.renderPrependIcon()} <span class=\"ids-link__text\">${this.linkText}</span><slot></slot>${this.renderAppendIcon()} ${this.renderNotificationBadge()}</span>`}}l.styles=[r,c,n],t([i({type:String})],l.prototype,\"padding\",void 0),t([i({type:String,reflect:!0})],l.prototype,\"color\",void 0),t([i({type:String,reflect:!0})],l.prototype,\"hovercolor\",void 0),t([i({type:Number})],l.prototype,\"colorpreset\",void 0),t([i({type:Boolean,reflect:!0})],l.prototype,\"light\",void 0),t([i({type:String})],l.prototype,\"outline\",void 0),t([i({type:Boolean,reflect:!0})],l.prototype,\"active\",void 0),t([i({type:Boolean,reflect:!0})],l.prototype,\"activeicon\",void 0),t([i({type:Boolean,reflect:!0})],l.prototype,\"block\",void 0),t([i({type:String})],l.prototype,\"size\",void 0),t([i({type:Boolean,reflect:!0})],l.prototype,\"bold\",void 0),t([i({type:Boolean,reflect:!0})],l.prototype,\"underlined\",void 0),t([s()],l.prototype,\"isHovered\",void 0),t([s()],l.prototype,\"isFocused\",void 0),t([s()],l.prototype,\"activeIconBackgroundColor\",void 0);export{l as IDSLink};\n", "import{IDSLink as i}from\"./link-element.js\";import{registerComponent as r}from\"../../utilities/utils.js\";import\"../grid/column/register.js\";import\"../grid/row/register.js\";r(\"ids-link\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/footer/register';\nimport { IDSFooter as IDSFooter$1 } from '@inera/ids-core/components/footer/footer-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSFooter = createComponent({\r\n    tagName: 'ids-footer',\r\n    elementClass: IDSFooter$1,\r\n    react: React,\r\n});\n\nexport { IDSFooter };\n", "import{css as t}from\"lit\";var o=t`::slotted([slot=link-col-1]),::slotted([slot=link-col-2]),::slotted([slot=link-col-3]){margin-bottom:10px!important}::slotted([slot=sub-footer-left]){font-size:.875rem!important;line-height:.875rem!important;color:var(--footer-sub-text_color)!important}::slotted([slot=sub-footer-links]){font-size:.875rem}::slotted([slot=sub-footer-right]){font-size:.875rem;margin-left:20px!important;color:var(--footer-sub-text_color)}`;export{o as default};\n", "import { css, unsafeCSS } from 'lit';\n\nvar css_248z = \".ids-container{display:grid;margin-left:auto;margin-right:auto;max-width:var(--IDS_MAX-WIDTH);padding-left:20px;padding-right:20px}.ids-container.ids-container--gutterless{padding-left:0!important;padding-right:0!important}.ids-container.ids-container--fluid{max-width:100%}.ids-footer{background-color:var(--footer_background-color);box-shadow:var(--footer_box-shadow);margin-top:var(--footer_margin-top);position:relative}.ids-footer .ids-footer__inner{display:grid;margin-left:auto;margin-right:auto;max-width:var(--IDS_MAX-WIDTH);padding-bottom:var(--footer-inner_padding-bottom);padding-left:20px;padding-right:20px;padding-top:var(--footer-inner_padding-top)}@media (max-width:1024px){.ids-footer .ids-footer__inner{padding-bottom:var(--footer-inner-mobile_padding-bottom)}}.ids-footer .ids-footer__inner .ids-footer__headline-row{padding-bottom:20px}.ids-footer .ids-footer__inner .ids-footer__headline-row .ids-footer__headline{color:var(--footer-headline_color);display:inline;font-family:var(--footer-headline_font-family);font-size:1.5rem;font-size:var(--footer-headline_font-size);font-weight:var(--footer-headline_font-weight);letter-spacing:var(--footer-headline_letter-spacing);line-height:1.25;line-height:var(--footer-headline_line-height)}.ids-footer .ids-footer__inner .ids-footer__headline-row .ids-footer__headline .ids-footer__headline--sub{color:var(--footer-headline-sub_color)}.ids-footer .ids-footer__inner .ids-footer__content{display:flex;flex-wrap:wrap}.ids-footer .ids-footer__inner .ids-footer__content .ids-footer__text{color:var(--footer-content_color)!important;flex:0 0 41.6%;margin-right:8.3%;max-width:41.6%}@media (max-width:1024px){.ids-footer .ids-footer__inner .ids-footer__content .ids-footer__text{flex:0 0 100%;margin-right:0;max-width:100%}}.ids-footer .ids-footer__inner .ids-footer__content .ids-footer__link-col{flex:0 0 16%;max-width:16%}.ids-footer .ids-footer__inner .ids-footer__content .ids-footer__link-col ul{list-style:none;margin:0;padding:0}.ids-footer .ids-footer__inner .ids-footer__content .ids-footer__link-col .ids-link{margin-bottom:10px!important}@media (max-width:1024px){.ids-footer .ids-footer__inner .ids-footer__content .ids-footer__link-col{display:none}}.ids-footer .ids-footer__sub-footer{background-color:var(--footer-sub_background-color);border-top:var(--footer-sub_border-top);padding-bottom:var(--footer-sub_padding-bottom);padding-top:var(--footer-sub_padding-top);position:relative}.ids-footer .ids-footer__sub-footer .ids-footer__mobile-menu{display:none}@media (max-width:1024px){.ids-footer .ids-footer__sub-footer .ids-footer__mobile-menu{display:block}.ids-footer .ids-footer__sub-footer{background-color:var(--footer-sub-mobile_background-color);border-top:none;padding-top:var(--footer-sub-mobile_padding-top)}}.ids-footer .ids-footer__sub-footer .ids-footer__sub-footer-container{display:grid;margin-left:auto;margin-right:auto;max-width:var(--IDS_MAX-WIDTH);padding-left:20px;padding-right:20px}.ids-footer .ids-footer__sub-footer .ids-footer__sub-footer-container .ids-footer_sub-footer-mobile-text{color:var(--footer-sub-mobile_color);display:inline-block;font-size:.875rem;line-height:1.25rem;padding:30px 40px 10px;text-align:center}.ids-footer .ids-footer__sub-footer .ids-footer__sub-footer-container .ids-footer__sub-footer-row{align-items:center;display:flex;justify-content:space-between}@media (max-width:1024px){.ids-footer .ids-footer__sub-footer .ids-footer__sub-footer-container .ids-footer__sub-footer-row{align-items:unset;flex-direction:column}}.ids-footer .ids-footer__sub-footer .ids-footer__sub-footer-container .ids-footer__sub-footer-row .ids-footer__sub-footer-left{color:var(--footer-sub-text_color)!important;font-size:.875rem!important;line-height:.875rem!important}@media (max-width:1024px){.ids-footer .ids-footer__sub-footer .ids-footer__sub-footer-container .ids-footer__sub-footer-row .ids-footer__sub-footer-left{display:none}}.ids-footer .ids-footer__sub-footer .ids-footer__sub-footer-container .ids-footer__sub-footer-row .ids-footer__sub-footer-right{text-align:end}.ids-footer .ids-footer__sub-footer .ids-footer__sub-footer-container .ids-footer__sub-footer-row .ids-footer__sub-footer-right .ids-link{color:var(--footer-sub-text_color);font-size:.875rem;margin-left:20px!important}@media (max-width:1024px){.ids-footer .ids-footer__sub-footer .ids-footer__sub-footer-container .ids-footer__sub-footer-row .ids-footer__sub-footer-right{display:none}.ids-footer .ids-footer__sub-footer .ids-footer__sub-footer-container{height:auto;padding-left:0;padding-right:0}}.ids-footer .ids-footer__content-row{z-index:1}.ids-footer .footer-sub-text{text-align:center}.ids-footer .ids-footer__mobile-links{display:none;flex-direction:column;font-size:.875rem;padding-left:20px;padding-right:20px;padding-top:1.25rem}.ids-footer .ids-footer__mobile-links .ids-link{padding-bottom:15px;padding-top:15px}@media (max-width:1024px){.ids-footer .ids-footer__mobile-links{display:flex}}.ids-footer .ids-footer__sub-footer-mobile{display:none}@media (max-width:1024px){.ids-footer .ids-footer__sub-footer-mobile{align-items:center;color:var(--footer-sub-mobile_color);display:flex;flex-direction:column;font-size:.875rem;justify-content:center;line-height:1.25rem;padding:1rem 40px;text-align:center}.ids-footer .ids-footer__sub-footer-mobile .ids-footer__sub-footer-mobile-text{margin-top:30px}}.ids-footer.ids-footer--1177:after{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='1440' preserveAspectRatio='none' height='30'%3E%3Cpath d='M0 0c251.387 7.408 495.186 11.112 731.395 11.112C967.605 11.112 1203.806 7.408 1440 0v30H0V0z' fill='%23FAEEF0' fill-rule='evenodd'/%3E%3C/svg%3E\\\");z-index:2}.ids-footer.ids-footer--1177 .ids-footer__sub-footer:after,.ids-footer.ids-footer--1177:after{background-color:transparent;background-size:100% 30px;content:\\\"\\\";height:30px;position:absolute;top:-30px;width:100%}.ids-footer.ids-footer--1177 .ids-footer__sub-footer:after{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='1440' preserveAspectRatio='none' height='30'%3E%3Cpath d='M0 0c251.387 7.408 495.186 11.112 731.395 11.112C967.605 11.112 1203.806 7.408 1440 0v30H0V0z' fill='%23C12143' fill-rule='evenodd'/%3E%3C/svg%3E\\\");z-index:3}@media (max-width:1024px){.ids-footer.ids-footer--1177 .ids-footer__sub-footer:after{content:none!important}}.ids-footer.ids-footer--1177-pro .ids-footer__sub-footer-mobile-icon{align-items:center;display:flex}.ids-footer.ids-footer--1177-pro .ids-footer__sub-footer-mobile-service-name{align-items:center;border-left:1px solid var(--color-secondary-dark);display:flex;height:40px;margin-left:15px;padding-left:15px}.ids-footer.ids-footer--inera .ids-footer__sub-footer-container:after{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='180' height='82' fill='none'%3E%3Cpath d='M0 81.691C.21 36.677 40.424.245 90 .245s89.79 36.432 90 81.446h-56.615c-.209-16.596-15.076-29.99-33.385-29.99-18.31 0-33.176 13.394-33.385 29.99H0Z' fill='%23C03F73'/%3E%3C/svg%3E\\\");background-repeat:no-repeat;content:\\\" \\\";display:block;height:100px;left:calc(50% - 250px);position:absolute;top:-82px;width:250px}@media (max-width:1024px){.ids-footer.ids-footer--inera .ids-footer__sub-footer-container:after{content:none}}.ids-footer.ids-footer--inera .ids-footer__mobile-menu{background-color:var(--footer_background-color);padding-bottom:100px;position:relative}@media (max-width:1024px){.ids-footer.ids-footer--inera .ids-footer__mobile-menu:after{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='154' height='78' fill='none'%3E%3Cpath d='M154 77.774v-.065C154 35.22 119.526.774 77 .774S0 35.219 0 77.709v.065h48.436v-.065c0-15.762 12.788-28.54 28.564-28.54s28.565 12.778 28.565 28.54l-.001.065H154Z' fill='%23C03F73'/%3E%3C/svg%3E\\\");background-repeat:no-repeat;bottom:0;content:\\\" \\\";display:block;height:77px;left:20px;position:absolute;width:154px}}.ids-footer.ids-footer--inera .ids-footer__inner-wrapper{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='140' height='69' fill='none'%3E%3Cpath d='M0 0c0 37.69 31.34 68.245 70 68.245S140 37.69 140 0H95.968c0 13.982-11.626 25.317-25.968 25.317S44.032 13.982 44.032 0H0Z' fill='%23C03F73'/%3E%3C/svg%3E\\\");background-position-x:calc(50% - 225px);background-repeat:no-repeat}@media (max-width:1024px){.ids-footer.ids-footer--inera .ids-footer__inner-wrapper{background-position-x:calc(100% - 20px)}}.ids-footer.ids-footer--inera-admin .ids-footer__inner-wrapper{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='140' height='69' fill='none'%3E%3Cpath d='M0 0c0 37.69 31.34 68.245 70 68.245S140 37.69 140 0H95.968c0 13.982-11.626 25.317-25.968 25.317S44.032 13.982 44.032 0H0Z' fill='%23fff'/%3E%3C/svg%3E\\\");background-position-x:calc(50% - 225px);background-repeat:no-repeat}@media (max-width:1024px){.ids-footer.ids-footer--inera-admin .ids-footer__inner-wrapper{background-position-x:calc(100% - 20px)}}.ids-footer.ids-footer--inera-admin .sub-footer-container:after{content:none}.ids-footer.ids-footer--inera-admin .ids-footer__sub-footer{background-color:var(--IDS-COLOR-PRIMARY-40)}.ids-footer.ids-footer--inera-admin .ids-footer__sub-footer .sub-footer-container{min-height:40px}.ids-footer.ids-footer--inera-admin .ids-footer__sub-footer .ids-footer__sub-footer__mobile-text{color:var(--footer-sub-mobile_color);display:inline-block;font-size:.875rem;line-height:1.25rem;padding:30px 40px 10px;text-align:center}.ids-footer.ids-footer--inera-admin .ids-footer__sub-footer .ids-footer__sub-footer-container:after{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='180' height='82' fill='none'%3E%3Cpath d='M0 81.691C.21 36.677 40.424.245 90 .245s89.79 36.432 90 81.446h-56.615c-.209-16.596-15.076-29.99-33.385-29.99-18.31 0-33.176 13.394-33.385 29.99H0Z' fill='%23fff'/%3E%3C/svg%3E\\\");background-repeat:no-repeat;content:\\\" \\\";display:block;height:100px;left:calc(50% - 250px);position:absolute;top:-82px;width:250px}@media (max-width:1024px){.ids-footer.ids-footer--inera-admin .ids-footer__sub-footer .ids-footer__sub-footer-container:after{content:none}}.ids-footer.ids-footer--inera-admin .ids-footer__mobile-menu{background-color:var(--footer_background-color);padding-bottom:100px;position:relative}@media (max-width:1024px){.ids-footer.ids-footer--inera-admin .ids-footer__mobile-menu:after{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='154' height='78' fill='none'%3E%3Cpath d='M154 77.774v-.065C154 35.22 119.526.774 77 .774S0 35.219 0 77.709v.065h48.436v-.065c0-15.762 12.788-28.54 28.564-28.54s28.565 12.778 28.565 28.54l-.001.065H154Z' fill='%23fff'/%3E%3C/svg%3E\\\");background-repeat:no-repeat;bottom:0;content:\\\" \\\";display:block;height:77px;left:20px;position:absolute;width:154px}}.ids-footer.ids-footer--inera-legacy .ids-footer__inner-wrapper{background:#f1edea;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' width='869' height='774'%3E%3Cdefs%3E%3Cpath id='a' d='M0 .275h864.005v766.311H0z'/%3E%3C/defs%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg transform='translate(0 1.897)'%3E%3Cmask id='b' fill='%23fff'%3E%3Cuse xlink:href='%23a'/%3E%3C/mask%3E%3Cpath fill='%2300706E' d='M790.3 251.246C680.38 55.396 438.406-37.17 264.727 14.318-134.285 132.536-73.18 694.285 386.932 664.563c282.067-18.219 360.286-10.833 407.01 92.64 6.633 14.692 21.47 10.082 27.118.143 50.596-77.267 74.092-319.35-30.76-506.1' mask='url(%23b)'/%3E%3C/g%3E%3Cpath fill='%2341C0C2' d='M303.88 665.978c-87.494-9.538-139.49-41.576-139.49-41.576 115.558 57.494 199.308-22.749 303.798-44.631 99.938-20.93 255.572 14.38 324.043 175.628-13.503-25.372-30.308-47.56-56.255-63.21-99.715-60.137-319.427-13.93-432.096-26.211'/%3E%3C/g%3E%3C/svg%3E\\\");background-position:left calc(50vw - 915px) bottom -90px;background-repeat:no-repeat;background-size:869px 774px}@media (max-width:1024px){.ids-footer.ids-footer--inera-legacy .ids-footer__inner-wrapper{background-position:left calc(50vw - 614px) bottom -107px;background-size:1050px 800px}}@media (max-width:640px){.ids-footer.ids-footer--inera-legacy .ids-footer__inner-wrapper{background-color:var(--color-secondary-dark)}}.ids-footer.ids-footer--inera-admin-legacy .ids-footer__inner-wrapper{background:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle fill='%23fff' cx='50' cy='50' r='50'/%3E%3C/svg%3E\\\") left calc(50vw - 915px) bottom -90px/869px 869px no-repeat #f1edea}@media (max-width:1024px){.ids-footer.ids-footer--inera-admin-legacy .ids-footer__inner-wrapper{background-position:left calc(50vw - 525px) bottom 20px;background-size:1000px 1000px}}.ids-footer.ids-footer--inera-admin-legacy .ids-footer__sub-footer{background-color:#f1edea;border-top:1px solid #e0e0e0;position:relative}@media (max-width:1024px){.ids-footer.ids-footer--inera-admin-legacy .ids-footer__sub-footer{border-top:none}}\";\n\nvar footerLit = css`${unsafeCSS(css_248z)}`;\n\nexport { footerLit as default };\n", "import{__decorate as e}from\"tslib\";import{LitElement as t,html as i}from\"lit\";import{property as s}from\"lit/decorators.js\";import o from\"../styles/global-styles.js\";import r from\"./footer-styles.js\";import l from\"@inera/ids-design/components/footer/footer-lit\";class n extends t{constructor(){super(...arguments),this.headline=\"\",this.subheadline=\"\",this.cols=3,this.linkcol1=\"2\",this.linkcol2=\"2\",this.linkcol3=\"2\",this.servicename=\"\",this.type=void 0}get mobileMenu(){return this.querySelector(\"ids-mobile-menu\")}firstUpdated(e){super.firstUpdated(e),this.setupColSize(),this.classList.add(`ids-type-${this.type}`),this.setupMobileMenu(),this.setupLinks(),this.setupColLinks(),this.setupSubLinks(),this.setupSubLinksRight()}setupColSize(){1===this.cols?(this.linkcol1=\"6\",this.linkcol2=\"6\",this.linkcol3=\"6\"):2===this.cols&&(this.linkcol1=\"3\",this.linkcol2=\"3\",this.linkcol3=\"3\")}setupColLinks(){this.querySelectorAll('ids-link[slot^=\"link-col-\"]').forEach((e=>{e.setAttribute(\"block\",\"true\")}))}setupMobileMenu(){this.mobileMenu?.setAttribute(\"slot\",\"mobile-menu\"),this.mobileMenu?.setAttribute(\"variation\",\"2\")}setupLinks(){this.querySelectorAll(\"ids-link\").forEach((e=>{this.type.includes(\"1177\")||this.type.includes(\"inera-admin\")||this.type.includes(\"inera-legacy\")||this.type.includes(\"inera-legacy\")?e.setAttribute(\"colorpreset\",\"2\"):e.setAttribute(\"light\",\"true\")}))}setupSubLinks(){this.querySelectorAll('ids-link[slot=\"sub-footer-right\"]').forEach((e=>{e.setAttribute(\"light\",\"true\"),\"1177\"!=this.type&&\"1177-pro\"!=this.type||e.setAttribute(\"outline\",\"var(--focus-outline-bright_color)\"),e.setAttribute(\"size\",\"0.875rem\")}))}setupSubLinksRight(){this.querySelectorAll('ids-link[slot=\"sub-footer-links\"]').forEach((e=>{\"1177-pro\"==this.type?e.setAttribute(\"colorpreset\",\"2\"):e.setAttribute(\"light\",\"true\"),e.setAttribute(\"underlined\",\"true\"),e.setAttribute(\"block\",\"true\"),e.setAttribute(\"size\",\"0.875rem\"),e.setAttribute(\"padding\",\"15px 0px\")}))}renderLogo(){switch(this.type){case\"1177\":return i`<ids-icon-1177 color=\"white\" width=\"90\" height=\"34\"></ids-icon-1177><div class=\"ids-footer__sub-footer-mobile-text\"><slot name=\"sub-footer-mobile\"></slot></div>`;case\"1177-pro\":return i`<div class=\"ids-footer__sub-footer-mobile-icon\"><ids-icon-1177 color=\"var(--color-main)\" width=\"45\" height=\"18\"></ids-icon-1177><div class=\"ids-footer__sub-footer-mobile-service-name\"><p style=\"color:var(--color-web-nav);font-weight:700;line-height:13px;letter-spacing:-.253846px\">${this.servicename}</p></div></div><div class=\"ids-footer__sub-footer-mobile-text\"><slot name=\"sub-footer-mobile\"></slot></div>`;case\"inera-admin\":return i`<slot name=\"sub-footer-mobile\"></slot>`;case\"inera-admin-legacy\":return i`<ids-container><ids-row justify=\"center\"><ids-col class=\"footer-sub-text\" cols=\"auto\">${this.servicename?i`<p style=\"color:var(--color-grey-base);font-size:.875rem\">${this.servicename} drivs av Inera på uppdrag av Sveriges regioner.</p>`:i``}</ids-col></ids-row></ids-container>`;case\"inera\":return i`<div style=\"color:#fff;font-size:.875rem\">Inera AB ägs av SKR, regioner och kommuner.</div>`;default:return i``}}renderHeadline(){switch(this.type){case\"1177\":case\"inera\":case\"inera-admin\":case\"inera-legacy\":case\"inera-admin-legacy\":return i`<h1 class=\"ids-footer__headline\">${this.headline} <span class=\"ids-footer__headline--sub\">${this.subheadline}</span></h1>`;case\"1177-pro\":return i`<h1 class=\"ids-footer__headline\">${this.servicename}</h1>`}}renderCols(){return 1===this.cols?i`<div class=\"ids-footer__link-col\"><slot name=\"link-col-1\"></slot></div>`:2===this.cols?i`<div class=\"ids-footer__link-col\"><slot name=\"link-col-1\"></slot></div><div class=\"ids-footer__link-col\" cols=\"${this.linkcol2}\"><slot name=\"link-col-2\"></slot></div>`:i`<div class=\"ids-footer__link-col\"><slot name=\"link-col-1\"></slot></div><div class=\"ids-footer__link-col\"><slot name=\"link-col-2\"></slot></div><div class=\"ids-footer__link-col\"><slot name=\"link-col-3\"></slot></div>`}render(){return i`<footer class=\"ids-footer ids-footer--${this.type}\"><div class=\"ids-footer__inner-wrapper\"><div class=\"ids-footer__inner\"><div class=\"ids-footer__headline-row\">${this.renderHeadline()}</div><div class=\"ids-footer__content\"><div class=\"ids-footer__text\"><slot></slot></div>${this.renderCols()}</div></div></div><div class=\"ids-footer__sub-footer\"><div class=\"ids-footer__sub-footer-container\"><div class=\"ids-footer__sub-footer-row\"><div class=\"ids-footer__sub-footer-left\"><slot name=\"sub-footer-left\"></slot></div><div class=\"ids-footer__sub-footer-right\"><slot name=\"sub-footer-right\"></slot></div><div cols=\"12\" class=\"ids-footer__mobile-menu\"><slot name=\"mobile-menu\"></slot></div><div class=\"ids-footer__mobile-links\"><slot name=\"sub-footer-links\"></slot></div></div></div><div class=\"ids-footer__sub-footer-mobile\">${this.renderLogo()}</div></div></footer>`}}n.styles=[o,l,r],e([s({type:String})],n.prototype,\"headline\",void 0),e([s({type:String})],n.prototype,\"subheadline\",void 0),e([s({type:Number,reflect:!0})],n.prototype,\"cols\",void 0),e([s({type:String,reflect:!0})],n.prototype,\"linkcol1\",void 0),e([s({type:String,reflect:!0})],n.prototype,\"linkcol2\",void 0),e([s({type:String,reflect:!0})],n.prototype,\"linkcol3\",void 0),e([s({type:String})],n.prototype,\"servicename\",void 0),e([s({type:String,reflect:!0})],n.prototype,\"type\",void 0);export{n as IDSFooter};\n", "import{IDSFooter as r}from\"./footer-element.js\";import{registerComponent as i}from\"../../utilities/utils.js\";import\"../icons/1177/register.js\";import\"../grid/row/register.js\";import\"../grid/column/register.js\";import\"../grid/container/register.js\";i(\"ids-footer\",r);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/notification/badge/register';\nimport { IDSNotificationBadge as IDSNotificationBadge$1 } from '@inera/ids-core/components/notification/badge/notification-badge-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSNotificationBadge = createComponent({\r\n    tagName: 'ids-notification-badge',\r\n    elementClass: IDSNotificationBadge$1,\r\n    react: React\r\n});\n\nexport { IDSNotificationBadge };\n", "import{css as o}from\"lit\";var i=o`:host([outlined]) .notification-badge{background-color:#fff;border:1px solid var(--notification_background-color);color:var(--notification--mobile_color)}.notification-badge{background-color:var(--notification_background-color);font-size:.875rem;font-weight:600;color:var(--notification_color);min-width:2rem;min-height:2rem;padding:0 .4rem;box-sizing:border-box;border-radius:2rem;text-align:center;display:inline-block;line-height:2rem;align-items:center;justify-content:center}`;export{i as default};\n", "import{__decorate as t}from\"tslib\";import{LitElement as o,html as r}from\"lit\";import{property as e}from\"lit/decorators.js\";import i from\"./notification-badge-styles.js\";class s extends o{constructor(){super(...arguments),this.outlined=!1}render(){return r`<div class=\"notification-badge\"><slot></slot></div>`}}s.styles=[i],t([e({type:Boolean,reflect:!0})],s.prototype,\"outlined\",void 0);export{s as IDSNotificationBadge};\n", "import{IDSNotificationBadge as i}from\"./notification-badge-element.js\";import{registerComponent as t}from\"../../../utilities/utils.js\";t(\"ids-notification-badge\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/tabs/register';\nimport { IDSTabs as IDSTabs$1 } from '@inera/ids-core/components/tabs/tabs-element';\nimport { IDSTab as IDSTab$1 } from '@inera/ids-core/components/tabs/tab/tab-element';\nimport { IDSTabPanel as IDSTabPanel$1 } from '@inera/ids-core/components/tabs/panel/tab-panel-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSTabs = createComponent({\r\n    tagName: 'ids-tabs',\r\n    elementClass: IDSTabs$1,\r\n    react: React,\r\n    events: {\r\n        onTabChange: 'tabChange'\r\n    }\r\n});\r\nconst IDSTab = createComponent({\r\n    tagName: 'ids-tab',\r\n    elementClass: IDSTab$1,\r\n    react: React\r\n});\r\nconst IDSTabPanel = createComponent({\r\n    tagName: 'ids-tab-panel',\r\n    elementClass: IDSTabPanel$1,\r\n    react: React\r\n});\n\nexport { IDSTab, IDSTabPanel, IDSTabs };\n", "import{css as e}from\"lit\";var o=e`.tabs{display:flex;border-bottom:var(--tabs_border-bottom);gap:3px;position:relative;align-items:flex-end;height:3rem;padding:0 20px}.tabs.unresponsive{display:flex!important}.tabs.tabs-including-icons{height:4.7em}.tabs::before{content:var(--tab-selected--before_content);box-shadow:0 -4px 4px -4px rgb(0 0 0 / 20%) inset;position:absolute;left:0;right:0;bottom:0;height:.625rem;pointer-events:none}.panels{z-index:1;position:relative}#mobile-select{display:none}#mobile-select.unresponsive{display:none!important}@media only screen and (max-width:1024px){.tabs.hide-on-m{display:none}#mobile-select.show-on-m{display:block}}@media only screen and (max-width:640px){.tabs.hide-on-s{display:none}#mobile-select.show-on-s{display:block}}`;export{o as default};\n", "import{__decorate as e}from\"tslib\";import{LitElement as t,html as s}from\"lit\";import{property as i,state as n}from\"lit/decorators.js\";import a from\"./tabs-styles.js\";import{generateId as r}from\"../../utilities/utils.js\";class o extends t{constructor(){super(...arguments),this.unresponsive=!1,this.responsive=\"m\",this.selectlabel=\"\",this.activeTab=0,this.hasIcons=!1,this.setHasIcon=()=>{this.hasIcons=!0},this.handleKeydown=e=>{const t=32===e.keyCode,s=13==e.keyCode,i=37==e.keyCode,n=39==e.keyCode;(t||s)&&(e.preventDefault(),e.target.click());const a=parseInt(document.activeElement?.getAttribute(\"index\")||\"0\");i&&a>0?(e.preventDefault(),this.querySelector(`ids-tab[index=\"${a-1}\"]`).focus()):n&&a<this.tabs.length-1&&(e.preventDefault(),this.querySelector(`ids-tab[index=\"${a+1}\"]`).focus())},this.tabChangedFromSelect=()=>{const e=this.select.value;this.activeTab=Number(e),this.emitTabChange(e),this.updateSelection()},this.setSelected=e=>{this.emitTabChange(e.detail.index),this.activeTab=e.detail.index,this.select.value=e.detail.index,this.updateSelection()}}get tabs(){return this.querySelectorAll(\"ids-tab\")}get tabPanels(){return this.querySelectorAll(\"ids-tab-panel\")}get select(){return this.shadowRoot.querySelector(\"#mobile-tab-select\")}get responsiveOnM(){return\"m\"===this.responsive&&!this.unresponsive}get responsiveOnS(){return\"s\"===this.responsive&&!this.unresponsive}firstUpdated(e){super.firstUpdated(e),this.setAttribute(\"role\",\"tablist\"),this.setupTabs(),this.setupSelect(),this.setupTabPanels(),this.updateSelection()}setupSelect(){this.querySelectorAll(\"ids-tab\").forEach(((e,t)=>{const s=document.createElement(\"option\");s.innerHTML=e.label,s.value=e.index,s.selected=e.selected,e.selected&&(this.activeTab=t),this.select.appendChild(s)}))}disconnectedCallback(){this.tabs.forEach((e=>{e.removeEventListener(\"select\",this.setSelected),e.removeEventListener(\"keydown\",this.handleKeydown),e.removeEventListener(\"hasIcon\",this.setHasIcon)})),super.disconnectedCallback()}setupTabs(){this.tabs.forEach(((e,t)=>{e.getAttribute(\"id\")||e.setAttribute(\"id\",r()),e.setAttribute(\"index\",\"\"+t),e.setAttribute(\"slot\",\"tab\"),e.addEventListener(\"select\",this.setSelected),e.addEventListener(\"keydown\",this.handleKeydown),e.addEventListener(\"hasIcon\",this.setHasIcon),e.setAttribute(\"tabindex\",\"0\")}))}emitTabChange(e){let t=new CustomEvent(\"tabChange\",{detail:{index:e}});this.dispatchEvent(t)}setupTabPanels(){this.tabPanels.forEach(((e,t)=>{e.setAttribute(\"val\",\"\"+t);const s=this.tabs[t],i=s.getAttribute(\"id\");if(s&&i&&e.setAttribute(\"aria-labelledby\",i),!e.getAttribute(\"id\")){const s=r();e.setAttribute(\"id\",s),this.tabs[t]?.setAttribute(\"aria-controls\",s)}}))}updateSelection(){this.tabs.forEach(((e,t)=>{this.activeTab!=t?(e.removeAttribute(\"selected\"),e.setAttribute(\"tabindex\",\"-1\"),e.setAttribute(\"aria-selected\",\"false\")):(e.setAttribute(\"selected\",\"true\"),e.setAttribute(\"tabindex\",\"0\"),e.setAttribute(\"aria-selected\",\"true\"))})),this.tabPanels.forEach(((e,t)=>{this.activeTab!=t?(e.setAttribute(\"aria-hidden\",\"true\"),e.setAttribute(\"hidden\",\"true\")):(e.removeAttribute(\"aria-hidden\"),e.removeAttribute(\"hidden\"))}))}render(){return s`<ids-select id=\"mobile-select\" class=\"${this.unresponsive?\"unresponsive\":\"\"} ${this.responsiveOnM?\"show-on-m\":\"\"} ${this.responsiveOnS?\"show-on-s\":\"\"}\"><label>${this.selectlabel}</label> <select @change=\"${this.tabChangedFromSelect}\" id=\"mobile-tab-select\"></select></ids-select><div class=\"tabs ${this.hasIcons?\"tabs-including-icons\":\"\"} ${this.unresponsive?\"unresponsive\":\"\"} ${this.responsiveOnM?\"hide-on-m\":\"\"} ${this.responsiveOnS?\"hide-on-s\":\"\"}\"><slot name=\"tab\"></slot></div><div class=\"panels\"><slot name=\"tab-panel\"></slot></div>`}}o.styles=[a],e([i({type:Boolean})],o.prototype,\"unresponsive\",void 0),e([i({type:String})],o.prototype,\"responsive\",void 0),e([i({type:String})],o.prototype,\"selectlabel\",void 0),e([n()],o.prototype,\"activeTab\",void 0),e([n()],o.prototype,\"hasIcons\",void 0);export{o as IDSTabs};\n", "import{css as e}from\"lit\";var t=e`:host{flex-direction:column;justify-content:center;align-items:center;padding:0 23px;background:var(--tab_background-color);box-shadow:var(--tab_box-shadow);border-radius:var(--tab_border-radius);display:flex;cursor:pointer;position:relative;height:2.7rem}.tab-label{font-weight:400;font-size:1rem;line-height:20px;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:var(--tab_color)}:host([selected]) .tab-label{color:var(--tab-selected_color)}:host(:focus){outline:var(--focus_outline);outline-offset:var(--focus_outline-offset)}:host(.ids-tab-icon){height:4.4rem}:host([selected].ids-tab-icon){height:4.6rem}:host([selected]){background-color:#fff;border:var(--tab_border);box-shadow:var(--tab-selected_box-shadow);padding:0 22px!important}:host([selected]):after{content:\"\";height:var(--tab-selected--after_height);background-color:var(--tab-selected--after_background-color);position:absolute;width:100%;left:0;right:0;bottom:var(--tab-selected--after_bottom)}ids-icon{margin-bottom:4px}`;export{t as default};\n", "import{__decorate as t}from\"tslib\";import{LitElement as i,html as e}from\"lit\";import{property as s}from\"lit/decorators.js\";import o from\"./tab-styles.js\";class n extends i{constructor(){super(...arguments),this.notifications=0,this.notices=0,this.label=\"\",this.index=\"\",this.selected=!1,this.select=()=>{this.selected=!0;let t=new CustomEvent(\"select\",{detail:{index:this.index}});this.dispatchEvent(t),this.icon&&this.setIconColors()}}get icon(){return this.querySelector(\".ids-icon\")||this.querySelector('[slot=\"icon\"]')}firstUpdated(t){super.firstUpdated(t),this.setAttribute(\"role\",\"tab\"),this.addEventListener(\"click\",this.select),this.icon&&(this.setupIcon(),this.emitHasIcon())}setupIcon(){this.classList.add(\"ids-tab-icon\"),this.icon.setAttribute(\"height\",\"20\"),this.icon.setAttribute(\"width\",\"20\"),this.icon.setAttribute(\"slot\",\"icon\"),this.setIconColors()}emitHasIcon(){let t=new CustomEvent(\"hasIcon\",{detail:{hasIcon:!0}});this.dispatchEvent(t)}setIconColors(){this.icon.setAttribute(\"color\",this.selected?\"var(--tab-icon-selected_color)\":\"var(--icon-color)\"),this.icon.setAttribute(\"color2\",this.selected?\"var(--tab-icon-selected_color2)\":\"var(--icon-color2)\")}renderNotices(){return this.notices>0?e`<ids-notification-badge outlined>${this.notices}</ids-notification-badge>`:e``}renderNotifications(){return this.notifications>0?e`<ids-notification-badge>${this.notifications}</ids-notification-badge>`:e``}render(){return e`<slot name=\"icon\"></slot><div class=\"tab-label\">${this.label} ${this.renderNotices()} ${this.renderNotifications()}</div>`}}n.styles=[o],t([s({type:Number})],n.prototype,\"notifications\",void 0),t([s({type:Number})],n.prototype,\"notices\",void 0),t([s({type:String,reflect:!0})],n.prototype,\"label\",void 0),t([s({type:String,reflect:!0})],n.prototype,\"index\",void 0),t([s({type:Boolean,reflect:!0})],n.prototype,\"selected\",void 0);export{n as IDSTab};\n", "import{css as o}from\"lit\";var t=o`:host{display:block;padding-top:1.5rem;outline-offset:2px;outline-color:var(--focus-outline_color)}:host([hidden]){display:none}`;export{t as default};\n", "import{__decorate as t}from\"tslib\";import{LitElement as s,html as o}from\"lit\";import{property as e}from\"lit/decorators.js\";import r from\"./tab-panel-styles.js\";class i extends s{constructor(){super(...arguments),this.nofocus=!1}firstUpdated(t){super.firstUpdated(t),this.setAttribute(\"slot\",\"tab-panel\"),this.setAttribute(\"role\",\"tabpanel\"),this.nofocus||this.setAttribute(\"tabindex\",\"0\")}render(){return o`<slot></slot>`}}i.styles=[r],t([e({type:Boolean})],i.prototype,\"nofocus\",void 0);export{i as IDSTabPanel};\n", "import{IDSTabs as t}from\"./tabs-element.js\";import{IDSTab as e}from\"./tab/tab-element.js\";import{IDSTabPanel as i}from\"./panel/tab-panel-element.js\";import{registerComponent as s}from\"../../utilities/utils.js\";import\"../notification/badge/register.js\";import\"../form/select/register.js\";s(\"ids-tabs\",t),s(\"ids-tab\",e),s(\"ids-tab-panel\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/list/register';\nimport { IDSList as IDSList$1 } from '@inera/ids-core/components/list/list-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSList = createComponent({\r\n    tagName: 'ids-list',\r\n    elementClass: IDSList$1,\r\n    react: React,\r\n});\n\nexport { IDSList };\n", "import{css as o}from\"lit\";var r=o`:host{border-top:1px solid var(--list_border);display:flex;flex-direction:column}`;export{r as default};\n", "import{LitElement as s,html as t}from\"lit\";import r from\"./list-styles.js\";class e extends s{render(){return t`<slot></slot>`}}e.styles=[r];export{e as IDSList};\n", "import{css as t}from\"lit\";var i=t`:host{padding:20px 0;display:block;border-bottom:1px solid var(--list_border);color:var(--list_color)!important}:host([interactive]:focus-within) .ids-list-item{outline:var(--focus_outline);outline-offset:var(--focus_outline-offset)}:host([interactive]:hover) .ids-list-item{cursor:pointer}:host([interactive]) h2{display:inline-block;margin-bottom:0}:host([interactive]) .ids-list-interactive-header{display:flex;align-items:center;margin-bottom:15px}:host([interactive]:hover) h2{color:var(--link-colorpreset-1-hover_color)!important;text-decoration:underline}:host([interactive]) ::slotted([slot=interactive]){position:absolute!important;left:0!important;right:0!important;top:0!important;bottom:0!important;opacity:0!important}.ids-icon{margin-right:10px}.ids-list-item{position:relative}::slotted(ids-link),h2{font-family:Inter!important;font-style:normal!important;font-weight:700!important;font-size:1.25rem!important;line-height:28px!important;color:var(--link-colorpreset-1_color)!important;margin-top:0}.date-text{font-family:'Open Sans';font-style:normal;font-weight:400;font-size:.875rem;line-height:19px;letter-spacing:1px;text-transform:uppercase}.date-label-col{padding-right:20px}.list-item-content{margin-bottom:10px}`;export{i as default};\n", "import{__decorate as t}from\"tslib\";import{LitElement as e,html as i}from\"lit\";import{property as s,state as o}from\"lit/decorators.js\";import r from\"./list-item-styles.js\";import{getMonthAsText as l,getDayAsText as n}from\"../../../utilities/utils.js\";class a extends e{constructor(){super(...arguments),this.headline=\"\",this.interactive=!1,this.date=null,this.year=\"\",this.month=-1,this.monthlabel=\"\",this.day=-1,this.showdatelabel=!1,this.presentedDate=null}get dateLabel(){return this.querySelector(\"ids-date-label\")}get info(){return this.querySelector(\"ids-list-item-info\")}hasDate(){return this.date||this.year||this.month||this.day}getYear(){return this.presentedDate?.getFullYear()||this.year}getMonth(){return this.presentedDate?this.presentedDate.getMonth()+1:this.month}getMonthText(){return this.monthlabel?this.monthlabel:l(this.getMonth()-1,3)}getDay(){let t=this.presentedDate?.getDate()||this.day;return n(t)}firstUpdated(t){if(super.firstUpdated(t),this.dateLabel?.setAttribute(\"slot\",\"date-label\"),this.date&&(this.presentedDate=new Date(this.date)),this.info&&this.info.setAttribute(\"slot\",\"list-info\"),this.interactive){const t=this.querySelector('[slot=\"interactive\"]')?.innerText;this.headline=t||this.headline}}renderHeadline(){return this.interactive?i`<div class=\"ids-list-interactive-header\"><ids-icon-chevron height=\"12px\" width=\"12px\" inline></ids-icon-chevron><h2>${this.headline} ${this.renderLink()}</h2></div>`:this.headline?.length>0?i`<div class=\"ids-list-header\"><h2>${this.headline}</h2></div>`:i``}renderListItem(){return this.hasDate()?i`<ids-row>${this.showdatelabel?i`<ids-col class=\"date-label-col\" cols=\"auto\"><ids-date-label year=\"${this.getYear()}\" month=\"${this.getMonth()}\" day=\"${this.getDay()}\" monthLabel=\"${this.monthlabel}\"></ids-date-label></ids-col>`:\"\"}<ids-col class=\"list-item-content\"><div class=\"date-text\">${`${this.getDay()} ${this.getMonthText()} ${this.getYear()}`}</div>${this.renderHeadline()}<div class=\"list-item-content\"><slot></slot></div><slot name=\"list-info\"></slot></ids-col></ids-row>`:i`<ids-row><ids-col>${this.renderHeadline()}<div class=\"list-item-content\"><slot></slot></div><slot name=\"list-info\"></slot></ids-col></ids-row>`}onHover(){this.colorizeIcon(!0)}onBlur(){this.colorizeIcon(!1)}colorizeIcon(t){const e=t?\"var(--link-colorpreset-1-hover_color)\":\"var(--link-colorpreset-1_color)\";if(this.interactive){const t=this.shadowRoot.querySelector(\"ids-icon-chevron\");t.setAttribute(\"color\",e),t.setAttribute(\"color2\",e)}}renderLink(){return i`<slot name=\"interactive\"></slot>`}render(){return i`<div @mouseenter=\"${this.onHover}\" @mouseleave=\"${this.onBlur}\" class=\"ids-list-item\">${this.renderListItem()}</div>`}}a.styles=[r],t([s({type:String,reflect:!0})],a.prototype,\"headline\",void 0),t([s({type:Boolean,reflect:!0})],a.prototype,\"interactive\",void 0),t([s({type:Date})],a.prototype,\"date\",void 0),t([s({type:String})],a.prototype,\"year\",void 0),t([s({type:Number})],a.prototype,\"month\",void 0),t([s({type:String})],a.prototype,\"monthlabel\",void 0),t([s({type:Number})],a.prototype,\"day\",void 0),t([s({type:Boolean})],a.prototype,\"showdatelabel\",void 0),t([o()],a.prototype,\"presentedDate\",void 0);export{a as IDSListItem};\n", "import{css as o}from\"lit\";var t=o`:host{font-family:'Open Sans';font-style:italic;font-weight:400;font-size:1rem;color:var(--list-item-info_color);display:block;margin-bottom:10px}`;export{t as default};\n", "import{LitElement as t,html as s}from\"lit\";import e from\"./list-item-info-styles.js\";class r extends t{render(){return s`<slot></slot>`}}r.styles=[e];export{r as IDSListItemInfo};\n", "import { css, unsafeCSS } from 'lit';\n\nvar css_248z = \"time.ids-time{align-items:center;align-self:flex-start;background-color:#fff;border-radius:.625rem;box-shadow:0 .125rem .375rem 0 rgba(0,0,0,.3);display:inline-flex;flex-direction:column;gap:4px;justify-content:center;padding:15px}@media (max-width:1024px){time.ids-time{gap:4px;padding:10px}}time.ids-time .ids-time__day{color:var(--IDS-DATE-LABEL__DAY__COLOR);font-family:var(--IDS-DATE-LABEL__DAY__FONT-FAMILY);font-size:2.1875rem;font-style:normal;font-weight:700;letter-spacing:-1px;line-height:2.1875rem}@media (max-width:1024px){time.ids-time .ids-time__day{font-size:1.5625rem;letter-spacing:-1.25px;line-height:1.5625rem}}time.ids-time .ids-time__month{color:var(--IDS-DATE-LABEL__MONTH__COLOR);font-family:var(--IDS-DATE-LABEL__MONTH__FONT-FAMILY);font-size:1.25rem;font-style:normal;font-weight:400;line-height:1.25rem;text-transform:uppercase}@media (max-width:1024px){time.ids-time .ids-time__month{font-size:.9375rem;line-height:.9375rem}}time.ids-time .ids-time__year{color:var(--IDS-DATE-LABEL__YEAR__COLOR);font-family:var(--IDS-DATE-LABEL__YEAR__FONT-FAMILY);font-size:1rem;font-style:normal;font-weight:400;line-height:1rem}@media (max-width:1024px){time.ids-time .ids-time__year{font-size:.75rem;line-height:.75rem}}\";\n\nvar dateLabelLit = css`${unsafeCSS(css_248z)}`;\n\nexport { dateLabelLit as default };\n", "import{__decorate as t}from\"tslib\";import{LitElement as e,html as s}from\"lit\";import{property as i,state as r}from\"lit/decorators.js\";import{getDayAsText as a,getMonthAsText as o}from\"../../utilities/utils.js\";import n from\"@inera/ids-design/components/date-label/date-label-lit\";class h extends e{constructor(){super(...arguments),this.date=null,this.year=\"\",this.month=0,this.monthlabel=\"\",this.day=0,this.presentedDate=null}firstUpdated(t){super.firstUpdated(t),this.date&&(this.presentedDate=new Date(this.date))}getYear(){return this.presentedDate?this.presentedDate.getFullYear():this.year}getMonth(){return this.presentedDate?this.presentedDate.getMonth()+1:this.month}getDay(){let t;return t=this.presentedDate?this.presentedDate.getDate():this.day,a(t)}getMonthText(){return this.monthlabel?this.monthlabel:o(this.getMonth()-1,3)}render(){return s`<time class=\"ids-time\" datetime=\"${`${this.getDay()}-${this.getMonth()<10?\"0\"+this.getMonth():this.getMonth()}-${this.getYear()}`}\"><span class=\"ids-time__day\">${this.getDay()}</span> <span class=\"ids-time__month\">${this.getMonthText()}</span> <span class=\"ids-time__year\">${this.getYear()}</span></time>`}}h.styles=[n],t([i({type:Date})],h.prototype,\"date\",void 0),t([i({type:String})],h.prototype,\"year\",void 0),t([i({type:Number})],h.prototype,\"month\",void 0),t([i({type:String})],h.prototype,\"monthlabel\",void 0),t([i({type:Number})],h.prototype,\"day\",void 0),t([r()],h.prototype,\"presentedDate\",void 0);export{h as IDSDateLabel};\n", "import{IDSDateLabel as e}from\"./date-label-element.js\";import{registerComponent as t}from\"../../utilities/utils.js\";t(\"ids-date-label\",e);\n", "import{IDSList as i}from\"./list-element.js\";import{IDSListItem as t}from\"./item/list-item-element.js\";import{IDSListItemInfo as e}from\"./item/info/list-item-info-element.js\";import{registerComponent as m}from\"../../utilities/utils.js\";import\"../date-label/register.js\";m(\"ids-list\",i),m(\"ids-list-item\",t),m(\"ids-list-item-info\",e);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/list/register';\nimport { IDSListItem as IDSListItem$1 } from '@inera/ids-core/components/list/item/list-item-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSListItem = createComponent({\r\n    tagName: 'ids-list-item',\r\n    elementClass: IDSListItem$1,\r\n    react: React,\r\n});\n\nexport { IDSListItem };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/list/register';\nimport { IDSListItemInfo as IDSListItemInfo$1 } from '@inera/ids-core/components/list/item/info/list-item-info-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSListItemInfo = createComponent({\r\n    tagName: 'ids-list-item-info',\r\n    elementClass: IDSListItemInfo$1,\r\n    react: React,\r\n});\n\nexport { IDSListItemInfo };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/date-label/register';\nimport { IDSDateLabel as IDSDateLabel$1 } from '@inera/ids-core/components/date-label/date-label-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSDateLabel = createComponent({\r\n    tagName: 'ids-date-label',\r\n    elementClass: IDSDateLabel$1,\r\n    react: React,\r\n});\n\nexport { IDSDateLabel };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/breadcrumbs/register';\nimport { IDSBreadcrumbs as IDSBreadcrumbs$1 } from '@inera/ids-core/components/breadcrumbs/breadcrumbs-element';\nimport { IDSCrumb as IDSCrumb$1 } from '@inera/ids-core/components/breadcrumbs/crumb/crumb-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSBreadcrumbs = createComponent({\r\n    tagName: 'ids-breadcrumbs',\r\n    elementClass: IDSBreadcrumbs$1,\r\n    react: React,\r\n});\r\nconst IDSCrumb = createComponent({\r\n    tagName: 'ids-crumb',\r\n    elementClass: IDSCrumb$1,\r\n    react: React,\r\n});\n\nexport { IDSBreadcrumbs, IDSCrumb };\n", "import { css, unsafeCSS } from 'lit';\n\nvar css_248z = \".ids-breadcrumbs{color:var(--IDS-BREADCRUMBS__COLOR);line-height:26px}.ids-breadcrumbs ol{list-style:none;margin:0;padding:0}.ids-breadcrumbs ol li{display:flex}.ids-breadcrumbs .ids-breadcrumbs__lead{margin-right:10px}.ids-breadcrumbs .ids-breadcrumbs__desktop{display:flex}@media (max-width:1024px){.ids-breadcrumbs .ids-breadcrumbs__desktop{display:none}}.ids-breadcrumbs .ids-breadcrumbs__mobile{align-items:center;display:none}.ids-breadcrumbs .ids-breadcrumbs__mobile .ids-icon{margin-right:5px}@media (max-width:1024px){.ids-breadcrumbs .ids-breadcrumbs__mobile,.ids-breadcrumbs .ids-breadcrumbs__mobile li{display:flex}.ids-breadcrumbs .ids-breadcrumbs__mobile .ids-icon{display:inline}}.ids-breadcrumbs__crumb{align-items:center;display:flex;justify-content:center}.ids-breadcrumbs__crumb *,.ids-breadcrumbs__crumb ::slotted(*){color:var(--link_color);cursor:pointer;display:inline-block;line-height:26px;text-decoration:undelined}.ids-breadcrumbs__crumb .ids-breadcrumbs__crumb__separator{margin-left:10px;margin-right:10px}.ids-breadcrumbs__mobile .ids-breadcrumbs__crumb *,.ids-breadcrumbs__mobile .ids-breadcrumbs__crumb ::slotted(*){font-size:.875rem;text-decoration:none}\";\n\nvar breadcrumbsLit = css`${unsafeCSS(css_248z)}`;\n\nexport { breadcrumbsLit as default };\n", "import{__decorate as r}from\"tslib\";import{LitElement as s,html as i}from\"lit\";import{property as t}from\"lit/decorators.js\";import l from\"@inera/ids-design/components/breadcrumbs/breadcrumbs-lit\";class e extends s{constructor(){super(...arguments),this.lead=\"Du är här:\",this.current=\"\",this.srlabel=\"Du är här\"}render(){return i`<nav class=\"ids-breadcrumbs\" aria-label=\"${this.srlabel}\"><ol class=\"ids-breadcrumbs__desktop\"><li class=\"ids-breadcrumbs__lead\">${this.lead}</li><li class=\"ids-breadcrumbs__links\"><slot></slot></li><li>${this.current}</li></ol><ol class=\"ids-breadcrumbs__mobile\"><li><ids-icon-chevron-bold rotate=\"180\" color=\"var(--IDS-BREADCRUMBS__CHEVRON__COLOR)\" width=\"10\" height=\"10\"></ids-icon-chevron-bold><slot name=\"mobile\"></slot></li></ol></nav>`}}e.styles=[l],r([t({type:String})],e.prototype,\"lead\",void 0),r([t({type:String})],e.prototype,\"current\",void 0),r([t({type:String})],e.prototype,\"srlabel\",void 0);export{e as IDSBreadcrumbs};\n", "import{__decorate as t}from\"tslib\";import{css as r,LitElement as s,html as e}from\"lit\";import{property as o}from\"lit/decorators.js\";import i from\"@inera/ids-design/components/breadcrumbs/breadcrumbs-lit\";class d extends s{constructor(){super(...arguments),this.mobile=!1}firstUpdated(t){super.firstUpdated(t),this.mobile&&this.setAttribute(\"slot\",\"mobile\")}render(){return e`<div class=\"ids-breadcrumbs__crumb\"><slot></slot>${this.mobile?null:e`<span class=\"ids-breadcrumbs__crumb__separator\" aria-hidden=\"true\">/</span>`}</div>`}}d.styles=[r`:host([mobile]) ::slotted(*){text-decoration:none;font-size:.875rem}`,i],t([o({type:Boolean})],d.prototype,\"mobile\",void 0);export{d as IDSCrumb};\n", "import{IDSBreadcrumbs as r}from\"./breadcrumbs-element.js\";import{IDSCrumb as m}from\"./crumb/crumb-element.js\";import{registerComponent as e}from\"../../utilities/utils.js\";import\"../icons/chevron-bold/register.js\";e(\"ids-breadcrumbs\",r),e(\"ids-crumb\",m);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/dialog/register';\nimport { IDSDialog as IDSDialog$1 } from '@inera/ids-core/components/dialog/dialog-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSDialog = createComponent({\r\n    tagName: 'ids-dialog',\r\n    elementClass: IDSDialog$1,\r\n    react: React,\r\n    events: {\r\n        onClosed: 'closed'\r\n    }\r\n});\n\nexport { IDSDialog };\n", "class t{constructor(t){this.hasAppliedFocusLoop=!1,this.setupFocusLoop=()=>{this.getFocusableContents().length>0&&!this.hasAppliedFocusLoop&&(this.getFirstFocusableContent().addEventListener(\"keydown\",this.checkBackTab),this.getLastFocusableContent().addEventListener(\"keydown\",this.checkTab),this.hasAppliedFocusLoop=!0),null!==this.host.getAttribute(\"autofocus\")&&(this.isPopover?setTimeout((()=>{const t=this.host.querySelector(\".ids-focus-anchor\")||this.host.shadowRoot?.querySelector(\".content-column\");this.checkForWrapper(t)?.focus()}),0):setTimeout((()=>{const t=this.host.querySelector(\".ids-focus-anchor\")||this.getFirstFocusableContent();this.checkForWrapper(t)?.focus()}),0))},this.checkBackTab=t=>{9==t.keyCode&&t.shiftKey&&(t.preventDefault(),this.getLastFocusableContent().focus())},this.checkTab=t=>{9!=t.keyCode||t.shiftKey||(t.preventDefault(),this.getFirstFocusableContent().focus())},this.host=t,this.host.addController(this)}get isPopover(){return\"ids-popover-content\"===this.host.tagName.toLocaleLowerCase()}hostConnected(){this.isPopover?this.host.parentElement?.addEventListener(\"changedVisibility\",this.setupFocusLoop):this.host.addEventListener(\"changedVisibility\",this.setupFocusLoop)}hostDisconnected(){this.isPopover?this.host.parentElement?.removeEventListener(\"changedVisibility\",this.setupFocusLoop):this.host.removeEventListener(\"changedVisibility\",this.setupFocusLoop),this.hasAppliedFocusLoop&&(this.getFirstFocusableContent()?.removeEventListener(\"keydown\",this.checkBackTab),this.getLastFocusableContent()?.removeEventListener(\"keydown\",this.checkTab))}getFocusableContents(){let t=[];this.isPopover&&t.push(this.host.shadowRoot?.querySelector(\".content-column\"));let e=Array.from(this.host.querySelectorAll('button:not(.ids-dialog-trigger), ids-button:not(.ids-dialog-trigger), [href]:not(.ids-dialog-trigger), input:not(.ids-dialog-trigger), select:not(.ids-dialog-trigger), textarea:not(.ids-dialog-trigger), [tabindex]:not([tabindex=\"-1\"]):not(.ids-dialog-trigger)'));return e=e.map((t=>this.checkForWrapper(t))),t.push(...e),t}getFirstFocusableContent(){return this.host.shadowRoot?.querySelector(\".ids-dialog__header__button\")||this.getFocusableContents()[0]}getLastFocusableContent(){const t=this.getFocusableContents();return this.checkForWrapper(t[t.length-1])}checkForWrapper(t){return t?.classList.contains(\"ids-contains-clickable\")?t.children[0]:t}}export{t as FocusTrapController};\n", "import { css, unsafeCSS } from 'lit';\n\nvar css_248z = \".ids-dialog .ids-dialog__body::-webkit-scrollbar-track{background:var(--IDS-SCROLL_BACKGROUND-COLOR);border-radius:10px;margin-bottom:10px;margin-top:10px}.ids-dialog .ids-dialog__body::-webkit-scrollbar-thumb{background:var(--IDS-SCROLL_COLOR);border-radius:10px}.ids-dialog .ids-dialog__body::-webkit-scrollbar-thumb:hover{background:#555}.ids-dialog{align-items:flex-start;background-color:#fff;border:1px solid var(--dialog_border-color);border-radius:var(--dialog_border-radius);box-shadow:0 0 10px rgba(0,0,0,.3);color:var(--dialog_color);display:flex;flex-direction:column;left:50%;max-height:calc(100% - 80px);max-width:calc(100% - 60px);padding:40px 30px;position:fixed;text-align:left;top:50%;-webkit-transform:translateX(-50%) translateY(-50%);-moz-transform:translateX(-50%) translateY(-50%);-ms-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);z-index:200}@media (max-width:1024px){.ids-dialog{padding:40px 10px}}@media (max-width:640px){.ids-dialog{max-height:calc(100% - 80px);width:calc(100% - 60px)}}.ids-dialog:has(.ids-dialog__header){padding-top:20px}.ids-dialog.ids-dialog--hidden{display:none}.ids-dialog .ids-dialog__header{align-items:flex-end;display:flex;justify-content:flex-end;width:100%}.ids-dialog .ids-dialog__header .ids-dialog__header__button{align-items:center;background:none;border:none;color:inherit;cursor:pointer;display:flex;font:inherit;justify-content:center;min-height:24px;min-width:24px;outline:inherit;padding:0;-moz-user-select:-moz-none;-khtml-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none}.ids-dialog .ids-dialog__header .ids-dialog__header__button:focus{outline:var(--focus_outline);outline-offset:var(--focus_outline-offset)}.ids-dialog .ids-dialog__body{height:100%;margin-right:4px;overflow-y:auto;padding:0 6px 10px 10px}.ids-dialog .ids-dialog__body.ids-dialog__body--has-scrollbar{padding-right:20px}.ids-dialog .ids-dialog__body::-webkit-scrollbar{margin-left:-20px;padding:10px;position:absolute;width:14px}.ids-dialog .ids-dialog__body .ids-dialog__body__headline{margin:0;padding-top:6px}@media (max-width:1024px){.ids-dialog .ids-dialog__body .ids-dialog__body__headline{padding-top:0}}.ids-dialog .ids-dialog__body .ids-dialog__body__header{align-items:flex-end;-webkit-align-items:flex-end;box-sizing:border-box;display:flex;-webkit-justify-content:flex-end;padding:20px 0 0;width:100%}.ids-dialog .ids-dialog__body .ids-dialog__body__content{margin-top:20px}.ids-dialog .ids-dialog__footer{align-items:center;display:flex;gap:40px;justify-content:center;margin-top:30px;width:100%}@media (max-width:1024px){.ids-dialog .ids-dialog__footer{flex-direction:column;gap:20px}}.ids-dialog-overlay{background-color:rgba(53,53,53,.6);bottom:0;left:0;position:fixed;right:0;top:0;z-index:200}.ids-dialog-overlay.ids-dialog-overlay--hidden{display:none}\";\n\nvar dialogLit = css`${unsafeCSS(css_248z)}`;\n\nexport { dialogLit as default };\n", "import{__decorate as t}from\"tslib\";import{LitElement as s,html as i}from\"lit\";import{property as e,state as o}from\"lit/decorators.js\";import{FocusTrapController as l}from\"../../controllers/FocusTrapController.js\";import r from\"@inera/ids-design/components/dialog/dialog-lit\";import{generateId as h}from\"../../utilities/utils.js\";class d extends s{constructor(){super(...arguments),this.focusTrapController=null,this.show=\"false\",this.srclosetext=\"Stäng\",this.dismissible=!1,this.autofocus=!1,this.nooverlay=!1,this.nofocustrap=!1,this.keepscrollbar=!1,this.persistent=!1,this.width=\"\",this.height=\"\",this.hasScrollbar=!1,this.headingId=h(),this.contentId=h(),this.detectEsc=t=>{27!==t.keyCode||\"true\"!==this.show||this.persistent||this.setShowFalse()},this.visibilityChanged=()=>{let t=new CustomEvent(\"changedVisibility\",{detail:{isVisible:this.show}});this.dispatchEvent(t)}}firstUpdated(t){super.firstUpdated(t),this.setupTrigger(),this.addEventListener(\"keydown\",this.detectEsc),this.setupCustomWidth(),this.setupCustomHeight()}setupTrigger(){const t=this.querySelector(\"[trigger]\")||this.querySelector('[slot=\"trigger\"]');t?.setAttribute(\"slot\",\"trigger\"),t?.classList.add(\"ids-dialog-trigger\")}attributeChangedCallback(t,s,i){\"show\"===t&&(\"true\"===this.show?this.showDialog():\"true\"===s&&\"false\"===this.show&&this.hideDialog()),super.attributeChangedCallback(t,s,i)}setupCustomWidth(){this.width&&(this.shadowRoot.querySelector(\".ids-dialog\").style.width=this.width,this.shadowRoot.querySelector(\".ids-dialog\").style.maxWidth=this.width)}setupCustomHeight(){this.height&&(this.shadowRoot.querySelector(\".ids-dialog\").style.height=this.height,this.shadowRoot.querySelector(\".ids-dialog\").style.maxHeight=this.height)}disconnectedCallback(){super.disconnectedCallback(),this.removeEventListener(\"keydown\",this.detectEsc)}hideDialog(){this.nofocustrap||(this.focusTrapController?.hostDisconnected(),this.focusTrapController=null),this.showBodyScrollbar();let t=new CustomEvent(\"closed\");this.dispatchEvent(t),this.visibilityChanged()}applyFocusTrap(){this.nofocustrap||(this.focusTrapController=new l(this))}async showDialog(){this.hideBodyScrollbar(),this.applyFocusTrap(),await this.updateComplete,this.visibilityChanged(),this.checkForScrollbar()}hideBodyScrollbar(){this.keepscrollbar||(document.body.style.overflow=\"hidden\")}showBodyScrollbar(){this.keepscrollbar||(document.body.style.overflow=\"\")}checkForScrollbar(){const t=this.shadowRoot.querySelector(\".ids-dialog__body\");this.hasScrollbar=t.clientHeight<t.scrollHeight}renderCloseButton(){return this.dismissible?i`<div class=\"ids-dialog__header\"><button aria-label=\"${this.srclosetext}\" class=\"ids-dialog__header__button\" @click=\"${this.setShowFalse}\"><ids-icon-close height=\"20\" width=\"20\"></ids-icon-close></button></div>`:null}overlayClick(){this.persistent||this.setShowFalse()}setShowTrue(){\"false\"===this.show&&(this.show=\"true\")}setShowFalse(){\"true\"===this.show&&(this.show=\"false\",this.querySelector(\"[trigger]\")?.focus())}render(){return i`<span @click=\"${this.setShowTrue}\"><slot name=\"trigger\"></slot></span><div @click=\"${this.overlayClick}\" class=\"ids-dialog-overlay ${\"false\"===this.show?\"ids-dialog-overlay--hidden\":\"\"} ${this.nooverlay?\"ids-dialog-overlay--hidden\":\"\"}\"></div><div class=\"ids-dialog ${\"false\"===this.show?\"ids-dialog--hidden\":\"\"}\" role=\"dialog\" aria-labelledby=\"${this.headingId}\" aria-describedby=\"${this.contentId}\">${this.renderCloseButton()}<div class=\"ids-dialog__body ${this.hasScrollbar?\"ids-dialog__body--has-scrollbar \":\"\"}\"><div id=\"${this.headingId}\" class=\"ids-dialog__body__headline\"><slot name=\"headline\"></slot></div><div id=\"${this.contentId}\" class=\"ids-dialog__body__content\"><slot></slot></div><div class=\"ids-dialog__footer\"><slot name=\"action\"></slot></div></div></div>`}}d.styles=[r],t([e({type:String,reflect:!0})],d.prototype,\"show\",void 0),t([e({type:String,reflect:!0})],d.prototype,\"srclosetext\",void 0),t([e({type:Boolean})],d.prototype,\"dismissible\",void 0),t([e({type:Boolean,reflect:!0})],d.prototype,\"autofocus\",void 0),t([e({type:Boolean})],d.prototype,\"nooverlay\",void 0),t([e({type:Boolean})],d.prototype,\"nofocustrap\",void 0),t([e({type:Boolean})],d.prototype,\"keepscrollbar\",void 0),t([e({type:Boolean})],d.prototype,\"persistent\",void 0),t([e({type:String})],d.prototype,\"width\",void 0),t([e({type:String})],d.prototype,\"height\",void 0),t([o()],d.prototype,\"hasScrollbar\",void 0);export{d as IDSDialog};\n", "import{svg as t}from\"lit\";import{IDSIconBase as r}from\"../icon-base-element.js\";class o extends r{constructor(){super(),this.vbHeight=20,this.vbWidth=20}renderIcon(){return t`<path fill=\"${this.colors.color}\" d=\"M1.44621 0.397052L1.53033 0.46967L10 8.939L18.4697 0.46967C18.7626 0.176777 19.2374 0.176777 19.5303 0.46967C19.7966 0.735936 19.8208 1.1526 19.6029 1.44621L19.5303 1.53033L11.061 10L19.5303 18.4697C19.8232 18.7626 19.8232 19.2374 19.5303 19.5303C19.2641 19.7966 18.8474 19.8208 18.5538 19.6029L18.4697 19.5303L10 11.061L1.53033 19.5303C1.23744 19.8232 0.762563 19.8232 0.46967 19.5303C0.203403 19.2641 0.179197 18.8474 0.397052 18.5538L0.46967 18.4697L8.939 10L0.46967 1.53033C0.176777 1.23744 0.176777 0.762563 0.46967 0.46967C0.706351 0.232989 1.06186 0.187565 1.34416 0.333399L1.44621 0.397052Z\"></path>`}}export{o as IDSIconClose};\n", "import{IDSIconClose as i}from\"./icon-close-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-close\",i);\n", "import{IDSDialog as i}from\"./dialog-element.js\";import{registerComponent as o}from\"../../utilities/utils.js\";import\"../icons/close/register.js\";o(\"ids-dialog\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/card/register';\nimport { IDSCard as IDSCard$1 } from '@inera/ids-core/components/card/card-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSCard = createComponent({\r\n    tagName: 'ids-card',\r\n    elementClass: IDSCard$1,\r\n    react: React,\r\n});\n\nexport { IDSCard };\n", "import { css, unsafeCSS } from 'lit';\n\nvar css_248z = \".ids-card{background:var(--IDS-CARD__BACKGROUND);border:var(--IDS-CARD__BORDER);border-radius:var(--IDS-CARD__BORDER-RADIUS);box-shadow:var(--IDS-CARD__BOX-SHADOW);overflow:hidden}.ids-card .ids-card__inner{padding:15px 20px}.ids-card.ids-card--fill{border:var(--IDS-CARD--FILL__BORDER)}.ids-card.ids-card--fill-2 .ids-card__inner{border-top:var(--IDS-CARD--FILL-2__INNER__BORDER-TOP)}.ids-card.ids-card--fill .ids-card__inner{background:var(--IDS-CARD--FILL__INNER__BACKGROUND);border-top:var(--IDS-CARD--FILL__INNER__BORDER-TOP)}.ids-card.ids-card--lean .ids-card__inner{color:var(--IDS-CARD__COLOR);padding:5px 20px}.ids-card.ids-card--interactive:focus:focus{outline:var(--focus_outline);outline-offset:var(--focus_outline-offset)}.ids-card.ids-card--interactive:focus,.ids-card.ids-card--interactive:hover{box-shadow:var(--IDS-CARD--HOVER_BOX-SHADOW);cursor:pointer}\";\n\nvar cardLit = css`${unsafeCSS(css_248z)}`;\n\nexport { cardLit as default };\n", "import{__decorate as t}from\"tslib\";import{LitElement as i,html as e}from\"lit\";import{property as l}from\"lit/decorators.js\";import r from\"@inera/ids-design/components/card/card-lit\";class s extends i{constructor(){super(...arguments),this.fill=!1,this.fill2=!1,this.lean=!1,this.interactive=!1}firstUpdated(t){super.firstUpdated(t),this.interactive&&this.setAttribute(\"tabindex\",\"0\")}render(){return e`<div class=\"ids-card ${this.fill?\"ids-card--fill\":null} ${this.fill2?\"ids-card--fill-2\":null} ${this.lean?\"ids-card--lean\":null} ${this.interactive?\"ids-card--interactive\":null}\"><div class=\"ids-card__inner\"><slot></slot></div></div>`}}s.styles=[r],t([l({type:Boolean})],s.prototype,\"fill\",void 0),t([l({type:Boolean})],s.prototype,\"fill2\",void 0),t([l({type:Boolean,reflect:!0})],s.prototype,\"lean\",void 0),t([l({type:Boolean,reflect:!0})],s.prototype,\"interactive\",void 0);export{s as IDSCard};\n", "import{IDSCard as i}from\"./card-element.js\";import{registerComponent as r}from\"../../utilities/utils.js\";r(\"ids-card\",i);\n", "import React__default from 'react';\nimport { createComponent } from '@lit-labs/react';\nimport '@inera/ids-core/components/agent/register';\nimport { IDSAgent as IDSAgent$1 } from '@inera/ids-core/components/agent/agent-element';\n\nconst IDSAgent = createComponent({\r\n    tagName: 'ids-agent',\r\n    elementClass: IDSAgent$1,\r\n    react: React__default,\r\n    events: {\r\n        onDidToggleExpansion: 'didToggleExpansion'\r\n    }\r\n});\n\nexport { IDSAgent };\n", "import{css as i}from\"lit\";var t=i`:host{position:relative;z-index:2}h3{margin:0}`;export{t as default};\n", "import{__decorate as t}from\"tslib\";import{LitElement as e,html as i}from\"lit\";import{property as o}from\"lit/decorators.js\";import d from\"./agent-styles.js\";class s extends e{constructor(){super(...arguments),this.headline=\"\",this.showtext=\"Visa meddelande\",this.hidetext=\"Dölj meddelande\",this.expanded=!0}firstUpdated(t){super.firstUpdated(t),this.shadowRoot.querySelector(\"ids-alert-global\").removeAttribute(\"role\"),this.setAttribute(\"role\",\"alert\")}toggleExpanded(t){this.expanded=t.detail.isExpanded;let e=new CustomEvent(\"didToggleExpansion\",{detail:{isExpanded:this.expanded}});this.dispatchEvent(e)}render(){return i`<ids-alert-global agent=\"true\" headline=\"${this.headline}\" hidemobileicon=\"true\" @didToggleExpansion=\"${this.toggleExpanded}\" showtext=\"${this.showtext}\" hidetext=\"${this.hidetext}\" ?expanded=\"${this.expanded}\"><ids-icon-agent slot=\"icon\" width=\"40\" height=\"40\"></ids-icon-agent><slot></slot><slot slot=\"actions\" name=\"actions\"></slot></ids-alert-global>`}}s.styles=[d],t([o({type:String})],s.prototype,\"headline\",void 0),t([o({type:String})],s.prototype,\"showtext\",void 0),t([o({type:String})],s.prototype,\"hidetext\",void 0),t([o({type:Boolean,reflect:!0})],s.prototype,\"expanded\",void 0);export{s as IDSAgent};\n", "import{svg as C}from\"lit\";import{IDSIconBase as l}from\"../icon-base-element.js\";class o extends l{constructor(){super(),this.vbHeight=34,this.vbWidth=41}renderIcon(){return C`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.33424 5.88937C6.33424 5.47516 6.67002 5.13937 7.08424 5.13937H9.72424C10.1385 5.13937 10.4742 5.47516 10.4742 5.88937V8.47293H11.0437C11.4579 8.47293 11.7937 8.80872 11.7937 9.22293C11.7937 9.63714 11.4579 9.97293 11.0437 9.97293H9.72424C9.31003 9.97293 8.97424 9.63714 8.97424 9.22293V6.63937H7.08424C6.67002 6.63937 6.33424 6.30359 6.33424 5.88937Z\"></path><path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.6938 0.222656C6.28178 0.222656 3.3335 3.14401 3.3335 6.60716C3.3335 8.45673 4.08339 10.3246 5.19997 11.7314C6.30482 13.1233 7.9042 14.2226 9.6938 14.2226C11.665 14.2226 13.4153 13.2212 14.648 11.8162C15.8802 10.4119 16.6668 8.52858 16.6668 6.60716C16.6668 2.95335 13.5182 0.222656 9.6938 0.222656ZM5.3335 6.60716C5.3335 4.24911 7.38582 2.22266 9.6938 2.22266C12.6069 2.22266 14.6668 4.24177 14.6668 6.60716C14.6668 7.99731 14.0883 9.42168 13.1447 10.4972C12.2016 11.572 10.9654 12.2226 9.6938 12.2226C8.7356 12.2226 7.65483 11.6072 6.76648 10.488C5.88985 9.38355 5.3335 7.94375 5.3335 6.60716Z\"></path><path fill=\"${this.colors.color2}\" d=\"M10.3335 15.2229C7.07377 15.2229 4.64185 15.8577 2.98674 17.4554C1.8082 18.593 1.30331 19.7098 0.552809 22.2859L0.552517 22.2869L0.394597 22.825L0.394086 22.8267C0.264281 23.2631 0.162139 23.5882 0.0557032 23.8936C-0.0508641 24.1994 -0.0027492 24.5379 0.184815 24.8019C0.372379 25.0658 0.676169 25.2227 1.00001 25.2227H12.8604C13.1897 24.4069 13.5204 23.7749 13.9036 23.2227H5.86925L6.20042 21.8017C6.32578 21.2638 5.99137 20.7262 5.4535 20.6008C4.91563 20.4755 4.37798 20.8099 4.25262 21.3477L3.81565 23.2227H2.36223L2.47213 22.8483L2.4727 22.8463C3.20154 20.3444 3.58877 19.654 4.37578 18.8943C5.47948 17.8289 7.27486 17.2229 10.3335 17.2229C13.0794 17.2229 14.6838 17.8064 15.6863 18.8296C16.1372 19.2899 16.4572 19.7448 16.8055 20.6178C17.3631 20.3095 17.9745 20.0467 18.644 19.8282C18.2318 18.809 17.786 18.115 17.1149 17.4299C15.5687 15.8517 13.3176 15.2229 10.3335 15.2229Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M23.717 10.7273C23.717 10.3131 24.0528 9.97729 24.467 9.97729H27.7071C28.1213 9.97729 28.4571 10.3131 28.4571 10.7273V14.0685H29.3264C29.7406 14.0685 30.0764 14.4043 30.0764 14.8185C30.0764 15.2327 29.7406 15.5685 29.3264 15.5685H27.7071C27.2928 15.5685 26.9571 15.2327 26.9571 14.8185V11.4773H24.467C24.0528 11.4773 23.717 11.1415 23.717 10.7273Z\"></path><path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M27.6696 3.99997C23.6076 3.99997 20.0911 7.48357 20.0911 11.6082C20.0911 13.8199 20.9894 16.0636 22.3325 17.7557C23.6638 19.4331 25.5678 20.7271 27.6696 20.7271C30.0093 20.7271 32.099 19.538 33.579 17.8513C35.0584 16.1652 36.0001 13.9059 36.0001 11.6082C36.0001 7.27042 32.2596 3.99997 27.6696 3.99997ZM22.0911 11.6082C22.0911 8.58867 24.7116 5.99997 27.6696 5.99997C31.3483 5.99997 34.0001 8.55883 34.0001 11.6082C34.0001 13.3747 33.2665 15.1749 32.0756 16.5322C30.8853 17.8889 29.3097 18.7271 27.6696 18.7271C26.3992 18.7271 25.0138 17.9169 23.899 16.5123C22.7959 15.1225 22.0911 13.3069 22.0911 11.6082Z\" fill=\"#3B4266\"></path><path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.5961 24.8582C21.5647 22.9579 24.477 22.1821 28.4548 22.1821C32.0899 22.1821 34.7791 22.9486 36.615 24.8225C37.9061 26.1403 38.5022 27.4828 39.3818 30.5371L39.3821 30.5383L39.6181 31.3515L39.6185 31.3531C39.7725 31.8762 39.9025 32.2866 40.0363 32.6724C40.1422 32.9781 40.0938 33.3162 39.9061 33.5798C39.7185 33.8434 39.415 34 39.0914 34H17C16.6762 34 16.3724 33.8431 16.1848 33.5791C15.9972 33.3151 15.9491 32.9767 16.0557 32.6709C16.188 32.2912 16.3145 31.8884 16.4743 31.3511L16.4748 31.3494L16.669 30.6878C17.5876 27.5346 18.1942 26.2115 19.5961 24.8582ZM34.8779 29.5232C34.7526 28.9854 34.2149 28.651 33.677 28.7763C33.1392 28.9017 32.8048 29.4393 32.9301 29.9772L33.4016 32H22.6897L23.1611 29.9772C23.2865 29.4393 22.952 28.9017 22.4142 28.7763C21.8763 28.651 21.3387 28.9854 21.2133 29.5232L20.6361 32H18.3679L18.3919 31.9195L18.3929 31.9161L18.5886 31.2492L18.5892 31.2472C19.4862 28.1682 19.9748 27.2725 20.9851 26.2971C22.4023 24.9291 24.6781 24.1821 28.4548 24.1821C31.8517 24.1821 33.8943 24.9033 35.1864 26.2221C36.1118 27.1667 36.5984 28.0988 37.4602 31.0917L37.4608 31.0937L37.6984 31.9124L37.6994 31.916L37.7242 32H35.4552L34.8779 29.5232Z\"></path>`}}export{o as IDSIconAgent};\n", "import{IDSIconAgent as i}from\"./icon-agent-element.js\";import{registerComponent as t}from\"../../../utilities/utils.js\";t(\"ids-icon-agent\",i);\n", "import{IDSAgent as t}from\"./agent-element.js\";import{registerComponent as e}from\"../../utilities/utils.js\";import\"../alert-global/register.js\";import\"../icons/agent/register.js\";e(\"ids-agent\",t);\n", "import * as React from 'react';\nimport { createComponent } from '@lit-labs/react';\nimport '@inera/ids-core/components/expandable/register';\nimport { IDSExpandable as IDSExpandable$1 } from '@inera/ids-core/components/expandable/expandable-element';\n\nconst IDSExpandable = createComponent({\r\n    tagName: 'ids-expandable',\r\n    elementClass: IDSExpandable$1,\r\n    react: React,\r\n});\n\nexport { IDSExpandable };\n", "import { css, unsafeCSS } from 'lit';\n\nvar css_248z = \".ids-expandable{border-bottom:var(--expandable_border-bottom)}.ids-expandable .ids-expandable__button:focus{outline:var(--focus_outline);outline-offset:var(--focus_outline-offset)}.ids-expandable.ids-expandable--expanded.ids-expandable--has-children,.ids-expandable.ids-expandable--inside-card.ids-expandable--has-children{border-bottom:none}.ids-expandable.ids-expandable.ids-expandable--variation-2 .ids-expandable__headline{color:var(--expandable-headline-2_color);font-size:24px;font-style:normal;font-weight:400;letter-spacing:1.5px;line-height:34px;text-transform:uppercase}.ids-expandable.ids-expandable--expanded>.ids-expandable__content{display:block}.ids-expandable.ids-expandable--child .ids-expandable__headline{font-size:var(--IDS-EXPANDABLE--CHILD__HEADLINE__FONT-SIZE)}.ids-expandable .ids-expandable__inner{align-items:center;cursor:pointer;display:flex;min-height:70px;text-align:start}.ids-expandable .ids-expandable__content{display:none;padding-bottom:20px}.ids-expandable .ids-expandable__headline{color:var(--expandable-headline_color);flex-grow:1;font-family:var(--IDS-EXPANDABLE__HEADLINE__FONT-FAMILY);font-size:var(--IDS-EXPANDABLE__HEADLINE__FONT-SIZE);font-weight:var(--IDS-EXPANDABLE__HEADLINE__FONT-WEIGHT);margin:0;padding-bottom:20px;padding-right:10px;padding-top:20px;text-align:start}@media (max-width:1024px){.ids-expandable .ids-expandable__headline{font-size:var(--IDS-EXPANDABLE--MOBILE__HEADLINE__FONT-SIZE)}}.ids-expandable .ids-expandable__icon{align-items:center;background-color:var(--expandable-icon-2-icon);border-radius:50%;display:flex;justify-content:center;min-height:30px;min-width:30px}\";\n\nvar expandableLit = css`${unsafeCSS(css_248z)}`;\n\nexport { expandableLit as default };\n", "import{__decorate as i}from\"tslib\";import{LitElement as e,html as t}from\"lit\";import{property as s,state as d}from\"lit/decorators.js\";import o from\"../styles/global-styles.js\";import{generateId as n}from\"../../utilities/utils.js\";import a from\"@inera/ids-design/components/expandable/expandable-lit\";class r extends e{constructor(){super(...arguments),this.headline=\"\",this.level=1,this.variation=1,this.borderless=!1,this.expanded=!1,this.isExpanded=!1,this.rotation=90,this.isInsideCard=!1,this.hasChildren=!1,this.contentId=n(),this.onKeyPress=i=>{32==i.keyCode&&(i.preventDefault(),this.toggleExpansion())}}firstUpdated(i){super.firstUpdated(i),this.isExpanded=this.expanded,this.handleChildren(),this.isInsideCard=Boolean(this.closest(\"ids-card\"))}handleChildren(){this.querySelectorAll(\"ids-expandable\").length>0&&(this.hasChildren=!0,this.querySelectorAll(\"ids-expandable\").forEach((i=>{i.setAttribute(\"level\",\"2\")})))}toggleExpansion(){this.isExpanded=!this.isExpanded,this.setRotation()}setRotation(){this.rotation=this.isExpanded?-90:90}renderIcon(){return 1===this.level?t`<ids-icon-chevron-bold width=\"16\" height=\"16\" rotate=\"${this.rotation}\"></ids-icon-chevron-bold>`:2===this.level?t`<div class=\"ids-expandable__icon\">${this.isExpanded?t`<ids-icon-minus color=\"white\" width=\"16\" height=\"16\"></ids-icon-minus>`:t`<ids-icon-plus color=\"white\" width=\"16\" height=\"16\"></ids-icon-plus>`}</div>`:t``}render(){return t`<div class=\"ids-expandable ${this.isExpanded?\"ids-expandable--expanded\":\"\"} ${this.isInsideCard?\"ids-expandable--inside-card\":\"\"} ${this.hasChildren?\"ids-expandable--has-children\":\"\"} ${2===this.level?\"ids-expandable--child\":\"\"} ${2===this.variation?\"ids-expandable--variation-2\":\"\"}\"><div class=\"ids-expandable__button\" role=\"button\" tabindex=\"0\" @click=\"${this.toggleExpansion}\" @keydown=\"${this.onKeyPress}\" aria-expanded=\"${this.isExpanded}\" aria-controls=\"${this.contentId}\"><div class=\"ids-expandable__inner ${this.borderless?\"borderless\":\"\"}\"><h2 class=\"ids-expandable__headline\">${this.headline}</h2>${this.renderIcon()}</div></div><div aria-hidden=\"${!this.isExpanded}\" id=\"${this.contentId}\" class=\"ids-expandable__content\"><slot></slot></div></div>`}}r.styles=[o,a],i([s({type:String})],r.prototype,\"headline\",void 0),i([s({type:Number})],r.prototype,\"level\",void 0),i([s({type:Number})],r.prototype,\"variation\",void 0),i([s({type:Boolean})],r.prototype,\"borderless\",void 0),i([s({type:Boolean})],r.prototype,\"expanded\",void 0),i([d()],r.prototype,\"isExpanded\",void 0),i([d()],r.prototype,\"rotation\",void 0),i([d()],r.prototype,\"isInsideCard\",void 0);export{r as IDSExpandable};\n", "import{svg as e}from\"lit\";import{IDSIconBase as t}from\"../icon-base-element.js\";class r extends t{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return e`<path fill=\"${this.colors.color}\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22.5641 2.5641C22.5641 1.14799 21.4161 0 20 0C18.5839 0 17.4359 1.14799 17.4359 2.5641V17.4359H2.5641C1.14799 17.4359 0 18.5839 0 20C0 21.4161 1.14799 22.5641 2.5641 22.5641H17.4359V37.4359C17.4359 38.852 18.5839 40 20 40C21.4161 40 22.5641 38.852 22.5641 37.4359V22.5641H37.4359C38.852 22.5641 40 21.4161 40 20C40 18.5839 38.852 17.4359 37.4359 17.4359H22.5641V2.5641Z\"></path>`}}export{r as IDSIconPlus};\n", "import{IDSIconPlus as i}from\"./icon-plus-element.js\";import{registerComponent as s}from\"../../../utilities/utils.js\";s(\"ids-icon-plus\",i);\n", "import{svg as e}from\"lit\";import{IDSIconBase as t}from\"../icon-base-element.js\";class r extends t{constructor(){super(),this.vbHeight=5,this.vbWidth=40}renderIcon(){return e`<path fill=\"${this.colors.color}\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 2.5C0 1.11929 1.14799 0 2.5641 0H37.4359C38.852 0 40 1.11929 40 2.5C40 3.88071 38.852 5 37.4359 5H2.5641C1.14799 5 0 3.88071 0 2.5Z\"></path>`}}export{r as IDSIconMinus};\n", "import{IDSIconMinus as i}from\"./icon-minus-element.js\";import{registerComponent as m}from\"../../../utilities/utils.js\";m(\"ids-icon-minus\",i);\n", "import{IDSExpandable as i}from\"./expandable-element.js\";import{registerComponent as r}from\"../../utilities/utils.js\";import\"../grid/column/register.js\";import\"../grid/row/register.js\";import\"../icons/chevron-bold/register.js\";import\"../icons/plus/register.js\";import\"../icons/minus/register.js\";r(\"ids-expandable\",i);\n", "import * as React from 'react';\nimport { createComponent } from '@lit-labs/react';\nimport '@inera/ids-core/components/popover/register';\nimport { IDSPopover as IDSPopover$1 } from '@inera/ids-core/components/popover/popover-element';\nimport { IDSPopoverContent as IDSPopoverContent$1 } from '@inera/ids-core/components/popover/content/popover-content-element';\n\nconst IDSPopover = createComponent({\r\n    tagName: 'ids-popover',\r\n    elementClass: IDSPopover$1,\r\n    react: React\r\n});\r\nconst IDSPopoverContent = createComponent({\r\n    tagName: 'ids-popover-content',\r\n    elementClass: IDSPopoverContent$1,\r\n    react: React\r\n});\n\nexport { IDSPopover, IDSPopoverContent };\n", "import{css as o}from\"lit\";var r=o`:host{display:inline-flex}.popover{position:relative;display:inline-block}.popover-trigger{cursor:pointer}.popover-caret.hide,popover-caret-shadow.hide{display:none}.popover-caret{background:#fff;display:block;position:absolute;z-index:4}.popover-caret-border{background-color:var(--popover_border);position:absolute;z-index:1}.popover-caret-border.bottom,.popover-caret-border.bottom-left,.popover-caret-border.bottom-right{height:.6rem;width:1.2rem;clip-path:polygon(0 100%,50% 0,100% 100%);left:50%;bottom:-15px;transform:translateX(-50%)}.popover-caret-border.top,.popover-caret-border.top-left,.popover-caret-border.top-right{background-color:var(--popover_border);height:.6rem;width:1.2rem;clip-path:polygon(0 0,50% 100%,100% 0);transform:translateX(-50%);left:50%;top:-15px}.popover-caret-border.left,.popover-caret-border.left-bottom,.popover-caret-border.left-top{background-color:var(--popover_border);height:1.2rem;width:.6rem;clip-path:polygon(0 0,100% 50%,0 100%);transform:translateY(-50%);top:50%;left:-16px}.popover-caret-border.right,.popover-caret-border.right-bottom,.popover-caret-border.right-top{background-color:var(--popover_border);height:1.2rem;width:.6rem;clip-path:polygon(0 50%,100% 0,100% 100%);transform:translateY(-50%);top:50%;right:-17px}.popover-caret-shadow{height:0;width:0;filter:blur(3px);position:absolute;z-index:1}.popover-caret.bottom,.popover-caret.bottom-left,.popover-caret.bottom-right{height:.6rem;width:1.2rem;clip-path:polygon(0 100%,50% 0,100% 100%);left:50%;bottom:-16px;transform:translateX(-50%)}.popover-caret-shadow.bottom,.popover-caret-shadow.bottom-left,.popover-caret-shadow.bottom-right{border-left:.625rem solid transparent;border-right:.625rem solid transparent;border-bottom:.625rem solid rgba(0,0,0,.3);left:50%;bottom:-16px;transform:translateX(-50%)}.popover-caret.top,.popover-caret.top-left,.popover-caret.top-right{height:.6rem;width:1.2rem;clip-path:polygon(0 0,50% 100%,100% 0);transform:translateX(-50%);left:50%;top:-16px}.popover-caret-shadow.top,.popover-caret-shadow.top-left,.popover-caret-shadow.top-right{left:50%;transform:translateX(-50%);top:-16px;border-left:.625rem solid transparent;border-right:.625rem solid transparent;border-top:.625rem solid rgba(0,0,0,.3)}.popover-caret.right,.popover-caret.right-bottom,.popover-caret.right-top{height:1.2rem;width:.6rem;clip-path:polygon(0 50%,100% 0,100% 100%);transform:translateY(-50%);top:50%;right:-18px}.popover-caret-shadow.right,.popover-caret-shadow.right-bottom,.popover-caret-shadow.right-top{transform:translateY(-50%);top:50%;right:-12px;border-top:.5625rem solid transparent;border-bottom:.5625rem solid transparent;border-right:.5625rem solid rgba(53,53,53,.15)}.popover-caret.left,.popover-caret.left-bottom,.popover-caret.left-top{height:1.2rem;width:.6rem;clip-path:polygon(0 0,100% 50%,0 100%);transform:translateY(-50%);top:50%;left:-17px}.popover-caret-shadow.left,.popover-caret-shadow.left-bottom,.popover-caret-shadow.left-top{transform:translateY(-50%);top:50%;left:-12px;border-top:.5625rem solid transparent;border-bottom:.5625rem solid transparent;border-right:.5625rem solid rgba(53,53,53,.15)}`;export{r as default};\n", "import{__decorate as t}from\"tslib\";import{LitElement as e,html as o}from\"lit\";import{property as s,state as i}from\"lit/decorators.js\";import r from\"../styles/global-styles.js\";import p from\"./popover-styles.js\";class l extends e{constructor(){super(...arguments),this.position=\"bottom\",this.cathegory=\"\",this.srclosetext=\"\",this.isVisible=!1,this.visibilityChanged=()=>{let t=new CustomEvent(\"changedVisibility\",{detail:{isVisible:this.isVisible}});this.dispatchEvent(t)},this.closePopover=()=>{this.hidePopover(),this.shadowRoot?.querySelector(\"#trigger\").focus()}}get popover(){return this.shadowRoot?.querySelector(\".popover\")}get popoverContent(){return this.querySelector(\"ids-popover-content\")}firstUpdated(t){super.firstUpdated(t),this.popoverContent&&(this.popoverContent.setAttribute(\"position\",this.position),this.popoverContent.addEventListener(\"closed\",this.closePopover))}disconnectedCallback(){super.disconnectedCallback(),this.popoverContent?.removeEventListener(\"closed\",this.closePopover)}hidePopover(){this.isVisible=!1,this.popoverContent?.removeAttribute(\"visible\"),this.visibilityChanged()}closeCathegory(){if(this.cathegory){document.querySelectorAll(`ids-popover[cathegory=\"${this.cathegory}\"]`).forEach((t=>{t.hidePopover()}))}}showPopover(){this.closeCathegory(),this.isVisible=!0,this.popoverContent?.setAttribute(\"visible\",\"true\"),this.visibilityChanged()}triggerPopover(t){t.preventDefault(),this.isVisible?this.closePopover():this.showPopover()}render(){return o`<span class=\"popover\"><button id=\"trigger\" tabindex=\"0\" aria-label=\"${this.srclosetext}\" class=\"popover-trigger btn-no-styles focusable\" @click=\"${this.triggerPopover}\"><slot></slot></button> <span class=\"popover-caret ${this.position} ${this.isVisible?\"\":\"hide\"}\"></span> <span class=\"popover-caret-border ${this.position} ${this.isVisible?\"\":\"hide\"}\"></span> <span class=\"popover-caret-shadow ${this.position} ${this.isVisible?\"\":\"hide\"}\"></span><slot name=\"popover-content\"></slot></span>`}}l.styles=[r,p],t([s({type:String})],l.prototype,\"position\",void 0),t([s({type:String,reflect:!0})],l.prototype,\"cathegory\",void 0),t([s({type:String})],l.prototype,\"srclosetext\",void 0),t([i()],l.prototype,\"isVisible\",void 0);export{l as IDSPopover};\n", "import{css as o}from\"lit\";var r=o`:host([visible]){display:block}:host{display:none;position:absolute;width:max-content;color:var(--popover_color)}::slotted(*){color:var(--popover_color)}::slotted(h3){font-weight:700;font-size:1rem;line-height:20px;margin-bottom:10px!important;font-family:var(--popover-headline_font-family)}.popover{background:#fff;border:1px solid var(--popover_border);box-shadow:0 0 10px rgba(0,0,0,.3);border-radius:var(--popover-content_border-radius);padding:20px;position:relative;z-index:2}.content-column{position:relative;max-width:260px;max-height:260px;text-align:left;overflow:auto;overflow-x:hidden;padding-right:20px;margin-right:-17px;scrollbar-color:var(--popover-scroll-thumb_background) var(--popover-scroll-track_background);scroll-margin-top:100}.content-column:focus{outline:var(--focus_outline);outline-offset:10px}.content-column::-webkit-scrollbar{width:14px;position:absolute;margin-left:-20px}.content-column::-webkit-scrollbar-track{background:var(--popover-scroll-track_background);margin-top:35px;margin-left:40px;border-radius:10px}.content-column::-webkit-scrollbar-thumb{background:var(--popover-scroll-thumb_background);border-radius:10px}.content-column::-webkit-scrollbar-thumb:hover{background:#555}.close-btn-col{z-index:1;height:20px}.popover-content{position:relative;z-index:4;flex-direction:row-reverse}`;export{r as default};\n", "import{__decorate as t}from\"tslib\";import{LitElement as s,html as o}from\"lit\";import{property as i}from\"lit/decorators.js\";import{FocusTrapController as e}from\"../../../controllers/FocusTrapController.js\";import l from\"../../styles/global-styles.js\";import p from\"./popover-content-styles.js\";class h extends s{constructor(){super(...arguments),this.focusTrapController=null,this.nofocustrap=!1,this.maxwidth=\"260px\",this.maxheight=\"260px\",this.autofocus=!1,this.position=\"bottom\",this.visible=!1,this.srclosetext=\"Stäng\",this.detectEsc=t=>{27===t.keyCode&&this.visible&&this.closePopover()}}get popover(){return this.closest(\"ids-popover\")}firstUpdated(t){super.firstUpdated(t),this.setAttribute(\"slot\",\"popover-content\"),this.addEventListener(\"keydown\",this.detectEsc),this.nofocustrap||(this.focusTrapController=new e(this))}disconnectedCallback(){super.disconnectedCallback(),this.removeEventListener(\"keydown\",this.detectEsc)}updated(t){t.has(\"visible\")&&(this.setSize(),this.setOffset())}closePopover(){this.visible=!1,this.dispatchEvent(new CustomEvent(\"closed\"))}async setSize(){this.style.maxWidth=this.maxwidth,this.style.maxHeight=this.maxheight}setOffset(){const t=this.offsetWidth,s=this.parentElement.offsetWidth,o=this.offsetHeight,i=this.parentElement.offsetHeight;\"top\"===this.position&&(this.style.left=`-${t/2-s/2}px`,this.style.bottom=\"calc(100% + 55px)\"),\"top-right\"===this.position&&(this.style.right=\"0px\",this.style.bottom=\"calc(100% + 55px)\"),\"top-left\"===this.position&&(this.style.left=\"0px\",this.style.bottom=\"calc(100% + 55px)\"),\"right\"===this.position&&(this.style.left=\"calc(100% + 15px)\",this.style.top=`-${o/2-i/2}px`),\"right-top\"===this.position&&(this.style.left=\"calc(100% + 15px)\",this.style.top=\"0px\"),\"right-bottom\"===this.position&&(this.style.left=\"calc(100% + 15px)\",this.style.bottom=\"0px\"),\"bottom\"===this.position&&(this.style.left=`-${t/2-s/2}px`,this.style.top=\"calc(100% + 15px)\"),\"bottom-right\"===this.position&&(this.style.right=\"0px\",this.style.top=\"calc(100% + 15px)\"),\"bottom-left\"===this.position&&(this.style.left=\"0px\",this.style.top=\"calc(100% + 15px)\"),\"left\"===this.position&&(this.style.right=\"calc(100% + 15px)\",this.style.top=`-${o/2-i/2}px`),\"left-top\"===this.position&&(this.style.right=\"calc(100% + 15px)\",this.style.top=\"0px\"),\"left-bottom\"===this.position&&(this.style.right=\"calc(100% + 15px)\",this.style.bottom=\"0px\")}render(){return o`<div class=\"popover\"><ids-row class=\"popover-content ${this.position}\"><ids-col class=\"close-btn-col\" cols=\"auto\"><button id=\"close-btn\" aria-label=\"${this.srclosetext}\" tabindex=\"0\" @click=\"${this.closePopover}\" class=\"btn-no-styles focusable close-btn\"><ids-icon-close-bold color=\"var(--popover-icon_color)\" class=\"focusable\" width=\"20\" height=\"20\"></ids-icon-close-bold></button></ids-col><ids-col tabindex=\"0\" class=\"content-column\" style=\"max-width:${this.maxwidth};max-height:${this.maxheight}\"><slot></slot></ids-col></ids-row></div>`}}h.styles=[l,p],t([i({type:Boolean})],h.prototype,\"nofocustrap\",void 0),t([i({type:String})],h.prototype,\"maxwidth\",void 0),t([i({type:String})],h.prototype,\"maxheight\",void 0),t([i({type:Boolean,reflect:!0})],h.prototype,\"autofocus\",void 0),t([i({type:String})],h.prototype,\"position\",void 0),t([i({type:Boolean,reflect:!0})],h.prototype,\"visible\",void 0),t([i({type:String,reflect:!0})],h.prototype,\"srclosetext\",void 0);export{h as IDSPopoverContent};\n", "import{IDSPopover as o}from\"./popover-element.js\";import{IDSPopoverContent as e}from\"./content/popover-content-element.js\";import{registerComponent as t}from\"../../utilities/utils.js\";t(\"ids-popover\",o),t(\"ids-popover-content\",e);\n", "import * as React from 'react';\nimport { createComponent } from '@lit-labs/react';\nimport '@inera/ids-core/components/progressbar/register';\nimport { IDSProgressbar as IDSProgressbar$1 } from '@inera/ids-core/components/progressbar/progressbar-element';\n\nconst IDSProgressbar = createComponent({\r\n    tagName: 'ids-progressbar',\r\n    elementClass: IDSProgressbar$1,\r\n    react: React\r\n});\n\nexport { IDSProgressbar };\n", "import { css, unsafeCSS } from 'lit';\n\nvar css_248z = \".ids-progressbar{border:var(--progressbar_border);border-radius:10px;box-sizing:border-box;height:15px;position:relative}@media (max-width:1024px){.ids-progressbar{height:10px}}.ids-progressbar .ids-progressbar__progress{background-color:var(--progressbar-fill_background-color);border-radius:10px;display:block;height:15px;left:0;margin-left:-1px;margin-top:-1px;transition:width .3s ease;width:15%}@media (max-width:1024px){.ids-progressbar .ids-progressbar__progress{height:10px}}.ids-progressbar .ids-progressbar__progress--none{display:none}.ids-progressbar .ids-progressbar__label{color:var(--progressbar_color);display:flex;font-size:1.25rem;font-weight:700;justify-content:center;letter-spacing:-.4px;line-height:24px;margin-top:15px}\";\n\nvar progressbarLit = css`${unsafeCSS(css_248z)}`;\n\nexport { progressbarLit as default };\n", "import{__decorate as r}from\"tslib\";import{LitElement as e,html as s}from\"lit\";import{property as i}from\"lit/decorators.js\";import a from\"@inera/ids-design/components/progressbar/progressbar-lit\";class o extends e{constructor(){super(...arguments),this.value=0,this.hidelabel=!1}renderLabel(){return this.hidelabel?null:s`<div class=\"ids-progressbar__label\">${this.value}%</div>`}render(){return s`<div class=\"ids-progressbar\" role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\" aria-valuenow=\"${this.value}\"><div class=\"${0==this.value?\"ids-progressbar__progress--none\":\"ids-progressbar__progress\"}\" style=\"width:calc(${this.value}% + 2px)\"></div>${this.renderLabel()}</div>`}}o.styles=[a],r([i({type:Number})],o.prototype,\"value\",void 0),r([i({type:Boolean})],o.prototype,\"hidelabel\",void 0);export{o as IDSProgressbar};\n", "import{IDSProgressbar as r}from\"./progressbar-element.js\";import{registerComponent as i}from\"../../utilities/utils.js\";import\"../grid/column/register.js\";import\"../grid/row/register.js\";i(\"ids-progressbar\",r);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/badge/register';\nimport { IDSBadge as IDSBadge$1 } from '@inera/ids-core/components/badge/badge-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSBadge = createComponent({\r\n    tagName: 'ids-badge',\r\n    elementClass: IDSBadge$1,\r\n    react: React,\r\n});\n\nexport { IDSBadge };\n", "import { css, unsafeCSS } from 'lit';\n\nvar css_248z = \".ids-badge{align-items:center;border-radius:5px;color:var(--IDS-BADGE__COLOR);display:inline-flex;font-size:.875rem;font-weight:400;height:30px;justify-items:center;padding:0 10px;text-transform:uppercase}.ids-badge.ids-badge--primary{background-color:var(--IDS-BADGE--PRIMARY__BACKGROUND-COLOR);border:var(--IDS-BADGE--PRIMARY__BORDER);color:var(--IDS-BADGE--PRIMARY__COLOR)}.ids-badge.ids-badge--neutral{background-color:var(--IDS-BADGE--NEUTRAL__BACKGROUND-COLOR);border:var(--IDS-BADGE--NEUTRAL__BORDER)}.ids-badge.ids-badge--info{background-color:var(--IDS-BADGE--INFO__BACKGROUND-COLOR);border:var(--IDS-BADGE--INFO__BORDER)}.ids-badge.ids-badge--attention{background-color:var(--IDS-BADGE--ATTENTION__BACKGROUND-COLOR);border:var(--IDS-BADGE--ATTENTION__BORDER)}.ids-badge.ids-badge--success{background-color:var(--IDS-BADGE--SUCCESS__BACKGROUND-COLOR);border:var(--IDS-BADGE--SUCCESS__BORDER)}.ids-badge.ids-badge--error{background-color:var(--IDS-BADGE--ERROR__BACKGROUND-COLOR);border:var(--IDS-BADGE--ERROR__BORDER)}.ids-badge.ids-badge--secondary{background-color:var(--IDS-BADGE--SECONDARY__BACKGROUND-COLOR);border:var(--IDS-BADGE--SECONDARY__BORDER)}@media (max-width:1024px){.ids-badge{font-size:.75em;height:24px;padding:0 10px}}\";\n\nvar badgeLit = css`${unsafeCSS(css_248z)}`;\n\nexport { badgeLit as default };\n", "import{__decorate as t}from\"tslib\";import{LitElement as r,html as e}from\"lit\";import{property as s}from\"lit/decorators.js\";import i from\"@inera/ids-design/components/badge/badge-lit\";class o extends r{constructor(){super(...arguments),this.type=\"primary\"}render(){return e`<div class=\"ids-badge ids-badge--${this.type}\"><slot></slot></div>`}}o.styles=[i],t([s({type:String,reflect:!0})],o.prototype,\"type\",void 0);export{o as IDSBadge};\n", "import{IDSBadge as i}from\"./badge-element.js\";import{registerComponent as e}from\"../../utilities/utils.js\";e(\"ids-badge\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/tooltip/register';\nimport { IDSTooltip as IDSTooltip$1 } from '@inera/ids-core/components/tooltip/tooltip-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSTooltip = createComponent({\r\n    tagName: 'ids-tooltip',\r\n    elementClass: IDSTooltip$1,\r\n    react: React\r\n});\n\nexport { IDSTooltip };\n", "import{css as o}from\"lit\";var p=o`.popover{display:inline-block;position:relative!important;color:var(--tooltip_color)}.popover .tooltip{display:none}.popover:focus-within .tooltip,.popover:hover .tooltip,.tooltip-wrapper:hover+.tooltip,.trigger-wrapper{display:inline-block}.tooltip-wrapper{position:absolute;text-align:left;width:max-content;z-index:2}.tooltip{background-color:#fff;border:1px solid var(--tooltip_border-color);box-shadow:0 0 10px rgba(0,0,0,.3);border-radius:var(--IDS_BORDER-RADIUS);padding:10px 20px}`;export{p as default};\n", "import{LitElement as t,html as e}from\"lit\";import{generateId as i}from\"../../utilities/utils.js\";import s from\"../styles/global-styles.js\";import r from\"./tooltip-styles.js\";class o extends t{constructor(){super(...arguments),this.translateX=\"\",this.translateY=\"\",this.handleOverflow=async()=>{if(this.trigger&&this.tooltipWrapper){this.resetPosition();let{style:t}=this.tooltipWrapper;this.requestUpdate(),await this.updateComplete;let e=this.tooltipWrapper.getBoundingClientRect();let i=!1;if(e.width>document.documentElement.clientWidth){let e=this.trigger.getBoundingClientRect().x<20?20:20-this.trigger.getBoundingClientRect().x;t.left=e+\"px\",t.width=document.documentElement.clientWidth-40+\"px\",this.translateY=\"translateY(-100%)\",i=!0}e.right+40>document.querySelector(\"body\").offsetWidth&&!i&&(t.width=\"max-content\",t.left=\"auto\",t.right=\"0px\",this.translateX=\"translateX(0%)\");if(this.tooltipWrapper.getBoundingClientRect().x<0&&!i){t.width=\"max-content\",t.left=\"0px\",t.right=\"auto\",this.translateX=\"translateX(0%)\";this.trigger.getBoundingClientRect().x+e.width>document.documentElement.clientWidth&&(t.width=document.documentElement.clientWidth-this.trigger.getBoundingClientRect().left-40+\"px\")}e.top<0&&(t.top=\"\",this.translateY=\"translateY(100%)\",t.bottom=\"-10px\"),t.transform=`${this.translateX} ${this.translateY}`}},this.checkKey=t=>{27===t.keyCode&&document.activeElement?.blur()}}get trigger(){return this.querySelector(\"[slot=trigger]\")}get tooltip(){return this.querySelector(\"[slot=tooltip]\")}get tooltipWrapper(){return this.shadowRoot?.querySelector(\".tooltip-wrapper\")}getFirstFocusableContent(){return this.trigger?.parentElement?this.trigger.parentElement.querySelector('ids-button, button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'):null}firstUpdated(t){super.firstUpdated(t),this.setupTrigger(),this.setupTooltip(),this.setupEventListeners()}setupEventListeners(){this.addEventListener(\"focusin\",this.handleOverflow),this.addEventListener(\"mouseenter\",this.handleOverflow)}resetPosition(){if(this.tooltipWrapper){let{style:t}=this.tooltipWrapper;t.width=\"max-content\",t.left=\"50%\",this.translateX=\"translateX(-50%)\",this.translateY=\"translateY(-100%)\",t.transform=`${this.translateX} ${this.translateY}`,t.top=\"-10px\",t.bottom=\"\"}}disconnectedCallback(){super.disconnectedCallback(),this.removeEventListener(\"focusin\",this.handleOverflow),this.removeEventListener(\"mouseenter\",this.handleOverflow)}setupTrigger(){if(this.tooltip&&this.trigger){let t=this.tooltip.getAttribute(\"id\")||i();this.tooltip.setAttribute(\"id\",t),\"ids-icon\"===this.trigger.tagName.toLocaleLowerCase()?this.getFirstFocusableContent()?.setAttribute(\"aria-labelledby\",t):this.getFirstFocusableContent()?.setAttribute(\"aria-describedby\",t),this.addEventListener(\"keydown\",this.checkKey)}}setupTooltip(){this.tooltip?.setAttribute(\"role\",\"tooltip\")}render(){return e`<span class=\"popover\"><span class=\"trigger-wrapper\"><slot name=\"trigger\"></slot></span><span class=\"tooltip-wrapper\"><span class=\"tooltip\"><slot name=\"tooltip\"></slot></span></span></span>`}}o.styles=[s,r];export{o as IDSTooltip};\n", "import{IDSTooltip as t}from\"./tooltip-element.js\";import{registerComponent as i}from\"../../utilities/utils.js\";i(\"ids-tooltip\",t);\n", "import * as React from 'react';\nimport { createComponent } from '@lit-labs/react';\nimport '@inera/ids-core/components/navigation/content/register';\nimport { IDSNavigationContent as IDSNavigationContent$1 } from '@inera/ids-core/components/navigation/content/navigation-content-element';\n\nconst IDSNavigationContent = createComponent({\r\n    tagName: 'ids-navigation-content',\r\n    elementClass: IDSNavigationContent$1,\r\n    react: React\r\n});\n\nexport { IDSNavigationContent };\n", "import{css as t}from\"lit\";var o=t`#content-navigation-wrapper{position:relative}#content-navigation{width:100%;box-shadow:0 0 10px rgba(27,27,27,.2);border-radius:var(--content-navigation_border-radius);overflow:hidden;background-color:#fff;position:relative}#content-navigation-inner{padding:20px;border-top:var(--content-navigation_border-top);position:relative}.caret{position:absolute;height:1.4rem;width:1.4rem;clip-path:polygon(0 0,0 100%,100% 100%);top:20px;left:-9px;background-color:#fff;transform:rotate(45deg);z-index:2}.caret-shadow{position:absolute;top:8px;left:-19px;filter:blur(5px);border-top:1.4em solid transparent;border-bottom:1.4em solid transparent;border-right:1.4em solid rgba(53,53,53,.1)}#content-navigation-headline{font-family:var(--content-navigation_font-family);font-weight:var(--content-navigation_font-weight);font-size:var(--content-navigation_font-size);line-height:var(--content-navigation_line-height);letter-spacing:var(-.4px);text-transform:var(--content-navigation_text-transform);padding-bottom:5px;color:var(--content-navigation_color);margin:0}::slotted(*){display:block}::slotted(*)::before{display:block;content:\" \";height:1px;width:100%;background-color:var(--content-navigation-separator_background-color);margin-bottom:10px;margin-top:10px}`;export{o as default};\n", "import{__decorate as t}from\"tslib\";import{LitElement as i,html as e}from\"lit\";import{property as n}from\"lit/decorators.js\";import o from\"./navigation-content-styles.js\";class r extends i{constructor(){super(...arguments),this.headline=\"\"}firstUpdated(t){super.firstUpdated(t),this.querySelectorAll(\"ids-link\").forEach((t=>{t.setAttribute(\"block\",\"true\")}))}render(){return e`<div id=\"content-navigation-wrapper\"><div class=\"caret\"></div><div class=\"caret-shadow\"></div><div id=\"content-navigation\"><nav aria-labelledby=\"content-navigation-headline\" id=\"content-navigation-inner\"><h2 id=\"content-navigation-headline\">${this.headline}</h2><slot></slot></nav></div></div>`}}r.styles=[o],t([n({type:String})],r.prototype,\"headline\",void 0);export{r as IDSNavigationContent};\n", "import{IDSNavigationContent as t}from\"./navigation-content-element.js\";import{registerComponent as i}from\"../../../utilities/utils.js\";i(\"ids-navigation-content\",t);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/carousel/register';\nimport { IDSCarousel as IDSCarousel$1 } from '@inera/ids-core/components/carousel/carousel-element';\nimport { IDSCarouselItem as IDSCarouselItem$1 } from '@inera/ids-core/components/carousel/carousel-item/carousel-item-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSCarousel = createComponent({\r\n    tagName: 'ids-carousel',\r\n    elementClass: IDSCarousel$1,\r\n    react: React,\r\n});\r\nconst IDSCarouselItem = createComponent({\r\n    tagName: 'ids-carousel-item',\r\n    elementClass: IDSCarouselItem$1,\r\n    react: React,\r\n});\n\nexport { IDSCarousel, IDSCarouselItem };\n", "import{css as e}from\"lit\";var t=e`.carousel-wrapper{position:relative}.carousel{-webkit-transform-style:preserve-3d;-moz-transform-style:preserve-3d;transform-style:preserve-3d;overflow:hidden;width:calc(100% - 100px);margin-left:50px;margin-right:50px;border-radius:3px;border:var(--carousel_border)}@media only screen and (max-width:1024px){.carousel{width:calc(100% - 40px);margin-left:20px;margin-right:20px}}::slotted(.carousel-slide){position:absolute;top:0;display:inline-block;width:100%;z-index:100;transition:left .5s ease-in-out}::slotted(.carousel-slide.active),::slotted(.carousel-slide.initial){opacity:1;position:relative;z-index:900;left:0}::slotted(.carousel-slide.next),::slotted(.carousel-slide.prev){z-index:800}::slotted(.carousel-slide.next),::slotted(.carousel-slide.prev){z-index:800}.animating-right ::slotted(.carousel-slide.prev){z-index:900}.animating-right ::slotted(.carousel-slide.next){z-index:700}.animating-left ::slotted(.carousel-slide.prev){z-index:700}.animating-left ::slotted(.carousel-slide.next){z-index:900}::slotted(.carousel-slide.prev){left:-100%}::slotted(.carousel-slide.next){left:100%}.carousel-btn-next,.carousel-btn-prev{opacity:0;transition:opacity .3s ease-in;position:absolute;top:calc(40% - 48px);width:3rem;background:0 0;height:50%;transform:translateY(-50%);cursor:pointer;border:none;padding:0;z-index:1001;display:flex;align-items:center;justify-content:center}.carousel-btn-prev{left:0}.carousel-btn-next{right:0}.carousel-inner-btn{display:flex;justify-content:center;align-items:center;background-color:var(--carousel-icon_background-color);box-shadow:0 0 6px rgba(0,0,0,.3);height:48px;width:24px;border-radius:24px 0 0 24px;box-shadow:rgb(0 0 0 / 30%) 0 0p}.carousel-btn-prev .carousel-inner-btn{border-radius:0 24px 24px 0}.carousel-inner-btn .ids-icon{width:15px}.carousel-btn-prev .ids-icon{padding-right:5px}.carousel-btn-next .ids-icon{padding-left:5px}.carousel-btn-next.mobile,.carousel-btn-prev.mobile{display:none}@media only screen and (max-width:1024px){.carousel-btn-next,.carousel-btn-prev{display:none}.carousel-btn-next.mobile,.carousel-btn-prev.mobile{display:flex}}`;export{t as default};\n", "import{__decorate as t}from\"tslib\";import{LitElement as i,html as s}from\"lit\";import{property as e,state as a}from\"lit/decorators.js\";import{logWarning as o}from\"../../utilities/utils.js\";import l from\"./carousel-styles.js\";class h extends i{constructor(){super(...arguments),this.autoplay=!1,this.srnextlabel=\"Nästa slide\",this.srprevlabel=\"Föregående slide\",this.autoplaydelay=5e3,this.activeSlideIndex=0,this.isAnimating=!1,this.isAnimatingLeft=!1,this.isAnimatingRight=!1,this.itemClassName=\"carousel-slide\",this.touchStartX=0,this.touchEndX=0,this.nextSlide=()=>{this.isAnimating||(this.isAnimatingRight=!0,this.resetSlides(),this.activeSlideIndex===this.slidesCount-1?this.activeSlideIndex=0:this.activeSlideIndex++,this.moveToActiveSlide())}}get slides(){return Array.from(this.children)}get images(){return this.querySelectorAll(\"img\")}get slidesCount(){return this.slides.length}firstUpdated(t){super.firstUpdated(t),this.slidesCount<3&&o(this,\"Carousel requires at least 3 carousel-items.\"),this.autoplay&&this.startAutoplay(),this.setupCarousel(),this.addSlideFunctionality(),this.detectResize(),this.images[0]?.addEventListener(\"load\",(()=>{this.setButtonLocation(),this.displayButtons()}))}updated(t){super.updated(t),t.has(\"autoplay\")&&this.autoplay&&this.startAutoplay()}detectResize(){new ResizeObserver((t=>{t.forEach((()=>{this.setButtonLocation()}))})).observe(this.shadowRoot?.querySelector(\".carousel\"))}setButtonLocation(){const t=this.querySelector('[slot=\"image\"]')?.offsetHeight,i=t/2;this.shadowRoot?.querySelectorAll(\"button\").forEach((s=>{s.style.top=`${i}px`,s.style.height=`${t}px`}))}displayButtons(){this.shadowRoot?.querySelectorAll(\"button\").forEach((t=>{setTimeout((()=>{t.style.opacity=\"1\"}),200)}))}startAutoplay(){this.autoplay&&(this.autoplaydelay<500&&(this.autoplaydelay=500),setTimeout((()=>{this.nextSlide(),this.startAutoplay()}),this.autoplaydelay))}setupCarousel(){this.slidesCount>2&&(this.slides.forEach((t=>{t.classList.add(this.itemClassName),t.setAttribute(\"aria-hidden\",\"true\")})),this.slides[this.slidesCount-1]?.classList.add(\"prev\"),this.slides[0]?.classList.add(\"active\"),this.slides[0]?.setAttribute(\"aria-hidden\",\"false\"),this.slides[1]?.classList.add(\"next\"))}moveToActiveSlide(){this.isAnimating=!0;let t=this.activeSlideIndex-1,i=this.activeSlideIndex+1;0===this.activeSlideIndex?t=this.slidesCount-1:this.activeSlideIndex===this.slidesCount-1&&(t=this.activeSlideIndex-1,i=0),this.slidesCount>=3&&(this.slides[t].className=this.itemClassName+\" prev\",this.slides[this.activeSlideIndex].className=this.itemClassName+\" active\",this.slides[this.activeSlideIndex].setAttribute(\"aria-hidden\",\"false\"),this.slides[i].className=this.itemClassName+\" next\"),setTimeout((()=>{this.isAnimating=!1,this.isAnimatingLeft=!1,this.isAnimatingRight=!1}),500)}addSlideFunctionality(){this.addEventListener(\"touchstart\",(t=>{this.touchStartX=t.changedTouches[0].screenX})),this.addEventListener(\"touchend\",(t=>{this.touchEndX=t.changedTouches[0].screenX,this.checkDirection()}))}resetSlides(){this.slides.forEach((t=>{t.className=this.itemClassName,t.setAttribute(\"aria-hidden\",\"true\")}))}previousSlide(){this.isAnimating||(this.isAnimatingLeft=!0,this.resetSlides(),0===this.activeSlideIndex?this.activeSlideIndex=this.slidesCount-1:this.activeSlideIndex--,this.moveToActiveSlide())}checkDirection(){this.touchEndX<this.touchStartX&&this.touchStartX-this.touchEndX>=100&&this.nextSlide(),this.touchEndX>this.touchStartX&&this.touchStartX-this.touchEndX<=-100&&this.previousSlide()}getAnimationClasses(){if(this.isAnimating){return`${this.isAnimatingLeft?\"animating-left\":\"\"} ${this.isAnimatingRight?\"animating-right\":\"\"}`}return\"\"}render(){return s`<div class=\"carousel-wrapper\"><button aria-label=\"${this.srprevlabel}\" @click=\"${this.previousSlide}\" class=\"carousel-btn-prev focusable\"><ids-icon-chevron color=\"var(--carousel-icon_color)\" rotate=\"180\" width=\"25\"></ids-icon-chevron></button> <button aria-label=\"${this.srnextlabel}\" @click=\"${this.nextSlide}\" class=\"carousel-btn-next focusable\"><ids-icon-chevron color=\"var(--carousel-icon_color)\" width=\"25\"></ids-icon-chevron></button> <button aria-label=\"${this.srprevlabel}\" @click=\"${this.previousSlide}\" class=\"carousel-btn-prev mobile focusable\"><div class=\"carousel-inner-btn\"><ids-icon-chevron color=\"white\" rotate=\"180\" width=\"25\"></ids-icon-chevron></div></button> <button aria-label=\"${this.srnextlabel}\" @click=\"${this.nextSlide}\" class=\"carousel-btn-next mobile focusable\"><div class=\"carousel-inner-btn\"><ids-icon-chevron color=\"white\" width=\"25\"></ids-icon-chevron></div></button><div class=\"carousel ${this.getAnimationClasses()}\"><div aria-live=\"polite\"><slot></slot></div></div></div>`}}h.styles=[l],t([e({type:Boolean,reflect:!0})],h.prototype,\"autoplay\",void 0),t([e({type:String})],h.prototype,\"srnextlabel\",void 0),t([e({type:String})],h.prototype,\"srprevlabel\",void 0),t([e({type:Number})],h.prototype,\"autoplaydelay\",void 0),t([a()],h.prototype,\"activeSlideIndex\",void 0),t([a()],h.prototype,\"isAnimating\",void 0);export{h as IDSCarousel};\n", "import{css as o}from\"lit\";var e=o`::slotted(*),:host{color:var(--carousel_color);font-family:var(--carousel_font-family)}#carousel-item{display:flex;flex-direction:column;flex-shrink:0;background-color:var(--carousel_background-color)}#carousel-headline{font-family:var(--carousel-headline_font-family)}#item-image{display:flex;justify-content:center;overflow:hidden;position:relative;padding-top:66.6666666667%}#item-content{padding:20px;flex:6}#item-content-row{margin-top:30px;flex:6}.item-description,.item-slides{background-color:var(--carousel-description_background-color);border-radius:15px;padding:5px 10px}.item-description{color:var(--carousel-description_color)}.item-slides{background-color:var(--carousel-slides_background-color)}@media only screen and (max-width:1024px){#item-content-row{flex-direction:column-reverse}#item-content-row{margin-top:20px}.item-description{display:inline-block;margin-bottom:15px}.item-description{padding:var(--carousel-description--mobile_padding)}}@media only screen and (max-width:640px){#item-content-row{margin-top:10px}.item-slides{margin-bottom:10px}}::slotted([slot=image]){left:50%;max-height:100%;max-width:100%;position:absolute;top:50%;-webkit-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%)}`;export{e as default};\n", "import{__decorate as t}from\"tslib\";import{LitElement as i,html as e}from\"lit\";import{property as s}from\"lit/decorators.js\";import o from\"./carousel-item-styles.js\";class r extends i{constructor(){super(...arguments),this.headline=\"\",this.step=\"\",this.description=\"\"}firstUpdated(t){super.firstUpdated(t),this.querySelector(\"img\")?.setAttribute(\"slot\",\"image\")}renderDescription(){return this.description?e`<ids-col s=\"12\" cols=\"auto\"><span class=\"item-description\">${this.description}</span></ids-col>`:e``}render(){return e`<div id=\"carousel-item\"><div id=\"item-image\"><slot name=\"image\"></slot></div><div id=\"item-content\"><h2 id=\"carousel-headline\">${this.headline}</h2><slot></slot><ids-row id=\"item-content-row\" justify=\"space-between\"><ids-col s=\"12\" cols=\"auto\"><span class=\"item-slides\">${this.step}</span></ids-col>${this.renderDescription()}</ids-row></div></div>`}}r.styles=[o],t([s({type:String})],r.prototype,\"headline\",void 0),t([s({type:String})],r.prototype,\"step\",void 0),t([s({type:String})],r.prototype,\"description\",void 0);export{r as IDSCarouselItem};\n", "import{svg as e}from\"lit\";import{IDSIconBase as t}from\"../icon-base-element.js\";class r extends t{constructor(){super(),this.vbHeight=10,this.vbWidth=5}renderIcon(){return e`<path fill=\"${this.colors.color}\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.45327 4.54673C5.70361 4.79706 5.70361 5.20294 5.45327 5.45327L1.0943 9.81225C0.843963 10.0626 0.438088 10.0626 0.187752 9.81225C-0.062584 9.56191 -0.062584 9.15604 0.187752 8.9057L4.09345 5L0.187752 1.0943C-0.0625836 0.843963 -0.0625836 0.438088 0.187752 0.187752C0.438089 -0.062584 0.843963 -0.062584 1.0943 0.187752L5.45327 4.54673Z\"></path>`}}export{r as IDSIconChevron};\n", "import{IDSIconChevron as i}from\"./icon-chevron-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-chevron\",i);\n", "import{IDSCarousel as r}from\"./carousel-element.js\";import{IDSCarouselItem as e}from\"./carousel-item/carousel-item-element.js\";import{registerComponent as i}from\"../../utilities/utils.js\";import\"../icons/chevron/register.js\";import\"../grid/column/register.js\";import\"../grid/row/register.js\";i(\"ids-carousel\",r),i(\"ids-carousel-item\",e);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/tag/register';\nimport { IDSTag as IDSTag$1 } from '@inera/ids-core/components/tag/tag-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSTag = createComponent({\r\n    tagName: 'ids-tag',\r\n    elementClass: IDSTag$1,\r\n    react: React,\r\n    events: {\r\n        onClosed: 'closed',\r\n        onClicked: 'clicked',\r\n    },\r\n});\n\nexport { IDSTag };\n", "import { css, unsafeCSS } from 'lit';\n\nvar css_248z = \".ids-tag{align-content:center;background-color:var(--IDS-TAG__BACKGROUND-COLOR);border:1px solid;border-color:var(--IDS-TAG__BORDER-COLOR);border-radius:var(--IDS-TAG__BORDER-RADIUS);color:var(--IDS-TAG__COLOR);display:inline-flex;flex-wrap:wrap;font-family:var(--IDS-TAG__FONT-FAMILY);justify-content:center;line-height:1.5rem;padding:var(--IDS-TAG__PADDING)}.ids-tag.ids-tag--interactive{border-color:var(--IDS-TAG--INTERACTIVE__BORDER-COLOR);color:var(--IDS-TAG--INTERACTIVE__COLOR);cursor:pointer;font-weight:var(--IDS-TAG--INTERACTIVE__FONT-WEIGHT)}.ids-tag.ids-tag--interactive:focus{outline:var(--focus_outline);outline-offset:var(--focus_outline-offset)}.ids-tag .ids-tag__close-btn{align-items:center;background:none;border:none;border-radius:20px;color:inherit;cursor:pointer;display:flex;font:inherit;height:24px;justify-content:center;margin-left:8px;min-height:24px;min-width:24px;outline:inherit;padding:0;-moz-user-select:-moz-none;-khtml-user-select:none;-webkit-user-select:none;-ms-user-select:none;user-select:none;width:24px}.ids-tag .ids-tag__close-btn:focus{outline:var(--focus_outline);outline-offset:var(--focus_outline-offset)}\";\n\nvar tagLit = css`${unsafeCSS(css_248z)}`;\n\nexport { tagLit as default };\n", "import{__decorate as t}from\"tslib\";import{css as e,LitElement as s,html as i}from\"lit\";import{property as l}from\"lit/decorators.js\";import o from\"@inera/ids-design/components/tag/tag-lit\";class c extends s{constructor(){super(...arguments),this.clickable=!1,this.closeable=!1,this.srcloselabel=\"\"}firstUpdated(t){super.firstUpdated(t),this.clickable&&this.setAttribute(\"tabindex\",\"0\"),this.clickable&&this.addEventListener(\"click\",this.clicked)}clicked(){let t=new CustomEvent(\"clicked\",{detail:{isClicked:!0}});this.dispatchEvent(t)}close(t){t.stopPropagation();let e=new CustomEvent(\"closed\",{detail:{isClosed:!0}});this.dispatchEvent(e)}renderCloseButton(){return this.closeable?i`<button @click=\"${this.close}\" aria-label=\"${this.srcloselabel}\" class=\"ids-tag__close-btn\"><ids-icon-close-bold color=\"var(--IDS-TAG__ICON__COLOR)\" width=\"14\" height=\"14\"></ids-icon-close-bold></button>`:i``}render(){return i`<span class=\"ids-tag ${this.clickable?\"ids-tag--interactive\":\"\"}\"><slot></slot>${this.renderCloseButton()}</span>`}}c.styles=[o,e`:host{display:inline-block;border-radius:var(--IDS-TAG__BORDER-RADIUS)}`],t([l({type:Boolean})],c.prototype,\"clickable\",void 0),t([l({type:Boolean})],c.prototype,\"closeable\",void 0),t([l({type:String})],c.prototype,\"srcloselabel\",void 0);export{c as IDSTag};\n", "import{IDSTag as i}from\"./tag-element.js\";import{registerComponent as r}from\"../../utilities/utils.js\";import\"../icons/close-bold/register.js\";import\"../grid/column/register.js\";import\"../grid/row/register.js\";r(\"ids-tag\",i);\n", "import * as React from 'react';\nimport { createComponent } from '@lit-labs/react';\nimport '@inera/ids-core/components/stepper/register';\nimport { IDSStepper as IDSStepper$1 } from '@inera/ids-core/components/stepper/stepper-element';\nimport { IDSStep as IDSStep$1 } from '@inera/ids-core/components/stepper/step/step-element';\n\nconst IDSStepper = createComponent({\r\n    tagName: 'ids-stepper',\r\n    elementClass: IDSStepper$1,\r\n    react: React\r\n});\r\nconst IDSStep = createComponent({\r\n    tagName: 'ids-step',\r\n    elementClass: IDSStep$1,\r\n    react: React\r\n});\n\nexport { IDSStep, IDSStepper };\n", "import{LitElement as t,html as e}from\"lit\";class r extends t{firstUpdated(t){super.firstUpdated(t);const e=this.querySelectorAll(\"ids-step\");e?.forEach(((t,r)=>{t.setAttribute(\"step\",r+1+\"\"),r===e.length-1&&t.setAttribute(\"last\",\"true\")}))}render(){return e`<slot></slot>`}}export{r as IDSStepper};\n", "import{css as e}from\"lit\";var t=e`.step{margin-bottom:20px;padding:20px;position:relative;border:var(--stepper-step_border);border-radius:5px;background-color:#fff}@media only screen and (max-width:1024px){.step{margin-bottom:15px;padding:15px}}.step::after{content:\" \";position:absolute;background-color:var(--stepper-step--after_background-color);height:20px;width:4px;bottom:-21px;left:40px}@media only screen and (max-width:1024px){.step::after{bottom:-16px;height:15px;left:35px}}:host([last]) .step::after{content:none}#step-btn{width:100%;display:block;background:0 0;border:none;border-radius:5px;cursor:pointer}#step-btn.disabled{pointer-events:none}.chevron{padding-right:10px;padding-left:10px}.chevron-col{justify-content:end;align-items:end;display:flex}.step-text-row{padding-left:20px;flex-direction:column}@media only screen and (max-width:1024px){.step-text-row{padding-left:15px}}.label{font-size:1rem;color:var(--stepper-step-label_color)}#step-btn.disabled .label{font-style:italic;color:var(--stepper-step-label--disabled_color)}.headline,::slotted([slot=headline]){font-family:var(--stepper-step-headline_font-family);font-style:normal;font-weight:700;font-size:1.25rem;line-height:1.5rem;color:var(--stepper-step-headline_color);margin:0}#step-btn.disabled .headline{font-style:italic;color:var(--stepper-step-headline--disabled_color)}.step-content{padding:20px 0 10px 64px}@media only screen and (max-width:1024px){.step-content{padding:15px 0 0 0}}.step-indicator{display:flex;flex-direction:column;justify-content:center;align-items:center;width:42px;height:42px;border-radius:100px;background-color:var(--stepper-step-indicator_background-color);border:var(--stepper-step-indicator_border);color:var(--stepper-step-indicator_color);font-family:var(--stepper-step-indicator_font-family);font-weight:400!important;font-size:1.25rem}.step-indicator.selected{background-color:var(--stepper-step-indicator-selected_background-color);color:#fff}.step-indicator.valid{background-color:var(--stepper-step-indicator-valid_background-color);border:var(--stepper-step-indicator-valid_border)}.step-indicator.invalid{background-color:var(--stepper-step-indicator-invalid_background-color);border:var(--stepper-step-indicator-invalid_border)}`;export{t as default};\n", "import{__decorate as t}from\"tslib\";import{LitElement as e,html as s}from\"lit\";import{property as i}from\"lit/decorators.js\";import o from\"../../styles/global-styles.js\";import r from\"./step-styles.js\";class d extends e{constructor(){super(...arguments),this.state=\"\",this.headline=\"\",this.label=\"\",this.step=\"\",this.srindicatortext=\"\",this.expanded=!1,this.disabled=!1,this.onKeyPress=t=>{32==t.keyCode&&(t.preventDefault(),this.toggleExpansion())}}toggleExpansion(){this.disabled||(this.expanded=!this.expanded)}getStepIndicator(){switch(this.state){case\"\":case\"selected\":return this.step;case\"valid\":return s`<ids-icon-check color=\"var(--stepper-step-indicator-valid-icon_color)\" width=\"20\" height=\"16\"></ids-icon-check>`;case\"invalid\":return s`<ids-icon-attention color2=\"none\" color=\"var(--stepper-step-indicator-invalid-icon_color)\"></ids-icon-attention>`}}renderExpansionButton(){return this.disabled?s``:s`<ids-col cols=\"auto\" class=\"button-col chevron\"><ids-icon-chevron color=\"var(--stepper-step-chevron_color)\" height=\"20\" width=\"11\" rotate=\"${this.expanded?\"-90\":\"90\"}\"></ids-icon-chevron></ids-col>`}renderLabel(){return this.label?s`<ids-col class=\"label\">${this.label}</ids-col>`:s``}render(){return s`<div class=\"step\"><div id=\"step-btn\" role=\"button\" tabindex=\"${this.disabled?\"-1\":\"0\"}\" class=\"focusable ${this.disabled?\"disabled\":\"\"}\" aria-expanded=\"${this.expanded}\" @click=\"${this.toggleExpansion}\" @keypress=\"${this.onKeyPress}\"><ids-row align=\"center\"><ids-col cols=\"auto\"><span aria-label=\"${this.srindicatortext}\" role=\"img\" class=\"step-indicator ${this.state}\">${this.getStepIndicator()}</span></ids-col><ids-col><ids-row class=\"step-text-row\" align=\"start\">${this.renderLabel()}<ids-col><slot name=\"headline\"></slot><h2 class=\"headline\">${this.headline}</h2></ids-col></ids-row></ids-col>${this.renderExpansionButton()}</ids-row></div><div class=\"step-content ${this.expanded?\"\":\"hide\"}\"><slot></slot></div></div>`}}d.styles=[o,r],t([i({type:String,reflect:!0})],d.prototype,\"state\",void 0),t([i({type:String,reflect:!0})],d.prototype,\"headline\",void 0),t([i({type:String,reflect:!0})],d.prototype,\"label\",void 0),t([i({type:String})],d.prototype,\"step\",void 0),t([i({type:String})],d.prototype,\"srindicatortext\",void 0),t([i({type:Boolean,reflect:!0})],d.prototype,\"expanded\",void 0),t([i({type:Boolean,reflect:!0})],d.prototype,\"disabled\",void 0);export{d as IDSStep};\n", "import{IDSStepper as e}from\"./stepper-element.js\";import{IDSStep as t}from\"./step/step-element.js\";import{registerComponent as s}from\"../../utilities/utils.js\";import\"../icons/chevron/register.js\";import\"../icons/attention/register.js\";import\"../icons/check/register.js\";s(\"ids-stepper\",e),s(\"ids-step\",t);\n", "import * as React from 'react';\nimport { createComponent } from '@lit-labs/react';\nimport '@inera/ids-core/components/form/toggle/register';\nimport { IDSToggle as IDSToggle$1 } from '@inera/ids-core/components/form/toggle/toggle-element';\n\nconst IDSToggle = createComponent({\r\n    tagName: 'ids-toggle',\r\n    elementClass: IDSToggle$1,\r\n    react: React,\r\n});\n\nexport { IDSToggle };\n", "import{css as o}from\"lit\";var t=o`:host{display:inline-block}::slotted(input){position:absolute;opacity:0}::slotted(label){display:inline!important}.ids-icon{right:auto;top:auto;transform:none}.toggle{position:relative;display:inline-block;width:60px;height:30px;border-radius:100px}.toggle.disabled{height:30px}.toggle.is-focused{outline:var(--focus_outline);outline-offset:var(--focus_outline-offset)}.label-col{margin-right:10px}.toggle-col{display:inline-flex}ids-row{display:inline-flex}.toggle input{opacity:0;width:0;height:0}.slider{position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0;border-radius:100px;background-color:#ccc;background-color:var(--toggle_background-color);-webkit-transition:.4s;transition:.4s}.toggle.disabled .slider.disabled{background-color:var(--toggle-disabled_background-color);border:var(--toggle-knob-disabled_border)}.knob{position:absolute;content:\"\";max-height:24px;max-width:24px;height:24px;width:24px;display:flex;align-items:center;justify-content:center;left:3px;bottom:3px;border-radius:100px;background-color:#fff;-webkit-transition:.3s;transition:all .3s}.knob.disabled{background-color:var(--toggle-knob-disabled_background-color);bottom:2px}.toggle.is-checked .knob{-webkit-transform:translateX(29px);-ms-transform:translateX(29px);transform:translateX(29px)}.toggle.is-checked .knob.disabled{-webkit-transform:translateX(28px);-ms-transform:translateX(28px);transform:translateX(28px)}.toggle.is-checked .slider{background-color:var(--toggle-active_background-color)}.toggle.is-checked .slider:before{-webkit-transform:translateX(26px);-ms-transform:translateX(26px);transform:translateX(26px)}.slider.round{border-radius:34px}.slider.round:before{border-radius:50%}`;export{t as default};\n", "import{__decorate as s}from\"tslib\";import{FormBaseElement as i}from\"../base/form-base-element.js\";import{html as e}from\"lit\";import t from\"./toggle-styles.js\";import{state as o}from\"lit/decorators.js\";class c extends i{constructor(){super(...arguments),this.isChecked=!1,this.isFocused=!1,this.handleFocus=()=>{this.isFocused=!0},this.handleBlur=()=>{this.isFocused=!1},this.updateIsChecked=()=>{this.isChecked=this.input?.checked||!1},this.clickOnCheckbox=()=>{this.input?.click(),this.input?.focus(),this.updateIsChecked()}}firstUpdated(s){super.firstUpdated(s),this.updateIsChecked(),this.input?.addEventListener(\"focus\",this.handleFocus),this.input?.addEventListener(\"blur\",this.handleBlur)}disconnectedCallback(){this.input?.removeEventListener(\"focus\",this.handleFocus),this.input?.removeEventListener(\"blur\",this.handleBlur),super.disconnectedCallback()}renderIcon(){return this.isChecked?e`<ids-icon-check color=\"${this.isDisabled?\"var(--toggle-icon-disabled_color)\":\"var(--toggle-icon-active_color)\"}\" width=\"12px\" height=\"100%\"></ids-icon-check>`:e`<ids-icon-close-bold color=\"${this.isDisabled?\"var(--toggle-icon-disabled_color)\":\"var(--toggle-icon_color)\"}\" width=\"10px\" height=\"100%\"></ids-icon-close-bold>`}render(){return e`<ids-row align=\"center\"><ids-col cols=\"auto\" class=\"label-col\"><slot name=\"label\"></slot></ids-col><ids-col class=\"toggle-col\"><span @click=\"${this.clickOnCheckbox}\" class=\"toggle ${this.isDisabled?\"disabled\":\"\"} ${this.isFocused?\"is-focused\":\"\"} ${this.isChecked?\"is-checked\":\"\"}\"><slot name=\"input\"></slot><span class=\"slider ${this.isDisabled?\"disabled\":\"\"}\"><div class=\"knob ${this.isDisabled?\"disabled\":\"\"}\">${this.renderIcon()}</div></span></span></ids-col></ids-row>`}}c.styles=[...i.styles,t],s([o()],c.prototype,\"isChecked\",void 0),s([o()],c.prototype,\"isFocused\",void 0);export{c as IDSToggle};\n", "import{IDSToggle as i}from\"./toggle-element.js\";import{registerComponent as e}from\"../../../utilities/utils.js\";import\"../../icons/check/register.js\";import\"../../icons/close-bold/register.js\";e(\"ids-toggle\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icon-region/register';\nimport { IDSIconRegion as IDSIconRegion$1 } from '@inera/ids-core/components/icon-region/icon-region-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconRegion = createComponent({\r\n    tagName: 'ids-icon-region',\r\n    elementClass: IDSIconRegion$1,\r\n    react: React,\r\n});\n\nexport { IDSIconRegion };\n", "import{css as i}from\"lit\";var l=i`:host{display:flex}:host([inline]){display:inline-block}`;export{l as default};\n", "import{__decorate as i}from\"tslib\";import{LitElement as t,html as s}from\"lit\";import{property as o}from\"lit/decorators.js\";import e from\"./icon-region.styles.js\";class n extends t{constructor(){super(...arguments),this.name=\"\",this.title=\"\",this.colorpreset=-1,this.color=\"var(--icon-color)\",this.color2=\"var(--icon-color2)\",this.size=\"m\",this.width=\"\",this.height=\"\",this.rotate=\"\",this.inline=!1}updated(i){super.updated(i);const t=this.shadowRoot.querySelector(\".ids-icon\");this.title&&t.setAttribute(\"title\",this.title),this.colorpreset&&t.setAttribute(\"colorpreset\",\"\"+this.colorpreset),this.size&&t.setAttribute(\"size\",this.size),this.color&&t.setAttribute(\"color\",this.color),this.color2&&t.setAttribute(\"color2\",this.color2),this.width&&t.setAttribute(\"width\",this.width),this.height&&t.setAttribute(\"height\",this.height),this.rotate&&t.setAttribute(\"rotate\",this.rotate),this.inline&&t.setAttribute(\"inline\",\"\"+this.inline)}renderIcon(){switch(this.name){case\"blekinge\":return s`<ids-icon-blekinge class=\"ids-icon\"></ids-icon-blekinge>`;case\"gotland\":return s`<ids-icon-gotland class=\"ids-icon\"></ids-icon-gotland>`;case\"halland\":return s`<ids-icon-halland class=\"ids-icon\"></ids-icon-halland>`;case\"jonkoping\":return s`<ids-icon-jonkoping class=\"ids-icon\"></ids-icon-jonkoping>`;case\"dalarna\":return s`<ids-icon-dalarna class=\"ids-icon\"></ids-icon-dalarna>`;case\"vastra-gotaland\":return s`<ids-icon-vastra-gotaland class=\"ids-icon\"></ids-icon-vastra-gotaland>`;case\"gavleborg\":return s`<ids-icon-gavleborg class=\"ids-icon\"></ids-icon-gavleborg>`;case\"jamtland-harjedalen\":return s`<ids-icon-jamtland-harjedalen class=\"ids-icon\"></ids-icon-jamtland-harjedalen>`;case\"kalmar\":return s`<ids-icon-kalmar class=\"ids-icon\"></ids-icon-kalmar>`;case\"kronoberg\":return s`<ids-icon-kronoberg class=\"ids-icon\"></ids-icon-kronoberg>`;case\"norrbotten\":return s`<ids-icon-norrbotten class=\"ids-icon\"></ids-icon-norrbotten>`;case\"orebro\":return s`<ids-icon-orebro class=\"ids-icon\"></ids-icon-orebro>`;case\"ostergotland\":return s`<ids-icon-ostergotland class=\"ids-icon\"></ids-icon-ostergotland>`;case\"skane\":return s`<ids-icon-skane class=\"ids-icon\"></ids-icon-skane>`;case\"sormland\":return s`<ids-icon-sormland class=\"ids-icon\"></ids-icon-sormland>`;case\"stockholm\":return s`<ids-icon-stockholm class=\"ids-icon\"></ids-icon-stockholm>`;case\"uppsala\":return s`<ids-icon-uppsala class=\"ids-icon\"></ids-icon-uppsala>`;case\"vasterbotten\":return s`<ids-icon-vasterbotten class=\"ids-icon\"></ids-icon-vasterbotten>`;case\"varmland\":return s`<ids-icon-varmland class=\"ids-icon\"></ids-icon-varmland>`;case\"vasternorrland\":return s`<ids-icon-vasternorrland class=\"ids-icon\"></ids-icon-vasternorrland>`;case\"vastmanland\":return s`<ids-icon-vastmanland class=\"ids-icon\"></ids-icon-vastmanland>`}return s``}render(){return s`${this.renderIcon()}`}}n.styles=[e],i([o({type:String})],n.prototype,\"name\",void 0),i([o({type:String})],n.prototype,\"title\",void 0),i([o({type:Number})],n.prototype,\"colorpreset\",void 0),i([o({type:String})],n.prototype,\"color\",void 0),i([o({type:String})],n.prototype,\"color2\",void 0),i([o({type:String,reflect:!0})],n.prototype,\"size\",void 0),i([o({type:String})],n.prototype,\"width\",void 0),i([o({type:String})],n.prototype,\"height\",void 0),i([o({type:String})],n.prototype,\"rotate\",void 0),i([o({type:Boolean,reflect:!0})],n.prototype,\"inline\",void 0);export{n as IDSIconRegion};\n", "import{svg as l}from\"lit\";import{IDSIconBase as e}from\"../icon-base-element.js\";class o extends e{constructor(){super(),this.vbHeight=24,this.vbWidth=95}renderIcon(){return l`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M47.5795 16.0595H47.5982H49.7937C50.1846 16.0595 51.0936 15.9519 51.0936 14.9552C51.0936 14.1377 50.6146 13.7232 49.6698 13.7232H47.5982H47.5795V13.742V16.0406V16.0595ZM47.5795 12.7465H47.5982H49.6068C50.4519 12.7465 50.6773 12.0093 50.6773 11.5737C50.6773 10.8577 50.3473 10.5383 49.6068 10.5383H47.5982H47.5795V10.5571V12.7277V12.7465ZM49.8048 9.55188C50.4666 9.55188 51.7183 9.97459 51.7183 11.5737C51.7183 12.0022 51.5408 12.6292 51.1443 13.0644L51.1287 13.0819L51.1488 13.0935C51.7465 13.4387 52.1032 14.1345 52.1032 14.9552C52.1032 16.2835 51.2162 17.0454 49.6698 17.0454H46.5602V9.55188H49.8048Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M58.1126 1.75414C58.5626 1.75414 58.9949 1.80172 59.3971 1.8955L59.6239 1.95041V2.73621L59.266 2.65637C58.871 2.568 58.483 2.5232 58.1126 2.5232C57.1661 2.5232 56.1473 3.08692 56.1473 4.32489C56.1473 5.49522 57.0167 6.10758 57.8755 6.10758C58.1659 6.10758 58.6517 6.10758 59.0687 6.00369L59.0829 6.00003V5.98538V5.09796V5.07914H59.0642H57.7776V4.31059H59.8615V6.539L59.676 6.61325C59.0958 6.84666 58.4091 6.87664 57.8755 6.87664C56.6607 6.87664 55.3698 5.98225 55.3698 4.32489C55.3698 2.81116 56.4976 1.75414 58.1126 1.75414Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M47.2724 4.07398H47.2912H48.3509C48.8341 4.07398 49.2811 3.98159 49.2811 3.31137C49.2811 2.85502 49.0111 2.59337 48.5402 2.59337H47.2912H47.2724V2.6122V4.05515V4.07398ZM48.5468 1.82431C49.455 1.82431 50.0653 2.42185 50.0653 3.31137C50.0653 3.77103 49.9287 4.13935 49.6597 4.40604C49.5095 4.55369 49.3231 4.66542 49.1057 4.73776L49.0779 4.747L49.0979 4.76844C49.55 5.25634 49.9287 5.94992 50.1325 6.3226L50.1347 6.32696L50.3965 6.80684H49.5097L49.4253 6.65345C48.6232 5.19167 48.1352 4.86536 47.866 4.84897L47.2912 4.84932H47.2724V4.86815V6.80684H46.4945V1.82431H48.5468Z\"></path><mask id=\"mask0_6775_500\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"95\" height=\"19\"><path fill=\"white\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 18.9034H94.9654V0H0V18.9034Z\"></path></mask><g mask=\"url(#mask0_6775_500)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M61.0901 6.80688H61.8682V1.81755H61.0901V6.80688Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M65.4735 6.12046C66.5723 6.12046 67.3106 5.40142 67.3106 4.33115C67.3106 3.07296 66.3917 2.50976 65.4808 2.50976C64.5738 2.50976 63.6588 3.07296 63.6588 4.33115C63.6588 5.40142 64.388 6.12046 65.4735 6.12046ZM65.4808 1.75412C66.7753 1.75412 68.0816 2.5509 68.0816 4.33115C68.0816 5.85376 67.0334 6.87662 65.4735 6.87662C63.9021 6.8693 62.8866 5.87015 62.8866 4.33115C62.8866 2.5509 64.1895 1.75412 65.4808 1.75412Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M86.1215 9.45364C86.8077 9.45364 87.4654 9.52633 88.0762 9.66944L88.3582 9.73551V10.7657L87.9147 10.6674C87.3018 10.5298 86.6984 10.4601 86.1215 10.4601C84.6244 10.4601 83.0134 11.3545 83.0134 13.318C83.0134 15.1751 84.3941 16.1467 85.758 16.1467C86.23 16.1467 87.0201 16.1467 87.6877 15.9651L87.7014 15.9612V15.9469V14.4085V14.3896H87.6827H85.6944V13.3832H88.7221V16.6623L88.493 16.7545C87.6158 17.108 86.5706 17.1532 85.758 17.1532C83.8868 17.1532 81.9926 15.8359 81.9926 13.318C81.9926 11.0427 83.6904 9.45364 86.1215 9.45364Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M80.608 9.55196V17.0453H79.6432L79.5426 16.8434C78.5659 14.892 77.0865 12.6793 75.7736 11.206L75.7409 11.1694V11.2186V17.0453H74.7202V9.55196H75.5608L75.6671 9.65114C76.9096 10.8222 78.3981 12.7772 79.5524 14.7532L79.5873 14.8132V14.7438V9.55196H80.608Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M73.0392 1.81746V6.80679H72.3224L72.2385 6.64398C71.63 5.42833 70.7364 4.07619 69.9068 3.11539L69.8738 3.07721V3.12759V6.80679H69.0961V1.81746H69.7251L69.8083 1.89869C70.5812 2.62714 71.4853 3.79729 72.2267 5.02898L72.2615 5.08685V5.01939V1.81746H73.0392Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M94.9654 9.55196V10.5581H91.2511H91.2325V10.5769V12.7276V12.7464H91.2511H94.7155V13.7525H91.2511H91.2325V13.7714V15.5469C91.2426 15.8732 91.2775 16.0303 91.9515 16.0391H94.9654V17.0453H91.939C91.1517 17.0285 90.2437 16.8457 90.2118 15.5716V9.55196H94.9654Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M63.8136 9.55196V10.5581H60.0994H60.0806V10.5769V12.7276V12.7464H60.0994H63.5637V13.753H60.0994H60.0806V13.7717V15.5483C60.0912 15.8736 60.1263 16.0304 60.8005 16.0391H63.8136V17.0453H60.7871C60 17.0291 59.0924 16.8467 59.0608 15.5722V9.55196H63.8136Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M71.9944 17.0458H73.0151V9.55194H71.9944V17.0458Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M54.5237 1.81746V2.58705H52.1135H52.0947V2.6057V3.87643V3.89526H52.1135H54.3608V4.66467H52.1135H52.0947V4.6835V5.77504C52.1018 5.96591 52.1237 6.03232 52.5068 6.0372H54.5237V6.80679H52.4964C52.0006 6.79598 51.3392 6.67902 51.3179 5.79247V1.81746H54.5237Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M54.3691 9.55196V15.5631C54.3799 15.8786 54.4144 16.0308 55.0808 16.0391H58.1955V17.0453H55.0756C54.2885 17.0291 53.3809 16.8467 53.3491 15.5716V9.55196H54.3691Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M70.522 9.55196L70.0359 10.1491C69.1692 11.2135 68.2432 12.191 66.9394 13.4177L66.9226 13.4334L66.9413 13.4468C68.0942 14.2709 69.2592 15.3023 70.3108 16.4293L70.885 17.0453H69.5037L69.3961 16.9308C68.5101 15.9994 67.4467 15.0749 66.321 14.2573L66.2913 14.2357V14.2725V17.0453H65.2711V9.55196H66.2913V12.5798V12.6235L66.3229 12.5934C67.5218 11.4549 68.3778 10.5579 69.0986 9.68443L69.2078 9.55196H70.522Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M41.1856 4.66638C36.008 0.927566 21.4562 -0.00012207 21.4562 -0.00012207L21.4009 3.60099C23.3954 3.83056 34.6434 5.28484 39.969 9.39285L41.1856 4.66638ZM19.7852 3.60099L19.7295 -0.00012207C19.7295 -0.00012207 5.17799 0.927566 -0.00012207 4.66638L1.21664 9.39285C6.5422 5.28484 17.7906 3.83056 19.7852 3.60099ZM14.7634 16.8863C16.6999 17.5074 18.5231 18.2561 20.0214 18.9035L19.948 14.1552C18.2227 14.6919 15.8315 15.9315 14.7634 16.8863ZM19.9273 12.8249L19.8768 9.53823C17.2876 10.004 14.1667 11.068 11.4362 12.4311C9.64264 13.3258 8.28989 14.223 7.59588 14.9464C8.50142 15.2001 10.3485 15.7216 12.4477 16.3397C13.8761 14.7911 18.8432 13.0682 19.9273 12.8249ZM2.56835 11.0624L5.59689 13.9713C7.33016 11.9863 13.2997 9.28652 19.8561 8.1901L19.8045 4.87102C9.64958 5.97599 4.09252 9.53213 2.56835 11.0624ZM21.2377 14.1552L21.1646 18.9035C22.6625 18.2561 24.4857 17.5074 26.4227 16.8863C25.3541 15.9315 22.9635 14.6919 21.2377 14.1552ZM21.3811 4.87102L21.3301 8.1901C27.8865 9.28652 33.856 11.9863 35.5886 13.9713L38.6176 11.0619C37.0931 9.53213 31.5359 5.97546 21.3811 4.87102ZM21.3089 9.53404L21.2583 12.8249C22.3424 13.0682 27.3095 14.7911 28.738 16.3397C30.8381 15.7216 32.6853 15.2001 33.5903 14.9464C31.8584 13.1538 26.1054 10.3964 21.3089 9.53404Z\"></path></g>`}}export{o as IDSIconBlekinge};\n", "import{IDSIconBlekinge as i}from\"./icon-blekinge-element.js\";import{registerComponent as e}from\"../../../utilities/utils.js\";e(\"ids-icon-blekinge\",i);\n", "import{svg as C}from\"lit\";import{IDSIconBase as l}from\"../icon-base-element.js\";class e extends l{constructor(){super(),this.vbHeight=24,this.vbWidth=95}renderIcon(){return C`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M31.5317 29.8053C30.0091 29.8053 28.8009 29.2922 27.9238 28.2654C27.0131 27.2067 26.5995 25.8661 26.5995 23.9957C26.5995 21.7119 27.2615 20.1392 28.5693 19.0633C29.3966 18.3847 30.307 18.0872 31.4325 18.0872C32.674 18.0872 33.7659 18.4506 34.6598 19.2288L33.8986 20.2218C33.0541 19.6099 32.3422 19.3615 31.4656 19.3615C30.3724 19.3615 29.5125 19.7919 29.0155 20.8178C28.4859 21.91 28.3868 22.7212 28.3868 24.0783C28.3868 25.6508 28.6682 26.8261 29.1975 27.5212C29.6943 28.1667 30.6714 28.5473 31.6476 28.5473C32.2926 28.5473 32.8718 28.3816 33.3352 28.1172V24.8726H31.2335L30.9683 23.565H34.9077V28.8949C33.9815 29.4743 32.7401 29.8053 31.5317 29.8053\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M40.1281 22.2908C38.8048 22.2908 38.2579 23.234 38.2579 25.3203C38.2579 27.8522 38.904 28.6966 40.195 28.6966C41.353 28.6966 42.0646 27.8024 42.0646 25.6345C42.0646 23.0688 41.32 22.2908 40.1281 22.2908M40.1622 29.8714C37.944 29.8714 36.5701 28.183 36.5701 25.485C36.5701 22.8036 37.944 21.1157 40.1281 21.1157C42.5782 21.1157 43.7698 23.0688 43.7698 25.5682C43.7698 28.2 42.3631 29.8714 40.1622 29.8714\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M48.7775 22.4231H47.139V27.4217C47.139 28.4478 47.3879 28.7623 48.2147 28.7623C48.4969 28.7623 48.7285 28.7129 48.9929 28.5965L49.1747 29.5235C48.7114 29.7556 48.2147 29.8712 47.6693 29.8712C47.1227 29.8712 46.5268 29.706 46.2619 29.4579C45.9141 29.1434 45.6499 28.9046 45.6499 27.6962V22.4231H44.6566V21.3474H45.6499C45.6499 20.7019 45.6657 19.8581 45.7486 19.2289L47.321 18.8648C47.2547 19.4607 47.1725 20.5031 47.1725 21.3474H49.1917L48.7775 22.4231Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M52.2018 29.8053C51.6066 29.8053 51.2255 29.6233 50.9111 29.1763C50.6627 28.8285 50.5963 28.5473 50.5963 27.7363V20.8714C50.5963 19.6958 50.5467 19.1334 50.415 18.4879L52.0038 18.1569C52.153 18.703 52.153 19.4975 52.153 20.5236V27.3395C52.153 28.2163 52.2018 28.4149 52.3678 28.5636C52.4667 28.6795 52.6986 28.7294 52.8806 28.6795L53.145 29.6233C52.8305 29.7557 52.5669 29.8053 52.2018 29.8053\"></path><mask id=\"mask0_6775_6913\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"54\" y=\"21\" width=\"7\" height=\"9\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M54.0736 21.0995H60.9919V29.9873H54.0736V21.0995Z\"></mask><g mask=\"url(#mask0_6775_6913)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M58.344 25.5349C57.2025 25.5349 56.5067 25.7502 56.1756 26.1308C55.8611 26.4949 55.7455 26.7929 55.7455 27.3395C55.7455 28.2491 56.2089 28.779 57.053 28.779C57.7481 28.779 58.4104 28.3486 58.7912 27.6865L58.8411 25.568C58.6092 25.5517 58.4765 25.5349 58.344 25.5349V25.5349ZM60.2137 29.9874C59.7011 29.7888 59.304 29.3749 59.1052 28.7958C58.8904 29.0607 58.1953 29.8877 56.755 29.8877C55.1 29.8877 54.0736 29.0439 54.0736 27.4552C54.0736 25.5349 55.613 24.5083 58.2944 24.5083C58.4935 24.5083 58.658 24.5083 58.8736 24.5253V23.9787C58.8736 23.0027 58.7411 22.3407 57.5823 22.3407C56.7052 22.3407 55.7119 22.7711 55.0334 23.2839L54.3383 22.1917C55.1493 21.7282 56.2089 21.0995 57.8144 21.0995C59.0223 21.0995 59.8997 21.5462 60.2137 22.423C60.3466 22.7874 60.3802 23.0688 60.3802 23.8798C60.3802 24.4755 60.3136 25.7502 60.3136 26.9584C60.3136 28.0999 60.3466 28.5636 60.9919 28.9615L60.2137 29.9874Z\"></path></g><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M67.2862 29.6398V24.0456C67.2862 23.3004 67.2196 23.036 67.0216 22.7711C66.8561 22.556 66.5576 22.4401 66.1775 22.4401C65.5821 22.4401 64.6877 22.9033 64.1251 23.4992V29.6398H62.619V23.4662C62.619 22.4729 62.5358 22.0925 62.304 21.4966L63.744 21.0995C63.9433 21.4966 64.0264 21.8607 64.0264 22.374C64.5059 21.9764 64.754 21.7615 65.1021 21.5625C65.5821 21.2815 66.1277 21.1488 66.6407 21.1488C67.5178 21.1488 68.2963 21.6128 68.5935 22.3239C68.726 22.6216 68.7931 22.9859 68.7931 23.3665V29.6398H67.2862Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M75.8588 23.2017C75.4294 22.6884 74.8831 22.423 74.1053 22.423C73.4766 22.423 72.9796 22.7377 72.6653 23.2676C72.3503 23.8139 72.2344 24.4757 72.2344 25.5516C72.2344 27.1566 72.4332 27.6033 72.8807 28.0673C73.1619 28.3653 73.542 28.498 74.1053 28.498C74.9825 28.498 75.5781 28.0343 75.8588 27.5377V23.2017ZM76.1741 29.6398C76.0914 29.3919 76.0752 29.2757 76.0251 28.8623C75.4457 29.4743 74.7674 29.772 73.8903 29.772C71.7712 29.772 70.5305 28.183 70.5305 25.5682C70.5305 23.7804 71.1427 22.4067 72.268 21.6786C72.7815 21.3476 73.2941 21.1988 73.8903 21.1988C74.6842 21.1988 75.3463 21.4798 75.9094 22.1586C75.9094 21.9272 75.8759 21.2649 75.8759 20.7021V17.8172L77.3985 18.0654V26.8592C77.3985 28.2 77.4486 29.127 77.6303 29.6398H76.1741Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22.0502 7.14133C22.0115 7.33023 21.8694 7.44819 21.6297 7.39836C21.2554 7.32006 21.0223 7.03023 20.674 6.92446C21.6215 6.43862 22.0331 6.58989 22.3949 7.3465C22.2253 7.21328 22.1821 7.19548 22.0502 7.14133V7.14133ZM18.7568 23.1166C18.485 23.2401 18.277 23.337 18.0894 23.4133C18.1636 22.1894 18.4298 21.5034 18.4537 21.4167C18.6332 21.7053 18.7136 21.8434 18.8247 22.0658C18.993 22.4024 19.1712 22.7889 19.1529 22.8695C19.1343 22.9485 18.8676 23.0665 18.7568 23.1166V23.1166ZM15.4685 24.1305C14.9574 24.2787 15.0604 24.6084 14.2657 24.3283V20.8765C14.7932 21.1249 15.7875 21.4361 16.4539 21.4361C16.5258 21.6329 16.791 22.2883 16.9392 23.8831C16.206 24.1305 15.8752 24.0125 15.4685 24.1305V24.1305ZM13.1539 6.6865C12.8409 6.88455 12.5282 7.10345 12.213 7.3409C11.8913 6.97607 11.5682 6.63158 11.2446 6.30387C11.5682 6.0265 11.8913 5.76463 12.213 5.52158C12.5282 5.87828 12.8409 6.25506 13.1539 6.6537C13.1597 6.66082 13.1658 6.66794 13.1717 6.67582C13.1658 6.67887 13.1597 6.68294 13.1539 6.6865V6.6865ZM13.1539 8.47429C12.9289 8.1865 12.7036 7.9104 12.4776 7.64574C12.7036 7.48252 12.9289 7.32896 13.1539 7.18709V8.47429ZM11.2303 8.61896C11.554 8.34209 11.8756 8.08099 12.1964 7.83819C12.5165 8.19997 12.8353 8.58235 13.1524 8.98785C12.5165 8.78294 11.8756 8.66904 11.2303 8.61896V8.61896ZM9.97923 7.43802C10.3072 7.12557 10.6347 6.82302 10.9601 6.53548C11.285 6.85429 11.6086 7.18862 11.931 7.54201C11.6086 7.79574 11.285 8.06752 10.9601 8.35404C10.6347 8.03345 10.3072 7.72963 9.97923 7.43802V7.43802ZM8.69914 8.68607C9.03067 8.34972 9.36118 8.01997 9.69041 7.70014C10.0189 7.98489 10.3463 8.28082 10.6723 8.59048C10.0189 8.57523 9.36168 8.61641 8.69914 8.68607V8.68607ZM7.41346 7.69404C7.75033 7.34421 8.08592 6.99616 8.42075 6.65421C8.75431 6.91684 9.08762 7.18633 9.41863 7.46675C9.08762 7.79345 8.75431 8.12879 8.42075 8.46997C8.08592 8.20582 7.75033 7.94777 7.41346 7.69404V7.69404ZM6.15092 9.03133C6.15092 9.01633 6.79592 8.31921 7.11753 7.9859C7.45465 8.23836 7.78999 8.49235 8.12533 8.75243C7.47092 8.8348 6.81346 8.93701 6.15092 9.03133V9.03133ZM6.15092 7.26921C6.38024 7.43904 6.60906 7.6076 6.83787 7.77768C6.60906 8.01413 6.38024 8.26277 6.15092 8.49819V7.26921ZM7.13457 5.67031C7.47194 5.92302 7.80931 6.17701 8.14516 6.4376C7.80931 6.78387 7.47194 7.13345 7.13457 7.48455C6.80813 7.24048 6.48016 6.97963 6.15092 6.73658C6.44075 6.41497 6.80228 6.02574 7.13457 5.67031V5.67031ZM6.15092 4.94091C6.38635 5.1148 6.62101 5.28819 6.85465 5.46209C6.62101 5.70489 6.38635 5.94819 6.15092 6.18946V4.94091ZM8.16219 4.12124C7.8266 4.46726 7.48948 4.81735 7.1516 5.16921C6.81906 4.92082 6.48601 4.67446 6.15092 4.42785C6.81474 4.30938 7.48643 4.20616 8.16219 4.12124V4.12124ZM9.43541 5.15014C9.10414 5.47607 8.7716 5.81167 8.43804 6.15311C8.10346 5.88896 7.76762 5.63167 7.4305 5.37819C7.76762 5.02785 8.10346 4.67955 8.43804 4.33709C8.7716 4.59972 9.10414 4.86972 9.43541 5.15014V5.15014ZM10.7084 3.95879C10.3812 4.25421 10.053 4.56311 9.72423 4.88268C9.39372 4.59591 9.06245 4.32184 8.73016 4.05463C9.48092 3.96311 10.0125 3.93845 10.7084 3.95879V3.95879ZM10.6913 6.27616C10.3644 6.57107 10.0359 6.88074 9.70745 7.1998C9.37669 6.91404 9.04541 6.63921 8.71363 6.37201C9.04541 6.03438 9.37669 5.70387 9.70745 5.38277C10.0359 5.66802 10.3644 5.96497 10.6913 6.27616V6.27616ZM11.9475 5.22641C11.6252 5.47963 11.3015 5.7509 10.9771 6.03667C10.6504 5.71684 10.3237 5.41226 9.9955 5.1204C10.3237 4.80794 10.6504 4.50641 10.9771 4.21887C11.3015 4.53768 11.6252 4.87201 11.9475 5.22641V5.22641ZM13.1539 4.88141V6.13836C12.9345 5.85743 12.7138 5.5887 12.4936 5.32963C12.7138 5.17099 12.9345 5.02074 13.1539 4.88141V4.88141ZM13.1539 4.38133C12.8468 4.57658 12.5384 4.79192 12.2287 5.0248C11.9076 4.65972 11.5842 4.31446 11.2608 3.98726C11.9862 4.06201 12.4476 4.16929 13.1539 4.38133V4.38133ZM25.2661 8.12119C25.1031 7.87814 25.1865 7.69712 24.6885 7.38416C23.8452 6.8556 22.3589 6.25662 21.1495 5.94746C20.5785 5.25848 20.0156 4.81789 18.9915 4.55551C17.5958 4.19755 15.5901 4.75916 15.0862 6.39441C14.4023 8.61416 16.262 10.3646 17.9606 10.0219C20.3753 9.53551 19.396 6.6728 17.6723 7.01246C17.174 7.1106 17.1636 7.54306 17.506 7.53009C18.0498 7.51077 18.2822 7.72662 18.193 8.17255C18.1416 8.43162 17.7539 8.58645 17.34 8.44458C16.3538 8.10441 16.4649 7.08111 17.0619 6.6906C17.8111 6.19967 19.5925 6.47882 19.9261 8.20916C20.2358 9.81873 18.7444 10.5159 17.9507 10.5797C17.2035 10.6404 16.6474 10.5479 15.9506 10.0859C15.8413 10.3885 15.8418 10.627 15.9173 10.8542C15.6796 11.1184 15.3829 11.5496 15.3191 11.9475C14.9217 12.0497 14.5497 12.3067 14.2658 12.6657V2.29229L15.8746 2.46874V1.43831L14.2421 1.62746L14.4282 9.15527e-05H13.3958L13.5808 1.62746L11.9283 1.43831V2.46874L13.5623 2.28874V3.67001C8.90923 1.78484 4.58745 5.12806 0.000244141 3.23297C1.07745 4.81636 4.60626 4.93051 4.60626 4.93051C4.60626 4.93051 2.69846 5.29763 0.0383797 4.89162C1.88719 6.25992 3.55499 5.99424 4.61897 6.20958C4.28923 6.36162 2.54643 6.79229 0.0127018 6.41246C1.48296 7.72967 4.5938 7.6028 4.5938 7.6028C4.5938 7.6028 3.07779 8.18526 0.0254136 7.91984C1.63346 9.22382 4.5938 8.86992 4.5938 8.86992C4.5938 8.86992 3.05287 9.60441 0.0719391 9.63034C4.68253 11.5343 8.85685 8.10543 13.5623 10.0542C13.5623 10.0542 13.5648 12.8289 13.5623 12.8325C12.9081 12.742 12.1642 12.7938 11.433 13.089C10.6767 12.8709 10.0619 12.7676 9.22906 12.9921C8.30465 12.742 7.68177 12.7259 6.86821 12.986C5.71524 12.7915 4.45016 13.106 4.00423 14.0803C4.00423 14.0803 3.02287 13.7492 2.3705 14.902C1.57702 16.3036 0.0856679 16.4114 0.0856679 16.4114C0.0856679 16.4114 0.687448 17.1265 1.85007 16.8842C3.01346 16.6425 3.4833 15.7943 3.4833 15.7943C3.4833 15.7943 3.28753 17.0477 3.43931 18.249C3.70575 20.3569 2.03897 21.6377 2.03897 21.6377C2.03897 21.6377 2.00516 23.2125 1.90474 24.834C1.78804 26.7095 1.01897 27.4107 2.15694 28.5006C2.46355 28.794 2.44804 29.407 2.44296 29.6363H4.41126C4.30245 29.3274 3.88626 28.3127 3.36838 27.5416C2.52024 26.2831 3.42762 22.8972 4.03321 22.2431C4.79974 22.0554 5.1455 21.9464 5.71423 21.551C6.37016 22.1729 6.91906 23.3724 7.52262 24.699C8.61279 27.0975 8.06109 27.7437 8.88508 28.1475C9.66024 28.5268 9.62923 29.3668 9.62516 29.6363H11.4338C11.2825 29.1059 11.1648 28.5807 9.53872 26.2486C8.28584 24.4519 7.97694 21.6212 9.47084 20.5491C10.1517 20.7911 10.8089 20.8508 11.4941 20.7146C12.1365 20.9439 13.0497 20.9622 13.5623 20.8595V24.3283L12.8102 25.6137C12.8102 25.6137 13.1568 25.7129 13.5623 25.7871C13.5635 25.8967 13.5658 26.1161 13.5623 26.1161C13.4156 26.1161 12.4642 26.9167 13.9091 28.3491C15.3541 27.0761 14.4193 26.1214 14.2658 26.1214C14.2624 26.1214 14.264 25.9112 14.2658 25.8532C14.5663 25.8532 14.8441 25.7986 15.028 25.7703C15.4563 25.7047 15.7993 25.5169 16.9891 25.0946C17.0067 27.1071 16.6614 27.4915 16.9421 27.9118C17.2322 28.347 17.2703 28.5347 17.2955 29.14C17.308 29.4471 17.2996 29.5025 17.2955 29.6363H19.3469C19.3035 29.4804 19.1906 29.1237 18.7416 28.45C17.7165 26.9134 17.9667 26.8585 18.0689 24.6786C19.3009 24.1798 20.3807 23.9912 20.5991 23.5679C20.9016 22.9803 20.7658 22.6839 20.5124 22.0905C20.3207 21.6413 20.1292 21.0273 19.9996 20.7367C20.7409 20.4649 21.1645 19.9183 21.2786 19.3585C21.8227 18.9875 22.0457 18.3303 22.1908 17.5775C22.6358 17.0566 22.7385 15.9977 22.5432 15.1595C22.7741 13.8263 22.2155 12.8922 22.2155 12.8922C22.2155 12.8922 22.4687 11.8925 22.1232 11.1555C21.7619 10.389 21.8466 10.2293 23.2574 9.91026C23.7755 9.79229 24.2283 9.74399 24.6196 9.61356C24.96 9.50094 25.1441 9.34229 25.2516 9.09009C25.2737 9.03797 25.2302 9.01102 25.158 8.99348C24.8802 8.92636 24.5085 8.82568 24.5085 8.82568C24.5085 8.82568 24.8822 8.82467 25.1639 8.80001C25.2895 8.78933 25.367 8.78653 25.3884 8.71382C25.4761 8.41179 25.3668 8.27221 25.2661 8.12119V8.12119Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M31.6213 9.1545C31.3811 9.0589 31.045 8.99839 30.613 8.99839H29.7491V11.8784H30.5528C31.2847 11.8784 31.693 11.7584 31.9808 11.4823C32.233 11.2423 32.3891 10.8464 32.3891 10.3664C32.3891 9.7906 32.0769 9.3345 31.6213 9.1545V9.1545ZM32.6045 16.3179C32.365 15.8498 32.2569 15.6581 31.9211 15.0942C31.2847 14.0381 31.0811 13.6901 30.4928 13.0303C30.2769 12.7903 30.0972 12.6701 29.7491 12.6584V16.3179H28.5969V8.0506H30.913C31.8967 8.0506 32.4728 8.27865 32.8686 8.6506C33.2406 8.99839 33.6006 9.55034 33.6006 10.3545C33.6006 11.6384 32.773 12.6701 31.393 12.6223C31.7767 12.9342 31.9689 13.1984 32.113 13.3901C32.2806 13.6181 32.533 13.9779 32.8086 14.4101C33.1684 14.974 33.8408 16.054 34.0086 16.3179H32.6045Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M37.7423 11.3742C37.5501 11.1342 37.2618 10.9545 36.8779 10.9545C36.0382 10.9545 35.6182 11.6384 35.6182 12.7303H38.1138C38.1138 12.1542 37.9818 11.6742 37.7423 11.3742V11.3742ZM35.606 13.5462V13.6901C35.606 14.2059 35.6782 14.602 35.8584 14.8903C36.1699 15.3698 36.6623 15.5979 37.2384 15.5979C37.8018 15.5979 38.2818 15.4059 38.7138 15.0223L39.134 15.6818C38.546 16.1984 37.8382 16.4496 37.0582 16.4496C35.3904 16.4496 34.3704 15.2381 34.3704 13.2703C34.3704 12.2262 34.5743 11.5542 35.0901 10.9423C35.5701 10.3784 36.1584 10.1145 36.9021 10.1145C37.5735 10.1145 38.1138 10.3303 38.534 10.7623C39.0621 11.3023 39.2535 11.9742 39.2657 13.3545V13.5462H35.606Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M46.469 16.318V10.3426L47.6083 10.1626V16.318H46.469ZM47.0329 9.25066C46.601 9.25066 46.2649 8.89066 46.2649 8.45821C46.2649 8.01456 46.6127 7.65482 47.0446 7.65482C47.4766 7.65482 47.8366 8.00236 47.8366 8.45821C47.8366 8.89066 47.4766 9.25066 47.0329 9.25066V9.25066Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M51.2525 10.9902C50.2927 10.9902 49.8966 11.6741 49.8966 13.1863C49.8966 15.0221 50.3644 15.6341 51.3003 15.6341C52.1403 15.6341 52.6561 14.986 52.6561 13.4143C52.6561 11.5543 52.1164 10.9902 51.2525 10.9902M51.2764 16.486C49.6686 16.486 48.6727 15.2624 48.6727 13.3063C48.6727 11.3624 49.6686 10.1385 51.2525 10.1385C53.0283 10.1385 53.8922 11.5543 53.8922 13.366C53.8922 15.2743 52.8722 16.486 51.2764 16.486\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M58.4091 16.3179V12.2623C58.4091 11.7223 58.3613 11.5301 58.2171 11.3384C58.0969 11.1826 57.8813 11.0982 57.6052 11.0982C57.1732 11.0982 56.5252 11.4345 56.1174 11.8662V16.3179H55.0254V11.8423C55.0254 11.1226 54.9652 10.8465 54.7974 10.4145L55.8413 10.1265C55.9854 10.4145 56.0457 10.6782 56.0457 11.0506C56.3935 10.7623 56.5732 10.6062 56.8254 10.4623C57.1732 10.2587 57.5693 10.1626 57.941 10.1626C58.5771 10.1626 59.1415 10.4984 59.3571 11.0143C59.453 11.2304 59.5013 11.4943 59.5013 11.7701V16.3179H58.4091Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M41.3111 12.1542C41.3111 11.3862 41.695 11.0023 42.403 11.0023C43.1591 11.0023 43.5072 11.3623 43.5072 12.1306C43.5072 12.8745 43.1352 13.2703 42.415 13.2703C41.7069 13.2703 41.3111 12.8984 41.3111 12.1542M42.9791 14.9859H42.0552C41.7674 14.9859 41.623 14.8662 41.623 14.6862C41.623 14.4223 42.1991 14.1459 42.5708 14.0262C44.1435 14.0262 44.7308 13.0303 44.7308 12.1664C44.7308 11.7825 44.6106 11.4584 44.2989 11.0623C44.5872 11.1464 44.6347 11.1584 44.8147 11.1584C45.1867 11.1584 45.4745 11.0623 45.8106 10.7986L45.2467 10.1147C44.9225 10.3428 44.6225 10.4625 44.2628 10.4625C43.9986 10.4625 43.675 10.3664 43.3628 10.2706C43.0025 10.1625 42.7508 10.1384 42.4272 10.1384C41.0472 10.1384 40.1233 10.9423 40.1233 12.1542C40.1233 12.982 40.6152 13.6062 41.5389 13.8823C40.8552 14.1342 40.363 14.374 40.363 14.9381C40.363 15.382 40.6752 15.6817 41.203 15.7417C41.4313 15.7659 41.9111 15.8023 42.3308 15.8023C43.5189 15.8023 43.9869 16.1378 43.9869 16.7142C43.9869 17.3501 43.495 17.7459 42.5111 17.7459C41.5808 17.7459 41.0599 17.4065 41.0599 16.7973C41.0599 16.5454 41.2025 16.2868 41.2615 16.1846C41.05 16.1584 40.8308 16.1152 40.6577 16.0407C40.5329 15.9843 40.4309 15.9144 40.3465 15.8406C40.2865 15.9472 40.1642 16.1722 40.0879 16.3901H40.0872C40.0701 16.4404 40.0546 16.4915 40.0409 16.5439C40.0361 16.5594 40.0338 16.5739 40.0302 16.5889C40.0216 16.6224 40.0137 16.6562 40.0073 16.6916C40.0015 16.7244 39.9974 16.7541 39.9934 16.7839C39.9916 16.8024 39.9885 16.8205 39.9868 16.8398C39.9814 16.8967 39.9799 16.9458 39.9799 16.9878C39.9799 16.9926 39.9791 16.9967 39.9791 17.0017C39.9791 17.0045 39.9796 17.0071 39.9799 17.0101C39.9807 17.0556 39.9832 17.0882 39.9857 17.109C40.0534 18.039 41.0004 18.5856 42.6189 18.5856C44.0825 18.5856 45.1511 17.9381 45.1511 16.642C45.1511 15.7062 44.515 14.9859 42.9791 14.9859\"></path>`}}export{e as IDSIconGotland};\n", "import{IDSIconGotland as i}from\"./icon-gotland-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-gotland\",i);\n", "import{svg as C}from\"lit\";import{IDSIconBase as l}from\"../icon-base-element.js\";class o extends l{constructor(){super(),this.vbHeight=21,this.vbWidth=94}renderIcon(){return C`<path fill=\"${this.colors.color}\" d=\"M6.4204 2.61252C6.39952 2.59259 6.37869 2.57271 6.36319 2.55289L6.35068 2.51119C6.31637 2.48816 6.28962 2.45792 6.26291 2.42773C6.23568 2.39695 6.20848 2.36621 6.17336 2.34319C6.1726 2.34095 6.17099 2.33951 6.16939 2.33806C6.16647 2.33545 6.16356 2.33284 6.16573 2.32549C6.16173 2.32297 6.15705 2.32136 6.1525 2.31979C6.14837 2.31837 6.14434 2.31698 6.14101 2.31499C6.09577 2.25802 6.04372 2.20764 5.99174 2.15734C5.95641 2.12314 5.9211 2.08897 5.888 2.05279C5.8435 2.02944 5.80718 1.99839 5.77063 1.96713C5.75881 1.95702 5.74695 1.94689 5.73479 1.93699C5.63444 1.87818 5.53984 1.81373 5.44516 1.74922C5.31524 1.66069 5.18516 1.57206 5.03987 1.49779C5.0403 1.49715 5.04073 1.49659 5.04113 1.49606C5.04187 1.4951 5.04252 1.49426 5.04292 1.49329C5.03952 1.49162 5.03574 1.49033 5.03218 1.48912C5.03126 1.4888 5.03036 1.4885 5.02949 1.48819C5.0127 1.46989 4.99164 1.45519 4.96753 1.44469C4.95899 1.42279 4.93122 1.40209 4.90894 1.41319C4.9096 1.38565 4.88517 1.38263 4.863 1.37989C4.85474 1.37887 4.84679 1.37789 4.84057 1.37569C4.83394 1.37075 4.83697 1.36711 4.83999 1.36349C4.84155 1.36161 4.84311 1.35974 4.84332 1.35769C4.82959 1.35709 4.80822 1.35349 4.79418 1.34359C4.79174 1.33969 4.78838 1.33639 4.78533 1.33339C4.78289 1.32829 4.78136 1.32259 4.78167 1.31479C4.77496 1.31209 4.76855 1.31179 4.76183 1.31179C4.75268 1.30489 4.74261 1.29919 4.73192 1.29409L4.7304 1.28719C4.72512 1.28508 4.71958 1.28301 4.7139 1.2809C4.68247 1.2692 4.64686 1.25595 4.62877 1.22419C4.59306 1.2062 4.55787 1.18524 4.52271 1.1643C4.47282 1.13459 4.42299 1.1049 4.37179 1.08379C4.3663 1.08049 4.35959 1.08229 4.35348 1.08649C4.33821 1.06445 4.32074 1.05966 4.30335 1.05488C4.29398 1.05231 4.28463 1.04974 4.27566 1.04449C4.27901 1.04179 4.28268 1.03939 4.28664 1.03699C4.27571 1.03053 4.26489 1.02389 4.2541 1.01728C4.21281 0.991953 4.17218 0.967034 4.12886 0.954188C4.11177 0.930188 4.07484 0.904688 4.0431 0.907688C4.03486 0.886088 4.00159 0.864188 3.97718 0.873488C3.95156 0.853925 3.92517 0.839675 3.89869 0.82538C3.87562 0.812931 3.8525 0.800447 3.82977 0.784388C3.82488 0.778988 3.81787 0.781088 3.81054 0.786488C3.78765 0.762788 3.77911 0.757388 3.75347 0.757388C3.74736 0.751388 3.74614 0.745988 3.75286 0.741788C3.74992 0.740655 3.74667 0.741573 3.74337 0.742503C3.73706 0.74428 3.73061 0.746099 3.726 0.733688C3.73002 0.731299 3.73298 0.73012 3.73515 0.729255C3.74007 0.727296 3.74096 0.726945 3.74096 0.717788C3.73017 0.703729 3.7174 0.700471 3.70431 0.697131C3.70037 0.696124 3.69639 0.695109 3.69243 0.693788C3.68875 0.689861 3.69119 0.687168 3.69359 0.684503C3.69578 0.682078 3.69795 0.679676 3.69548 0.676388C3.67086 0.670922 3.64824 0.652868 3.62559 0.634787C3.59603 0.611187 3.56642 0.587542 3.5322 0.591788C3.50351 0.547988 3.45865 0.531188 3.41501 0.529988C3.41234 0.527361 3.41231 0.525184 3.41229 0.522964C3.41227 0.521127 3.41226 0.519261 3.41074 0.517088C3.36638 0.497492 3.31766 0.481458 3.2698 0.465709C3.21655 0.448187 3.16437 0.431018 3.12049 0.409688C3.1647 0.406993 3.20727 0.417821 3.24999 0.428686C3.28336 0.437173 3.31682 0.445683 3.35122 0.447788C3.35595 0.455037 3.36138 0.458545 3.36687 0.462092C3.37342 0.466326 3.38006 0.470615 3.38571 0.481388C3.3888 0.482243 3.3919 0.483125 3.39502 0.48401C3.4214 0.491508 3.44857 0.499228 3.47696 0.492788C3.47997 0.483458 3.47084 0.478964 3.46211 0.474668C3.454 0.470677 3.44624 0.466857 3.44888 0.459488C3.46018 0.460988 3.48062 0.472388 3.48978 0.478988C3.49558 0.484858 3.49204 0.488852 3.48853 0.492806C3.48576 0.495925 3.48301 0.499019 3.4849 0.502988C3.50839 0.508288 3.52675 0.524413 3.5447 0.540182C3.56944 0.561906 3.59341 0.582953 3.62895 0.574088C3.63756 0.580393 3.64517 0.586291 3.65217 0.591719C3.68418 0.616516 3.70355 0.631527 3.74736 0.630788C3.75165 0.622922 3.74329 0.620252 3.73519 0.617665C3.726 0.614728 3.71714 0.611898 3.72753 0.601688C3.72189 0.594348 3.71515 0.593977 3.70848 0.593609C3.70069 0.59318 3.69299 0.592756 3.68724 0.581288C3.69537 0.581483 3.70356 0.580982 3.71171 0.580484C3.72866 0.579447 3.74543 0.578421 3.7611 0.583688C3.75974 0.592023 3.75552 0.590759 3.7502 0.589163C3.7448 0.587543 3.73825 0.585581 3.73241 0.592988C3.7526 0.613128 3.77546 0.628005 3.79689 0.641949C3.81215 0.630249 3.8258 0.625988 3.8377 0.631688C3.84265 0.640549 3.84174 0.64697 3.84092 0.652744C3.83977 0.660848 3.8388 0.667677 3.85449 0.678188C3.86155 0.68397 3.87009 0.680746 3.87873 0.677483C3.88578 0.674821 3.89291 0.672131 3.89935 0.674288C3.89646 0.68146 3.90107 0.688037 3.90427 0.69261C3.9075 0.697218 3.9093 0.699792 3.90057 0.698888C3.90553 0.706654 3.91127 0.706846 3.91692 0.707034C3.92241 0.707217 3.9278 0.707397 3.93231 0.714488L3.91492 0.726488C3.9256 0.736988 3.93659 0.745088 3.95124 0.733388C3.96379 0.766003 3.99247 0.76274 4.02122 0.759471C4.03927 0.757417 4.05735 0.75536 4.07148 0.762188C4.0693 0.760287 4.06696 0.758219 4.06448 0.756029C4.03685 0.731614 3.99207 0.692055 3.95398 0.699488C3.95296 0.696586 3.9515 0.693417 3.94999 0.690125C3.94696 0.68355 3.94371 0.676486 3.9433 0.670088C3.93298 0.664417 3.92262 0.658284 3.91224 0.652138C3.89132 0.639751 3.87031 0.62731 3.8493 0.618488C3.83374 0.585788 3.80749 0.569588 3.77849 0.577388C3.73431 0.539822 3.67606 0.517502 3.6196 0.495866C3.59805 0.48761 3.57676 0.479454 3.55662 0.470588C3.54762 0.472723 3.55021 0.476949 3.55273 0.481062C3.55517 0.485043 3.55755 0.488918 3.54929 0.490688C3.54037 0.487458 3.53705 0.473223 3.53419 0.460953C3.53333 0.457271 3.53251 0.453766 3.53159 0.450788C3.52647 0.448708 3.52118 0.448066 3.51597 0.447434C3.5069 0.446333 3.49806 0.44526 3.4907 0.436688C3.48311 0.431229 3.48573 0.427204 3.48843 0.423074C3.49018 0.420397 3.49196 0.417675 3.491 0.414488C3.47285 0.400267 3.46787 0.406522 3.45697 0.420244C3.45614 0.421284 3.45528 0.422368 3.45438 0.423488C3.43488 0.416616 3.41503 0.41144 3.39512 0.406246C3.36548 0.398516 3.33569 0.390746 3.30666 0.377288C3.34847 0.373275 3.38854 0.37949 3.42853 0.385693C3.45131 0.389226 3.47407 0.392755 3.49711 0.394388C3.49987 0.386084 3.4945 0.3839 3.48805 0.381276C3.48238 0.37897 3.47587 0.376324 3.4733 0.368888C3.47284 0.372002 3.47284 0.374615 3.47285 0.376826C3.47286 0.383351 3.47287 0.386372 3.46079 0.388388C3.44968 0.386098 3.4494 0.379773 3.4491 0.372572C3.44888 0.367511 3.44864 0.362017 3.44461 0.357188C3.46221 0.349192 3.47773 0.354245 3.49329 0.359309C3.50633 0.363555 3.51939 0.367809 3.53373 0.364388C3.53866 0.359216 3.53571 0.358224 3.53179 0.356908C3.52844 0.355781 3.52438 0.354416 3.52396 0.349988C3.53709 0.343988 3.54288 0.353588 3.54563 0.366488C3.55021 0.367688 3.57157 0.361988 3.56699 0.352088C3.59208 0.367043 3.61962 0.367053 3.64714 0.367063C3.6809 0.367075 3.71462 0.367088 3.7437 0.394688C3.74533 0.393648 3.74695 0.392591 3.74858 0.39153C3.754 0.388 3.75951 0.384417 3.76537 0.381188C3.75241 0.373754 3.73921 0.370386 3.72613 0.36705C3.71335 0.363789 3.70068 0.360557 3.68846 0.353588C3.69658 0.350519 3.7039 0.350904 3.71124 0.351289C3.71824 0.351657 3.72527 0.352026 3.73302 0.349388C3.70392 0.337369 3.64484 0.331899 3.59315 0.327113C3.58033 0.325926 3.56796 0.324781 3.55662 0.323588C3.54965 0.325055 3.54846 0.328293 3.5473 0.331426C3.54632 0.334059 3.54537 0.336618 3.54105 0.337988C3.53545 0.339693 3.5306 0.336811 3.52567 0.333879C3.51933 0.330104 3.51285 0.326248 3.50443 0.331988C3.50292 0.328882 3.50481 0.326445 3.50673 0.323965C3.50908 0.320936 3.51148 0.317842 3.50779 0.313388C3.48826 0.308855 3.46789 0.309269 3.44744 0.309685C3.42729 0.310095 3.40708 0.310506 3.38754 0.306188C3.39171 0.303368 3.39444 0.303177 3.39638 0.303041C3.39898 0.302858 3.40018 0.302774 3.40158 0.296588C3.34989 0.276798 3.29555 0.26835 3.24232 0.260077C3.24149 0.259947 3.24066 0.259818 3.23983 0.259688C3.25166 0.248242 3.27087 0.251761 3.29029 0.255316C3.30294 0.257632 3.31567 0.259963 3.3265 0.258188C3.34695 0.244388 3.36618 0.238088 3.38113 0.252788C3.38584 0.249783 3.39019 0.249391 3.39458 0.248995C3.4007 0.248441 3.40693 0.247879 3.4144 0.240188C3.44128 0.260867 3.47299 0.260253 3.50461 0.259641C3.51427 0.259454 3.52392 0.259267 3.53342 0.259688C3.56253 0.221903 3.59783 0.232274 3.63534 0.243295C3.66901 0.253187 3.70446 0.263602 3.73882 0.240188C3.726 0.241388 3.68053 0.229688 3.70098 0.208388C3.69553 0.224111 3.70809 0.225033 3.72078 0.225965C3.73158 0.226758 3.74248 0.227559 3.74248 0.237488C3.75736 0.233426 3.7708 0.237675 3.78428 0.241933C3.80066 0.24711 3.81709 0.2523 3.83618 0.242588C3.81696 0.230733 3.79648 0.227477 3.77615 0.224246C3.74967 0.220037 3.72346 0.215871 3.70067 0.192788C3.70178 0.187324 3.70618 0.186836 3.71195 0.186198C3.71884 0.185434 3.72768 0.184455 3.73516 0.174488C3.81233 0.200758 3.89541 0.19276 3.97829 0.18478C3.97965 0.18465 3.98101 0.184519 3.98236 0.184388C3.97116 0.179069 3.95244 0.176708 3.93115 0.174025C3.90082 0.1702 3.86529 0.165721 3.83892 0.151088C3.84848 0.146925 3.85718 0.145072 3.86486 0.143437C3.87655 0.140947 3.88589 0.138959 3.89233 0.130088C3.89475 0.13721 3.89827 0.138905 3.90195 0.140679C3.90525 0.142267 3.90868 0.143919 3.91156 0.149588C3.92538 0.148282 3.93918 0.14872 3.9529 0.149156C3.98643 0.150221 4.0195 0.151272 4.05134 0.126788C4.07226 0.135765 4.09508 0.132488 4.11778 0.129227C4.1368 0.126495 4.15575 0.123774 4.17342 0.128288C4.17111 0.122054 4.17582 0.11701 4.18054 0.111957C4.18332 0.108985 4.1861 0.10601 4.18746 0.102788C4.17983 0.0987817 4.17107 0.101512 4.1624 0.104216C4.15094 0.107788 4.13964 0.111312 4.1313 0.0991883C4.15358 0.0865883 4.22286 0.0823883 4.23354 0.0865883C4.2394 0.0946148 4.23772 0.0946237 4.23409 0.094643C4.23148 0.0946568 4.22785 0.094676 4.2253 0.0976883C4.23318 0.101562 4.24222 0.0991316 4.25124 0.0967054C4.25759 0.0949979 4.26393 0.0932926 4.26986 0.0937883C4.26994 0.091814 4.27023 0.0898782 4.27052 0.0879273C4.27139 0.0821705 4.27228 0.0762825 4.26772 0.0688883C4.24538 0.0770216 4.22578 0.0706998 4.20667 0.0645358C4.20464 0.0638789 4.20261 0.0632239 4.20058 0.0625883C4.19686 0.0545396 4.19656 0.0470859 4.19626 0.0392597C4.19619 0.0374595 4.19612 0.0356396 4.196 0.0337883C4.19251 0.0261469 4.18383 0.0245854 4.17685 0.0233306C4.1704 0.0221715 4.16541 0.0212742 4.16731 0.0160883C4.16884 0.0115883 4.16792 0.00648828 4.1667 0.000488281C4.18502 0.00632826 4.20505 0.00851691 4.22407 0.0105962C4.25196 0.0136439 4.27769 0.0164566 4.29275 0.0301883C4.29511 0.0279922 4.29444 0.0252007 4.29373 0.022278C4.29271 0.0180138 4.29162 0.0134702 4.29977 0.0100883C4.33471 0.0282891 4.37287 0.0284643 4.41095 0.0286391C4.4507 0.0288216 4.49037 0.0290037 4.52622 0.0496883C4.54697 0.030702 4.56268 0.0390039 4.57832 0.047263C4.58269 0.0495745 4.58706 0.0518826 4.59153 0.0535883C4.61198 0.0295883 4.64799 0.0448883 4.67088 0.0679883C4.66576 0.0712459 4.65994 0.0749493 4.66234 0.0787883C4.68046 0.103478 4.70269 0.103183 4.72476 0.10289C4.74023 0.102685 4.75563 0.102481 4.76946 0.110888C4.78315 0.100396 4.78333 0.100278 4.79577 0.0923608C4.7972 0.0914492 4.7988 0.0904343 4.80059 0.0892883C4.80554 0.101548 4.81281 0.0999391 4.82007 0.0983309C4.8249 0.097263 4.82972 0.0961956 4.83386 0.0991883C4.82531 0.147488 4.88849 0.139388 4.91962 0.124388C4.93643 0.142039 4.95551 0.145704 4.97454 0.149359C4.98592 0.151544 4.99728 0.153726 5.00812 0.158888C5.03559 0.181688 5.06977 0.198488 5.1122 0.204188C5.11123 0.204888 5.11026 0.205597 5.1093 0.206305C5.10446 0.209847 5.09963 0.213388 5.0948 0.215888C5.10794 0.22504 5.12311 0.222237 5.13907 0.219289C5.15868 0.215666 5.17949 0.211823 5.19918 0.229688C5.22481 0.205688 5.24465 0.216488 5.26357 0.232388C5.26055 0.234887 5.25778 0.235191 5.25496 0.2355C5.25236 0.235785 5.24971 0.236075 5.24679 0.238088C5.259 0.258188 5.27578 0.260888 5.29531 0.247388C5.31741 0.268032 5.3416 0.27586 5.36586 0.283709C5.38884 0.291145 5.41188 0.2986 5.43326 0.316988C5.43072 0.319235 5.4275 0.321274 5.42434 0.323279C5.41609 0.3285 5.40822 0.333484 5.41373 0.341288C5.44364 0.351188 5.47477 0.358388 5.50864 0.349388C5.53245 0.366188 5.55717 0.381788 5.58525 0.376388C5.58941 0.38169 5.58937 0.385997 5.58933 0.39012C5.58929 0.394164 5.58925 0.398032 5.59318 0.402488C5.60457 0.407605 5.61613 0.410165 5.62764 0.412713C5.63771 0.414944 5.64775 0.417166 5.65758 0.421088C5.66735 0.430688 5.67864 0.439088 5.69146 0.445688C5.69223 0.447065 5.69325 0.448286 5.6943 0.44955C5.69531 0.450764 5.69636 0.452018 5.69725 0.453488C5.70122 0.454388 5.70336 0.454088 5.70458 0.452588C5.71526 0.457388 5.72594 0.461288 5.73815 0.464288C5.75982 0.473588 5.78149 0.482888 5.80285 0.493388C5.80621 0.492488 5.80896 0.491588 5.81262 0.489488L5.80835 0.495788C5.83948 0.509888 5.86908 0.524888 5.89899 0.541088C5.95004 0.55549 5.99376 0.577169 6.03756 0.598887C6.08043 0.620147 6.12339 0.641445 6.17336 0.655988C6.23091 0.687364 6.29073 0.716411 6.35055 0.745454C6.4852 0.810828 6.6198 0.876176 6.7282 0.967988C6.77718 0.988439 6.81623 1.01874 6.8553 1.04907C6.88901 1.07523 6.92275 1.10142 6.9629 1.12129C6.96526 1.12375 6.96576 1.12769 6.96628 1.13167C6.96683 1.13593 6.96738 1.14025 6.97022 1.14289C7.01966 1.15849 7.05507 1.18759 7.08406 1.22329H7.10512C7.13235 1.25006 7.16332 1.27316 7.19425 1.29624C7.22952 1.32256 7.26474 1.34884 7.29434 1.38049C7.30197 1.37959 7.30716 1.38139 7.31174 1.38409C7.31581 1.39496 7.32419 1.40106 7.33254 1.40713C7.34169 1.41379 7.3508 1.42042 7.35416 1.43329C7.37629 1.43873 7.39049 1.45195 7.40457 1.46505C7.41613 1.4758 7.42759 1.48647 7.44327 1.49269C7.44663 1.49569 7.44724 1.50139 7.44724 1.50709C7.57878 1.61179 7.69933 1.72789 7.81714 1.84609C7.84277 1.86349 7.86719 1.88119 7.88153 1.90909C7.98774 1.99579 8.08327 2.09389 8.1733 2.19589L8.27218 2.27809C8.42051 2.43289 8.55998 2.59549 8.68816 2.76979C8.69238 2.77346 8.69677 2.77653 8.70115 2.7796C8.70501 2.7823 8.70886 2.785 8.71258 2.78809C8.7511 2.84575 8.7926 2.90059 8.83409 2.95542C8.89383 3.03438 8.95355 3.1133 9.00435 3.20059C9.00748 3.20675 9.01318 3.21029 9.01902 3.21391C9.02284 3.21628 9.02672 3.21868 9.02998 3.22189C9.02998 3.22219 9.02998 3.22159 9.02998 3.22189C9.03 3.2264 9.03002 3.23181 9.02601 3.23209C9.03707 3.24755 9.04889 3.26231 9.06074 3.27709C9.08749 3.31048 9.11433 3.34398 9.13253 3.38599C9.15908 3.40129 9.17342 3.42769 9.18258 3.45919C9.18434 3.46081 9.18612 3.46241 9.18788 3.464C9.20112 3.47591 9.21398 3.48748 9.21829 3.50839C9.25155 3.53659 9.27627 3.57349 9.30008 3.60979C9.3013 3.62269 9.29947 3.63289 9.29611 3.64189C9.32919 3.65751 9.35265 3.69509 9.37556 3.7318C9.38478 3.74656 9.39391 3.76119 9.40354 3.77419C9.40274 3.77911 9.40127 3.7829 9.39983 3.78661C9.3974 3.79286 9.39507 3.79886 9.39622 3.80959C9.40435 3.81225 9.40606 3.80853 9.40781 3.80475C9.4094 3.8013 9.41102 3.7978 9.41758 3.79909C9.42309 3.81047 9.43212 3.82095 9.4412 3.83151C9.45726 3.85017 9.47352 3.86906 9.47099 3.89359C9.55492 3.99439 9.62481 4.10839 9.69164 4.22599C9.70378 4.23493 9.71255 4.24737 9.72136 4.25987C9.73205 4.27503 9.74281 4.29028 9.7597 4.29949C9.78463 4.35832 9.82254 4.40399 9.86072 4.44997C9.87958 4.47269 9.8985 4.49549 9.91596 4.51999C9.91473 4.5299 9.91627 4.53709 9.91778 4.54412C9.91851 4.54752 9.91923 4.55088 9.91963 4.55449C9.92437 4.55872 9.92881 4.56303 9.93321 4.56729C9.94438 4.57811 9.95522 4.58861 9.96968 4.59679C9.97965 4.63102 10.0004 4.65449 10.0212 4.67798C10.0418 4.70122 10.0624 4.72447 10.0725 4.75819C10.1162 4.79831 10.1492 4.84874 10.1823 4.89922C10.2165 4.95141 10.2508 5.00367 10.2968 5.04469C10.2952 5.05064 10.2969 5.05404 10.2985 5.05745C10.2997 5.05988 10.3008 5.06232 10.3008 5.06569C10.33 5.09397 10.3536 5.12823 10.3768 5.16216C10.3844 5.17321 10.392 5.18422 10.3997 5.19499C10.4041 5.20074 10.4096 5.20648 10.4153 5.2124C10.4323 5.23022 10.4509 5.24963 10.4461 5.27599C10.4483 5.27806 10.4524 5.2786 10.4566 5.27916C10.4609 5.27972 10.4653 5.28031 10.4681 5.28259C10.478 5.29509 10.4873 5.30812 10.4966 5.32112C10.5205 5.35458 10.5443 5.3879 10.5779 5.41189C10.5763 5.41745 10.5778 5.41972 10.5793 5.42199C10.5806 5.42388 10.5818 5.42577 10.5813 5.42959C10.6455 5.50949 10.7127 5.58647 10.7799 5.66339C10.8065 5.6939 10.8332 5.72441 10.8596 5.75509C10.8647 5.75352 10.8668 5.75506 10.869 5.75664C10.8709 5.75808 10.873 5.75955 10.8773 5.75869C10.8857 5.77755 10.9015 5.7889 10.9173 5.80028C10.9342 5.81243 10.9511 5.82461 10.9591 5.84599C10.9655 5.84456 10.969 5.84589 10.9725 5.84721C10.9749 5.8481 10.9773 5.84899 10.9805 5.84899C11.0045 5.87158 11.0368 5.88562 11.0691 5.89966C11.1051 5.91527 11.141 5.93087 11.1654 5.95819C11.1892 5.96059 11.228 5.96599 11.2399 5.98939C11.243 5.98918 11.2453 5.98836 11.2472 5.98766C11.2507 5.98639 11.2532 5.98551 11.2579 5.98939C11.2697 5.99919 11.2941 6.00515 11.3182 6.01104C11.331 6.01416 11.3437 6.01725 11.3543 6.02089C11.3581 6.02232 11.3611 6.02484 11.3641 6.02741C11.3674 6.03023 11.3708 6.03312 11.3754 6.03469C11.4023 6.04627 11.4317 6.05086 11.4611 6.05545C11.4804 6.05847 11.4997 6.06149 11.5182 6.06649C11.5224 6.06766 11.5255 6.07054 11.5285 6.07339C11.5317 6.07639 11.5349 6.07937 11.5393 6.08029C11.5459 6.08246 11.5534 6.08239 11.561 6.0823C11.5681 6.08223 11.5754 6.08215 11.5823 6.08389C11.6084 6.09022 11.6357 6.09672 11.6634 6.10331C11.7001 6.11203 11.7374 6.12091 11.7734 6.12979C11.7823 6.13153 11.7926 6.13131 11.8025 6.13108C11.8131 6.13085 11.8234 6.13062 11.8311 6.13279C11.8338 6.1337 11.8352 6.13616 11.8365 6.13852C11.8378 6.14081 11.839 6.143 11.8414 6.14359C11.8596 6.14557 11.878 6.14555 11.8964 6.14553C11.9116 6.14552 11.9267 6.14551 11.9418 6.14659C12.1051 6.16099 12.2791 6.15499 12.4579 6.14659C12.4795 6.14563 12.5008 6.14486 12.5218 6.1441C12.5931 6.14153 12.6614 6.13906 12.7283 6.12979C12.8693 6.10999 13.0079 6.08659 13.1446 6.05209C13.1645 6.04849 13.205 6.05269 13.205 6.05269C13.205 6.05269 13.2679 6.02689 13.2978 6.01789C13.4178 5.97979 13.5716 5.94799 13.7108 5.91949C13.8038 5.90089 13.9284 5.87719 14.0553 5.85379C14.1435 5.83759 14.2329 5.82139 14.3147 5.80669C14.4988 5.77339 14.6434 5.74789 14.6434 5.74789L15.1064 5.65009C15.1064 5.65009 15.1046 5.66209 15.3237 5.64589C15.3722 5.64199 15.4186 5.63809 15.4635 5.63359C15.5077 5.62939 15.5505 5.62519 15.5917 5.62069C15.6088 5.61889 15.6257 5.6171 15.6424 5.61533C15.9433 5.58346 16.1799 5.55841 16.4838 5.61469C16.6176 5.61906 16.7359 5.64858 16.8549 5.67828C16.883 5.68528 16.9111 5.69229 16.9394 5.69899C16.9406 5.70056 16.9415 5.70211 16.9424 5.7036C16.9447 5.70723 16.9467 5.71054 16.951 5.71309C16.9536 5.71293 16.9565 5.7126 16.9595 5.71225C16.9734 5.71063 16.9896 5.70875 16.9928 5.72359C16.9971 5.71969 17.0053 5.71969 17.0148 5.72029C17.2589 5.79979 17.4936 5.88949 17.7125 5.99659C17.7538 6.01683 17.7643 6.03513 17.7756 6.05471C17.7855 6.07199 17.796 6.09028 17.8287 6.11179C17.8325 6.11442 17.8359 6.11773 17.8394 6.12114C17.8487 6.13019 17.8588 6.13999 17.8785 6.13999C17.8911 6.15418 17.9076 6.16439 17.924 6.17453C17.9433 6.18647 17.9624 6.19832 17.9749 6.21649C18.0192 6.23299 18.0509 6.26119 18.0775 6.29419C18.2218 6.40549 18.3696 6.53509 18.4864 6.67309C18.4997 6.68871 18.507 6.70432 18.5143 6.72007C18.5212 6.73486 18.5282 6.74977 18.5402 6.76489C18.5923 6.82969 18.6433 6.89599 18.694 6.96229C18.743 7.02503 18.7744 7.08824 18.8103 7.16037C18.8151 7.16998 18.8199 7.17974 18.8249 7.18969C18.8282 7.19288 18.8338 7.19599 18.84 7.19938C18.8529 7.20649 18.8681 7.21488 18.8685 7.22809C18.9027 7.28089 18.9375 7.33609 18.9723 7.39279C18.9882 7.41859 19.0041 7.44499 19.0196 7.47139C19.0295 7.48808 19.0337 7.50494 19.0379 7.5219C19.042 7.53847 19.0461 7.55514 19.0556 7.57189C19.0657 7.59004 19.0808 7.60833 19.096 7.62679C19.1127 7.64707 19.1296 7.66756 19.1402 7.68829C19.182 7.76929 19.221 7.85299 19.2552 7.93939C19.27 7.97619 19.2772 8.01336 19.2844 8.05101C19.2901 8.08088 19.2959 8.11106 19.3056 8.14159C19.3112 8.15898 19.3218 8.17652 19.3324 8.19416C19.3438 8.21303 19.3553 8.23202 19.3608 8.25109C19.3938 8.36779 19.4213 8.48869 19.4435 8.61229C19.4698 8.75599 19.4887 8.90329 19.5021 9.05449C19.5037 9.07795 19.5018 9.10116 19.4999 9.12439C19.4981 9.14541 19.4964 9.16645 19.4972 9.18769C19.4983 9.21009 19.5006 9.23297 19.5029 9.25591C19.506 9.28704 19.5092 9.31826 19.5092 9.34849C19.5092 9.35978 19.5091 9.3711 19.509 9.38243C19.5089 9.40513 19.5087 9.42788 19.5092 9.45049C19.5104 9.60472 19.5 9.66033 19.4843 9.74461C19.477 9.78411 19.4685 9.8299 19.4594 9.89509C19.4544 9.92864 19.4449 9.96049 19.4356 9.99173C19.4303 10.0097 19.425 10.0274 19.4206 10.0451C19.4179 10.0542 19.4166 10.0634 19.4154 10.0724C19.4126 10.0927 19.4099 10.112 19.3913 10.1261C19.3974 10.1532 19.3853 10.183 19.3723 10.2147C19.3665 10.229 19.3605 10.2437 19.3559 10.2587C19.3505 10.2768 19.3456 10.2954 19.3408 10.3136C19.331 10.3505 19.3217 10.3858 19.3092 10.4123C19.3064 10.419 19.3024 10.4274 19.2981 10.4364C19.2895 10.4544 19.2795 10.4754 19.2738 10.493C19.2648 10.521 19.2563 10.5489 19.2478 10.5766C19.2187 10.6714 19.1903 10.7639 19.1457 10.8536C19.1133 10.9188 19.0794 10.9683 19.0457 11.0176C19.0197 11.0557 18.9938 11.0936 18.9687 11.1386C18.9707 11.1515 18.9592 11.1742 18.9493 11.1936C18.9428 11.2066 18.9369 11.2181 18.9363 11.2244C18.932 11.2267 18.9282 11.2294 18.9245 11.2319C18.9211 11.2342 18.9179 11.2365 18.9146 11.2382C18.9146 11.2542 18.9069 11.2628 18.8994 11.2711C18.8975 11.2732 18.8956 11.2753 18.8939 11.2775C18.8957 11.3105 18.8832 11.3285 18.8612 11.3372C18.8513 11.321 18.8647 11.3099 18.8753 11.301C18.8781 11.2988 18.8806 11.2966 18.8826 11.2946C18.8826 11.2799 18.8878 11.2547 18.9043 11.2457C18.9121 11.2481 18.9116 11.2421 18.911 11.2359C18.9107 11.2329 18.9104 11.2299 18.911 11.2277C18.8845 11.2486 18.8644 11.2761 18.8444 11.3035C18.8196 11.3374 18.795 11.3712 18.7584 11.3924C18.7486 11.4191 18.7309 11.4389 18.7044 11.4491C18.7026 11.4523 18.7007 11.4555 18.6988 11.4588C18.6924 11.47 18.6858 11.4816 18.6796 11.4944C18.6621 11.5033 18.6489 11.5168 18.6357 11.5303C18.6198 11.5466 18.6037 11.5629 18.5798 11.5715C18.5767 11.5761 18.5773 11.5786 18.5778 11.5814C18.5784 11.5841 18.579 11.587 18.5765 11.5922C18.4352 11.7083 18.2829 11.8142 18.1275 11.9174C18.1243 11.9194 18.1212 11.9191 18.1177 11.9188C18.1135 11.9183 18.1088 11.9179 18.1028 11.9213C18.0987 11.9238 18.097 11.9287 18.0952 11.9337C18.0936 11.9384 18.092 11.943 18.0885 11.9456C18.0497 11.9664 18.0127 11.9892 17.9757 12.0119C17.9142 12.0498 17.8526 12.0877 17.7827 12.1166C17.7651 12.134 17.7409 12.1453 17.7169 12.1565C17.7046 12.1623 17.6923 12.168 17.681 12.1745C17.6719 12.1757 17.6621 12.1775 17.6523 12.1799C17.6521 12.1797 17.6526 12.1801 17.6523 12.1799C17.6513 12.1788 17.6494 12.1768 17.6472 12.1763C17.6465 12.1787 17.645 12.1799 17.6447 12.1817C17.6328 12.1845 17.6451 12.1877 17.659 12.1914C17.675 12.1956 17.6931 12.2004 17.6792 12.2057C17.6738 12.208 17.6685 12.2103 17.6632 12.2126C17.6533 12.2169 17.6436 12.2212 17.634 12.2249C17.5019 12.2579 17.4204 12.3227 17.3481 12.3941C17.2757 12.4652 17.1628 12.5876 17.1183 12.6878C17.0706 12.7952 17.0417 12.9152 17.0279 13.0457C17.0178 13.1387 17.0154 13.2374 17.0197 13.34C17.0219 13.3977 17.0338 13.4567 17.0461 13.517C17.0543 13.5577 17.0627 13.5989 17.0682 13.6406C17.0732 13.6786 17.0745 13.717 17.0758 13.7559C17.0775 13.8057 17.0792 13.8561 17.0887 13.907C17.0973 13.9535 17.1128 14.0006 17.1286 14.0481C17.1423 14.0897 17.1562 14.1315 17.1656 14.1737C17.1704 14.1957 17.1699 14.2177 17.1695 14.2397C17.169 14.2624 17.1685 14.2851 17.1738 14.3081C17.2022 14.4281 17.2324 14.5499 17.2638 14.6729C17.2814 14.7425 17.2993 14.8122 17.3172 14.8823C17.3298 14.9315 17.3425 14.9809 17.3551 15.0305C17.3679 15.0808 17.3747 15.1312 17.3815 15.1816C17.3879 15.2286 17.3943 15.2755 17.4054 15.3224C17.4135 15.3557 17.4265 15.3888 17.4393 15.4217C17.4531 15.4571 17.4668 15.4923 17.4744 15.5273C17.4927 15.6134 17.5095 15.6983 17.5248 15.7826C17.5311 15.818 17.5312 15.8532 17.5313 15.8882C17.5313 15.9204 17.5314 15.9524 17.5364 15.9842C17.5437 16.0315 17.5552 16.0785 17.5667 16.1251C17.5801 16.1794 17.5933 16.2333 17.5995 16.2866C17.6099 16.3763 17.6185 16.4642 17.6255 16.5509C17.6292 16.5959 17.6194 16.6952 17.6057 16.8086L17.5913 16.8938C17.5982 16.9162 17.5943 16.9414 17.5903 16.9671C17.5871 16.9878 17.5838 17.0089 17.5861 17.0291C17.5808 17.0302 17.5786 17.0528 17.5764 17.0749C17.574 17.0996 17.5716 17.1237 17.5651 17.1176C17.5706 17.1725 17.5629 17.19 17.5565 17.2046C17.5494 17.2208 17.5438 17.2334 17.5596 17.2898C17.5373 17.3243 17.529 17.4059 17.533 17.4356C17.5245 17.4483 17.5215 17.4603 17.5187 17.4718C17.516 17.4825 17.5134 17.4929 17.5065 17.5031C17.5154 17.5211 17.506 17.5394 17.4965 17.5578C17.4871 17.5759 17.4777 17.5942 17.4854 17.6126C17.4856 17.6136 17.4858 17.6149 17.486 17.6163C17.4886 17.6309 17.4945 17.6636 17.475 17.6852C17.4766 17.699 17.4619 17.7842 17.443 17.7842C17.4415 17.7927 17.4323 17.8144 17.4233 17.8354C17.4151 17.8546 17.4072 17.8732 17.4057 17.8805C17.4096 17.8827 17.3941 17.9277 17.3834 17.9587C17.3782 17.9739 17.3741 17.9857 17.374 17.9876C17.3685 18.0543 17.3542 18.0656 17.3333 18.082C17.3174 18.0945 17.2976 18.1101 17.2751 18.1559C17.2919 18.1676 17.302 18.1862 17.2944 18.2114C17.2779 18.2627 17.2741 18.2899 17.2711 18.3118C17.2667 18.3438 17.2638 18.3645 17.2248 18.4334C17.2254 18.4335 17.2261 18.4337 17.2268 18.4339C17.228 18.4342 17.2293 18.4346 17.2309 18.4346C17.2284 18.4412 17.2232 18.4427 17.2184 18.4442C17.215 18.4511 17.212 18.4571 17.2086 18.4628C17.2062 18.4667 17.2025 18.4695 17.1989 18.4722C17.1975 18.4733 17.1961 18.4743 17.1949 18.4754C17.1969 18.4792 17.1959 18.4806 17.1946 18.4825C17.1933 18.4844 17.1917 18.4867 17.1921 18.4922C17.1933 18.4979 17.1974 18.4968 17.2016 18.4956C17.2057 18.4945 17.21 18.4933 17.212 18.4985C17.2079 18.5058 17.2091 18.5186 17.2103 18.5304C17.2121 18.5495 17.2137 18.566 17.1918 18.5519C17.1819 18.5621 17.1762 18.5772 17.1707 18.5921C17.1658 18.6052 17.1609 18.6181 17.1534 18.6272C17.1508 18.6292 17.1522 18.6351 17.1535 18.6406C17.155 18.6468 17.1563 18.6524 17.1518 18.6515C17.1439 18.6548 17.1419 18.66 17.1398 18.6654C17.1385 18.6689 17.1371 18.6724 17.1341 18.6755C17.1253 18.67 17.1224 18.6879 17.1201 18.7022C17.1183 18.7136 17.1169 18.7226 17.1131 18.7154C17.0946 18.7305 17.0932 18.7411 17.0919 18.7505C17.0905 18.7607 17.0893 18.7695 17.067 18.7814C17.0662 18.7858 17.0578 18.794 17.0495 18.8022C17.0419 18.8097 17.0342 18.8172 17.0322 18.8219L17.0078 18.8489C17.0035 18.8605 17.0018 18.874 17.0001 18.8872C16.9958 18.921 16.9916 18.9538 16.9449 18.9536C16.9553 18.9806 16.9299 19.0547 16.8952 19.0496C16.901 19.0855 16.884 19.0983 16.8703 19.1085C16.859 19.117 16.8499 19.1237 16.8585 19.1408C16.8427 19.1588 16.8401 19.173 16.8375 19.1873C16.8347 19.2023 16.8319 19.2175 16.814 19.2374C16.8128 19.2449 16.7734 19.2767 16.7786 19.2713C16.7675 19.293 16.7651 19.2946 16.7595 19.298C16.7557 19.3003 16.7505 19.3036 16.7401 19.3148C16.7294 19.3169 16.7291 19.3199 16.7287 19.32C16.7285 19.32 16.7282 19.3194 16.727 19.3178C16.7087 19.3646 16.6888 19.3916 16.6602 19.4279C16.6568 19.4303 16.6548 19.4291 16.652 19.4273C16.6492 19.4256 16.6456 19.4234 16.6391 19.4237C16.6346 19.4342 16.6358 19.4474 16.637 19.4601C16.6387 19.4792 16.6404 19.4969 16.622 19.502C16.6078 19.5467 16.5806 19.5735 16.5535 19.6003C16.5312 19.6223 16.5089 19.6443 16.4938 19.6763C16.4887 19.6735 16.4859 19.6748 16.4832 19.6761C16.481 19.6771 16.4789 19.6781 16.4755 19.6766C16.4728 19.6819 16.4738 19.6848 16.4749 19.6877C16.4758 19.6904 16.4768 19.6931 16.4749 19.6979C16.46 19.695 16.4548 19.7055 16.4495 19.716C16.4443 19.7264 16.4391 19.7369 16.4245 19.7348C16.4223 19.7428 16.427 19.746 16.4316 19.7491C16.4353 19.7516 16.4389 19.754 16.4389 19.7588C16.4369 19.7684 16.4326 19.7657 16.4272 19.7624C16.4234 19.76 16.4189 19.7572 16.4145 19.7585C16.4077 19.7627 16.4093 19.7658 16.4114 19.7697C16.4132 19.7731 16.4153 19.777 16.413 19.7828C16.3955 19.7799 16.381 19.7979 16.3676 19.8146C16.3632 19.8201 16.3589 19.8255 16.3547 19.8299C16.3567 19.8323 16.3608 19.832 16.3649 19.8317C16.3727 19.8311 16.3808 19.8305 16.3766 19.8473C16.3707 19.8536 16.3683 19.8525 16.3631 19.8503C16.3609 19.8494 16.3581 19.8482 16.3544 19.8473C16.3269 19.8695 16.3019 19.8926 16.2915 19.9178C16.2878 19.9178 16.2861 19.9165 16.2843 19.9151C16.2826 19.9139 16.281 19.9127 16.2777 19.9124C16.2835 19.9223 16.2753 19.937 16.2643 19.9472C16.2625 19.9532 16.2607 19.9583 16.2558 19.9643C16.2306 19.991 16.2036 20.0148 16.1764 20.039C16.1693 20.0452 16.1622 20.0515 16.1551 20.0579C16.1517 20.084 16.1291 20.1101 16.0943 20.117C16.0864 20.1251 16.0785 20.1335 16.0717 20.1416C16.062 20.1536 16.0427 20.162 16.0196 20.1668L16.0156 20.1902C15.9878 20.1965 15.9768 20.1995 15.9539 20.2085C15.9534 20.2344 15.9102 20.2569 15.8731 20.2762C15.8466 20.2899 15.8233 20.3021 15.8212 20.3126C15.8163 20.3128 15.8119 20.3129 15.808 20.313C15.7841 20.3135 15.7747 20.3137 15.7665 20.3261C15.7858 20.3435 15.7849 20.3684 15.7595 20.3864C15.7061 20.4215 15.6484 20.4482 15.5908 20.4743C15.5875 20.4759 15.5837 20.4768 15.5802 20.4777C15.5785 20.4782 15.5768 20.4786 15.5752 20.4791C15.5724 20.4848 15.5671 20.4889 15.5616 20.4931C15.5566 20.4969 15.5516 20.5007 15.5483 20.5058C15.5482 20.5099 15.55 20.5128 15.5518 20.5156C15.5539 20.5191 15.556 20.5226 15.555 20.5283C15.5253 20.5249 15.4813 20.5513 15.4593 20.5645C15.4579 20.5654 15.4565 20.5662 15.4552 20.567C15.4626 20.5544 15.4596 20.5496 15.456 20.5441C15.4534 20.54 15.4505 20.5355 15.4513 20.5271C15.4419 20.5319 15.4316 20.5355 15.4213 20.5391C15.3972 20.5476 15.3731 20.5562 15.3594 20.5793L15.331 20.5739C15.3329 20.5598 15.3284 20.5501 15.3239 20.5405C15.3216 20.5356 15.3193 20.5307 15.3179 20.5253C15.3267 20.5092 15.3376 20.4961 15.3485 20.483C15.3629 20.4657 15.3773 20.4483 15.3869 20.4239C15.3895 20.423 15.3922 20.4225 15.395 20.4219C15.4002 20.4208 15.4054 20.4197 15.4092 20.417C15.4097 20.4111 15.4311 20.3986 15.4605 20.3815C15.5226 20.3453 15.6201 20.2885 15.6298 20.2301C15.5211 20.304 15.3685 20.3692 15.276 20.4087C15.2327 20.4272 15.2026 20.44 15.1964 20.4455C15.1837 20.4338 15.2213 20.4069 15.2575 20.381C15.29 20.3578 15.3213 20.3354 15.3142 20.3255C15.3281 20.2947 15.3548 20.281 15.3817 20.2672C15.3887 20.2637 15.3957 20.2601 15.4024 20.2562C15.4051 20.2472 15.4517 20.2066 15.498 20.1663C15.5441 20.1262 15.59 20.0864 15.592 20.078C15.5732 20.0733 15.5154 20.1196 15.4622 20.1621C15.4194 20.1964 15.3795 20.2283 15.3655 20.2292C15.3666 20.2239 15.3594 20.2341 15.3525 20.2439C15.346 20.2531 15.3398 20.2619 15.3408 20.2574C15.3298 20.232 15.328 20.2368 15.3243 20.2466C15.3205 20.2569 15.3146 20.2727 15.2938 20.2646C15.2804 20.2781 15.2553 20.2991 15.2346 20.3021C15.2412 20.308 15.2309 20.3098 15.2199 20.3116C15.208 20.3136 15.1954 20.3158 15.2025 20.3234C15.1897 20.3325 15.1556 20.3374 15.1192 20.3427C15.0705 20.3498 15.0176 20.3574 15.0057 20.3765C14.9977 20.3768 14.9878 20.3763 14.9773 20.3756C14.9525 20.3742 14.924 20.3725 14.9065 20.3822C14.9072 20.3743 14.9792 20.345 15.0412 20.3197C15.0875 20.3009 15.1282 20.2843 15.1299 20.2805C15.1343 20.2738 15.1303 20.2732 15.1264 20.2726C15.1233 20.2721 15.1203 20.2716 15.1217 20.2682C15.1235 20.2529 15.1485 20.2481 15.1592 20.2601C15.1673 20.2579 15.1719 20.251 15.1764 20.2443C15.1792 20.2401 15.1819 20.236 15.1855 20.2331C15.188 20.2263 15.1845 20.2235 15.181 20.2207C15.1778 20.2181 15.1745 20.2155 15.1757 20.21C15.1767 20.2011 15.1794 20.2029 15.183 20.2053C15.185 20.2067 15.1874 20.2082 15.1897 20.2079C15.4032 20.1235 15.3443 20.1287 15.3244 20.1305C15.3197 20.1309 15.3172 20.1311 15.321 20.1299C15.1967 20.1515 15.0628 20.1722 15.0182 20.1368C15.0275 20.1296 15.0399 20.1268 15.0524 20.1241C15.0719 20.1198 15.0913 20.1155 15.0979 20.0939C15.1406 20.0963 15.1897 20.0846 15.1909 20.042C15.2219 20.0266 15.2315 20.0122 15.2418 19.9967C15.2508 19.9831 15.2603 19.9686 15.2853 19.952C15.3268 19.9492 15.3356 19.9404 15.3516 19.9244C15.3578 19.9182 15.3652 19.9109 15.3759 19.9025C15.3764 19.8941 15.3977 19.8849 15.4141 19.8779C15.4274 19.8722 15.4375 19.8678 15.4302 19.8665C15.4355 19.8619 15.4418 19.8587 15.4481 19.8555C15.4616 19.8487 15.4753 19.8417 15.4791 19.8209C15.5065 19.8065 15.5648 19.769 15.5938 19.7492C15.5933 19.7441 15.6066 19.7305 15.6198 19.7171C15.6329 19.7036 15.646 19.6902 15.6451 19.6856C15.6484 19.6738 15.6582 19.6711 15.6682 19.6683C15.673 19.667 15.6778 19.6657 15.682 19.6634C15.6858 19.6559 15.683 19.6514 15.6809 19.6479C15.6788 19.6446 15.6773 19.6421 15.682 19.6388C15.7048 19.6413 15.7167 19.6215 15.7247 19.608C15.7264 19.6052 15.7279 19.6027 15.7293 19.6007C15.7269 19.5926 15.7223 19.5872 15.7098 19.5866C15.7135 19.5842 15.7168 19.5799 15.7201 19.5755C15.7273 19.5661 15.7347 19.5564 15.7467 19.5644C15.757 19.5287 15.8087 19.4834 15.8412 19.4549C15.8445 19.452 15.8476 19.4493 15.8505 19.4468C15.8865 19.3706 15.891 19.3655 15.9323 19.3188C15.9369 19.3136 15.9419 19.3079 15.9475 19.3016C15.9503 19.2965 15.9491 19.2942 15.948 19.2918C15.947 19.2897 15.9459 19.2876 15.9478 19.2836L15.9492 19.2824C15.9594 19.2737 15.9781 19.2577 15.9726 19.2425C15.9799 19.2379 15.9834 19.2327 15.9866 19.2279C15.9909 19.2215 15.9949 19.2156 16.007 19.2122C16.0077 19.2104 16.0086 19.2086 16.0092 19.2077C16.0096 19.2069 16.0094 19.206 16.0095 19.2052C16.0095 19.2048 16.0096 19.2045 16.0098 19.2041C16.0357 19.139 16.0647 19.0745 16.094 19.0118C16.0981 18.9995 16.1023 18.9872 16.1064 18.975C16.1281 18.9105 16.1498 18.8461 16.1657 18.7811C16.1685 18.7673 16.1831 18.7583 16.2011 18.7517V18.7499C16.2021 18.7454 16.203 18.7412 16.2036 18.737C16.1911 18.7322 16.1825 18.7256 16.1847 18.7169C16.1932 18.6791 16.2082 18.6461 16.2262 18.6146C16.2372 18.5585 16.2488 18.5021 16.2628 18.4463C16.2646 18.4382 16.2707 18.4307 16.2777 18.4241C16.2759 18.4175 16.274 18.411 16.272 18.4045C16.2634 18.3763 16.2549 18.3481 16.2579 18.3152C16.2613 18.2814 16.2618 18.2475 16.2623 18.2136C16.2629 18.1694 16.2635 18.1252 16.2707 18.0815C16.2716 18.0773 16.2753 18.0731 16.279 18.0689C16.279 18.066 16.2787 18.0634 16.2785 18.0608C16.2783 18.0582 16.2781 18.0555 16.2781 18.0527C16.2582 18.0233 16.2469 17.9954 16.2466 17.9654C16.2405 17.9561 16.2381 17.9432 16.2436 17.9291C16.2475 17.9175 16.2523 17.9083 16.258 17.8974C16.2543 17.8944 16.2503 17.8904 16.2484 17.885C16.2375 17.8565 16.2329 17.8298 16.232 17.8025C16.2073 17.7438 16.1955 17.6845 16.1836 17.6245C16.1729 17.5709 16.1621 17.5167 16.1419 17.462C16.1081 17.3987 16.0629 17.3141 16.0763 17.2376C16.0351 17.1653 16.0161 17.0667 15.9983 16.9742C15.9915 16.9392 15.985 16.9051 15.9774 16.8737C15.978 16.8686 15.9804 16.8663 15.9829 16.8639C15.9847 16.8621 15.9865 16.8604 15.9878 16.8575C15.9861 16.8534 15.9851 16.8487 15.9842 16.8441C15.9829 16.838 15.9816 16.832 15.9787 16.8272L15.9213 16.739C15.9122 16.6851 15.8961 16.6305 15.8799 16.5755C15.866 16.5284 15.852 16.4809 15.8422 16.4333C15.8339 16.3917 15.8301 16.3499 15.8262 16.3079C15.822 16.2613 15.8177 16.2144 15.8071 16.1672C15.798 16.1269 15.7829 16.0865 15.7676 16.0458C15.7532 16.0075 15.7388 15.9689 15.7293 15.9302C15.7161 15.8752 15.7076 15.8198 15.6991 15.7641C15.6898 15.7031 15.6804 15.6417 15.6646 15.5801C15.6537 15.5372 15.6371 15.4942 15.6204 15.451C15.6038 15.4081 15.5872 15.365 15.5761 15.3218C15.5658 15.2818 15.5609 15.2416 15.556 15.2013C15.551 15.1607 15.5461 15.1199 15.5355 15.0791C15.5239 15.034 15.5067 14.9887 15.4895 14.9434C15.4721 14.8973 15.4546 14.8511 15.4427 14.8049C15.4355 14.7769 15.434 14.7491 15.4325 14.7212C15.431 14.6936 15.4296 14.6661 15.4226 14.6384C15.4092 14.5853 15.3907 14.5319 15.3722 14.4784C15.3524 14.4209 15.3324 14.3633 15.3185 14.3054C15.2834 14.159 15.2495 14.0117 15.2178 13.8632C15.2108 13.7903 15.2047 13.7204 15.2001 13.6529C15.1949 13.5785 15.1909 13.5068 15.1885 13.4372C15.1852 13.3466 15.1842 13.2596 15.1861 13.1747C15.1894 13.0136 15.2016 12.8585 15.2239 12.6971C15.2164 12.6732 15.2228 12.6464 15.2294 12.6184C15.2328 12.6042 15.2362 12.5896 15.2379 12.575C15.2505 12.4709 15.2706 12.3617 15.3097 12.2846C15.3084 12.2465 15.3228 12.2225 15.3414 12.2039C15.3449 12.1713 15.3631 12.1374 15.3803 12.1057C15.3853 12.0962 15.3903 12.0869 15.3948 12.0779V12.0569C15.4129 12.0228 15.4281 11.9869 15.4431 11.9515C15.4713 11.8848 15.4989 11.8195 15.5444 11.7704C15.5454 11.7504 15.5586 11.7372 15.5719 11.7239C15.5773 11.7185 15.5828 11.713 15.5874 11.7071C15.6135 11.6722 15.6378 11.636 15.662 11.5998C15.7009 11.5417 15.7398 11.4837 15.7864 11.4311C15.8035 11.418 15.8178 11.4014 15.8321 11.3848C15.8358 11.3804 15.8396 11.376 15.8435 11.3717C15.8507 11.374 15.852 11.3712 15.8533 11.3684C15.8545 11.3659 15.8556 11.3634 15.8612 11.3648C15.8964 11.3317 15.9412 11.2831 15.9846 11.2362C16.0332 11.1835 16.0799 11.1329 16.109 11.1086C16.1204 11.0993 16.1422 11.075 16.1645 11.0502C16.1882 11.0238 16.2124 10.997 16.2246 10.9874C16.297 10.9536 16.3432 10.9048 16.3938 10.8514C16.4138 10.8302 16.4345 10.8083 16.4578 10.7864C16.4639 10.8272 16.4968 10.7997 16.5286 10.7731C16.5433 10.7608 16.5578 10.7487 16.5692 10.7438C16.6626 10.7042 16.8197 10.572 16.9091 10.4968C16.9396 10.4712 16.9622 10.4521 16.9718 10.4456C16.9721 10.4456 17.1042 10.3583 17.1677 10.2731C17.2281 10.193 17.2464 10.1585 17.2464 10.1585C17.2461 10.1579 17.2483 10.1538 17.2523 10.1466C17.2682 10.1178 17.3118 10.039 17.3264 9.93169C17.33 9.90508 17.338 9.87467 17.3464 9.84279C17.356 9.80639 17.3661 9.76807 17.3707 9.73129C17.3756 9.6904 17.3756 9.64649 17.3757 9.60173C17.3757 9.56077 17.3757 9.5191 17.3795 9.47839C17.3925 9.33625 17.3852 9.24011 17.3772 9.13626C17.3749 9.10618 17.3726 9.07546 17.3707 9.04279C17.3618 8.95189 17.3453 8.88559 17.2995 8.73769C17.2813 8.6784 17.2649 8.65268 17.2451 8.62183C17.2257 8.59164 17.2032 8.55655 17.1729 8.48029C17.1622 8.45989 17.1527 8.43949 17.146 8.41849C17.1195 8.38174 17.094 8.34378 17.0686 8.30581C17.0101 8.21857 16.9517 8.13132 16.8796 8.05879C16.8448 8.03449 16.8073 8.01589 16.7667 8.00329C16.7413 7.99549 16.738 7.98169 16.7453 7.96909C16.741 7.96579 16.7362 7.96309 16.7322 7.96069C16.7087 7.95049 16.6858 7.93699 16.6678 7.92139L16.6562 7.91599C16.6029 7.90217 16.5603 7.8803 16.5164 7.85779C16.486 7.84218 16.455 7.82625 16.4194 7.81249C16.3994 7.81729 16.3823 7.80987 16.365 7.80238C16.3477 7.79487 16.3303 7.78729 16.3095 7.79179C16.3087 7.79056 16.3074 7.78975 16.3062 7.78896C16.3038 7.78742 16.3015 7.78594 16.3025 7.78159C16.2636 7.77579 16.2246 7.76932 16.1854 7.76281C16.0582 7.7417 15.9292 7.7203 15.7974 7.72099C15.7043 7.72189 15.6417 7.72429 15.516 7.74019C15.4732 7.7456 15.4364 7.75371 15.3968 7.76245C15.3376 7.77552 15.2721 7.79 15.1702 7.79899C15.0608 7.80821 14.9465 7.8281 14.8311 7.84819C14.7437 7.8634 14.6556 7.87873 14.5687 7.88959C14.5412 7.89379 14.5082 7.90339 14.4872 7.91059C14.4605 7.92027 14.4313 7.92371 14.4027 7.92709C14.3852 7.92914 14.368 7.93118 14.3517 7.93459C14.334 7.93849 14.3169 7.94531 14.2999 7.95214C14.2829 7.95896 14.2659 7.96579 14.2482 7.96969C14.1727 7.98932 14.0967 8.00769 14.0208 8.02603C14.0063 8.02955 13.9917 8.03306 13.9772 8.03659C13.9535 8.04229 13.9286 8.04596 13.9034 8.04966C13.8757 8.05375 13.8477 8.05786 13.8209 8.06479C13.816 8.06608 13.8107 8.06745 13.8053 8.06888C13.7501 8.08339 13.6728 8.10368 13.607 8.10259C13.5008 8.13949 13.3335 8.15569 13.2087 8.16589C13.2052 8.16617 13.2012 8.16511 13.1972 8.16404C13.1927 8.16286 13.1882 8.16166 13.1843 8.16229C13.1756 8.16382 13.1679 8.16604 13.1601 8.16829C13.1465 8.1722 13.1326 8.17623 13.1123 8.17699C13.0158 8.18119 12.9267 8.18599 12.8635 8.21539C12.8469 8.20675 12.8315 8.21177 12.8156 8.21696C12.8017 8.22151 12.7873 8.22619 12.7714 8.22199C12.7777 8.21685 12.7886 8.21412 12.8006 8.21113C12.811 8.20853 12.8221 8.20573 12.8318 8.20099C12.8206 8.19174 12.8064 8.19391 12.791 8.19626C12.7744 8.19879 12.7564 8.20153 12.7393 8.19049C12.6749 8.19979 12.605 8.20879 12.5358 8.20819C12.5219 8.20819 12.5084 8.20559 12.4949 8.20301C12.4825 8.20063 12.4702 8.19828 12.4579 8.19799C12.4459 8.19778 12.433 8.1998 12.4202 8.20181C12.396 8.20561 12.372 8.20937 12.3545 8.19799C12.3337 8.20399 12.3059 8.20699 12.2867 8.19799C12.2013 8.20879 12.0728 8.20339 12.0056 8.18329C11.9435 8.19083 11.8816 8.18142 11.8196 8.17201C11.7855 8.16682 11.7514 8.16163 11.7172 8.15929C11.7157 8.15723 11.7134 8.15595 11.7111 8.15466C11.7074 8.15258 11.7036 8.15045 11.7029 8.14489C11.6782 8.15449 11.6376 8.14909 11.6104 8.13469C11.5262 8.12689 11.4389 8.11369 11.3543 8.08579C11.1584 8.05762 10.9754 7.99741 10.7991 7.93939C10.7801 7.93315 10.7613 7.92694 10.7424 7.92079C10.7409 7.91749 10.7388 7.91479 10.7368 7.91209C10.7347 7.90939 10.7327 7.90669 10.7311 7.90339C10.7076 7.90699 10.6686 7.90399 10.6634 7.87849C10.661 7.87903 10.6589 7.87979 10.6567 7.88054C10.6518 7.8823 10.6469 7.88404 10.639 7.88299C10.4211 7.79119 10.2093 7.69369 10.0194 7.57519C10.0207 7.5684 10.0191 7.56485 10.0176 7.56144C10.0162 7.55837 10.0149 7.55541 10.0158 7.55029C10.01 7.54871 10.0089 7.55194 10.0079 7.5551C10.007 7.55795 10.0061 7.56074 10.0017 7.55989C9.97416 7.54083 9.94602 7.52248 9.91794 7.50416C9.82973 7.44661 9.742 7.38938 9.67394 7.31179H9.6599C9.43803 7.11529 9.23812 6.89779 9.06538 6.65449C8.89356 6.43099 8.73791 6.19189 8.5844 5.95099C8.51532 5.85304 8.45108 5.7505 8.38681 5.6479C8.3304 5.55786 8.27397 5.46777 8.2142 5.38069V5.36629C8.03139 5.10094 7.87426 4.81035 7.71704 4.51959C7.71073 4.50792 7.70442 4.49625 7.69811 4.48459C7.67537 4.44728 7.65243 4.41008 7.62948 4.37287C7.55575 4.25329 7.48187 4.13348 7.41367 4.00879C7.36636 3.94579 7.3273 3.87409 7.28854 3.80239C7.13503 3.57889 6.97663 3.36019 6.81488 3.14419C6.7909 3.11207 6.77222 3.0801 6.75356 3.04817C6.73422 3.01507 6.71491 2.98202 6.68975 2.94889C6.67212 2.92563 6.64876 2.90244 6.62544 2.87929C6.60275 2.85677 6.5801 2.83428 6.56279 2.81179C6.54536 2.789 6.53335 2.7662 6.52134 2.74341C6.50916 2.7203 6.49699 2.6972 6.47916 2.67409C6.46338 2.65355 6.44187 2.63302 6.4204 2.61252Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.97712 17.8815C9.98567 17.9418 10.011 17.9943 9.99177 18.0699C10.0153 18.0882 9.99788 18.12 10.0275 18.1368C10.0232 18.1464 10.0281 18.1521 10.0168 18.1563C10.0434 18.183 10.0528 18.2148 10.0452 18.2532C10.116 18.3273 10.1001 18.4299 10.1599 18.5073C10.1578 18.5115 10.1566 18.5148 10.1541 18.519C10.195 18.5607 10.166 18.6252 10.2292 18.6597C10.2429 18.714 10.2823 18.7452 10.3101 18.7992C10.2942 18.825 10.3208 18.8367 10.326 18.8559C10.3202 18.8616 10.3119 18.8607 10.3076 18.8709C10.3073 18.8853 10.322 18.8955 10.3211 18.9117C10.2869 18.9201 10.2841 18.8679 10.2622 18.8526C10.2564 18.8448 10.242 18.8517 10.2393 18.8451C10.2405 18.8718 10.2991 18.9057 10.2887 18.9444C10.2594 18.9288 10.2426 18.9087 10.2396 18.8859C10.2249 18.8763 10.2158 18.8835 10.2008 18.8754C10.1926 18.8454 10.2149 18.8148 10.2155 18.7902C10.1782 18.7845 10.1911 18.7386 10.1636 18.7197C10.148 18.7218 10.1685 18.7404 10.1544 18.7539C10.1166 18.7629 10.12 18.7146 10.1181 18.6918C10.1224 18.6753 10.1334 18.6825 10.1398 18.6783C10.1453 18.6342 10.0839 18.6117 10.094 18.567C10.0717 18.5589 10.0812 18.5814 10.0662 18.5919C10.0504 18.5847 10.058 18.5547 10.0766 18.5628C10.0769 18.5475 10.0617 18.5313 10.0788 18.5196C10.047 18.4746 10.0485 18.42 10.0342 18.3696C10.0205 18.3585 10.0159 18.3744 10.0025 18.3636C10.0049 18.3456 10.018 18.3591 10.0263 18.3561C10.0418 18.3198 10.0028 18.3009 10.0253 18.2628C10.0269 18.2511 10.0089 18.2652 10 18.2553C9.9933 18.2313 9.99666 18.2148 10.0083 18.1908C9.9814 18.1617 9.99574 18.12 9.97773 18.0876C9.97499 18.0867 9.97224 18.0894 9.96797 18.087C9.96156 18.0837 9.96553 18.102 9.95637 18.1101C9.96949 18.1446 9.99299 18.1785 9.9524 18.2214C9.92555 18.1626 9.96736 18.1023 9.93012 18.048C9.9405 18.0297 9.95881 18.0303 9.97468 18.0279C9.9991 17.9688 9.92066 17.943 9.95179 17.8839C9.96034 17.8836 9.97041 17.8857 9.97712 17.8815ZM10.6525 12.7716C10.5954 12.7482 10.5365 12.7425 10.4804 12.6879C10.4523 12.6981 10.4334 12.6672 10.4038 12.6837C10.3977 12.6753 10.3897 12.6762 10.3922 12.6648C10.3553 12.6732 10.3226 12.6648 10.2927 12.639C10.1917 12.6609 10.1105 12.5952 10.0122 12.6057C10.0095 12.6021 10.007 12.5994 10.0049 12.5952C9.94752 12.6081 9.90601 12.5511 9.84375 12.5865C9.78912 12.5703 9.74182 12.5877 9.67986 12.5835C9.66582 12.5571 9.64202 12.5736 9.62249 12.5679C9.62066 12.5601 9.62554 12.5535 9.61882 12.5448C9.60631 12.5373 9.58983 12.5442 9.5761 12.5355C9.58617 12.5019 9.63347 12.5262 9.65789 12.5154C9.66766 12.5148 9.66888 12.4992 9.6762 12.5004C9.6524 12.4878 9.59258 12.5196 9.56419 12.4914C9.59258 12.4746 9.61882 12.4704 9.64049 12.4797C9.65606 12.4722 9.65453 12.4608 9.66949 12.4521C9.70001 12.4608 9.71496 12.495 9.73632 12.5085C9.76074 12.4797 9.7937 12.5136 9.82453 12.5004C9.83063 12.4863 9.80377 12.4938 9.7995 12.4752C9.81079 12.4383 9.85108 12.4662 9.87244 12.4761C9.88465 12.4884 9.87244 12.4938 9.87305 12.5013C9.90845 12.5289 9.95973 12.4884 9.9936 12.5196C10.0122 12.5052 9.9875 12.5013 9.98597 12.4836C10.0006 12.474 10.0226 12.4956 10.0064 12.5073C10.0195 12.5154 10.0415 12.5109 10.0427 12.5313C10.0986 12.5274 10.1453 12.5565 10.1966 12.5703C10.2136 12.564 10.2017 12.5523 10.2182 12.5463C10.2326 12.5577 10.2143 12.5619 10.2124 12.5703C10.2365 12.6021 10.2726 12.5787 10.2948 12.6174C10.3037 12.6246 10.3009 12.6021 10.3141 12.6C10.3388 12.6063 10.3513 12.618 10.3662 12.6396C10.4056 12.6318 10.4346 12.6654 10.4721 12.6666C10.4743 12.6648 10.4734 12.6615 10.4779 12.6591C10.4841 12.6552 10.4657 12.6492 10.4633 12.6375C10.4264 12.6303 10.3846 12.633 10.3681 12.5769C10.4334 12.5841 10.4645 12.6504 10.5311 12.6468C10.5417 12.6648 10.5317 12.6801 10.5259 12.6948C10.5652 12.7458 10.6275 12.6924 10.6635 12.7494C10.6592 12.7563 10.6525 12.7635 10.6525 12.7716ZM9.32584 13.0926C9.35453 13.0767 9.3591 13.0818 9.3881 13.0596C9.46134 13.0644 9.53795 13.0587 9.60631 13.0842C9.51079 13.0986 9.41587 13.1031 9.32584 13.0926ZM10.1328 17.9394C10.1267 18.0009 10.1459 18.0501 10.1645 18.1179C10.1541 18.1428 10.166 18.1545 10.1737 18.183C10.1294 18.1503 10.1334 18.0801 10.1004 18.0291C10.1105 18.0156 10.1102 18.0402 10.1187 18.0339C10.1087 18.0072 10.0641 17.9505 10.0443 17.9202C10.0556 17.871 10.0284 17.8131 10.0421 17.7645C10.0235 17.7444 10.0397 17.7318 10.0208 17.7129C10.0232 17.7003 10.0342 17.6916 10.0437 17.6829C10.0717 17.7684 10.0827 17.8662 10.1328 17.9394ZM9.08107 12.7146C9.0182 12.7101 8.96876 12.7299 8.90009 12.7494C8.87476 12.7395 8.86316 12.7515 8.83417 12.7596C8.86682 12.7152 8.93793 12.7179 8.98921 12.6849C9.00355 12.6942 8.97822 12.6942 8.98493 12.7029C9.01179 12.6924 9.06856 12.6474 9.09908 12.6273C9.14944 12.6378 9.20773 12.6102 9.25747 12.6228C9.27762 12.6039 9.29074 12.6198 9.30966 12.6003C9.32218 12.6027 9.33164 12.6135 9.34049 12.6228C9.25381 12.6513 9.15462 12.6642 9.08107 12.7146ZM7.05824 11.574C7.03474 11.5347 7.03535 11.5029 7.02406 11.4726C7.04176 11.4726 7.05702 11.4795 7.07564 11.4714C7.07777 11.4849 7.06862 11.4969 7.06404 11.5095C7.07228 11.5257 7.09425 11.5434 7.06953 11.5515C7.07319 11.5614 7.08021 11.5551 7.0854 11.5521C7.08693 11.5593 7.08601 11.5662 7.08754 11.5716C7.07625 11.5785 7.06862 11.5728 7.05824 11.574ZM6.8562 10.4214C6.84949 10.4034 6.84582 10.3875 6.8446 10.371C6.85437 10.3746 6.87451 10.3692 6.87726 10.3557C6.87451 10.3551 6.87055 10.3527 6.86658 10.3476C6.85437 10.3515 6.86047 10.3587 6.85071 10.3626C6.83331 10.3371 6.8208 10.2879 6.83667 10.2591C6.83301 10.2855 6.85742 10.2888 6.87726 10.2906C6.89679 10.2843 6.89191 10.2726 6.90229 10.2648C6.91266 10.2708 6.90198 10.2918 6.91785 10.2801C6.90717 10.3065 6.88733 10.3305 6.89008 10.3593C6.89252 10.362 6.89588 10.3608 6.89832 10.3641C6.90839 10.3734 6.90839 10.3551 6.91724 10.3527C6.91785 10.368 6.93097 10.3854 6.93097 10.3998C6.90351 10.3878 6.86475 10.4034 6.8562 10.4214ZM6.7915 12.3867C6.75671 12.3324 6.73443 12.2241 6.6917 12.1875C6.70055 12.147 6.6679 12.0963 6.65691 12.0504C6.66973 12.0285 6.66423 12.0051 6.64043 11.9835C6.63158 11.9736 6.64409 11.9679 6.64623 11.9595C6.63097 11.9517 6.62242 11.9349 6.61388 11.9172C6.60869 11.9046 6.60991 11.8998 6.60106 11.8797C6.58702 11.85 6.58183 11.8053 6.58702 11.7918C6.55803 11.7492 6.5446 11.7003 6.5449 11.6529C6.5214 11.5998 6.50034 11.5488 6.50736 11.5029C6.46219 11.4552 6.48692 11.3871 6.45823 11.3424C6.46403 11.3109 6.44297 11.274 6.44114 11.2419C6.44388 11.2341 6.45273 11.2293 6.45457 11.2224C6.44968 11.2107 6.43259 11.1963 6.44388 11.1879C6.49271 11.1987 6.46067 11.268 6.49851 11.3079C6.47288 11.3448 6.50584 11.3748 6.51713 11.4108C6.52384 11.4354 6.51927 11.4486 6.53361 11.4867C6.55864 11.5515 6.55375 11.6367 6.59587 11.7C6.58427 11.7186 6.58763 11.7468 6.60594 11.7642C6.61815 11.8563 6.65355 11.9481 6.67095 12.0312C6.68132 12.0468 6.69597 12.0408 6.70666 12.0552C6.68621 12.0918 6.71886 12.1563 6.74206 12.1926C6.72802 12.2505 6.80279 12.3234 6.7915 12.3867ZM6.67308 9.6066C6.69262 9.5955 6.70055 9.6234 6.7152 9.6315C6.69994 9.6342 6.68163 9.651 6.66637 9.6528C6.67095 9.6624 6.68255 9.6552 6.69018 9.657C6.69689 9.669 6.70666 9.6813 6.70482 9.6894C6.68499 9.6948 6.68468 9.6981 6.66637 9.7029C6.64134 9.651 6.66088 9.6384 6.67308 9.6066ZM5.52281 9.8634C5.51762 9.8382 5.45597 9.6294 5.44986 9.609C5.44345 9.5913 5.48862 9.5652 5.49137 9.5514C5.46146 9.4974 5.43643 9.4404 5.44712 9.3783C5.44101 9.363 5.43064 9.357 5.41965 9.3501C5.43064 9.321 5.40988 9.2925 5.4166 9.2637C5.40347 9.2508 5.39737 9.2211 5.3815 9.2121C5.35464 8.9799 5.28872 8.8227 5.23226 8.5668C5.19991 8.5227 5.18587 8.4429 5.17885 8.3781C5.14192 8.2719 5.07234 8.1276 5.05555 8.025C5.02259 8.0046 5.01282 7.9602 5.00703 7.9302C5.00001 7.8867 4.96979 7.8642 4.9524 7.824C4.93622 7.788 4.94293 7.737 4.8999 7.7169C4.86542 7.6002 4.79217 7.5081 4.76012 7.4007C4.7061 7.3494 4.6939 7.2834 4.65392 7.2192C4.70977 7.2102 4.69237 7.2618 4.7235 7.3119C4.73449 7.3284 4.75616 7.3323 4.76043 7.3689C4.76867 7.3821 4.78118 7.3899 4.79247 7.3998C4.7879 7.4211 4.8059 7.4394 4.8178 7.4511C4.82086 7.4634 4.82818 7.4778 4.82421 7.4862C4.90997 7.5885 4.94965 7.7604 5.02351 7.8621C5.02747 7.8936 5.04701 7.9467 5.06929 7.965C5.07997 8.0751 5.14986 8.1609 5.16206 8.2659C5.23012 8.3793 5.25393 8.529 5.29788 8.6427C5.30123 8.7462 5.35525 8.8572 5.39218 8.9628C5.38303 9.0078 5.40561 9.0462 5.41812 9.0921C5.43094 9.1383 5.41934 9.1977 5.45871 9.2391C5.45475 9.2502 5.44498 9.2586 5.44712 9.2742C5.47733 9.2985 5.46055 9.3369 5.4694 9.3768C5.47855 9.4185 5.51609 9.462 5.49473 9.5037C5.53562 9.5457 5.51518 9.6246 5.54997 9.6783C5.57377 10.0164 5.5051 9.891 5.52281 9.8634ZM4.63713 7.1961C4.64171 7.17 4.61271 7.1628 4.59929 7.149C4.57853 7.1004 4.55534 7.0542 4.52421 7.0257C4.53581 6.9912 4.49369 6.9777 4.48697 6.951C4.48697 6.951 4.4943 6.9303 4.49521 6.9306C4.48667 6.9147 4.45676 6.8967 4.44486 6.873C4.42929 6.843 4.43997 6.8076 4.40762 6.7971C4.40396 6.7869 4.39877 6.7743 4.40305 6.7674C4.37558 6.7449 4.34323 6.6954 4.34903 6.6696C4.2419 6.5415 4.16621 6.3948 4.06367 6.2241C4.05634 6.2142 4.042 6.2151 4.03193 6.2112C4.02582 6.1455 3.97181 6.1485 3.96356 6.1089C3.99042 6.1011 4.01606 6.153 4.02735 6.1806C4.08534 6.2352 4.13966 6.294 4.18666 6.369C4.20101 6.3834 4.20803 6.3741 4.22298 6.3807C4.22878 6.3936 4.23153 6.4056 4.22359 6.4125C4.2239 6.4248 4.24282 6.4023 4.24282 6.4161C4.2477 6.4257 4.2416 6.4308 4.23 6.4329C4.24801 6.4629 4.29043 6.5058 4.31454 6.5583C4.31881 6.5667 4.33163 6.5679 4.33224 6.5703C4.33499 6.5745 4.32431 6.5811 4.32827 6.5853C4.34536 6.6084 4.39908 6.6279 4.37955 6.6606C4.40823 6.7065 4.42319 6.7809 4.4708 6.7932C4.47721 6.8136 4.48881 6.819 4.47416 6.8328C4.4827 6.8526 4.49918 6.8595 4.51322 6.8712C4.54893 6.9867 4.6118 7.0692 4.65971 7.1946C4.65056 7.1985 4.64812 7.1898 4.63713 7.1961ZM3.08735 5.2944C3.09223 5.2644 3.13496 5.2896 3.16029 5.2761C3.18166 5.2995 3.23018 5.2998 3.20851 5.331C3.1606 5.3178 3.13282 5.3115 3.08735 5.2944ZM4.47782 6.4176C4.4824 6.405 4.47141 6.3834 4.48911 6.3804C4.48758 6.3621 4.46775 6.3699 4.46286 6.3585C4.46592 6.2913 4.39511 6.258 4.38107 6.2049C4.35391 6.1998 4.324 6.162 4.34292 6.1416C4.32369 6.1224 4.30935 6.0978 4.30203 6.0645C4.31027 6.0645 4.31393 6.0711 4.32522 6.0693C4.36703 6.1293 4.418 6.2193 4.46347 6.2916C4.465 6.3036 4.48148 6.3153 4.4653 6.3228C4.47599 6.3315 4.49094 6.3348 4.50132 6.3474C4.50468 6.3846 4.52116 6.4041 4.54435 6.4146C4.62218 6.585 4.71953 6.6783 4.79369 6.8514C4.79827 6.8616 4.80804 6.8649 4.81567 6.8703C4.80712 6.9057 4.84955 6.9339 4.86114 6.9729C4.86328 6.9801 4.85779 6.987 4.86023 6.9945C4.87701 7.0332 4.93073 7.0626 4.9176 7.1127C4.91333 7.1133 4.90875 7.1136 4.90448 7.1151C4.87823 7.077 4.87121 7.0401 4.85138 6.9921C4.83947 6.9639 4.81964 6.9582 4.80041 6.9351C4.78759 6.9177 4.78637 6.8946 4.77599 6.8769C4.74334 6.816 4.69451 6.7551 4.67619 6.6957C4.5883 6.6129 4.56541 6.4818 4.47782 6.4176ZM5.30306 8.0187C5.29391 7.9716 5.26644 7.9422 5.26034 7.8939C5.28933 7.9215 5.2933 7.9731 5.31649 7.9962C5.3226 8.0058 5.3052 8.0127 5.3171 8.0142C5.31619 8.0187 5.30856 8.0175 5.30306 8.0187ZM5.21792 7.6167C5.22127 7.602 5.20296 7.6107 5.20052 7.6044C5.21761 7.5888 5.16664 7.5714 5.19442 7.5606C5.19167 7.551 5.1874 7.5441 5.17214 7.5477C5.17061 7.5291 5.15932 7.5216 5.1581 7.5051C5.17061 7.5015 5.17244 7.4868 5.18404 7.4826C5.21425 7.5162 5.2289 7.572 5.23134 7.6119C5.24508 7.6257 5.26614 7.6533 5.25057 7.6725C5.22951 7.6692 5.19167 7.6236 5.21792 7.6167ZM5.6812 8.8086C5.64366 8.7786 5.63084 8.7063 5.6339 8.6619C5.58934 8.625 5.60124 8.5302 5.55424 8.4945C5.56889 8.4495 5.51151 8.4009 5.52433 8.3562C5.51365 8.3424 5.48252 8.3289 5.49625 8.3052C5.47947 8.3073 5.47764 8.3088 5.46543 8.3013C5.47397 8.2698 5.45841 8.2602 5.45017 8.232C5.45017 8.217 5.46268 8.2146 5.47153 8.2095C5.46665 8.1984 5.43766 8.2119 5.43186 8.2026C5.44162 8.1669 5.43308 8.1624 5.42148 8.1333C5.43979 8.1213 5.45505 8.1339 5.45719 8.154C5.45322 8.1537 5.44803 8.154 5.44376 8.1543C5.44468 8.1738 5.47214 8.1672 5.47977 8.1792C5.49045 8.2317 5.53196 8.2716 5.52769 8.3256C5.54386 8.3373 5.55455 8.3571 5.56889 8.3724C5.57286 8.3865 5.55394 8.3787 5.55638 8.3901C5.57194 8.4255 5.61345 8.4873 5.58537 8.5245C5.59025 8.5356 5.59819 8.5176 5.60399 8.5284C5.61803 8.5938 5.66045 8.6529 5.65648 8.7261C5.66991 8.7441 5.68029 8.7651 5.69829 8.7777C5.69463 8.7897 5.68425 8.7948 5.6812 8.8086ZM3.80029 5.7315C3.7539 5.7039 3.70781 5.6544 3.67363 5.6142C3.71605 5.6424 3.78258 5.6823 3.80029 5.7315ZM4.58708 6.6765C4.58769 6.6888 4.57914 6.6978 4.56236 6.7014C4.54588 6.6738 4.53123 6.6684 4.5236 6.6366C4.54191 6.6534 4.56785 6.6591 4.58708 6.6765ZM4.61546 6.9168C4.56388 6.8832 4.53428 6.81 4.49888 6.7482C4.50315 6.747 4.50559 6.7443 4.50529 6.7413C4.57884 6.7599 4.59349 6.8709 4.61546 6.9168ZM4.13325 6.1257C4.12654 6.1293 4.12044 6.1335 4.11464 6.1377C4.15462 6.1812 4.17751 6.216 4.22451 6.2709C4.17201 6.2394 4.12959 6.1629 4.08045 6.1167C4.10182 6.1047 4.11647 6.1185 4.13325 6.1257ZM4.81964 7.2783C4.82269 7.2885 4.81811 7.2954 4.80804 7.3002C4.83795 7.3425 4.86603 7.3821 4.88129 7.4325C4.90662 7.4439 4.92859 7.4898 4.93469 7.5156C4.9411 7.5348 4.92493 7.512 4.9173 7.5174C4.90967 7.4778 4.87335 7.4634 4.8764 7.4298C4.85931 7.4136 4.84619 7.3914 4.82513 7.386C4.83062 7.3431 4.79858 7.3077 4.78362 7.266C4.79736 7.2657 4.80529 7.2777 4.81964 7.2783ZM1.7564 4.0815C1.75884 4.0428 1.72099 4.0398 1.70451 3.9999C1.72771 4.0146 1.77532 4.0542 1.77532 4.08C1.81713 4.0968 1.86413 4.14 1.90533 4.1943C1.84734 4.1892 1.81255 4.0896 1.7564 4.0815ZM1.78508 4.2177C1.77715 4.2162 1.7686 4.2222 1.76128 4.2213C1.75457 4.2066 1.74877 4.2012 1.74816 4.1835C1.73534 4.1805 1.72099 4.1781 1.71642 4.167C1.71458 4.1622 1.71977 4.1502 1.72099 4.149C1.70726 4.1352 1.68895 4.1409 1.67186 4.1223C1.67582 4.1193 1.67186 4.116 1.67125 4.1127C1.72405 4.1001 1.75029 4.1799 1.78875 4.1997C1.78783 4.2057 1.77532 4.2087 1.78508 4.2177ZM1.4628 3.6684C1.50888 3.7149 1.53025 3.7992 1.59251 3.8643C1.52964 3.8313 1.50705 3.753 1.4628 3.6684ZM1.21376 3.4314C1.18293 3.4083 1.18232 3.3408 1.17347 3.3021C1.18538 3.2919 1.19209 3.3066 1.20186 3.3057C1.20155 3.3516 1.21742 3.384 1.21376 3.4314ZM0.621377 2.0031C0.630533 1.9515 0.667461 1.9083 0.699201 1.8627C0.710188 1.8099 0.747727 1.7628 0.789539 1.7169C0.798695 1.7316 0.810903 1.7238 0.811513 1.7439C0.724532 1.8117 0.694013 1.9317 0.621377 2.0031ZM1.21284 1.7691C1.21529 1.7823 1.22566 1.7964 1.22871 1.8108C1.19148 1.8348 1.12159 1.8465 1.15364 1.8975C1.11182 1.9101 1.0929 1.9443 1.07429 1.9614C1.07612 1.8897 1.15974 1.8087 1.21284 1.7691ZM1.76097 1.7964C1.76097 1.8213 1.78539 1.803 1.79882 1.815C1.79271 1.8186 1.786 1.8222 1.7799 1.8264C1.76128 1.8 1.71275 1.8393 1.70848 1.8033C1.72344 1.8105 1.74175 1.806 1.76097 1.7964ZM11.8635 13.821C11.88 13.8483 11.931 13.9101 11.876 13.9311C11.8629 13.9029 11.8486 13.8876 11.8318 13.8615C11.8461 13.8495 11.8458 13.8228 11.8635 13.821ZM6.03248 7.5606C6.01966 7.5606 5.90857 7.2879 5.90003 7.2717C5.9043 7.2318 5.80419 7.0257 5.74743 6.8562C5.51853 6.2952 5.42453 5.9574 4.54008 5.0151C4.46714 4.9374 4.28829 4.8093 4.27761 4.794C4.2239 4.7172 4.02918 4.6371 3.98432 4.5918C3.91321 4.5201 3.89429 4.524 3.75359 4.4721C3.71758 4.4523 3.67943 4.434 3.63853 4.4166C3.60618 4.4031 3.55033 4.4121 3.51493 4.4001C3.40964 4.3755 3.35195 4.362 3.28268 4.3539C3.14931 4.338 3.05439 4.3425 2.89111 4.3245C2.84319 4.3218 2.76842 4.3038 2.67534 4.3017C2.58866 4.3002 2.48642 4.2936 2.37533 4.2729C2.22426 4.2306 2.13575 4.1991 2.06556 4.1187C1.99933 4.0671 1.92944 4.0032 1.86291 3.93C1.77349 3.8316 1.68895 3.7167 1.62547 3.5922C1.57542 3.4941 1.53818 3.3897 1.52109 3.2832C1.50431 3.2469 1.46158 3.1227 1.46036 3.0975C1.45578 3.0363 1.45669 2.9598 1.47287 2.898C1.48172 2.8635 1.47318 2.7939 1.50827 2.7888C1.51255 2.6967 1.59708 2.6388 1.61082 2.5506C1.66423 2.4882 1.97034 2.1774 1.9975 2.1534C1.99109 2.1546 1.98682 2.1531 1.98255 2.1465C1.99842 2.1162 2.03138 2.0946 2.068 2.0844C2.06159 2.076 2.0561 2.0664 2.06403 2.0613C2.08112 2.0469 2.11012 2.0499 2.10462 2.0265C2.05182 2.0553 1.9679 2.0844 1.94195 2.1315C1.91601 2.1249 1.90106 2.1522 1.87481 2.1564C1.87847 2.1816 1.82751 2.2011 1.80889 2.1924C1.83361 2.1354 1.91266 2.1015 1.9447 2.0526C1.92486 2.0526 1.90472 2.0808 1.87359 2.0811C1.87054 2.106 1.84887 2.118 1.82323 2.1171C1.81286 2.124 1.82079 2.1351 1.81408 2.1429C1.80492 2.1363 1.79332 2.148 1.78539 2.1399C1.79485 2.1309 1.79058 2.1177 1.79058 2.1063C1.77532 2.1108 1.77929 2.1198 1.76677 2.1261C1.76097 2.1132 1.74907 2.1162 1.75273 2.1042C1.76494 2.1045 1.7799 2.0952 1.79332 2.0946C1.80034 2.1003 1.78997 2.1129 1.80431 2.103C1.84216 2.1027 1.85803 2.0571 1.88763 2.0364C1.90503 2.0229 1.94958 2.0229 1.94653 1.9905C1.90625 1.9815 1.87756 2.0313 1.8391 2.0349C1.83971 2.0253 1.86627 2.0199 1.85803 2.0082C1.79729 2.007 1.79332 2.0688 1.72893 2.0673C1.70848 2.0952 1.65538 2.1474 1.61723 2.1453C1.61906 2.13 1.63798 2.1186 1.63127 2.1012C1.64073 2.1045 1.64775 2.1108 1.65904 2.1045C1.68284 2.0763 1.70238 2.0394 1.73778 2.0313C1.71367 2.0118 1.70512 2.0364 1.68284 2.0439C1.6862 2.0499 1.69292 2.0565 1.68895 2.0613C1.63493 2.0598 1.61967 2.1186 1.56931 2.1186C1.57267 2.1045 1.58884 2.1081 1.59953 2.1003C1.64561 2.0313 1.74724 1.962 1.81866 1.9044C1.84887 1.8801 1.87023 1.8756 1.85772 1.8648C1.86932 1.8693 1.89251 1.8585 1.89434 1.8531C1.88885 1.857 1.87481 1.8459 1.88214 1.8399C1.89984 1.8258 1.92456 1.8333 1.93249 1.8198C1.90045 1.8105 1.88702 1.8207 1.84155 1.8498C1.8391 1.8462 1.83666 1.8423 1.83483 1.8387C1.82323 1.8456 1.81164 1.8525 1.80034 1.8591C1.81255 1.899 1.74785 1.9047 1.72344 1.9011C1.71062 1.9281 1.6746 1.9329 1.65629 1.9431C1.72588 1.875 1.84582 1.7997 1.95691 1.7274C1.95142 1.7151 1.93982 1.7259 1.93524 1.7103C1.95935 1.7037 1.92975 1.6932 1.93738 1.6884C1.94531 1.6839 1.95233 1.6797 1.95966 1.6758C1.95386 1.6629 1.9386 1.6677 1.94195 1.6551C1.93707 1.6758 1.89862 1.6872 1.88549 1.7058C1.87481 1.7019 1.88336 1.7001 1.87603 1.6905C1.86382 1.6977 1.85406 1.692 1.84155 1.7013C1.8446 1.7157 1.85436 1.6971 1.85803 1.7124C1.83208 1.7229 1.80309 1.7181 1.79271 1.7061C1.78264 1.722 1.77257 1.7181 1.77532 1.737C1.7451 1.7199 1.71519 1.7514 1.67033 1.7607C1.66942 1.7748 1.6746 1.7925 1.6685 1.8075C1.6334 1.7904 1.60014 1.845 1.5684 1.8222C1.56077 1.8366 1.58182 1.8399 1.57206 1.8513C1.55741 1.8423 1.55192 1.8666 1.53757 1.8465C1.6038 1.7697 1.6978 1.7181 1.78814 1.6524C1.77501 1.6608 1.76616 1.6464 1.7564 1.641C1.7451 1.6503 1.73931 1.6602 1.7332 1.6704C1.67186 1.6662 1.61967 1.7565 1.55863 1.7568C1.56412 1.7295 1.60929 1.7148 1.63676 1.6989C1.62394 1.6848 1.6038 1.7001 1.58762 1.7034C1.55863 1.7478 1.44693 1.8006 1.3984 1.8648C1.3221 1.9032 1.25649 1.9851 1.21101 2.0619C1.20247 2.0706 1.19881 2.0595 1.19118 2.0637C1.1985 2.1342 1.11305 2.1642 1.10389 2.2293C1.02027 2.3211 1.02027 2.448 0.940305 2.5296C0.943662 2.5578 0.953734 2.5872 0.914364 2.6064C0.888727 2.6823 0.897273 2.7651 0.85424 2.8377C0.862786 2.8476 0.858818 2.853 0.864617 2.8626C0.826773 2.9541 0.879266 3.0678 0.851188 3.1623C0.867058 3.1869 0.872857 3.2085 0.848747 3.225C0.884149 3.2868 0.884149 3.3663 0.892695 3.4332C0.862786 3.3633 0.827383 3.2964 0.85424 3.2418C0.848136 3.2322 0.841422 3.2343 0.836539 3.2214C0.839896 3.1791 0.831961 3.1131 0.821279 3.0576C0.838981 3.0174 0.821279 2.9694 0.814565 2.9235C0.824026 2.9094 0.8225 2.8938 0.827994 2.8794C0.814565 2.8341 0.830435 2.7678 0.853019 2.7213C0.853325 2.643 0.879266 2.5719 0.929623 2.5053C0.921078 2.4948 0.931149 2.4885 0.922909 2.4789C0.976929 2.3232 1.06147 2.1864 1.15974 2.0478C1.17744 2.0403 1.17561 2.0292 1.19118 2.0226C1.18904 1.986 1.22749 1.9464 1.26168 1.9281C1.26137 1.8999 1.28762 1.8957 1.30471 1.8816C1.3276 1.8618 1.34347 1.8282 1.363 1.8102C1.40603 1.77 1.46677 1.7454 1.50217 1.6995C1.50949 1.7016 1.51956 1.6968 1.52781 1.6992C1.52842 1.6908 1.52048 1.68 1.5333 1.6758C1.60868 1.6335 1.67369 1.5837 1.74358 1.5312C1.69292 1.491 1.63676 1.5756 1.58488 1.5675C1.58427 1.5744 1.59037 1.584 1.57694 1.5879C1.56931 1.5882 1.56473 1.5843 1.55894 1.5774C1.54245 1.5918 1.53818 1.5933 1.52018 1.5969C1.53086 1.6176 1.50034 1.614 1.48538 1.6329C1.47989 1.6308 1.4747 1.6251 1.47012 1.6164C1.46768 1.6608 1.38711 1.6941 1.34591 1.7082C1.3569 1.719 1.35262 1.7259 1.34652 1.7334C1.30532 1.7052 1.23787 1.8003 1.22994 1.7379C1.23665 1.734 1.23909 1.7484 1.24794 1.7427C1.24336 1.7289 1.24733 1.7253 1.26168 1.7238C1.25496 1.7148 1.24916 1.7058 1.25771 1.7007C1.35323 1.644 1.42556 1.5504 1.55344 1.4937C1.55955 1.4757 1.57877 1.461 1.60014 1.4601C1.59953 1.44 1.63371 1.3989 1.65904 1.4145C1.6566 1.4082 1.64866 1.4004 1.65355 1.3968C1.74236 1.3566 1.80034 1.3056 1.91082 1.2603C1.89923 1.2492 1.90686 1.242 1.89801 1.2327C1.87298 1.2468 1.85955 1.2258 1.84826 1.2519C1.85803 1.2684 1.87634 1.2486 1.88885 1.2585C1.86932 1.2729 1.84521 1.2684 1.82323 1.2627C1.83178 1.2702 1.83056 1.2762 1.81927 1.2807C1.81591 1.2756 1.82079 1.2717 1.81591 1.2672C1.80126 1.2864 1.78875 1.2765 1.77135 1.2792C1.73808 1.3125 1.67918 1.3266 1.6273 1.347C1.62303 1.3389 1.63768 1.3359 1.63127 1.3284C1.61326 1.3314 1.59495 1.3359 1.57877 1.3356C1.57114 1.3239 1.57267 1.3185 1.57328 1.3035C1.51255 1.296 1.47989 1.3416 1.4219 1.3599C1.4335 1.3716 1.42862 1.3803 1.41824 1.3875C1.40237 1.3965 1.39321 1.3782 1.37856 1.3812C1.36331 1.3968 1.35262 1.3956 1.34164 1.4142C1.32607 1.4205 1.31417 1.4178 1.30471 1.4052C1.29311 1.365 1.34042 1.3716 1.3569 1.3644C1.3691 1.3584 1.41153 1.2954 1.44815 1.3032C1.49881 1.2606 1.55466 1.2192 1.61936 1.2033C1.61601 1.1967 1.60899 1.1904 1.61326 1.1859C1.64958 1.1856 1.6746 1.1565 1.7094 1.1481C1.66453 1.1262 1.61936 1.1817 1.57511 1.1742C1.56565 1.1652 1.59373 1.1661 1.58549 1.1574C1.5684 1.1586 1.55253 1.176 1.54734 1.1799C1.55466 1.1769 1.55985 1.1811 1.56412 1.1904C1.56077 1.1928 1.56138 1.1955 1.55894 1.1991C1.52445 1.2078 1.47806 1.2297 1.45242 1.2441C1.43533 1.2399 1.45425 1.2306 1.45425 1.2225C1.38619 1.2477 1.33981 1.2711 1.27541 1.3011C1.29006 1.3173 1.26564 1.3257 1.25099 1.3359C1.24581 1.326 1.23909 1.3212 1.23024 1.3284C1.22292 1.3347 1.24336 1.3482 1.23085 1.3539C1.12525 1.3551 1.07734 1.467 0.997682 1.512C0.990968 1.5459 0.963805 1.581 0.916805 1.5975C0.913143 1.6233 0.862786 1.6389 0.873773 1.6695C0.844474 1.6872 0.825247 1.7253 0.794422 1.7079C0.810903 1.6455 0.891169 1.6128 0.914364 1.5525C1.00012 1.4877 1.03034 1.4127 1.12403 1.3587C1.12617 1.3281 1.1634 1.2927 1.19514 1.2894C1.2281 1.2519 1.26534 1.2126 1.31264 1.2123C1.30501 1.1745 1.38436 1.1907 1.36666 1.158C1.33095 1.1586 1.27785 1.2069 1.24336 1.218C1.23848 1.1769 1.29586 1.1853 1.28243 1.1484C1.23207 1.1952 1.14662 1.2033 1.11121 1.2633C1.07551 1.2537 1.0691 1.3194 1.02332 1.3224C1.02332 1.2906 1.05414 1.2702 1.08344 1.2603C1.12708 1.2033 1.23177 1.1235 1.31722 1.0962C1.32424 1.077 1.34591 1.0773 1.35445 1.0641C1.33492 1.0671 1.30654 1.0707 1.29311 1.0908C1.21651 1.0905 1.09718 1.1832 1.05231 1.2282C1.05781 1.2261 1.06208 1.2273 1.06635 1.2342C1.0459 1.2477 1.02637 1.2597 1.00928 1.2591C0.903377 1.3587 0.813955 1.4619 0.707136 1.5462C0.669292 1.6359 0.568578 1.7274 0.525851 1.8264C0.505708 1.8237 0.510286 1.8459 0.490753 1.8531C0.500519 1.8798 0.473357 1.9065 0.446805 1.9155C0.429104 1.9689 0.373864 2.0145 0.362877 2.0697C0.3525 2.0739 0.348227 2.0538 0.337545 2.064C0.327169 2.0817 0.350974 2.0913 0.354942 2.1153C0.32137 2.1411 0.322896 2.1747 0.301532 2.2038C0.291766 2.2152 0.290545 2.193 0.281695 2.2056C0.272234 2.2179 0.289325 2.2221 0.288714 2.2323C0.245071 2.2602 0.253006 2.325 0.221266 2.3658C0.209364 2.3325 0.2115 2.3046 0.241409 2.2818C0.240799 2.2713 0.231643 2.2581 0.236221 2.2491C0.244156 2.2491 0.248123 2.2467 0.251175 2.2398C0.251786 2.2329 0.245987 2.223 0.246597 2.2167C0.299701 2.1081 0.347312 1.9974 0.386377 1.8864C0.440091 1.8243 0.475799 1.7316 0.547825 1.6641C0.554539 1.6464 0.545383 1.626 0.560643 1.6107C0.574987 1.6068 0.569188 1.605 0.582617 1.5972C0.583532 1.5867 0.581701 1.5753 0.590247 1.5675C0.67326 1.4871 0.72148 1.3653 0.832877 1.3011C0.840812 1.2792 0.863396 1.2492 0.894221 1.2423C0.97113 1.1697 1.02759 1.0953 1.13532 1.0386C1.27053 0.893099 1.46921 0.8316 1.645 0.7422C1.62455 0.7185 1.60929 0.7593 1.5864 0.7482C1.59037 0.7539 1.58762 0.7587 1.57938 0.7617C1.4982 0.7641 1.38925 0.8052 1.32363 0.8517C1.25344 0.8538 1.20308 0.9297 1.14875 0.9285C1.13807 0.9504 1.13532 0.9477 1.10999 0.957C1.05964 1.0089 1.0044 1.0548 0.928708 1.0986C0.918026 1.1031 0.934201 1.1142 0.921078 1.119C0.725143 1.2306 0.623208 1.4028 0.481597 1.551C0.479461 1.5585 0.490753 1.5699 0.481597 1.5768C0.430935 1.6335 0.393396 1.6932 0.336019 1.7484C0.340903 1.7583 0.336935 1.7652 0.336019 1.7736C0.289019 1.8087 0.274065 1.8516 0.268266 1.8966C0.254532 1.9185 0.223708 1.9371 0.239273 1.9656C0.196851 2.0211 0.165416 2.0604 0.144052 2.127C0.137032 2.1309 0.131234 2.1351 0.124519 2.1384C0.120857 2.1495 0.131539 2.1525 0.138558 2.16C0.126045 2.1663 0.126656 2.1759 0.110786 2.1822C0.102851 2.2266 0.107429 2.274 0.0738571 2.3127C0.0705 2.3346 0.0854545 2.3613 0.0576818 2.3781C0.0613442 2.4366 0.0582922 2.4939 0.0277727 2.5449C0.0436429 2.6244 -0.00244156 2.6889 0.0134286 2.769C0.00885065 2.7708 0.00549351 2.7672 0 2.7723C0.0189221 2.8197 -0.0103766 2.871 0.0152597 2.9109C-0.0143442 2.9547 0.0396753 3.0162 0.00457792 3.0663C0.0436429 3.1431 0.0292987 3.2349 0.0381493 3.3171C0.0613442 3.3639 0.0631753 3.4065 0.0643961 3.4491C0.100409 3.5265 0.106513 3.6285 0.141916 3.7188C0.131539 3.7251 0.130318 3.717 0.126656 3.7278C0.134896 3.7407 0.147409 3.7329 0.154429 3.7467C0.151377 3.7953 0.207227 3.8616 0.206617 3.9198C0.232253 3.9474 0.271623 4.0128 0.27437 4.0518C0.356773 4.1481 0.35311 4.2927 0.437344 4.3953C0.438565 4.4007 0.437039 4.4064 0.43063 4.4097C0.462981 4.4268 0.50113 4.4694 0.509675 4.5099C0.514864 4.5165 0.524019 4.5045 0.528597 4.5144C0.523104 4.5477 0.614357 4.5708 0.596045 4.6209C0.623513 4.6332 0.631753 4.6395 0.647929 4.671C0.688519 4.6863 0.721481 4.719 0.73613 4.7607C0.819448 4.8264 0.886286 4.9467 0.973877 5.0061C0.988526 5.0439 1.03156 5.0433 1.03034 5.0784C1.08924 5.1069 1.14051 5.1864 1.18477 5.2086C1.18141 5.2122 1.17866 5.2176 1.17805 5.2227C1.22658 5.2149 1.2571 5.2794 1.29769 5.3037C1.2925 5.3085 1.30105 5.3163 1.28701 5.3202C1.33492 5.3343 1.35476 5.3715 1.39199 5.3943C1.53727 5.4753 1.71184 5.5788 1.79394 5.6118C1.84063 5.6268 1.92029 5.6733 1.9679 5.688C2.06007 5.7108 2.16414 5.7573 2.26668 5.7813C2.36984 5.805 2.47086 5.8062 2.55601 5.8254C2.70036 5.8227 2.77361 5.8464 2.77727 5.8476C2.96558 5.8566 3.12214 5.9232 3.18532 5.9922C3.34951 6.1203 3.57932 6.4311 3.6129 6.4806C4.08015 7.2549 4.4357 8.4114 4.82818 9.9774C4.83307 9.9867 4.82238 9.9924 4.82238 10.0011C4.84649 10.0029 4.82788 10.0401 4.85138 10.0551C4.84405 10.1007 4.89471 10.1697 4.86725 10.2192C4.89899 10.2375 4.88312 10.2732 4.90784 10.3071C4.88434 10.3299 4.93836 10.3824 4.92218 10.4214C4.95056 10.467 4.94019 10.5039 4.95636 10.548C4.94995 10.5519 4.94507 10.5558 4.94324 10.5615C4.9704 10.6089 4.98261 10.6896 4.99787 10.7535C4.98047 10.7697 4.97956 10.7889 4.99909 10.8141C4.99482 10.818 4.99634 10.824 4.98658 10.8261C5.01923 10.893 5.02351 10.9425 5.01435 10.9938C5.02045 11.0025 5.02778 11.0004 5.03144 11.0136C5.02778 11.0463 5.04975 11.0853 5.03388 11.1141C5.04487 11.1348 5.05128 11.1546 5.03693 11.1696C5.04609 11.1825 5.05128 11.1807 5.05372 11.1948C5.04731 11.1993 5.0409 11.2029 5.03449 11.2065C5.04304 11.2359 5.08058 11.2458 5.05281 11.2767C5.07875 11.3004 5.08851 11.343 5.07325 11.3664C5.08455 11.3823 5.0934 11.3829 5.07661 11.3958C5.08241 11.4051 5.08973 11.4027 5.09401 11.4156C5.08516 11.4756 5.16145 11.5626 5.13185 11.6232C5.14375 11.6442 5.15596 11.6658 5.14314 11.6817C5.15016 11.6958 5.1639 11.6781 5.16878 11.6976C5.17366 11.7075 5.15901 11.712 5.15657 11.7198C5.18984 11.7519 5.17244 11.7813 5.17977 11.8128C5.20388 11.8515 5.20296 11.8863 5.22402 11.9238L5.20876 11.9337C5.2289 11.943 5.21425 11.9535 5.21425 11.9658C5.23684 11.9619 5.22829 11.9883 5.2289 11.9976C5.25332 11.994 5.23623 12.0291 5.24111 12.042C5.25515 12.0558 5.26797 12.0768 5.25118 12.0912C5.28506 12.162 5.30886 12.2571 5.30947 12.3222C5.31588 12.3378 5.32504 12.3342 5.33206 12.3498C5.31832 12.3894 5.35464 12.4236 5.37234 12.4626C5.38211 12.4842 5.3812 12.5256 5.39249 12.5523C5.40408 12.5763 5.41446 12.5895 5.40195 12.6075C5.41171 12.6063 5.41934 12.618 5.42606 12.6303C5.42026 12.6375 5.42087 12.645 5.40836 12.6504C5.45261 12.663 5.42179 12.8355 5.46726 12.8616C5.45139 12.8799 5.48069 12.894 5.49198 12.9078C5.49473 12.9144 5.48618 12.9174 5.48466 12.9228C5.55149 13.0305 5.58903 13.2114 5.6577 13.3023C5.64305 13.3059 5.66014 13.317 5.65526 13.3236C5.67235 13.3242 5.69768 13.365 5.69066 13.3782C5.71447 13.3875 5.72393 13.401 5.73827 13.4217C5.73766 13.4295 5.72759 13.4361 5.72637 13.4439C5.7517 13.4319 5.77459 13.4718 5.76727 13.4916C5.83258 13.5282 5.84723 13.6275 5.90796 13.6554C5.91315 13.6668 5.91345 13.6782 5.91254 13.6878C5.969 13.7421 6.02546 13.7916 6.07155 13.8573C6.09535 13.8693 6.1277 13.9131 6.12526 13.9257C6.19149 13.9482 6.23696 14.0523 6.30258 14.0742C6.32699 14.1333 6.39353 14.127 6.39994 14.1783C6.44785 14.2017 6.52568 14.2287 6.54429 14.2833C6.62547 14.3193 6.70025 14.3724 6.76983 14.4168C6.77685 14.4252 6.76769 14.4294 6.77746 14.4375C6.81561 14.4234 6.85162 14.4408 6.86627 14.4741C6.92273 14.4801 7.00727 14.4855 7.05641 14.5191C7.10982 14.514 7.10951 14.5269 7.15438 14.5335C7.21175 14.5422 7.20504 14.5476 7.21328 14.5482C7.26821 14.5608 7.30972 14.5494 7.35245 14.577C7.38968 14.5644 7.43088 14.6157 7.45591 14.622C7.48307 14.6283 7.51542 14.5908 7.51298 14.616C7.57219 14.6037 7.6201 14.6343 7.67443 14.6403C7.68389 14.6361 7.68786 14.6313 7.69091 14.6259C7.74188 14.6373 7.79834 14.6253 7.84625 14.6484C7.92286 14.6211 7.97993 14.6553 8.0547 14.6361C8.09621 14.6634 8.15297 14.6208 8.19051 14.6613C8.19997 14.6565 8.19814 14.6487 8.21096 14.6436C8.32907 14.6319 8.43162 14.6184 8.54973 14.5638C8.59581 14.574 8.63945 14.5422 8.68676 14.5413C8.72979 14.4969 8.7948 14.5329 8.83539 14.4963C8.86682 14.514 8.89124 14.472 8.92023 14.4912C8.94068 14.4714 8.9712 14.472 8.99409 14.4756C9.03224 14.445 9.07466 14.4579 9.11342 14.4342C9.12044 14.4402 9.12716 14.4384 9.13265 14.4474C9.18179 14.4252 9.20071 14.4246 9.24801 14.4033C9.2529 14.4162 9.30325 14.3871 9.30722 14.4003C9.32492 14.3847 9.31577 14.3571 9.33438 14.3718C9.39207 14.3517 9.46897 14.3256 9.52269 14.3646C9.53581 14.3547 9.57213 14.3523 9.58647 14.3553C9.59563 14.3652 9.69818 14.3652 9.73358 14.394C9.83277 14.4291 9.82483 14.4342 9.88556 14.4807C9.89594 14.4873 9.97804 14.5632 9.98445 14.5704C10.0809 14.6289 10.0391 14.6172 10.0885 14.7186C10.1251 14.7591 10.1471 14.8242 10.1483 14.874C10.1999 14.9031 10.1709 15.0054 10.1901 15.0654C10.1758 15.0693 10.1844 15.0771 10.1798 15.0819C10.1859 15.0921 10.192 15.1011 10.1978 15.1116C10.1825 15.171 10.2268 15.2448 10.1923 15.2994C10.2124 15.3117 10.2155 15.3717 10.1953 15.3948C10.2298 15.4698 10.1917 15.5535 10.2057 15.6339C10.1996 15.6432 10.2033 15.6555 10.1895 15.6642C10.2036 15.6879 10.1947 15.7059 10.1728 15.7206C10.1947 15.7521 10.1621 15.7728 10.1425 15.795C10.1239 15.8427 10.0961 15.9321 10.0397 15.9705C10.0427 16.0035 10.029 16.047 9.99238 16.0611C9.99849 16.0728 9.99788 16.0839 9.99147 16.0926C9.96278 16.1055 9.89197 16.2843 9.88251 16.3047C9.88862 16.3104 9.80438 16.4613 9.80438 16.4613C9.78088 16.4688 9.74579 16.5765 9.72625 16.5696C9.73175 16.5804 9.73114 16.635 9.72564 16.644C9.71221 16.638 9.69421 16.6515 9.69726 16.6662C9.70245 16.6593 9.71832 16.6632 9.70947 16.6692C9.70611 16.6839 9.69421 16.6662 9.68078 16.6815C9.66918 16.7193 9.64721 16.7553 9.63805 16.7946C9.61516 16.797 9.61272 16.7946 9.59807 16.8132C9.60265 16.8234 9.61028 16.8174 9.61394 16.8291C9.54802 16.8978 9.60448 16.9821 9.53642 17.0478C9.54588 17.07 9.57976 17.088 9.55138 17.1009C9.55748 17.1345 9.54893 17.1549 9.51842 17.1726C9.52879 17.256 9.45951 17.3211 9.46714 17.403C9.42411 17.4483 9.46897 17.5065 9.43204 17.5509C9.43571 17.5938 9.42503 17.6331 9.39786 17.6694C9.41617 17.715 9.44822 17.7648 9.4119 17.799C9.42655 17.8536 9.4177 17.9031 9.42106 17.9547C9.42472 17.9694 9.42594 17.9838 9.42869 17.9982C9.44212 18.2055 9.43998 18.4071 9.48729 18.5763C9.49247 18.5814 9.50712 18.5769 9.50834 18.588C9.50804 18.5988 9.49186 18.6042 9.50041 18.6132C9.56664 18.8142 9.61791 19.0104 9.73114 19.1628C9.73816 19.1646 9.75311 19.1571 9.75311 19.1664C9.74304 19.2105 9.80805 19.2138 9.80652 19.2636C9.84528 19.2777 9.8639 19.3131 9.89869 19.332C9.89533 19.3611 9.92738 19.3863 9.95576 19.3965C10.0064 19.4682 10.0604 19.5357 10.1175 19.6005C10.12 19.6023 10.1227 19.6047 10.1254 19.6059C10.203 19.665 10.2344 19.7238 10.3076 19.7814C10.4853 19.9035 10.5405 20.0307 10.7364 20.1483C10.9898 20.2797 11.2498 20.3994 11.5061 20.5236C11.5217 20.5287 11.5364 20.5332 11.5516 20.5386C11.5287 20.5218 11.4958 20.5158 11.4775 20.4954C11.4595 20.5005 11.4375 20.4984 11.439 20.472C11.472 20.4801 11.4997 20.4819 11.5077 20.5023C11.5068 20.4948 11.5113 20.493 11.5205 20.4936C11.5293 20.4924 11.5181 20.5128 11.5333 20.5059C11.5965 20.4879 11.6032 20.5476 11.6621 20.547C11.6719 20.5434 11.6471 20.5353 11.6612 20.5263C11.7018 20.547 11.7503 20.5599 11.7949 20.5758C11.801 20.5926 11.8126 20.6055 11.8278 20.613C11.8318 20.6136 11.8367 20.6157 11.84 20.6163C11.8486 20.5989 11.8797 20.6031 11.8916 20.5884C11.9697 20.6349 12.108 20.6436 12.2081 20.6748C12.3689 20.697 12.5322 20.7162 12.6949 20.7351C12.6674 20.7129 12.614 20.7138 12.5737 20.7036C12.5771 20.6886 12.5667 20.688 12.5682 20.6742C12.5215 20.6658 12.4761 20.6586 12.4278 20.6541C12.4144 20.67 12.4556 20.6763 12.4416 20.691C12.3876 20.6988 12.3741 20.6652 12.3552 20.6355C12.3402 20.6658 12.325 20.6832 12.2923 20.6712C12.2929 20.6505 12.3067 20.6436 12.3134 20.6289C12.1584 20.5896 12.0051 20.5524 11.8593 20.4861L11.8248 20.4876C11.7112 20.4081 11.5596 20.3676 11.4494 20.2839C11.519 20.2989 11.5681 20.3553 11.6423 20.3517C11.6697 20.3892 11.7225 20.4003 11.7753 20.4018C11.8263 20.4309 11.8849 20.4753 11.9639 20.4621C11.9743 20.4909 12.0253 20.4879 12.0582 20.496C12.0799 20.5011 12.1092 20.5281 12.1175 20.5023C12.0817 20.4801 11.9887 20.4831 11.9588 20.4459C11.9752 20.4426 11.97 20.4186 11.9749 20.4156C12.0357 20.4291 12.0872 20.4615 12.1495 20.4426C12.1574 20.4738 12.1828 20.4597 12.2014 20.4627C12.2215 20.4648 12.235 20.4771 12.2478 20.4765C12.2725 20.4765 12.3097 20.4459 12.3164 20.4867C12.3195 20.4738 12.3244 20.4849 12.3372 20.4819C12.3384 20.4942 12.3213 20.4867 12.3207 20.4954C12.4043 20.5152 12.5044 20.5293 12.5804 20.5446C12.592 20.5194 12.6027 20.5029 12.6085 20.4813C12.632 20.496 12.6522 20.5146 12.6894 20.5035C12.6946 20.5176 12.675 20.5314 12.6989 20.5281C12.7089 20.5248 12.6903 20.5176 12.6946 20.5077C12.733 20.4885 12.7828 20.5218 12.8173 20.5029C12.8179 20.4795 12.7974 20.5035 12.795 20.4831C12.8093 20.4726 12.8521 20.4855 12.8618 20.4642C12.8267 20.4693 12.8121 20.4663 12.7645 20.4636C12.769 20.4897 12.7297 20.5017 12.7224 20.4693C12.7318 20.4771 12.7407 20.4627 12.752 20.4597C12.7318 20.4597 12.6885 20.4339 12.675 20.4585C12.6946 20.4603 12.6961 20.4585 12.7138 20.4648C12.6995 20.4759 12.7159 20.4936 12.6982 20.5029C12.69 20.4972 12.6982 20.4744 12.6802 20.4783C12.6702 20.4849 12.6885 20.4909 12.6769 20.4954C12.6555 20.4777 12.643 20.4699 12.6119 20.4765C12.6058 20.4543 12.6119 20.4519 12.6146 20.4309C12.5853 20.4279 12.5743 20.4252 12.5517 20.4123C12.5365 20.4081 12.5481 20.4258 12.534 20.421C12.5292 20.4168 12.5188 20.4168 12.5084 20.4174C12.5044 20.4099 12.4886 20.4129 12.4867 20.4024C12.4623 20.4081 12.4581 20.3928 12.4361 20.3958C12.4016 20.3517 12.2691 20.3763 12.2679 20.3226C12.3036 20.3592 12.3753 20.3307 12.4095 20.367C12.4254 20.3361 12.4782 20.3757 12.502 20.3634C12.4684 20.3529 12.4278 20.3337 12.4004 20.3511C12.404 20.3355 12.3903 20.3379 12.3869 20.3307C12.3335 20.3355 12.3018 20.2977 12.2673 20.3181C12.2246 20.2611 12.1263 20.2827 12.0701 20.2458C12.057 20.2404 12.0586 20.2476 12.0409 20.247C12.0415 20.2302 12.0207 20.2365 12.0186 20.223C11.9664 20.2029 11.9084 20.1924 11.8605 20.1699C11.8416 20.1615 11.8205 20.1453 11.8077 20.1303C11.8843 20.1477 11.9548 20.1708 12.0174 20.2017C12.032 20.2029 12.0329 20.1936 12.0473 20.1966C12.0701 20.2086 12.0964 20.2293 12.1287 20.2188C12.2334 20.2623 12.3644 20.2785 12.4794 20.3109C12.4898 20.3109 12.4913 20.3043 12.4996 20.3013C12.5282 20.3208 12.5597 20.3289 12.5981 20.3232C12.6436 20.3511 12.7056 20.3403 12.7556 20.3478C12.7639 20.3478 12.7742 20.3571 12.7822 20.3592C12.7938 20.361 12.8063 20.3517 12.8151 20.3529C12.8261 20.3541 12.8151 20.3658 12.8283 20.3652C12.8444 20.364 12.8582 20.3577 12.8704 20.3517C12.911 20.3781 12.9677 20.3787 13.0199 20.3838C13.0727 20.3898 13.1365 20.3916 13.1896 20.3865C13.2491 20.4018 13.3037 20.397 13.381 20.4003C13.3871 20.3988 13.3834 20.3877 13.3971 20.3916C13.4597 20.4162 13.5693 20.3826 13.6047 20.3886C13.608 20.3742 13.6376 20.3814 13.6337 20.3592C13.4975 20.367 13.3489 20.3424 13.2436 20.3592C13.2442 20.3502 13.2394 20.3466 13.2305 20.3478C13.0837 20.3442 12.9439 20.3232 12.8319 20.3244C12.8304 20.3175 12.8319 20.3091 12.8225 20.3115C12.7895 20.313 12.7883 20.2959 12.7504 20.3055C12.7288 20.2797 12.6976 20.2902 12.6653 20.3004C12.6625 20.277 12.6372 20.2989 12.6308 20.2764C12.6131 20.2764 12.5966 20.277 12.5841 20.2821C12.567 20.2674 12.5398 20.2488 12.5109 20.2605C12.4861 20.2332 12.4278 20.2308 12.4007 20.247C12.3622 20.2128 12.3143 20.2359 12.285 20.193C12.2841 20.1849 12.3006 20.1984 12.3055 20.1879C12.3024 20.1732 12.2759 20.1789 12.2874 20.1591C12.3042 20.1597 12.3061 20.1765 12.3219 20.1789C12.3259 20.1663 12.3323 20.1585 12.3473 20.1657C12.3579 20.1759 12.3488 20.1909 12.339 20.1954C12.3595 20.1972 12.3735 20.1867 12.3808 20.1687C12.3097 20.1477 12.2395 20.1231 12.1675 20.1048C12.0625 20.0781 11.9621 20.0442 11.8593 20.0157C11.8422 19.9959 11.8269 19.9743 11.79 19.9764C11.7872 19.9326 11.7115 19.9446 11.7152 19.9077C11.7421 19.911 11.7637 19.9206 11.772 19.944C11.7851 19.9494 11.7735 19.9308 11.7881 19.9353C11.8162 19.9743 11.8721 19.9611 11.9044 19.9977C11.9151 19.9977 11.9255 19.9977 11.9307 19.992C11.9942 20.0307 12.0686 20.0559 12.1574 20.0682C12.2527 20.1105 12.3753 20.1222 12.4831 20.1525C12.4837 20.1438 12.4745 20.1237 12.4892 20.127C12.506 20.1831 12.5658 20.1597 12.5966 20.1483C12.5981 20.1573 12.5908 20.1573 12.5887 20.1615C12.6091 20.1663 12.6073 20.1681 12.6311 20.1681C12.6406 20.1426 12.6515 20.1414 12.6717 20.1291C12.7056 20.1384 12.719 20.1609 12.7254 20.1897C12.7257 20.1837 12.7349 20.1861 12.7419 20.1849C12.744 20.1687 12.7214 20.1555 12.7318 20.1438C12.7504 20.1525 12.7877 20.1414 12.7956 20.163C12.8063 20.1453 12.8386 20.1477 12.8585 20.139C12.8441 20.1093 12.784 20.1081 12.7605 20.1222C12.7257 20.0922 12.6708 20.1093 12.6442 20.0682C12.6674 20.0586 12.7056 20.0604 12.7046 20.091C12.7166 20.0859 12.7178 20.0712 12.733 20.0688C12.7639 20.0859 12.7999 20.0712 12.8228 20.091C12.82 20.0994 12.7974 20.0892 12.802 20.1036C12.845 20.094 12.8853 20.067 12.9335 20.0958C12.9439 20.0898 12.9293 20.0706 12.9366 20.0706C12.95 20.0706 12.99 20.0676 13.0089 20.0757C13.0083 20.0877 13.0022 20.0934 13.0016 20.1054C13.0236 20.121 13.0623 20.0871 13.07 20.1237C13.0959 20.1048 13.127 20.1081 13.1548 20.1291C13.182 20.103 13.2195 20.1303 13.2601 20.1174C13.2552 20.103 13.2213 20.1186 13.2174 20.1024C13.2497 20.0877 13.297 20.1156 13.3141 20.082C13.2748 20.0742 13.2546 20.0505 13.2113 20.0559C13.2073 20.0646 13.2241 20.07 13.2119 20.0736C13.1756 20.0763 13.1695 20.0472 13.1402 20.064C13.149 20.0376 13.1112 20.0505 13.0974 20.0559C13.0855 20.0559 13.0916 20.0376 13.0758 20.0397C12.9476 20.0199 12.8347 19.9998 12.6873 19.9791C12.69 19.9938 12.7166 20.0061 12.7065 20.0199C12.6653 20.0109 12.6189 20.0085 12.5954 19.9827C12.5777 19.9785 12.5826 19.9926 12.5694 19.9914C12.4874 19.9779 12.3991 19.9458 12.3216 19.917C12.2527 19.9182 12.1934 19.8771 12.1574 19.8309C12.2029 19.8345 12.2389 19.8561 12.2716 19.8309C12.3125 19.8447 12.3464 19.8465 12.379 19.8732C12.404 19.8465 12.4501 19.9059 12.4727 19.8699C12.4373 19.8615 12.4101 19.8285 12.3689 19.8396C12.3384 19.8042 12.2643 19.8258 12.2438 19.7736C12.1397 19.7424 12.0375 19.689 11.9221 19.6554C11.9078 19.6353 11.8843 19.6236 11.8654 19.6071C11.8086 19.6122 11.779 19.5597 11.7527 19.5357C11.8751 19.5837 11.9932 19.641 12.1294 19.6482C12.1165 19.6293 12.1513 19.6392 12.1541 19.6224C12.2508 19.6827 12.3619 19.6662 12.4706 19.7115C12.4779 19.7043 12.4837 19.6932 12.5038 19.6983C12.5087 19.7169 12.5353 19.7136 12.5438 19.7295C12.5334 19.7559 12.5487 19.7706 12.5701 19.7748C12.5771 19.7712 12.5688 19.7547 12.5777 19.7535L12.5783 19.7706C12.5991 19.761 12.6174 19.7403 12.6332 19.764C12.6277 19.7751 12.6155 19.7577 12.6125 19.7688C12.629 19.7802 12.6494 19.7748 12.6674 19.7676C12.6961 19.791 12.7614 19.8252 12.795 19.7922C12.7925 19.8042 12.8023 19.8042 12.8005 19.8168C12.8423 19.8126 12.889 19.8408 12.932 19.8198C12.9738 19.8519 13.0721 19.8243 13.1283 19.8513C13.1475 19.8471 13.1499 19.8297 13.1695 19.8249C13.174 19.8408 13.1847 19.8333 13.2073 19.8363C13.2296 19.8513 13.2479 19.8681 13.2812 19.8714C13.2934 19.8561 13.333 19.8657 13.3398 19.8432C13.3633 19.8675 13.4115 19.839 13.4298 19.8663C13.4997 19.8465 13.5732 19.8561 13.6535 19.8537C13.6651 19.8384 13.6636 19.827 13.6733 19.8156C13.6712 19.8384 13.6904 19.8513 13.7124 19.8603C13.7136 19.8216 13.7451 19.8126 13.7698 19.7958C13.7457 19.8105 13.6672 19.7886 13.6437 19.8204C13.5897 19.8018 13.5027 19.8054 13.4408 19.8156C13.4023 19.8132 13.3712 19.797 13.333 19.7946C13.29 19.7922 13.2433 19.8075 13.1985 19.803C13.1917 19.8024 13.1881 19.7922 13.1811 19.7916C13.1719 19.7904 13.1621 19.7976 13.1521 19.7958C13.135 19.7946 13.1179 19.7844 13.0999 19.7814C13.0382 19.7712 12.9949 19.7802 12.9555 19.7652C12.9439 19.7652 12.9476 19.7793 12.9305 19.7748C12.9305 19.7688 12.9412 19.7712 12.9384 19.7622C12.8102 19.7415 12.6787 19.7367 12.5795 19.6827C12.6131 19.6845 12.6369 19.6857 12.6683 19.6797C12.6808 19.7013 12.7141 19.7013 12.7419 19.7061C12.7477 19.6839 12.7224 19.6926 12.7239 19.6737C12.6714 19.6737 12.5978 19.6542 12.5441 19.6293C12.5182 19.6338 12.4977 19.6206 12.4806 19.6275C12.4639 19.6047 12.4291 19.6005 12.3903 19.6017C12.3784 19.5909 12.3607 19.5876 12.3555 19.5699C12.328 19.572 12.3177 19.5549 12.2914 19.5555C12.2655 19.5243 12.2081 19.5198 12.1629 19.5054C12.1333 19.4964 12.0869 19.4853 12.0885 19.4535C12.1165 19.4523 12.1147 19.473 12.1443 19.4604C12.1584 19.4988 12.2105 19.4958 12.2511 19.5075C12.2597 19.4964 12.2661 19.4826 12.263 19.461C12.2508 19.4577 12.2417 19.4517 12.2289 19.449C12.2185 19.4478 12.2194 19.4748 12.2121 19.4628C12.2105 19.4226 12.1355 19.4289 12.1159 19.3953C12.1477 19.3983 12.1663 19.4136 12.2014 19.4127C12.2029 19.3998 12.1913 19.3971 12.2044 19.392C12.307 19.4163 12.4043 19.4664 12.5209 19.4646C12.4886 19.4331 12.4312 19.4376 12.3961 19.4187C12.3842 19.422 12.379 19.4313 12.3586 19.4283C12.347 19.4226 12.3427 19.4079 12.3366 19.3959C12.2835 19.3884 12.2569 19.3524 12.1959 19.3548C12.1037 19.299 11.9737 19.2837 11.9063 19.2024C12.0302 19.221 12.1495 19.332 12.2746 19.314C12.3006 19.3575 12.3723 19.3314 12.4156 19.3593C12.3958 19.338 12.3967 19.317 12.3756 19.3023C12.3705 19.3131 12.3882 19.32 12.376 19.323C12.3607 19.323 12.3494 19.3029 12.3579 19.2903C12.3125 19.2891 12.2914 19.2609 12.2429 19.2615C12.2258 19.2375 12.1876 19.2216 12.1571 19.227C12.1425 19.1916 12.0839 19.203 12.0738 19.1628C12.0955 19.1604 12.1101 19.1808 12.1294 19.1865C12.1486 19.191 12.1699 19.182 12.1843 19.1886C12.1974 19.1934 12.2054 19.2117 12.2203 19.2168C12.2282 19.2186 12.2423 19.2138 12.2539 19.215C12.2984 19.2204 12.3274 19.2609 12.3647 19.2327C12.3827 19.2669 12.4501 19.2753 12.4758 19.2573C12.4764 19.2759 12.4938 19.2759 12.502 19.2855C12.5487 19.2609 12.5749 19.3188 12.6293 19.3017C12.6409 19.3071 12.6467 19.3188 12.6604 19.3218C12.7605 19.3194 12.8637 19.35 12.9494 19.3494C13.0059 19.3902 13.117 19.3821 13.1743 19.3752C13.1859 19.3764 13.189 19.3884 13.2046 19.3863C13.2586 19.3743 13.3132 19.3932 13.37 19.3932C13.3675 19.3839 13.3773 19.3839 13.3736 19.3722C13.3535 19.3632 13.3526 19.3587 13.33 19.3524C13.3254 19.3674 13.3434 19.356 13.3398 19.3692C13.33 19.3611 13.3047 19.3791 13.297 19.3626C13.3001 19.356 13.3178 19.3617 13.3138 19.3494C13.2296 19.3494 13.1539 19.3152 13.0715 19.3122C13.0709 19.3047 13.0694 19.2996 13.066 19.2954C13.0394 19.3116 12.9967 19.2831 13.0221 19.2591C13.0498 19.3035 13.1118 19.2771 13.1454 19.2843C13.1475 19.2777 13.1402 19.263 13.1493 19.263C13.1768 19.2699 13.1753 19.2699 13.1914 19.2537C13.2024 19.2621 13.1902 19.2753 13.2052 19.2738C13.2085 19.2543 13.2473 19.2681 13.2558 19.2726C13.3019 19.2408 13.3846 19.2819 13.4551 19.2777C13.4484 19.2621 13.4734 19.2765 13.4667 19.2609C13.326 19.2531 13.1725 19.2327 13.0285 19.197C13.026 19.1892 13.0166 19.1898 13.0193 19.1757C12.9961 19.182 12.9906 19.1694 12.972 19.1694C12.9778 19.164 12.9778 19.1535 12.9717 19.149C12.9537 19.1523 12.9439 19.1466 12.9293 19.146C12.9226 19.164 12.9531 19.1448 12.9467 19.1622C12.936 19.1577 12.921 19.1571 12.9082 19.1553C12.903 19.1448 12.9204 19.1367 12.9033 19.1385C12.7797 19.1115 12.6702 19.068 12.5481 19.0386C12.5426 19.0338 12.5426 19.0218 12.531 19.0224C12.4474 18.9861 12.3613 18.9513 12.2813 18.9111C12.2841 18.888 12.2478 18.8583 12.2789 18.8478C12.2884 18.8484 12.2887 18.8577 12.2884 18.8682C12.3717 18.8952 12.4519 18.9705 12.5459 18.9597C12.5469 18.9783 12.5694 18.9783 12.5905 18.9789C12.581 18.9732 12.5716 18.9648 12.5633 18.9579C12.4086 18.9111 12.2603 18.8466 12.1159 18.7542C11.9911 18.6738 11.8861 18.5787 11.7985 18.4749C11.4927 18.2775 11.3651 17.8851 11.3923 17.5365C11.3972 17.466 11.4149 17.4003 11.4418 17.3403C11.4503 17.2995 11.4634 17.2617 11.4823 17.2275C11.5007 17.1414 11.5315 17.0571 11.5821 16.9839C11.6075 16.92 11.6398 16.8603 11.6804 16.8042C11.9932 16.1775 12.195 15.6321 12.1852 14.913C12.1852 14.8788 12.187 14.847 12.1907 14.8143C12.1895 14.8122 12.1895 14.8095 12.1895 14.8065C12.1504 14.7156 12.1303 14.6166 12.1385 14.5131C12.1437 14.4615 12.1464 14.4093 12.148 14.3571C12.1342 14.3331 12.1226 14.3091 12.1123 14.2839C12.1114 14.2863 12.1104 14.2878 12.1089 14.2902C12.0915 14.2746 12.0955 14.2572 12.0964 14.2386C12.0921 14.2263 12.086 14.2143 12.0836 14.2011C12.0827 14.2005 12.0827 14.2002 12.0821 14.2002C12.0821 14.199 12.0824 14.199 12.0824 14.1984C12.0686 14.1432 12.0515 14.088 12.032 14.0343C11.9606 13.95 11.9111 13.8525 11.8797 13.7505C11.8764 13.749 11.8745 13.746 11.8721 13.7448C11.8562 13.6776 11.7683 13.6326 11.7817 13.5693C11.7521 13.5711 11.7479 13.5384 11.7286 13.5093C11.7219 13.5117 11.7122 13.5258 11.7079 13.5174C11.6893 13.5015 11.7204 13.4817 11.6871 13.4688C11.7006 13.4589 11.6948 13.4505 11.7109 13.4496C11.6407 13.3908 11.5925 13.2939 11.5181 13.2753C11.5068 13.224 11.4494 13.2126 11.4192 13.1775C11.4088 13.1649 11.4076 13.1466 11.3972 13.1349C11.388 13.1244 11.3719 13.1211 11.3609 13.1109C11.287 13.047 11.2003 12.99 11.1182 12.9324C11.1274 12.9468 11.1128 12.954 11.1073 12.9636C11.0838 12.9534 11.0926 12.9261 11.0889 12.9096C11.0581 12.8883 11.0282 12.8625 10.9956 12.8535C10.8964 12.7569 10.7578 12.7119 10.6434 12.6336C10.6397 12.6354 10.6354 12.6384 10.6336 12.6348C10.6257 12.6432 10.6116 12.6492 10.6183 12.6603C10.6214 12.6768 10.6461 12.6642 10.6513 12.6963C10.6461 12.7035 10.6412 12.7101 10.6336 12.7167C10.6125 12.7134 10.5909 12.7059 10.5726 12.6873C10.5896 12.6807 10.586 12.6831 10.5994 12.6708C10.6055 12.6558 10.5964 12.6375 10.5924 12.6192C10.5472 12.6186 10.5033 12.5499 10.4599 12.5823C10.4026 12.528 10.2842 12.5064 10.2136 12.4974C10.1682 12.4932 10.1129 12.4722 10.0717 12.4626C10.0488 12.4569 10.0253 12.4629 10.0018 12.4587C9.96766 12.4533 9.93653 12.4317 9.90327 12.4269C9.86847 12.423 9.8288 12.4341 9.79279 12.4335C9.72595 12.4323 9.65667 12.4275 9.59166 12.444C9.58617 12.4317 9.57579 12.4407 9.56847 12.4323C9.49247 12.45 9.39939 12.45 9.31821 12.4728C9.28128 12.4842 9.2413 12.4908 9.21902 12.513C9.17843 12.4998 9.11708 12.522 9.07436 12.5559C8.96571 12.5736 8.87171 12.6519 8.7655 12.6672C8.71881 12.7152 8.65746 12.6924 8.60955 12.7425C8.60008 12.7425 8.59245 12.7329 8.58269 12.7329C8.57201 12.7419 8.56804 12.7527 8.55369 12.762C8.4896 12.7581 8.43772 12.8148 8.35898 12.7986C8.34311 12.8064 8.34036 12.816 8.33365 12.8247C8.29703 12.8097 8.24881 12.8406 8.21523 12.8103C8.18319 12.8367 8.15938 12.8208 8.13558 12.8079C8.09468 12.816 8.05867 12.8004 8.02205 12.7854C8.00007 12.8097 7.96131 12.7944 7.93659 12.7812C7.94086 12.7761 7.93873 12.7698 7.93476 12.762C7.9079 12.7503 7.87219 12.7629 7.85358 12.7401C7.8371 12.7203 7.80353 12.7128 7.77758 12.6942C7.75439 12.678 7.7373 12.6528 7.70525 12.6468C7.6613 12.6135 7.62316 12.5559 7.57463 12.5313C7.55998 12.4803 7.51542 12.4407 7.48948 12.3948C7.36344 12.1779 7.30453 11.9481 7.23098 11.724C7.20931 11.5914 7.14614 11.4546 7.11745 11.3232C7.12203 11.3208 7.12874 11.3178 7.1263 11.3127C7.08754 11.274 7.10341 11.2053 7.07075 11.1678C7.08662 11.1063 7.05397 11.0337 7.04176 10.9656C7.04603 10.9635 7.04939 10.9614 7.05336 10.9587C7.02314 10.9077 7.01246 10.8342 7.01795 10.7805C7.01338 10.7829 7.00849 10.7847 7.00605 10.7775C6.97645 10.5987 6.96149 10.4127 6.93494 10.2342C6.92914 10.2198 6.91693 10.2336 6.91083 10.2198C6.93494 10.2033 6.91144 10.1709 6.91083 10.1463C6.91083 10.1424 6.92212 10.1349 6.92182 10.1307C6.92029 10.1232 6.91266 10.1085 6.91083 10.0962C6.90229 10.062 6.89984 10.0119 6.87299 9.9873C6.87512 9.9684 6.87482 9.9297 6.85437 9.9252C6.84644 9.9444 6.8446 9.9648 6.85193 9.9882C6.8385 10.0029 6.81134 10.0002 6.80859 10.0095C6.8269 10.0077 6.80859 10.0242 6.81653 10.0305C6.8269 10.0347 6.83789 10.0299 6.84766 10.0377C6.84247 10.0551 6.8269 10.0575 6.80859 10.0668C6.83484 10.0842 6.79425 10.1103 6.83301 10.1382C6.8208 10.1481 6.81531 10.1721 6.80279 10.1721C6.78143 10.0848 6.75884 10.0164 6.73809 9.9303C6.75091 9.9156 6.75671 9.9309 6.76739 9.9285C6.76495 9.9174 6.77655 9.9093 6.78631 9.9003C6.79547 9.9141 6.7976 9.9261 6.80035 9.9384C6.82324 9.9222 6.82873 9.8958 6.8446 9.8853C6.59801 9.0174 6.28854 8.0352 6.03248 7.5606Z\"></path><path fill=\"#4A9228\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.64656 0.397688C3.63313 0.387788 3.61055 0.410288 3.63069 0.418388C3.63466 0.406088 3.64351 0.411788 3.64656 0.397688Z\"></path><path fill=\"#4A9228\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.64656 0.397688C3.63313 0.387788 3.61055 0.410288 3.63069 0.418388C3.63466 0.406088 3.64351 0.411788 3.64656 0.397688Z\"></path><path fill=\"${this.colors.color}\" d=\"M41.4712 16.5071H42.5519V11.2271H41.4712V16.5071Z\"></path><path fill=\"${this.colors.color}\" d=\"M41.4395 10.1849H42.5839V9.06079H41.4395V10.1849Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M27.5062 16.5062L25.9168 13.382H24.4873V16.5062H23.3428V9.09106H26.2665C27.6973 9.09106 28.608 9.99676 28.608 11.2571C28.608 12.3191 27.9512 12.9962 27.1037 13.2254L28.8412 16.5062H27.5062ZM26.182 10.1009H24.4873V12.4238H26.182C26.9447 12.4238 27.4641 11.9966 27.4641 11.2679C27.4641 10.5389 26.9447 10.1009 26.182 10.1009Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M30.738 14.1739C30.738 15.0799 31.2254 15.6526 32.1049 15.6526C32.7089 15.6526 33.0266 15.4858 33.4078 15.1108L34.0967 15.7465C33.5458 16.2874 33.0266 16.5691 32.0836 16.5691C30.738 16.5691 29.668 15.8713 29.668 13.861C29.668 12.1531 30.5689 11.1643 31.9459 11.1643C33.3871 11.1643 34.2239 12.2053 34.2239 13.705V14.1739H30.738ZM33.0053 12.7159C32.8362 12.3196 32.4547 12.0493 31.9459 12.0493C31.4372 12.0493 31.0453 12.3196 30.8756 12.7159C30.77 12.955 30.7487 13.111 30.738 13.4347H33.1536C33.1432 13.111 33.1115 12.955 33.0053 12.7159Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M35.5592 18.0058C36.1205 18.517 36.6393 18.7039 37.4554 18.7039C38.8855 18.7039 39.7544 17.7664 39.7544 16.4752V11.2267H38.7052V11.7886C38.3029 11.3098 37.8686 11.1643 37.2964 11.1643C36.7559 11.1643 36.3005 11.3302 36.0039 11.6218C35.4847 12.1324 35.3999 12.8719 35.3999 13.7674C35.3999 14.6626 35.4847 15.403 36.0039 15.9127C36.3005 16.2037 36.7455 16.3816 37.2857 16.3816C37.8369 16.3816 38.2819 16.2358 38.6734 15.7777V16.4545C38.6734 17.1628 38.324 17.7973 37.413 17.7973C36.8831 17.7973 36.5868 17.6416 36.2474 17.3293L35.5592 18.0058ZM36.4806 13.7674C36.4806 12.934 36.6076 12.1114 37.5823 12.1114C38.5571 12.1114 38.6734 12.934 38.6734 13.7674C38.6734 14.5999 38.5571 15.4228 37.5823 15.4228C36.6076 15.4228 36.4806 14.5999 36.4806 13.7674Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M46.2502 16.5691C46.9805 16.5691 47.5107 16.2985 47.8607 15.9442C48.3686 15.4228 48.4961 14.7565 48.4961 13.861C48.4961 12.9757 48.3686 12.3094 47.8607 11.7886C47.5107 11.4346 46.9805 11.1643 46.2502 11.1643C45.519 11.1643 44.9995 11.4346 44.6498 11.7886C44.1416 12.3094 44.0146 12.9757 44.0146 13.861C44.0146 14.7565 44.1416 15.4228 44.6498 15.9442C44.9995 16.2985 45.519 16.5691 46.2502 16.5691ZM46.2502 12.1114C46.5676 12.1114 46.8435 12.2158 47.0449 12.4132C47.373 12.7369 47.4154 13.2889 47.4154 13.861C47.4154 14.4337 47.373 14.986 47.0449 15.3082C46.8435 15.5068 46.5676 15.6214 46.2502 15.6214C45.9322 15.6214 45.6673 15.5068 45.4658 15.3082C45.1375 14.986 45.0947 14.4337 45.0947 13.861C45.0947 13.2889 45.1375 12.7369 45.4658 12.4132C45.6673 12.2158 45.9322 12.1114 46.2502 12.1114Z\"></path><path fill=\"${this.colors.color}\" d=\"M53.2315 16.5067V13.2889C53.2315 12.4654 52.7548 12.1117 52.1508 12.1117C51.5469 12.1117 51.0384 12.4765 51.0384 13.2889V16.5067H49.958V11.2267H51.0176V11.7577C51.3878 11.362 51.9076 11.1643 52.4475 11.1643C52.9984 11.1643 53.4537 11.341 53.7717 11.6428C54.185 12.0388 54.3125 12.5389 54.3125 13.1317V16.5067H53.2315Z\"></path><path fill=\"${this.colors.color}\" d=\"M62.8518 13.2671V16.5062H63.9962V9.09106H62.8518V12.257H59.7897V9.09106H58.6465V16.5062H59.7897V13.2671H62.8518Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M68.7321 16.5064V16.027C68.3402 16.4128 67.9697 16.5688 67.3022 16.5688C66.6345 16.5688 66.1898 16.4128 65.8614 16.0894C65.5861 15.8086 65.4375 15.403 65.4375 14.9548C65.4375 14.0698 66.0628 13.4344 67.2922 13.4344H68.7113V13.0591C68.7113 12.3928 68.3719 12.07 67.5354 12.07C66.9421 12.07 66.6561 12.2053 66.3592 12.5803L65.6499 11.9242C66.1581 11.341 66.6879 11.1643 67.5775 11.1643C69.0498 11.1643 69.792 11.7781 69.792 12.9757V16.5064H68.7321ZM68.7113 14.1739H67.4506C66.8145 14.1739 66.4861 14.4547 66.4861 14.9341C66.4861 15.4129 66.7938 15.6838 67.4719 15.6838C67.8852 15.6838 68.1925 15.6526 68.4782 15.3814C68.6372 15.2251 68.7113 14.9755 68.7113 14.5999V14.1739Z\"></path><path fill=\"${this.colors.color}\" d=\"M71.4238 15.0479C71.4238 15.8288 71.8691 16.5062 72.8967 16.5062H73.5645V15.6002H73.0874C72.6528 15.6002 72.5045 15.3911 72.5045 14.9858V9.09106H71.4238V15.0479Z\"></path><path fill=\"${this.colors.color}\" d=\"M76.1916 16.5062C75.164 16.5062 74.7188 15.8288 74.7188 15.0479V9.09106H75.7994V14.9858C75.7994 15.3911 75.9478 15.6002 76.3824 15.6002H76.8594V16.5062H76.1916Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M80.9381 16.027V16.5064H81.9978V12.9757C81.9978 11.7781 81.2561 11.1643 79.7833 11.1643C78.8933 11.1643 78.3641 11.341 77.8554 11.9242L78.5652 12.5803C78.8619 12.2053 79.1479 12.07 79.7412 12.07C80.578 12.07 80.9174 12.3928 80.9174 13.0591V13.4344H79.4979C78.2686 13.4344 77.6436 14.0698 77.6436 14.9548C77.6436 15.403 77.7919 15.8086 78.0672 16.0894C78.3956 16.4128 78.8402 16.5688 79.5086 16.5688C80.1754 16.5688 80.5463 16.4128 80.9381 16.027ZM79.6569 14.1739H80.9174V14.5999C80.9174 14.9755 80.8432 15.2251 80.6845 15.3814C80.3979 15.6526 80.0912 15.6838 79.6777 15.6838C78.9998 15.6838 78.6919 15.4129 78.6919 14.9341C78.6919 14.4547 79.0203 14.1739 79.6569 14.1739Z\"></path><path fill=\"${this.colors.color}\" d=\"M86.9348 16.5067V13.2889C86.9348 12.4654 86.4581 12.1117 85.8544 12.1117C85.2498 12.1117 84.7416 12.4765 84.7416 13.2889V16.5067H83.6606V11.2267H84.7203V11.7577C85.0914 11.362 85.6102 11.1643 86.151 11.1643C86.7016 11.1643 87.1573 11.341 87.4753 11.6428C87.8885 12.0388 88.0155 12.5389 88.0155 13.1317V16.5067H86.9348Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M92.7626 15.9434V16.5059H93.8219V9.09106H92.7409V11.7569C92.3494 11.2991 91.9044 11.1638 91.3318 11.1638C90.792 11.1638 90.3253 11.3405 90.029 11.6315C89.4891 12.1631 89.4253 13.0586 89.4253 13.8605C89.4253 14.6621 89.4891 15.569 90.029 16.1C90.3253 16.3916 90.8023 16.5683 91.3428 16.5683C91.9258 16.5683 92.3597 16.4228 92.7626 15.9434ZM90.5054 13.8605C90.5054 12.923 90.654 12.1109 91.6285 12.1109C92.6036 12.1109 92.7409 12.923 92.7409 13.8605C92.7409 14.798 92.6036 15.6209 91.6285 15.6209C90.654 15.6209 90.5054 14.798 90.5054 13.8605Z\"></path>`}}export{o as IDSIconHalland};\n", "import{IDSIconHalland as i}from\"./icon-halland-element.js\";import{registerComponent as l}from\"../../../utilities/utils.js\";l(\"ids-icon-halland\",i);\n", "import{svg as l}from\"lit\";import{IDSIconBase as e}from\"../icon-base-element.js\";class o extends e{constructor(){super(),this.vbHeight=44,this.vbWidth=120}renderIcon(){return l`<path fill=\"${this.colors.color}\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M57.2621 26.4075H53.5348V24.4435H57.0684V21.9281H53.5348V20.0196H57.2621V17.5029H50.4081V28.9254H57.2621V26.4075Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M64.8245 29.312C66.8342 29.312 68.6112 28.6302 69.7863 27.0635C70.8641 25.6435 70.9898 24.2138 71.0189 22.5459H64.805V24.8777H67.3586C67.2322 26.1965 66.1937 26.8692 64.8433 26.8692C62.7765 26.8692 61.6598 25.0629 61.6598 23.2929C61.6598 21.5495 62.7277 19.6786 64.7951 19.6786C66.0478 19.6786 66.9609 20.4077 67.3975 21.5038L70.3684 20.3153C69.3293 18.185 67.4074 17.1162 64.941 17.1162C61.0576 17.1162 58.4067 19.5592 58.4067 23.2738C58.4067 26.8692 61.0384 29.312 64.8245 29.312Z\"></path><mask id=\"mask0_5750_65212\" style=\"mask-type:luminance\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"120\" height=\"44\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 43.3114H119.795V0.362305H0V43.3114Z\"></path></mask><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M72.3389 28.9244H75.4743V17.5029H72.3389V28.9244Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M83.4543 26.4267C81.5828 26.4267 80.0557 24.9873 80.0557 23.0152C80.0557 21.4395 81.5828 20.001 83.4543 20.001C85.3178 20.001 86.8523 21.4395 86.8523 23.0152C86.8523 24.9873 85.3178 26.4267 83.4543 26.4267ZM90.1101 23.0055C90.1101 19.5486 86.9189 17.1152 83.4542 17.1152C79.9876 17.1152 76.793 19.5486 76.793 23.0055C76.793 26.7022 79.5894 29.3113 83.4542 29.3113C87.3175 29.3113 90.1101 26.7022 90.1101 23.0055Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M94.6479 21.9284H94.6802L100.414 28.9244H103.544V17.5029H100.414V24.4908H100.379L94.6479 17.5029H91.5171V28.9244H94.6479V21.9284Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M43.4459 40.7951H42.7467V34.3984H43.4775C45.4904 34.3984 46.9113 35.5503 46.9113 37.5963C46.9113 39.8257 45.3197 40.7951 43.4459 40.7951ZM44.0558 31.8809H39.6133V43.3118H44.0558C47.3884 43.3118 50.1643 40.8051 50.1643 37.5963C50.1643 34.379 47.4069 31.8809 44.0558 31.8809Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M54.6616 39.0533L55.9532 35.4111H55.9816L57.263 39.0533H54.6616ZM54.2737 31.8809L49.6416 43.3118H52.963L53.7972 41.3215H58.1083L58.8854 43.3118H62.225L57.6909 31.8809H54.2737Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M66.1807 31.8809H63.0454V43.3118H69.9285V40.7951H66.1807V31.8809Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M75.5513 39.0533L76.8429 35.4111H76.8709L78.1526 39.0533H75.5513ZM75.1634 31.8809L70.5405 43.3118H73.8619L74.6872 41.3215H78.998L79.7834 43.3118H83.1147L78.5808 31.8809H75.1634Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M87.1789 37.0057H86.877V34.1575H87.1789C88.2037 34.1575 89.352 34.3338 89.352 35.5775C89.352 36.822 88.2037 37.0057 87.1789 37.0057ZM92.606 35.3932C92.606 32.9593 90.8041 31.8811 88.4293 31.8811H83.7496V43.3114H86.877V38.9141H86.9063L89.8645 43.3114H93.7588L89.9737 38.6284C91.6818 38.3338 92.606 36.9705 92.606 35.3932Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M103.414 38.8687H103.39L97.654 31.8809H94.5273V43.3118H97.654V36.3066H97.6895L103.414 43.3118H106.549V31.8809H103.414V38.8687Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M112.223 39.0533L113.513 35.4111H113.552L114.826 39.0533H112.223ZM115.251 31.8809H111.834L107.211 43.3118H110.532L111.365 41.3215H115.677L116.453 43.3118H119.795L115.251 31.8809Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M41.8556 12.0953L37.5726 4.43291V0.362305L33.7524 2.45624C32.9724 2.32049 32.1748 2.24624 31.3575 2.24624C26.3934 2.24624 22.0722 4.89564 19.8803 8.77958H19.879L17.6255 12.8984L7.02334 13.285C3.15845 13.4811 0.0793015 16.4729 0.00749301 20.1705L0.000152588 43.2941H4.41813C4.41813 34.6311 7.66005 30.2284 7.66005 30.2284C10.3687 30.5214 13.1204 30.6811 15.9148 30.6811C18.9228 30.6811 21.8887 30.4968 24.798 30.1475L26.4774 43.2941H30.8944C30.8944 20.8432 35.4681 13.8602 35.4681 13.8602L39.6305 14.7984C40.5707 14.0553 41.3328 13.1356 41.8556 12.0953Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M42.7472 19.7703H43.0479C44.0676 19.7703 45.2222 19.9551 45.2222 21.199C45.2222 22.4442 44.0676 22.6187 43.0479 22.6187H42.7472V19.7703ZM42.7472 24.5363H42.776L45.7274 28.9242H49.623L45.8433 24.2412C47.5523 23.9557 48.4744 22.5912 48.4744 21.0154C48.4744 18.5721 46.6689 17.5027 44.2903 17.5027H39.6125V28.9242H42.7472V24.5363Z\"></path>`}}export{o as IDSIconDalarna};\n", "import{IDSIconDalarna as i}from\"./icon-dalarna-element.js\";import{registerComponent as a}from\"../../../utilities/utils.js\";a(\"ids-icon-dalarna\",i);\n", "import{svg as l}from\"lit\";import{IDSIconBase as e}from\"../icon-base-element.js\";class C extends e{constructor(){super(),this.vbHeight=24,this.vbWidth=75}renderIcon(){return l`<mask id=\"mask0_6775_3580\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"17\" height=\"9\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 0.149544H16.7659V8.78541H0V0.149544Z\"></path></mask><g mask=\"url(#mask0_6775_3580)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.7659 3.29092L11.0085 8.78541C11.0085 8.78541 9.54123 6.78643 7.10544 4.62542C4.77864 2.56211 1.74834 2.5599 0.534538 2.73343C0.211768 2.77919 -0.00012207 2.88374 -0.00012207 2.88374L0.0158379 0.327712C0.0158379 0.327712 2.78469 0.08367 5.87127 1.15091C8.61471 2.09989 11.0732 5.4232 11.0732 5.4232L16.7659 0.149544V3.29092Z\"></path></g><mask id=\"mask1_6775_3580\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"6\" width=\"17\" height=\"13\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 6.98845H16.7728V18.1015H0V6.98845Z\"></path></mask><g mask=\"url(#mask1_6775_3580)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.0158379 9.62794L-0.00012207 7.10372C-0.00012207 7.10372 2.82858 6.4954 4.98591 8.07368C6.64449 9.28667 8.58048 11.8757 9.02316 12.3501C9.45429 12.8137 10.8359 14.3351 12.1095 14.9745C13.0722 15.458 14.0369 15.7628 15.7534 15.6598C16.349 15.6238 16.7728 15.3986 16.7728 15.3986V17.8295C16.7728 17.8295 16.4712 17.9919 16.0122 18.0496C14.992 18.1768 13.119 18.1182 11.4972 17.3175C10.2481 16.7019 9.14748 15.5477 8.28942 14.7268C8.05527 14.5039 5.30469 11.1438 3.77631 10.0411C2.97684 9.46406 1.87602 9.19958 1.16538 9.24098C0.538528 9.27745 0.0158379 9.62794 0.0158379 9.62794Z\"></path></g><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.76766 13.2632C5.76766 13.2632 7.15202 15.0086 9.6604 17.1427C11.605 18.7971 14.1392 19.193 16.0537 18.9648C16.5237 18.908 16.8 18.7313 16.8 18.7313V21.0703C16.8 21.0703 16.4102 21.2688 15.9346 21.2904C14.4189 21.3613 12.7277 21.1696 10.7998 20.4244C8.32613 19.4682 5.6597 16.4147 5.6597 16.4147L0 21.4737L0.00778674 18.427L5.76766 13.2632Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.7916 12.4506L16.8 14.8104C16.8 14.8104 16.586 14.9816 16.2474 15.0542C15.322 15.2504 13.5345 15.2787 11.9777 14.1169C10.3145 12.8753 7.77818 9.76229 7.38771 9.35739C6.99724 8.9525 5.99854 7.71872 4.65254 6.97038C3.30697 6.2227 1.48858 6.23191 0.569274 6.29753C0.206817 6.32321 0 6.40221 0 6.40221V3.91534C0 3.91534 2.84195 3.35683 5.25088 4.5928C6.49937 5.23339 7.73711 6.46366 8.40558 7.25984C8.61724 7.51112 11.4611 10.9096 12.9945 12.038C13.7959 12.6279 14.9003 12.8994 15.6132 12.8566C16.2415 12.8189 16.7916 12.4506 16.7916 12.4506Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M23.8297 4.57403C24.7339 4.57403 25.2973 4.00424 25.2973 3.08546C25.2973 2.48073 25.0627 2.05049 24.64 1.8179C24.4169 1.7015 24.1467 1.63162 23.5009 1.63162H22.1623V4.57403H23.8297ZM21 0.631584H23.5362C24.4052 0.631584 24.7692 0.701466 25.0861 0.817656C25.9317 1.1317 26.4834 1.95745 26.4834 3.03894C26.4834 4.0857 25.8964 4.96954 24.9923 5.26023V5.28359C24.9923 5.28359 25.0861 5.3882 25.2389 5.65574L27 8.84211H25.6849L23.9355 5.57428H22.1623V8.84211H21V0.631584Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M31.8671 4.9812C31.833 3.94442 31.2151 3.44404 30.4715 3.44404C29.6248 3.44404 28.9384 3.99208 28.7782 4.9812H31.8671ZM30.4943 2.52631C32.1303 2.52631 33 3.78956 33 5.35066C33 5.50552 32.9656 5.85104 32.9656 5.85104H28.744C28.8011 7.17381 29.705 7.84113 30.7345 7.84113C31.7299 7.84113 32.4506 7.13801 32.4506 7.13801L32.9082 7.98412C32.9082 7.98412 32.0502 8.8421 30.666 8.8421C28.8469 8.8421 27.6 7.47167 27.6 5.68432C27.6 3.76562 28.8469 2.52631 30.4943 2.52631Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M38.5176 5.61137C38.5176 4.00817 37.7885 3.54653 36.8885 3.54653C35.8858 3.54653 35.3165 4.32406 35.3165 5.57488C35.3165 6.85031 35.9542 7.72478 36.991 7.72478C37.7885 7.72478 38.5176 7.21457 38.5176 5.61137ZM36.672 10.3482C37.6745 10.3482 38.495 9.87469 38.495 8.62366V8.17411C38.495 7.97978 38.5061 7.78546 38.5061 7.78546H38.4834C38.1418 8.39284 37.6063 8.745 36.7747 8.745C35.1682 8.745 34.2 7.37262 34.2 5.59928C34.2 3.83824 35.1227 2.52631 36.7178 2.52631C38.1075 2.52631 38.5292 3.43728 38.5292 3.43728H38.5519C38.5519 3.43728 38.5403 3.35242 38.5403 3.24295V2.52631H39.6V8.56277C39.6 10.5911 38.1529 11.3684 36.6947 11.3684C35.9998 11.3684 35.2823 11.162 34.7241 10.8584L35.0884 9.93537C35.0884 9.93537 35.8064 10.3482 36.672 10.3482Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M45.9001 7.84113C47.0605 7.84113 48.0032 6.93548 48.0032 5.67224C48.0032 4.42107 47.0605 3.52729 45.9001 3.52729C44.7517 3.52729 43.7967 4.42107 43.7967 5.67224C43.7967 6.93548 44.7517 7.84113 45.9001 7.84113ZM45.9001 2.52631C47.7254 2.52631 49.2 3.84909 49.2 5.67224C49.2 7.50747 47.7254 8.8421 45.9001 8.8421C44.0746 8.8421 42.6 7.50747 42.6 5.67224C42.6 3.84909 44.0746 2.52631 45.9001 2.52631Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M50.4 2.52631H51.5081V3.48957C51.5081 3.73342 51.4847 3.94064 51.4847 3.94064H51.5081C51.7442 3.40417 52.4513 2.52631 53.7483 2.52631C55.1515 2.52631 55.8 3.31877 55.8 4.89176V8.8421H54.6563V5.1601C54.6563 4.29438 54.4794 3.61138 53.5245 3.61138C52.6167 3.61138 51.8856 4.23325 51.6381 5.12347C51.5673 5.36732 51.5436 5.6478 51.5436 5.95255V8.8421H50.4V2.52631Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M25.3067 12.6316C27.3286 12.6316 28.3813 13.6611 28.3813 13.6611L27.7832 14.5575C27.7832 14.5575 26.8379 13.7218 25.4024 13.7218C23.4168 13.7218 22.2203 15.1873 22.2203 17.0164C22.2203 19.0028 23.5603 20.3716 25.3305 20.3716C26.7903 20.3716 27.7233 19.3055 27.7233 19.3055V18.0702H26.3477V17.0284H28.8L28.7911 21.3788H27.764L27.7592 20.7954C27.7592 20.6139 27.7711 20.4324 27.7711 20.4324H27.7471C27.7471 20.4324 26.8262 21.4737 25.1513 21.4737C22.8783 21.4737 21 19.657 21 17.0407C21 14.5696 22.8423 12.6316 25.3067 12.6316Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32.185 20.5443C33.1131 20.5443 33.7133 19.5194 33.7133 18.6256V18.435H33.4303C32.6038 18.435 31.1095 18.4947 31.1095 19.5789C31.1095 20.0677 31.4719 20.5443 32.185 20.5443ZM33.4528 17.5651H33.7018V17.4577C33.7018 16.4688 33.1699 16.1351 32.4454 16.1351C31.5623 16.1351 30.8491 16.719 30.8491 16.719L30.3965 15.8729C30.3965 15.8729 31.2228 15.1579 32.5359 15.1579C33.9849 15.1579 34.8 15.9922 34.8 17.5174L34.7947 21.3801H33.7737L33.7811 20.7587C33.7811 20.4846 33.8038 20.282 33.8038 20.282H33.7811C33.7811 20.282 33.317 21.4737 31.9473 21.4737C30.9624 21.4737 30 20.8422 30 19.6387C30 17.6484 32.4905 17.5651 33.4528 17.5651Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M35.4 15.1579H36.5159L37.9015 19.4182C38.0118 19.7605 38.0779 20.2616 38.0891 20.2616H38.1111C38.1221 20.2616 38.1996 19.7605 38.3099 19.4182L39.696 15.1579H40.8L38.7 21.4737H37.524L35.4 15.1579Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M42 12.6316H43.0392V19.4934C43.0392 20.2532 43.2966 20.3902 43.6181 20.3902C43.7145 20.3902 43.8 20.3778 43.8 20.3778V21.4487C43.8 21.4487 43.6394 21.4737 43.4573 21.4737C42.868 21.4737 42 21.2866 42 19.7052V12.6316Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M49.2674 17.6126C49.233 16.5758 48.6153 16.0754 47.8718 16.0754C47.0251 16.0754 46.3385 16.6235 46.1784 17.6126H49.2674ZM47.8945 15.1579C49.5305 15.1579 50.4 16.421 50.4 17.9821C50.4 18.137 50.3656 18.4825 50.3656 18.4825H46.144C46.2012 19.8056 47.1052 20.4727 48.1347 20.4727C49.1301 20.4727 49.8507 19.7695 49.8507 19.7695L50.3085 20.6157C50.3085 20.6157 49.4504 21.4737 48.066 21.4737C46.2471 21.4737 45 20.1032 45 18.3158C45 16.397 46.2471 15.1579 47.8945 15.1579Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M54.2614 20.4515C55.1593 20.4515 55.9001 19.6388 55.9001 18.2226C55.9001 16.8679 55.238 15.9937 54.2949 15.9937C53.442 15.9937 52.6562 16.6461 52.6562 18.2349C52.6562 19.3433 53.1836 20.4515 54.2614 20.4515ZM51.601 12.6316H52.6899V15.4763C52.6899 15.7842 52.6674 16.0057 52.6674 16.0057H52.6899C52.6899 16.0057 53.1724 14.9468 54.5082 14.9468C56.0348 14.9468 57 16.2768 57 18.2103C57 20.193 55.9112 21.4737 54.4182 21.4737C53.1501 21.4737 52.6337 20.4023 52.6337 20.4023H52.6113C52.6113 20.4023 52.6337 20.5995 52.6337 20.8701L52.6369 21.377H51.6L51.601 12.6316Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M61.4998 20.4727C62.6605 20.4727 63.6032 19.5671 63.6032 18.304C63.6032 17.0527 62.6605 16.1591 61.4998 16.1591C60.3515 16.1591 59.3967 17.0527 59.3967 18.304C59.3967 19.5671 60.3515 20.4727 61.4998 20.4727ZM61.4998 15.1579C63.3251 15.1579 64.8 16.4807 64.8 18.304C64.8 20.1393 63.3251 21.4737 61.4998 21.4737C59.6745 21.4737 58.2 20.1393 58.2 18.304C58.2 16.4807 59.6745 15.1579 61.4998 15.1579Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M66 15.1579H67.0106V16.3131C67.0106 16.5697 66.9892 16.7775 66.9892 16.7775H67.0106C67.258 15.873 67.8924 15.1639 68.7312 15.1639C68.871 15.1639 69 15.1884 69 15.1884V16.362C69 16.362 68.8603 16.3253 68.6989 16.3253C68.0322 16.3253 67.4193 16.8633 67.172 17.78C67.0753 18.1347 67.0429 18.5137 67.0429 18.8925L67.0334 21.4737H66.0047L66 15.1579Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M73.9177 18.243C73.9177 16.6398 73.1886 16.1781 72.2887 16.1781C71.2858 16.1781 70.7165 16.9554 70.7165 18.2062C70.7165 19.4819 71.3543 20.3564 72.3912 20.3564C73.1886 20.3564 73.9177 19.8462 73.9177 18.243ZM72.072 22.9798C73.0745 22.9798 73.895 22.5063 73.895 21.255V20.8057C73.895 20.6114 73.9061 20.417 73.9061 20.417H73.8834C73.5418 21.0242 73.0063 21.3766 72.1745 21.3766C70.5683 21.3766 69.6 20.004 69.6 18.2309C69.6 16.4696 70.5227 15.1579 72.1178 15.1579C73.5075 15.1579 73.929 16.0689 73.929 16.0689H73.9517C73.9517 16.0689 73.9403 15.9838 73.9403 15.8745V15.2247H75V21.1943C75 23.2227 73.5531 24 72.0949 24C71.3998 24 70.6823 23.7936 70.1239 23.4898L70.4885 22.5667C70.4885 22.5667 71.2062 22.9798 72.072 22.9798Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M41.9889 2.78352C41.8508 2.49621 41.3692 2.5273 41.3692 2.5273C41.0205 2.52134 40.875 2.68253 40.8249 2.76124C40.8224 2.76632 40.7964 2.80953 40.8005 2.87502V8.8421H42V2.85231C41.9983 2.83665 41.9994 2.80953 41.9889 2.78352Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M42 1.26316C42 1.61188 41.7312 1.89474 41.4001 1.89474C41.0687 1.89474 40.8 1.61188 40.8 1.26316C40.8 0.914445 41.0687 0.631584 41.4001 0.631584C41.7312 0.631584 42 0.914445 42 1.26316Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M33.6 13.8949C33.6 14.2436 33.3314 14.5263 33.0001 14.5263C32.6687 14.5263 32.4 14.2436 32.4 13.8949C32.4 13.5459 32.6687 13.2632 33.0001 13.2632C33.3314 13.2632 33.6 13.5459 33.6 13.8949Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M31.8 13.8949C31.8 14.2436 31.5313 14.5263 31.2001 14.5263C30.8686 14.5263 30.6 14.2436 30.6 13.8949C30.6 13.5459 30.8686 13.2632 31.2001 13.2632C31.5313 13.2632 31.8 13.5459 31.8 13.8949Z\"></path>`}}export{C as IDSIconGavleborg};\n", "import{IDSIconGavleborg as i}from\"./icon-gavleborg-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-gavleborg\",i);\n", "import{svg as l}from\"lit\";import{IDSIconBase as o}from\"../icon-base-element.js\";class t extends o{constructor(){super(),this.vbHeight=45,this.vbWidth=156}renderIcon(){return l`<path fill=\"${this.colors.color}\" d=\"M121.649 13.1286L134.039 0.712891L155.147 21.9033H148.957L134.039 6.93713L124.748 16.2573L130.392 21.9033H124.175L115.45 13.1268L106.728 21.9033H100.507L115.452 6.90719L121.649 13.1286Z\"></path><path fill=\"${this.colors.color}\" d=\"M112.354 34.9053H118.546L115.45 38.0101L112.354 34.9053Z\"></path><path fill=\"${this.colors.color}\" d=\"M143.299 34.9053H137.105L134.038 37.9794L130.977 34.9053H124.756L129.84 39.9919H138.232L143.299 34.9053Z\"></path><path fill=\"${this.colors.color}\" d=\"M144.4 33.7986H138.207L142.293 29.6924H148.489L144.4 33.7986Z\"></path><path fill=\"${this.colors.color}\" d=\"M121.021 26.1875L118.635 28.5875H124.819L127.217 26.1875H121.021Z\"></path><path fill=\"${this.colors.color}\" d=\"M112.266 28.5875H106.062L103.666 26.1875H109.883L112.266 28.5875Z\"></path><path fill=\"${this.colors.color}\" d=\"M119.648 33.7986L121.647 31.7876L123.657 33.7986H129.871L125.781 29.6924H117.533L115.446 31.7876L113.37 29.6924H107.165L111.254 33.7986H119.648Z\"></path><path fill=\"${this.colors.color}\" d=\"M143.396 28.5875L145.792 26.1875H151.984L149.593 28.5875H143.396Z\"></path><path fill=\"${this.colors.color}\" d=\"M108.784 25.0786L106.726 23.0127H100.507L102.565 25.0786H108.784Z\"></path><path fill=\"${this.colors.color}\" d=\"M134.038 44.2027L130.945 41.0986H137.133L134.038 44.2027Z\"></path><path fill=\"${this.colors.color}\" d=\"M128.324 25.0786L130.39 23.0127H124.175L122.12 25.0786H128.324Z\"></path><path fill=\"${this.colors.color}\" d=\"M155.147 23.0127L153.085 25.0786H146.894L148.956 23.0127H155.147Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M83.1992 3.28186C83.1992 1.80307 84.3309 0.739258 85.7468 0.739258C87.1559 0.739258 88.2908 1.80307 88.2908 3.28186C88.2908 4.76457 87.1559 5.82838 85.7468 5.82838C84.3309 5.82838 83.1992 4.76457 83.1992 3.28186ZM87.5076 3.28186C87.5076 2.22803 86.779 1.43231 85.7468 1.43231C84.7174 1.43231 83.9853 2.22803 83.9853 3.28186C83.9853 4.34068 84.7174 5.13819 85.7468 5.13819C86.779 5.13819 87.5076 4.34068 87.5076 3.28186Z\"></path><path fill=\"${this.colors.color}\" d=\"M73.6406 3.28174C73.6406 1.80295 74.7084 0.748047 76.1729 0.748047C76.9277 0.748047 77.5238 0.958386 77.9259 1.40972L77.409 1.93093C77.1235 1.63004 76.7619 1.43967 76.1729 1.43967C75.1425 1.43967 74.4228 2.2279 74.4228 3.28174C74.4228 4.34056 75.151 5.13806 76.2734 5.13806C76.775 5.13806 77.2123 5.00509 77.4868 4.81507V3.88815H76.1562V3.2197H78.1912V5.19546C77.8719 5.48673 77.1892 5.82826 76.2734 5.82826C74.7304 5.82826 73.6406 4.76445 73.6406 3.28174Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M64.7179 0.805664H63.0615V5.76253H63.8313V3.92545H64.7246L65.7949 5.76253H66.6708L65.5107 3.80139C66.111 3.59069 66.5106 3.11725 66.5106 2.37964C66.5106 1.28516 65.7327 0.805664 64.7179 0.805664ZM65.7196 2.37964C65.7196 3.00852 65.3423 3.27625 64.6887 3.27625H63.8313V1.48481H64.6887C65.3366 1.48481 65.7196 1.74007 65.7196 2.37964Z\"></path><path fill=\"${this.colors.color}\" d=\"M71.7631 0.805664H68.6255V5.76253H71.8636V5.08624H69.3942V3.60459H71.492V2.94042H69.3942V1.48481H71.7631V0.805664Z\"></path><path fill=\"${this.colors.color}\" d=\"M81.1265 5.76253H80.3628V0.805664H81.1265V5.76253Z\"></path><path fill=\"${this.colors.color}\" d=\"M91.0047 2.31336C91.0047 2.31336 91.275 2.65703 91.4707 2.86951L94.1902 5.81496H94.2861V0.805336H93.5728V3.53225C93.5728 3.80997 93.6229 4.24455 93.6229 4.24455C93.6229 4.24455 93.3551 3.89625 93.1661 3.69375L90.4452 0.75293H90.3433V5.76256H91.0544V3.02887C91.0544 2.72298 91.0047 2.31336 91.0047 2.31336Z\"></path><path fill=\"${this.colors.color}\" d=\"M16.5947 18.3531L17.9232 17.5328C18.2923 18.1977 18.7239 18.6637 19.4993 18.6637C20.3791 18.6637 20.9535 18.2444 20.9535 17.0205V9.45117H22.5917V17.0526C22.5917 19.1449 21.34 20.1367 19.5746 20.1367C18.0159 20.1367 17.0881 19.331 16.5947 18.3531Z\"></path><path fill=\"${this.colors.color}\" d=\"M29.8061 6.50488C29.3276 6.50488 28.879 6.92378 28.879 7.44891C28.879 7.95943 29.3276 8.37868 29.8061 8.37868C30.3023 8.37868 30.7502 7.95943 30.7502 7.44891C30.7502 6.92378 30.3023 6.50488 29.8061 6.50488Z\"></path><path fill=\"${this.colors.color}\" d=\"M26.9008 6.50488C26.422 6.50488 25.9559 6.92378 25.9559 7.44891C25.9559 7.95943 26.422 8.37868 26.9008 8.37868C27.3928 8.37868 27.8258 7.95943 27.8258 7.44891C27.8258 6.92378 27.3928 6.50488 26.9008 6.50488Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M28.4584 9.34125H28.2737L23.7803 19.9986H25.3546L26.1282 18.0735H30.5953L31.369 19.9986H33.0665L28.4584 9.34125ZM28.8623 13.8404L30.0075 16.7106H26.6831L27.8258 13.8404C28.0303 13.3452 28.2322 12.652 28.3081 12.3912C28.3248 12.3338 28.3355 12.297 28.3387 12.2885C28.3533 12.3669 28.6307 13.2667 28.8623 13.8404Z\"></path><path fill=\"${this.colors.color}\" d=\"M34.3955 9.34082H34.5639L39.5869 15.2374L44.5627 9.34082H44.7336V19.9982H43.1731V14.5241C43.1731 14.0592 43.2136 13.3842 43.2292 13.124L43.2334 13.0541C43.2346 13.0333 43.2353 13.0205 43.2353 13.0171C43.2283 13.0246 43.1974 13.0694 43.1489 13.1396C42.9836 13.3791 42.6142 13.9145 42.2915 14.2745L39.6487 17.4702H39.4644L36.8205 14.2745C36.458 13.8525 36.0007 13.1732 35.9089 13.037L35.8956 13.0171C35.8956 13.0234 35.8978 13.0619 35.9015 13.124C35.9167 13.3842 35.9563 14.0593 35.9563 14.5241V19.9982H34.3955V9.34082Z\"></path><path fill=\"${this.colors.color}\" d=\"M46.644 10.8922H49.7692V19.9988H51.3936V10.8922H54.512V9.45117H46.644V10.8922Z\"></path><path fill=\"${this.colors.color}\" d=\"M56.4272 9.45117H58.0673V18.5553H62.9201V19.9988H56.4272V9.45117Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M68.8522 9.3418H68.6675L64.1694 19.9992H65.7473L66.5202 18.0737H70.9881L71.7589 19.9992H73.4575L68.8522 9.3418ZM69.2543 13.8405L70.4005 16.7111H67.0754L68.2178 13.8405C68.4311 13.3204 68.6454 12.5819 68.7111 12.3556C68.7216 12.3194 68.7285 12.2956 68.7307 12.289C68.7453 12.3675 69.0227 13.2669 69.2543 13.8405Z\"></path><path fill=\"${this.colors.color}\" d=\"M77.5679 13.8399C77.1502 13.3907 76.5801 12.6599 76.5801 12.6599C76.5801 12.6599 76.6856 13.5294 76.6856 14.1815V19.9982H75.1724V9.34082H75.3887L81.1854 15.5947C81.5882 16.0274 82.1572 16.7729 82.1572 16.7729C82.1572 16.7729 82.0503 15.8428 82.0503 15.251V9.45062H83.5649V20.1052H83.3617L77.5679 13.8399Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M89.1425 9.45117H86.2515V19.9991H89.1425C92.5266 19.9991 94.7524 17.8882 94.7524 14.7257C94.7524 11.5599 92.5092 9.45117 89.1425 9.45117ZM93.0506 14.7257C93.0506 16.9738 91.769 18.5553 89.0328 18.5553H87.8886V10.8925H89.0328C91.769 10.8925 93.0506 12.4761 93.0506 14.7257Z\"></path><path fill=\"${this.colors.color}\" d=\"M0.785645 24.6631H2.4253V29.3618H7.47639V24.6631H9.11427V35.21H7.47639V30.8199H2.4253V35.21H0.785645V24.6631Z\"></path><path fill=\"${this.colors.color}\" d=\"M17.0101 21.7148C16.5317 21.7148 16.083 22.1345 16.083 22.6621C16.083 23.1744 16.5317 23.5936 17.0101 23.5936C17.5064 23.5936 17.9543 23.1744 17.9543 22.6621C17.9543 22.1345 17.5064 21.7148 17.0101 21.7148Z\"></path><path fill=\"${this.colors.color}\" d=\"M14.1073 21.7148C13.6282 21.7148 13.1639 22.1345 13.1639 22.6621C13.1639 23.1744 13.6282 23.5936 14.1073 23.5936C14.6018 23.5936 15.0359 23.1744 15.0359 22.6621C15.0359 22.1345 14.6018 21.7148 14.1073 21.7148Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.6664 24.5566H15.4788L10.9829 35.21H12.5625L13.334 33.2885H17.8005L18.5731 35.21H20.2727L15.6664 24.5566ZM16.0667 29.0535L17.2137 31.923H13.8921L15.0359 29.0535C15.2612 28.4914 15.4899 27.6807 15.534 27.5245L15.541 27.4999C15.558 27.5787 15.8358 28.4774 16.0667 29.0535Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21.6011 24.6631H25.1216C27.2866 24.6631 28.9401 25.6859 28.9401 28.0128C28.9401 29.579 28.0886 30.5864 26.8078 31.0371L29.2793 35.21H27.4102L25.1383 31.3009H23.239V35.21H21.6011V24.6631ZM25.0605 29.918C26.4522 29.918 27.2557 29.3451 27.2557 28.0128C27.2557 26.6502 26.4355 26.1073 25.0605 26.1073H23.239V29.918H25.0605Z\"></path><path fill=\"${this.colors.color}\" d=\"M31.3838 32.7451L30.0532 33.5661C30.5491 34.5444 31.4766 35.3515 33.0352 35.3515C34.796 35.3515 36.0488 34.3601 36.0488 32.2634V24.6631H34.4127V32.2328C34.4127 33.4588 33.8383 33.8766 32.9588 33.8766C32.1852 33.8766 31.754 33.4128 31.3838 32.7451Z\"></path><path fill=\"${this.colors.color}\" d=\"M38.6733 24.6631H45.3488V26.1073H40.313V29.2043H44.7783V30.6178H40.313V33.7679H45.5662V35.21H38.6733V24.6631Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M50.7894 24.6631H47.8994V35.21H50.7894C54.1724 35.21 56.3982 33.1002 56.3982 29.934C56.3982 26.7736 54.1572 24.6631 50.7894 24.6631ZM54.6967 29.934C54.6967 32.1861 53.4183 33.7679 50.68 33.7679H49.5369V26.1073H50.68C53.4183 26.1073 54.6967 27.6855 54.6967 29.934Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M61.4208 24.5566H61.6087L66.2119 35.2101H64.5094L63.7364 33.2882H59.2743L58.4988 35.2101H56.9238L61.4208 24.5566ZM63.1496 31.9228L62.009 29.0533C61.7767 28.4775 61.4993 27.5784 61.483 27.5C61.4816 27.504 61.4787 27.514 61.4742 27.5295L61.4629 27.5689C61.3972 27.7977 61.1863 28.5321 60.9743 29.0533L59.8312 31.9228H63.1496Z\"></path><path fill=\"${this.colors.color}\" d=\"M69.7184 24.6631H68.0806V35.21H74.5706V33.7679H69.7184V24.6631Z\"></path><path fill=\"${this.colors.color}\" d=\"M76.6396 24.6631H83.3173V26.1073H78.2797V29.2043H82.7447V30.6178H78.2797V33.7679H83.5314V35.21H76.6396V24.6631Z\"></path><path fill=\"${this.colors.color}\" d=\"M87.2705 27.8729C87.2705 27.8729 87.8442 28.6005 88.2619 29.0533L94.0543 35.3185H94.2554V24.6632H92.7422V30.4625C92.7422 31.0504 92.8484 31.9841 92.8484 31.9841C92.8484 31.9841 92.2797 31.239 91.8787 30.8051L86.0806 24.5566H85.8643V35.2101H87.3796V29.393C87.3796 28.742 87.2705 27.8729 87.2705 27.8729Z\"></path>`}}export{t as IDSIconJamtlandHarjedalen};\n", "import{IDSIconJamtlandHarjedalen as i}from\"./icon-jamtland-harjedalen-element.js\";import{registerComponent as a}from\"../../../utilities/utils.js\";a(\"ids-icon-jamtland-harjedalen\",i);\n", "import{svg as l}from\"lit\";import{IDSIconBase as e}from\"../icon-base-element.js\";class o extends e{constructor(){super(),this.vbHeight=24,this.vbWidth=97}renderIcon(){return l`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.52891 8.88879C4.63337 8.90182 3.59383 9.36537 2.99589 10.3727C2.39726 11.3786 0 15.4819 0 15.4819C0.0315429 15.4257 0.0665143 15.3695 0.103543 15.3146C0.602743 14.5672 1.56754 13.9082 2.59817 13.9165C2.59269 13.9165 17.3136 13.9185 19.4757 13.9165L22.416 8.88879H5.52891Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.1179 0.204224H11.0889L9.74011 8.16057H14.7637C15.1147 6.09794 15.5557 3.508 16.1179 0.204224Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.62631 14.7375L8.06128 18.0666C8.34448 18.4177 8.80802 18.9875 8.87934 19.0739C9.25305 19.5231 9.78928 19.7459 10.3948 19.7514C11.5091 19.7617 12.8304 19.1425 13.1335 17.7512C13.3187 16.6541 13.3248 16.6177 13.6444 14.7375H8.62631Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.07765 14.7375H3.07697H3.07354H3.07148H3.06051C2.09845 14.7348 1.16657 15.2785 0.694794 15.9869C0.670794 16.0232 0.62348 16.0966 0.601537 16.1322C0.0461088 17.0093 0.16268 17.9185 0.190109 18.0646C0.25388 18.2936 0.35948 18.5 0.491823 18.6858C1.25708 19.6033 2.56679 21.1805 3.12497 21.8511C3.80108 22.665 4.91194 22.7178 5.77251 22.3846C6.63377 22.0527 11.1327 20.3274 11.1327 20.3274C10.1254 20.6957 9.10919 20.5044 8.49754 19.7693C8.39948 19.6513 5.44474 16.089 4.32359 14.7375H3.08177H3.07765Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M23.7904 20.9987L24.4213 20.4282C24.8341 21.0467 25.2709 21.3505 25.9264 21.3505C26.7157 21.3505 27.2862 20.7806 27.2862 19.6396V13.595H28.1961V19.6396C28.1961 20.5132 27.9534 21.1557 27.5289 21.5815C27.1161 21.9937 26.5696 22.2001 25.9147 22.2001C24.9438 22.2001 24.2395 21.7146 23.7904 20.9987Z\"></path><mask id=\"mask0_6775_3754\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"97\" height=\"24\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 23.9357H96.216V0.000183105H0V23.9357Z\" fill=\"white\"></path></mask><g mask=\"url(#mask0_6775_3754)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32.5522 14.9056H33.5355V13.8256H32.5522V14.9056ZM30.6706 14.9056H31.6539V13.8256H30.6706V14.9056ZM34.0327 18.9718V18.9108C34.0327 17.4914 33.1831 16.4347 32.1024 16.4347C30.9861 16.4347 30.1975 17.4914 30.1975 18.8985V18.9595C30.1975 20.3789 31.0347 21.4349 32.1147 21.4349C33.2318 21.4349 34.0327 20.3673 34.0327 18.9718ZM29.2992 18.9835V18.8985C29.2992 17.0539 30.4882 15.6461 32.1147 15.6461C33.7413 15.6461 34.9186 17.0416 34.9186 18.8868V18.9595C34.9186 20.8048 33.7289 22.2242 32.1024 22.2242C30.4766 22.2242 29.2992 20.8288 29.2992 18.9835Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M36.0087 15.7674H36.8823V16.7987C37.2347 16.1678 37.8052 15.646 38.7515 15.646C40.0386 15.646 40.8155 16.5319 40.8155 17.9521V22.091H39.9412V18.1948C39.9412 17.0661 39.4071 16.4353 38.4848 16.4353C37.5625 16.4353 36.8823 17.1628 36.8823 18.2428V22.091H36.0087V15.7674Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M42.16 13.3279H43.0336V19.2141L45.8375 15.7677H46.8935L44.6725 18.4255L46.9785 22.0906H45.9465L44.078 19.1167L43.0336 20.3427V22.0906H42.16V13.3279Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M50.424 14.9056H51.4073V13.8256H50.424V14.9056ZM48.5431 14.9056H49.5264V13.8256H48.5431V14.9056ZM51.9051 18.9718V18.9108C51.9051 17.4914 51.0555 16.4347 49.9748 16.4347C48.8585 16.4347 48.0699 17.4914 48.0699 18.8985V18.9595C48.0699 20.3789 48.9072 21.4349 49.9872 21.4349C51.1035 21.4349 51.9051 20.3673 51.9051 18.9718ZM47.1716 18.9835V18.8985C47.1716 17.0539 48.3607 15.6461 49.9872 15.6461C51.6137 15.6461 52.7911 17.0416 52.7911 18.8868V18.9595C52.7911 20.8048 51.6013 22.2242 49.9748 22.2242C48.349 22.2242 47.1716 20.8288 47.1716 18.9835Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M58.4327 18.9837V18.8864C58.4327 17.3449 57.6071 16.4349 56.6361 16.4349C55.6411 16.4349 54.7188 17.3942 54.7188 18.8747V18.9961C54.7188 20.4765 55.6411 21.4235 56.6361 21.4235C57.6318 21.4235 58.4327 20.5376 58.4327 18.9837ZM53.8816 15.7677H54.7552V16.9808C55.1796 16.2649 55.8112 15.6464 56.8062 15.6464C58.0926 15.6464 59.331 16.7627 59.331 18.8624V18.9837C59.331 21.0841 58.0926 22.2121 56.8062 22.2121C55.7988 22.2121 55.168 21.6052 54.7552 20.9133V23.912H53.8816V15.7677Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M60.5199 22.0912H61.4196V15.7675H60.5199V22.0912ZM60.4705 14.4681H61.4705V13.4368H60.4705V14.4681Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M62.8969 15.7674H63.7705V16.7987C64.1229 16.1678 64.6927 15.646 65.6397 15.646C66.9261 15.646 67.703 16.5319 67.703 17.9521V22.091H66.8287V18.1948C66.8287 17.0661 66.2953 16.4353 65.3723 16.4353C64.4507 16.4353 63.7705 17.1628 63.7705 18.2428V22.091H62.8969V15.7674Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M73.3329 18.6683V18.6313C73.3329 17.2722 72.3983 16.4349 71.4273 16.4349C70.4324 16.4349 69.6308 17.2482 69.6308 18.6313V18.656C69.6308 20.0274 70.444 20.8646 71.4273 20.8646C72.3983 20.8646 73.3329 20.0157 73.3329 18.6683ZM68.9876 23.2557L69.3393 22.5522C69.9345 22.9403 70.6504 23.1707 71.3786 23.1707C72.5684 23.1707 73.3082 22.5398 73.3082 21.2781V20.3552C72.8714 21.0587 72.2282 21.6539 71.2209 21.6539C69.9345 21.6539 68.7332 20.5862 68.7332 18.6806V18.6313C68.7332 16.7264 69.9469 15.6464 71.2333 15.6464C72.2406 15.6464 72.8838 16.2285 73.3082 16.8964V15.7677H74.1825V21.2534C74.1825 22.1147 73.9398 22.7586 73.4906 23.207C73.0052 23.6932 72.2893 23.936 71.391 23.936C70.5414 23.936 69.7281 23.7172 68.9876 23.2557Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M75.0421 21.314L75.5029 20.6708C76.0981 21.1687 76.7166 21.4354 77.3482 21.4354C78.0401 21.4354 78.5255 21.0466 78.5255 20.4521V20.4404C78.5255 19.8816 78.0037 19.5901 77.1541 19.2391C76.1461 18.8016 75.3452 18.4011 75.3452 17.4178V17.3938C75.3452 16.3618 76.1831 15.6706 77.3118 15.6706C78.0277 15.6706 78.7683 15.9497 79.3025 16.3501L78.8773 17.0173C78.3918 16.6656 77.846 16.4228 77.2871 16.4228C76.6199 16.4228 76.1955 16.8116 76.1955 17.3088V17.3328C76.1955 17.8676 76.7413 18.1337 77.6026 18.4985C78.6469 18.9593 79.3751 19.3961 79.3751 20.3554V20.3794C79.3751 21.5081 78.4645 22.2 77.3242 22.2C76.5473 22.2 75.71 21.8969 75.0421 21.314Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M83.293 22.0904H84.1666V13.3277H83.293V22.0904Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M88.2686 14.9056H89.2519V13.8256H88.2686V14.9056ZM86.387 14.9056H87.3703V13.8256H86.387V14.9056ZM89.2272 19.8934V19.1049C88.8268 18.9595 88.3166 18.8505 87.6981 18.8505C86.6908 18.8505 86.1319 19.3723 86.1319 20.1732V20.2096C86.1319 20.9988 86.7271 21.496 87.4793 21.496C88.4503 21.5083 89.2272 20.8164 89.2272 19.8934ZM85.2583 20.2582V20.2096C85.2583 18.9108 86.1929 18.1709 87.5884 18.1709C88.2562 18.1709 88.7417 18.28 89.2149 18.4253V18.0489C89.2149 17.0299 88.6204 16.4834 87.6007 16.4834C86.9698 16.4834 86.4233 16.6774 85.9865 16.9085L85.7074 16.192C86.302 15.9005 86.9212 15.6825 87.6981 15.6825C88.4626 15.6825 89.0572 15.9005 89.47 16.314C89.8581 16.7021 90.0768 17.285 90.0768 18.0249V22.0912H89.2149V21.1689C88.8391 21.7634 88.2199 22.2242 87.2853 22.2242C86.2293 22.2242 85.2583 21.5083 85.2583 20.2582Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M91.4103 15.7674H92.2839V16.7987C92.6363 16.1678 93.2062 15.646 94.1531 15.646C95.4395 15.646 96.2164 16.5319 96.2164 17.9521V22.091H95.3422V18.1948C95.3422 17.0661 94.8087 16.4353 93.8857 16.4353C92.9641 16.4353 92.2839 17.1628 92.2839 18.2428V22.091H91.4103V15.7674Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M30.006 4.52678C31.3898 4.52678 32.1544 3.8349 32.1544 2.7549V2.7309C32.1544 1.61387 31.3775 0.995353 30.1034 0.995353H28.1731V4.52678H30.006ZM27.2632 0.15741H30.1638C31.1347 0.15741 31.9116 0.448838 32.3971 0.946667C32.8216 1.37112 33.0643 1.97798 33.0643 2.69455V2.71855C33.0643 4.06598 32.2271 4.87924 31.0497 5.16998L33.3318 8.6541H32.2394L30.1034 5.35238H28.1731V8.6541H27.2632V0.15741Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M38.1475 5.15824C38.0871 3.95687 37.5166 2.97356 36.4846 2.97356C35.55 2.97356 34.8465 3.83481 34.7614 5.15824H38.1475ZM33.8755 5.54636V5.48601C33.8755 3.55573 35.0042 2.20898 36.4846 2.20898C38.0748 2.20898 39.0211 3.56876 39.0211 5.47367C39.0211 5.5587 39.0211 5.72876 39.0094 5.83778H34.7614C34.8588 7.23321 35.7201 8.01013 36.7157 8.01013C37.4069 8.01013 37.9171 7.7187 38.3539 7.28258L38.8517 7.84076C38.2812 8.42361 37.6257 8.78704 36.6787 8.78704C35.1372 8.78704 33.8755 7.54933 33.8755 5.54636Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M44.615 5.23125V5.19422C44.615 3.83513 43.6804 2.99788 42.7094 2.99788C41.7145 2.99788 40.9135 3.81113 40.9135 5.19422V5.2189C40.9135 6.59033 41.7261 7.42759 42.7094 7.42759C43.6804 7.42759 44.615 6.57868 44.615 5.23125ZM40.2697 9.81868L40.6221 9.11513C41.2166 9.50325 41.9325 9.73365 42.6607 9.73365C43.8505 9.73365 44.5903 9.10279 44.5903 7.84108V6.9181C44.1535 7.62165 43.5103 8.21685 42.503 8.21685C41.2166 8.21685 40.0153 7.14919 40.0153 5.24359V5.19422C40.0153 3.2893 41.229 2.20862 42.5147 2.20862C43.5227 2.20862 44.1659 2.79148 44.5903 3.45936V2.33068H45.4646V7.81639C45.4646 8.67765 45.2219 9.32153 44.7727 9.76999C44.2873 10.2562 43.5714 10.4989 42.6731 10.4989C41.8235 10.4989 41.0102 10.2802 40.2697 9.81868Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M46.9935 8.6539H47.8932V2.33024H46.9935V8.6539ZM46.9434 1.0315H47.9434V0.000183105H46.9434V1.0315Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M53.7881 5.53458V5.47355C53.7881 4.05412 52.9385 2.99812 51.8585 2.99812C50.7414 2.99812 49.9529 4.05412 49.9529 5.46189V5.52223C49.9529 6.94235 50.7901 7.99835 51.8708 7.99835C52.9871 7.99835 53.7881 6.93001 53.7881 5.53458ZM49.0546 5.54692V5.46189C49.0546 3.61663 50.2443 2.20886 51.8708 2.20886C53.4966 2.20886 54.674 3.60498 54.674 5.44955V5.52223C54.674 7.36749 53.485 8.78692 51.8585 8.78692C50.2319 8.78692 49.0546 7.39149 49.0546 5.54692Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M55.7886 2.33029H56.6622V3.36161C57.0146 2.73075 57.5845 2.20892 58.5314 2.20892C59.8178 2.20892 60.5947 3.09487 60.5947 4.51498V8.65395H59.7205V4.75772C59.7205 3.62904 59.187 2.99818 58.264 2.99818C57.3424 2.99818 56.6622 3.72572 56.6622 4.80572V8.65395H55.7886V2.33029Z\"></path></g>`}}export{o as IDSIconJonkoping};\n", "import{IDSIconJonkoping as i}from\"./icon-jonkoping-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-jonkoping\",i);\n", "import{svg as l}from\"lit\";import{IDSIconBase as e}from\"../icon-base-element.js\";class o extends e{constructor(){super(),this.vbHeight=33,this.vbWidth=71}renderIcon(){return l`<mask id=\"mask0_6775_3809\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"31\" y=\"0\" width=\"17\" height=\"21\"><path fill=\"white\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M31.6713 0.106812H47.6081V20.7519H31.6713V0.106812Z\"></path></mask><g mask=\"url(#mask0_6775_3809)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M31.96 11.2311C31.6096 9.62101 31.5782 7.87661 31.8655 6.25747C32.4328 3.06128 34.5871 0.808945 37.8058 0.262469C40.9363 -0.268948 44.1825 0.524547 46.1689 3.18783C47.5264 5.00806 47.8599 7.06837 47.4349 9.25406C46.4272 14.4365 41.9196 18.2111 37.6248 20.7519C39.5427 17.3893 43.0804 9.05083 36.8803 8.14691C34.6169 7.81691 32.8977 9.25908 31.96 11.2311Z\"></path></g><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M37.0916 20.8747C34.3262 19.9825 31.235 18.8891 29.0522 16.9107C26.5637 14.6553 27.9688 11.0239 31.5206 11.43C29.7789 9.89529 27.0439 8.324 24.6942 9.29232C23.038 9.97475 21.7296 11.938 21.7702 13.7687C21.9162 20.3543 32.7132 20.7732 37.0916 20.8747Z\"></path><mask id=\"mask1_6775_3809\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"24\" width=\"5\" height=\"7\"><path fill=\"white\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 24.1118H4.68488V30.7379H0V24.1118Z\"></path></mask><g mask=\"url(#mask1_6775_3809)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.894196 27.0318H2.06772C2.77559 27.0318 3.48346 26.8633 3.48346 25.9648C3.48346 25.0664 2.77559 24.898 2.06772 24.898H0.894196V27.0318ZM0 24.1118H2.3193C4.00512 24.1118 4.43357 25.1319 4.43357 25.9648C4.43357 26.8071 3.80955 27.6027 2.8129 27.7149L4.68494 30.7379H3.56722L1.89085 27.8179H0.894196V30.7379H0V24.1118Z\"></path></g><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.37519 28.1549C8.35669 27.4154 7.94664 26.8633 7.09921 26.8633C6.27027 26.8633 5.72991 27.5653 5.72991 28.1549H8.37519ZM5.72991 28.8288C5.72991 29.6055 6.44703 30.1203 7.22016 30.1203C7.73257 30.1203 8.10511 29.8581 8.43109 29.4559L9.06435 29.9424C8.59871 30.5507 7.9561 30.8502 7.10845 30.8502C5.7112 30.8502 4.83582 29.8394 4.83582 28.5199C4.83582 27.1909 5.79517 26.1895 7.1177 26.1895C8.67322 26.1895 9.26938 27.3873 9.26938 28.5292V28.8288H5.72991Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.7958 28.5199C10.7958 29.4184 11.3546 30.0079 12.2488 30.0079C13.1429 30.0079 13.7018 29.4184 13.7018 28.5199C13.7018 27.6214 13.1429 26.9757 12.2488 26.9757C11.3546 26.9757 10.7958 27.6214 10.7958 28.5199ZM14.5402 30.7005C14.5402 32.0388 13.5714 32.984 12.1277 32.984C11.2894 32.984 10.5909 32.7687 9.96682 32.1886L10.5349 31.4772C10.9728 31.9451 11.4664 32.1979 12.109 32.1979C13.3573 32.1979 13.7018 31.4117 13.7018 30.663V30.0079H13.6738C13.3573 30.5415 12.7519 30.7941 12.1465 30.7941C10.8518 30.7941 9.89231 29.8114 9.90156 28.5199C9.90156 27.2096 10.7773 26.1895 12.1465 26.1895C12.7425 26.1895 13.3573 26.461 13.6833 26.9382H13.7018V26.3019H14.5402V30.7005Z\"></path><mask id=\"mask2_6775_3809\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"71\" height=\"33\"><path fill=\"white\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 32.984H70.8985V0.106812H0V32.984Z\"></path></mask><g mask=\"url(#mask2_6775_3809)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.5655 30.7379H16.4037V26.3019H15.5655V30.7379ZM15.9846 24.0931C16.3199 24.0931 16.5994 24.3739 16.5994 24.7108C16.5994 25.0478 16.3199 25.3287 15.9846 25.3287C15.6493 25.3287 15.3698 25.0478 15.3698 24.7108C15.3698 24.3739 15.6493 24.0931 15.9846 24.0931Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.6354 30.0641C20.5295 30.0641 21.0883 29.4184 21.0883 28.5199C21.0883 27.6214 20.5295 26.9757 19.6354 26.9757C18.7412 26.9757 18.1823 27.6214 18.1823 28.5199C18.1823 29.4184 18.7412 30.0641 19.6354 30.0641ZM19.6354 26.1895C20.9487 26.1895 21.9825 27.2283 21.9825 28.5199C21.9825 29.8114 20.9487 30.8502 19.6354 30.8502C18.3221 30.8502 17.2882 29.8114 17.2882 28.5199C17.2882 27.2283 18.3221 26.1895 19.6354 26.1895Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22.802 26.3019H23.6404V26.985H23.6589C23.8732 26.5171 24.432 26.1895 25.1118 26.1895C25.9688 26.1895 26.7139 26.7043 26.7139 27.8836V30.7379H25.8757V28.1174C25.8757 27.2845 25.4007 26.9758 24.8696 26.9758C24.1712 26.9758 23.6404 27.425 23.6404 28.4544V30.7379H22.802V26.3019Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M30.3185 24.1118H31.2127V26.9757H31.2872L34.2024 24.1118H35.4507L32.2651 27.1722L35.6647 30.7379H34.3608L31.2872 27.4248H31.2127V30.7379H30.3185V24.1118Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M38.2911 28.6041C37.4995 28.6041 36.5308 28.7445 36.5308 29.4559C36.5308 29.961 36.9033 30.1764 37.4807 30.1764C38.4122 30.1764 38.7382 29.4837 38.7382 28.8847V28.6041H38.2911ZM35.9254 26.8446C36.391 26.4047 37.0617 26.1895 37.6762 26.1895C38.9804 26.1895 39.5205 26.9009 39.5205 27.6682V29.9329C39.5205 30.2419 39.5298 30.504 39.5578 30.7379H38.8127C38.794 30.5133 38.7847 30.2887 38.7847 30.0641H38.7662C38.3936 30.6349 37.8905 30.8502 37.2199 30.8502C36.4003 30.8502 35.6924 30.3821 35.6924 29.5213C35.6924 28.3795 36.7821 27.9864 38.1234 27.9864H38.7382V27.7994C38.7382 27.3407 38.4029 26.8633 37.6857 26.8633C37.0431 26.8633 36.7355 27.1348 36.4283 27.3688L35.9254 26.8446Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M40.5728 30.7378H41.4109V23.6626H40.5728V30.7378Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M42.51 26.3019H43.2924V26.9944H43.3109C43.3949 26.7323 43.935 26.1895 44.7266 26.1895C45.3788 26.1895 45.8259 26.4703 46.1054 27.013C46.394 26.4703 46.9716 26.1895 47.5024 26.1895C48.8625 26.1895 49.179 27.1628 49.179 28.1549V30.7379H48.3407V28.2672C48.3407 27.5934 48.2011 26.9758 47.3906 26.9758C46.5803 26.9758 46.2637 27.5278 46.2637 28.3139V30.7379H45.4254V28.417C45.4254 27.5747 45.3043 26.9758 44.4939 26.9758C43.8886 26.9758 43.3484 27.4344 43.3484 28.4356V30.7379H42.51V26.3019Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M52.597 28.6041C51.8054 28.6041 50.8367 28.7445 50.8367 29.4559C50.8367 29.961 51.2091 30.1764 51.7866 30.1764C52.7181 30.1764 53.0441 29.4837 53.0441 28.8847V28.6041H52.597ZM50.2313 26.8446C50.6969 26.4047 51.3676 26.1895 51.9821 26.1895C53.2863 26.1895 53.8264 26.9009 53.8264 27.6682V29.9329C53.8264 30.2419 53.8357 30.504 53.8638 30.7379H53.1186C53.0999 30.5133 53.0906 30.2887 53.0906 30.0641H53.0721C52.6995 30.6349 52.1964 30.8502 51.5259 30.8502C50.7062 30.8502 49.9983 30.3821 49.9983 29.5213C49.9983 28.3795 51.0881 27.9864 52.4293 27.9864H53.0441V27.7994C53.0441 27.3407 52.7087 26.8633 51.9916 26.8633C51.349 26.8633 51.0414 27.1348 50.7342 27.3688L50.2313 26.8446Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M54.8135 26.3019H55.6519V26.985H55.6705C55.8846 26.5171 56.4435 26.1895 56.9931 26.1895C57.1234 26.1895 57.2537 26.2082 57.3658 26.2457L57.3282 27.1535C57.1887 27.116 57.0489 27.0878 56.9186 27.0878C56.0989 27.0878 55.6519 27.5371 55.6519 28.5105V30.7379H54.8135V26.3019Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M60.4484 30.7378H61.2865V23.6626H60.4484V30.7378Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M65.7014 24.5892C65.7014 24.9261 65.4594 25.1788 65.1238 25.1788C64.7887 25.1788 64.5465 24.9261 64.5465 24.5892C64.5465 24.2803 64.8353 24.0558 65.1238 24.0558C65.4126 24.0558 65.7014 24.2803 65.7014 24.5892ZM64.77 28.6041C63.9783 28.6041 63.0097 28.7445 63.0097 29.4558C63.0097 29.961 63.3822 30.1763 63.9596 30.1763C64.8911 30.1763 65.217 29.4838 65.217 28.8847V28.6041H64.77ZM63.8013 24.5892C63.8013 24.9261 63.5591 25.1788 63.2238 25.1788C62.8884 25.1788 62.6464 24.9261 62.6464 24.5892C62.6464 24.2803 62.9352 24.0558 63.2238 24.0558C63.5125 24.0558 63.8013 24.2803 63.8013 24.5892ZM62.4042 26.8446C62.8699 26.4047 63.5405 26.1894 64.1551 26.1894C65.4594 26.1894 65.9995 26.9009 65.9995 27.6682V29.9329C65.9995 30.2419 66.0088 30.504 66.0367 30.7379H65.2917C65.2728 30.5133 65.2636 30.2887 65.2636 30.0641H65.245C64.8725 30.6348 64.3695 30.8502 63.6988 30.8502C62.8791 30.8502 62.1713 30.3821 62.1713 29.5214C62.1713 28.3795 63.261 27.9864 64.6022 27.9864H65.217V27.7994C65.217 27.3407 64.8817 26.8633 64.1646 26.8633C63.522 26.8633 63.2145 27.1348 62.9071 27.3687L62.4042 26.8446Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M66.9865 26.3019H67.8248V26.985H67.8434C68.0576 26.5171 68.6165 26.1895 69.2963 26.1895C70.1533 26.1895 70.8985 26.7043 70.8985 27.8836V30.7379H70.0603V28.1174C70.0603 27.2845 69.5852 26.9758 69.0541 26.9758C68.3558 26.9758 67.8248 27.425 67.8248 28.4544V30.7379H66.9865V26.3019Z\"></path></g>`}}export{o as IDSIconKalmar};\n", "import{IDSIconKalmar as i}from\"./icon-kalmar-element.js\";import{registerComponent as m}from\"../../../utilities/utils.js\";m(\"ids-icon-kalmar\",i);\n", "import{svg as l}from\"lit\";import{IDSIconBase as e}from\"../icon-base-element.js\";class C extends e{constructor(){super(),this.vbHeight=25,this.vbWidth=89}renderIcon(){return l`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M30.9638 13.3899C31.4041 13.3899 31.7861 13.0082 31.7861 12.5426C31.7861 12.1021 31.4041 11.7361 30.9638 11.7361H29.6093V13.3899H30.9638ZM28.5205 10.8965C28.5205 10.8134 28.5865 10.7383 28.6782 10.7383H31.055C32.0523 10.7383 32.8671 11.5368 32.8671 12.5256C32.8671 13.2904 32.3601 13.9138 31.6371 14.2044L32.7759 16.3157C32.8337 16.4236 32.7759 16.5564 32.6345 16.5564H31.7615C31.6868 16.5564 31.6455 16.5156 31.6289 16.4815L30.5233 14.2792H29.6008V16.399C29.6008 16.4815 29.5261 16.5564 29.443 16.5564H28.6782C28.5865 16.5564 28.5205 16.4815 28.5205 16.399V10.8965Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M35.3877 10.8965C35.3877 10.8128 35.4543 10.7385 35.5454 10.7385H38.928C39.0198 10.7385 39.0857 10.8128 39.0857 10.8965V11.5784C39.0857 11.661 39.0198 11.7362 38.928 11.7362H36.468V13.099H38.5206C38.6041 13.099 38.679 13.1742 38.679 13.2572V13.9464C38.679 14.0385 38.6041 14.1049 38.5206 14.1049H36.468V15.559H38.928C39.0198 15.559 39.0857 15.6342 39.0857 15.7166V16.3983C39.0857 16.4822 39.0198 16.5572 38.928 16.5572H35.5454C35.4543 16.5572 35.3877 16.4822 35.3877 16.3983V10.8965Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M44.1746 10.6554C44.9225 10.6554 45.6373 10.9457 46.2024 11.4283C46.269 11.4944 46.2769 11.5942 46.2105 11.661L45.6952 12.2016C45.6292 12.2679 45.5544 12.2679 45.4799 12.2016C45.122 11.8858 44.6815 11.7197 44.224 11.7197C43.1856 11.7197 42.363 12.6088 42.363 13.6478C42.363 14.6781 43.1856 15.5508 44.2327 15.5508C44.6983 15.5508 45.0554 15.41 45.2213 15.3429V14.6363H44.5569C44.4656 14.6363 44.3995 14.5705 44.3995 14.4866V13.8307C44.3995 13.7393 44.4656 13.6725 44.5569 13.6725H46.1528C46.2356 13.6725 46.3023 13.7475 46.3023 13.8307V15.9587C46.3023 16.0248 46.269 16.0661 46.2356 16.0914C46.2356 16.0914 45.3801 16.6314 44.1746 16.6314C42.5205 16.6314 41.1914 15.3182 41.1914 13.6561C41.1914 11.9939 42.5205 10.6554 44.1746 10.6554Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M48.8567 10.8965C48.8567 10.8128 48.9315 10.7385 49.0143 10.7385H49.7876C49.8703 10.7385 49.9452 10.8128 49.9452 10.8965V16.3983C49.9452 16.4822 49.8703 16.5572 49.7876 16.5572H49.0143C48.9315 16.5572 48.8567 16.4822 48.8567 16.3983V10.8965Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M55.1855 15.559C56.2326 15.559 57.0974 14.7034 57.0974 13.6561C57.0974 12.6088 56.2326 11.7362 55.1855 11.7362C54.1387 11.7362 53.2826 12.6088 53.2826 13.6561C53.2826 14.7034 54.1387 15.559 55.1855 15.559ZM55.1855 10.6554C56.8475 10.6554 58.1775 11.9939 58.1775 13.6561C58.1775 15.3182 56.8475 16.6394 55.1855 16.6394C53.5235 16.6394 52.2021 15.3182 52.2021 13.6561C52.2021 11.9939 53.5235 10.6554 55.1855 10.6554Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M60.2661 10.8048C60.2661 10.7216 60.3411 10.6555 60.4243 10.6555H60.6321L64.0896 14.3288H64.0977V10.8966C64.0977 10.8135 64.1641 10.7384 64.2556 10.7384H65.0204C65.1031 10.7384 65.1778 10.8135 65.1778 10.8966V16.4903C65.1778 16.5731 65.1031 16.6395 65.0204 16.6395H64.8206L61.3467 12.8252H61.3386V16.3984C61.3386 16.4823 61.2717 16.5564 61.1804 16.5564H60.4243C60.3411 16.5564 60.2661 16.4823 60.2661 16.3984V10.8048Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M28.5205 18.8527C28.5205 18.7448 28.6032 18.6533 28.72 18.6533H29.4514C29.5588 18.6533 29.6509 18.7448 29.6509 18.8527V21.0967L31.745 18.7365C31.7784 18.6944 31.8284 18.6533 31.9031 18.6533H32.734C32.8922 18.6533 32.9754 18.828 32.8671 18.9528L30.6975 21.3966L33.0248 24.1801C33.108 24.288 33.0416 24.4717 32.8753 24.4717H31.9694C31.8861 24.4717 31.8368 24.438 31.8198 24.4129L29.6509 21.7374V24.2721C29.6509 24.3795 29.5588 24.4717 29.4514 24.4717H28.72C28.6032 24.4717 28.5205 24.3795 28.5205 24.2721V18.8527Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M37.7395 21.3051C38.1798 21.3051 38.5622 20.9227 38.5622 20.457C38.5622 20.0166 38.1798 19.6508 37.7395 19.6508H36.3849V21.3051H37.7395ZM35.2968 18.8115C35.2968 18.7284 35.3625 18.6528 35.4543 18.6528H37.831C38.8285 18.6528 39.643 19.4513 39.643 20.4399C39.643 21.2056 39.1361 21.8281 38.4135 22.1194L39.5517 24.2307C39.6099 24.3385 39.5517 24.4717 39.4101 24.4717H38.5375C38.4627 24.4717 38.4214 24.4301 38.4046 24.3967L37.2994 22.1942H36.3769V24.3133C36.3769 24.3967 36.3022 24.4717 36.2191 24.4717H35.4543C35.3625 24.4717 35.2968 24.3967 35.2968 24.3133V18.8115Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M44.2298 23.4733C45.2767 23.4733 46.1417 22.6187 46.1417 21.5712C46.1417 20.5236 45.2767 19.6514 44.2298 19.6514C43.1828 19.6514 42.3269 20.5236 42.3269 21.5712C42.3269 22.6187 43.1828 23.4733 44.2298 23.4733ZM44.2298 18.5705C45.8919 18.5705 47.2218 19.9082 47.2218 21.5712C47.2218 23.2332 45.8919 24.5539 44.2298 24.5539C42.5678 24.5539 41.2465 23.2332 41.2465 21.5712C41.2465 19.9082 42.5678 18.5705 44.2298 18.5705Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M48.8119 18.7198C48.8119 18.6364 48.8867 18.5705 48.9696 18.5705H49.1772L52.6346 22.2437H52.6435V18.8116C52.6435 18.7286 52.7094 18.6534 52.8009 18.6534H53.5655C53.6487 18.6534 53.7236 18.7286 53.7236 18.8116V24.4047C53.7236 24.4881 53.6487 24.5539 53.5655 24.5539H53.366L49.8922 20.7397H49.8839V24.3128C49.8839 24.3966 49.8176 24.4716 49.7262 24.4716H48.9696C48.8867 24.4716 48.8119 24.3966 48.8119 24.3128V18.7198Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M58.8053 23.4733C59.8517 23.4733 60.7171 22.6187 60.7171 21.5712C60.7171 20.5236 59.8517 19.6514 58.8053 19.6514C57.7579 19.6514 56.902 20.5236 56.902 21.5712C56.902 22.6187 57.7579 23.4733 58.8053 23.4733ZM58.8053 18.5705C60.467 18.5705 61.7972 19.9082 61.7972 21.5712C61.7972 23.2332 60.467 24.5539 58.8053 24.5539C57.1428 24.5539 55.8214 23.2332 55.8214 21.5712C55.8214 19.9082 57.1428 18.5705 58.8053 18.5705Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M66.1312 23.4903C66.5465 23.4903 66.879 23.1665 66.879 22.7341C66.879 22.3185 66.4639 22.0115 66.0317 22.0115H65.1254V23.4903H66.1312ZM66.0154 21.0974C66.4386 21.0974 66.7302 20.7645 66.7302 20.3486C66.7302 19.9333 66.4386 19.6423 66.0154 19.6423H65.1254V21.0974H66.0154ZM64.0537 18.8107C64.0537 18.7285 64.1193 18.6533 64.2114 18.6533H66.1147C67.1037 18.6533 67.8685 19.3183 67.8685 20.1911C67.8685 20.8305 67.3448 21.3295 66.9537 21.5125C67.3948 21.6533 68.0346 22.1028 68.0346 22.8675C68.0346 23.7986 67.2359 24.4709 66.2226 24.4709H64.2114C64.1193 24.4709 64.0537 24.3967 64.0537 24.3134V18.8107Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M70.5139 18.8115C70.5139 18.7278 70.5799 18.6533 70.6713 18.6533H74.0536C74.1457 18.6533 74.2121 18.7278 74.2121 18.8115V19.4935C74.2121 19.5755 74.1457 19.6509 74.0536 19.6509H71.5937V21.014H73.6468C73.73 21.014 73.8047 21.0888 73.8047 21.1714V21.8612C73.8047 21.9535 73.73 22.0196 73.6468 22.0196H71.5937V23.474H74.0536C74.1457 23.474 74.2121 23.5489 74.2121 23.6316V24.3134C74.2121 24.3967 74.1457 24.4717 74.0536 24.4717H70.6713C70.5799 24.4717 70.5139 24.3967 70.5139 24.3134V18.8115Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M79.1756 21.3051C79.616 21.3051 79.9981 20.9227 79.9981 20.457C79.9981 20.0166 79.616 19.6508 79.1756 19.6508H77.8209V21.3051H79.1756ZM76.7328 18.8115C76.7328 18.7284 76.7982 18.6528 76.8902 18.6528H79.267C80.2645 18.6528 81.079 19.4513 81.079 20.4399C81.079 21.2056 80.5721 21.8281 79.8496 22.1194L80.9876 24.2307C81.0459 24.3385 80.9876 24.4717 80.8461 24.4717H79.9737C79.8986 24.4717 79.8575 24.4301 79.8407 24.3967L78.7351 22.1942H77.8129V24.3133C77.8129 24.3967 77.7381 24.4717 77.6548 24.4717H76.8902C76.7982 24.4717 76.7328 24.3967 76.7328 24.3133V18.8115Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M86.1677 18.5704C86.9159 18.5704 87.6303 18.8607 88.1955 19.3433C88.2622 19.4096 88.2711 19.5093 88.2042 19.5755L87.6889 20.116C87.6226 20.1831 87.5478 20.1831 87.4729 20.116C87.1154 19.8002 86.6743 19.6341 86.2182 19.6341C85.1782 19.6341 84.3562 20.5241 84.3562 21.5624C84.3562 22.593 85.1782 23.4657 86.2257 23.4657C86.6914 23.4657 87.0484 23.3245 87.2155 23.2579V22.5515H86.5501C86.4593 22.5515 86.392 22.4852 86.392 22.4014V21.7451C86.392 21.6538 86.4593 21.5875 86.5501 21.5875H88.1455C88.2297 21.5875 88.2956 21.6617 88.2956 21.7451V23.8729C88.2956 23.9398 88.2622 23.9813 88.2297 24.0058C88.2297 24.0058 87.3729 24.5463 86.1677 24.5463C84.5136 24.5463 83.184 23.2331 83.184 21.5706C83.184 19.9081 84.5136 18.5704 86.1677 18.5704Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.5994 0.274048H15.8169C15.8169 0.274048 11.1195 0.274048 11.1195 5.28622V11.9244H17.3825C17.3825 11.9244 22.0789 11.968 22.0789 6.95628V6.17043V0.274048H16.5994Z\"></path><mask id=\"mask0_6775_346\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"11\" y=\"0\" width=\"12\" height=\"12\"><path fill=\"white\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.5996 0.27417H15.8168C15.8168 0.27417 11.1196 0.27417 11.1196 5.28618V11.9243H17.3826C17.3826 11.9243 22.079 11.9679 22.079 6.95624V6.17039V0.27417H16.5996Z\"></path></mask><g mask=\"url(#mask0_6775_346)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.2969 12.9691H23.8607V-0.255737H10.2969V12.9691Z\"></path></g><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.3825 13.2126H16.5994H11.1195V19.8664C11.1195 24.8769 15.8169 24.8769 15.8169 24.8769H22.0789V19.1308V18.195C22.0789 13.2415 17.4912 13.2126 17.3848 13.2126H17.3825Z\"></path><mask id=\"mask1_6775_346\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"11\" y=\"13\" width=\"12\" height=\"12\"><path fill=\"white\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.3826 13.2126H16.5996H11.1196V19.8664C11.1196 24.877 15.8168 24.877 15.8168 24.877H22.079V19.1309V18.195C22.079 13.2416 17.4913 13.2126 17.3849 13.2126H17.3826Z\"></path></mask><g mask=\"url(#mask1_6775_346)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.2969 25.7857H23.8607V12.5607H10.2969V25.7857Z\"></path></g><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.0843506 0.208984V20.1544C0.0843506 20.1907 0.101456 24.7953 4.43336 24.7953H9.91182V4.84928C9.91182 4.84928 9.91182 0.208984 5.56313 0.208984H0.0843506ZM3.06873 4.6825C3.06873 3.76507 3.81215 3.02099 4.73024 3.02099C5.64784 3.02099 6.39126 3.76507 6.39126 4.6825C6.39126 5.59994 5.64784 6.34418 4.73024 6.34418C3.81215 6.34418 3.06873 5.59994 3.06873 4.6825Z\"></path><mask id=\"mask2_6775_346\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"10\" height=\"25\"><path fill=\"white\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.0842285 0.208862V20.1543C0.0842285 20.1908 0.101499 24.7952 4.43324 24.7952H9.91186V4.84932C9.91186 4.84932 9.91186 0.208862 5.56301 0.208862H0.0842285ZM3.0686 4.68255C3.0686 3.76495 3.81219 3.02103 4.73012 3.02103C5.64772 3.02103 6.3913 3.76495 6.3913 4.68238C6.3913 5.59998 5.64772 6.34422 4.73012 6.34422C3.81219 6.34422 3.0686 5.59998 3.0686 4.68255Z\"></path></mask><g mask=\"url(#mask2_6775_346)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M-0.822388 25.7824H11.3853V-0.328979H-0.822388V25.7824Z\"></path></g>`}}export{C as IDSIconKronoberg};\n", "import{IDSIconKronoberg as o}from\"./icon-kronoberg-element.js\";import{registerComponent as i}from\"../../../utilities/utils.js\";i(\"ids-icon-kronoberg\",o);\n", "import{svg as l}from\"lit\";import{IDSIconBase as C}from\"../icon-base-element.js\";class e extends C{constructor(){super(),this.vbHeight=18,this.vbWidth=120}renderIcon(){return l`<mask id=\"mask0_6775_3645\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"18\" y=\"0\" width=\"8\" height=\"7\"><path fill=\"white\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M18.9288 0.195679H25.4229V6.6919H18.9288V0.195679Z\"></path></mask><g mask=\"url(#mask0_6775_3645)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22.1752 0.195663C23.9688 0.195663 25.4229 1.65034 25.4229 3.44388C25.4229 5.23801 23.9688 6.6919 22.1752 6.6919C20.3822 6.6919 18.9288 5.23801 18.9288 3.44388C18.9288 1.65034 20.3822 0.195663 22.1752 0.195663Z\"></path></g><mask id=\"mask1_6775_3645\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"1\" width=\"34\" height=\"17\"><path fill=\"white\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 1.71526H33.4127V17.2594H0V1.71526Z\"></path></mask><g mask=\"url(#mask1_6775_3645)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22.2331 13.6405L31.928 1.76221C32.4225 2.3341 32.8872 2.95315 33.4127 3.54069L22.2331 17.2594L12.5083 5.33502L4.36025 15.3571L2.89119 17.1663L2.73667 17.1976L0 17.182L12.5239 1.71526L22.2331 13.6405Z\"></path></g><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M28.8351 14.5371L28.8194 14.5528C30.1805 14.8001 31.3711 15.4189 32.7776 15.5271C34.2464 15.7124 35.7783 15.5739 37.122 15.1403C38.9775 14.4604 41.2976 14.1349 43.3376 14.6459C45.2244 15.2336 47.1877 15.883 49.3687 15.5582C50.0633 15.4651 50.7142 15.2493 51.3633 15.0012C51.8734 15.5888 52.3992 16.2538 52.9091 16.8887C50.8378 18.0324 47.8997 18.1718 45.5499 17.584C43.8946 17.0278 42.1629 16.5011 40.2463 16.7179C38.4831 16.8415 36.9984 17.631 35.2682 17.8313C33.6755 18.0324 32.0359 17.847 30.6294 17.3674C28.5879 16.548 25.9126 16.4708 23.7952 17.1663L36.3335 1.77786L37.7729 3.55634L28.8351 14.5371Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M35.2213 12.0786L35.2056 12.0934C37.1848 11.9541 38.8696 10.9182 40.9424 10.9495C43.0749 10.825 44.8538 11.8156 46.8797 12.0786C47.5445 12.1553 48.3175 12.1091 48.9353 11.9854L50.575 14.0269C48.9199 14.7077 46.7858 14.491 45.1165 14.0112C43.3237 13.3619 41.2053 12.9291 39.195 13.4078C37.4475 13.7954 35.7783 14.5066 33.8758 14.4291C32.8089 14.4135 31.7576 14.2585 30.8141 13.9337L40.6938 1.82405L42.1175 3.58707L35.2213 12.0786Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M58.5531 3.92024C58.8862 3.92024 59.1502 3.90165 59.3442 3.86467C59.5386 3.82769 59.6896 3.74904 59.7976 3.62871C59.9054 3.50839 59.9596 3.32487 59.9596 3.07795C59.9596 2.83143 59.9069 2.64302 59.8023 2.5135C59.6973 2.38378 59.5447 2.29593 59.3442 2.24956C59.1438 2.20339 58.8801 2.1803 58.5531 2.1803H58.3403V3.92024H58.5531ZM56.9248 1.09737H58.9511C60.5547 1.09737 61.3566 1.72365 61.3566 2.97621C61.3566 3.27869 61.2933 3.55456 61.1667 3.80461C61.0404 4.05445 60.8661 4.25813 60.6441 4.41543C60.4223 4.57274 60.1694 4.66998 59.8854 4.70695L61.7081 7.71491H60.08L58.3403 4.62361V7.71491H56.9248V1.09737Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M62.8091 1.0974H66.7042V2.29127H64.2246V3.65183H66.7042V4.85509H64.2246V6.51168H66.7042V7.71474H62.8091V1.0974Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M69.443 7.43718C68.9063 7.1349 68.4868 6.71992 68.1846 6.19244C67.8824 5.66477 67.7312 5.07096 67.7312 4.41064C67.7312 3.75051 67.884 3.1567 68.1893 2.62903C68.4946 2.10155 68.9157 1.6897 69.4522 1.39349C69.9889 1.09746 70.5932 0.949356 71.2655 0.949356C71.8024 0.949356 72.2956 1.06205 72.7459 1.28705C73.1959 1.51244 73.5971 1.85014 73.9486 2.30053L72.9957 3.0039C72.7737 2.72627 72.5331 2.5181 72.2741 2.37918C72.015 2.24046 71.7036 2.17101 71.3396 2.17101C70.9077 2.17101 70.5301 2.26355 70.2062 2.44864C69.8823 2.63373 69.6309 2.89453 69.4522 3.23066C69.2732 3.56699 69.1838 3.96044 69.1838 4.41064C69.1838 4.85496 69.2732 5.24686 69.4522 5.58612C69.6309 5.92557 69.8823 6.18775 70.2062 6.37283C70.5301 6.55792 70.8984 6.65047 71.3118 6.65047C71.6203 6.65047 71.8931 6.5996 72.1306 6.49786C72.368 6.39592 72.5517 6.25564 72.6811 6.07662C72.8106 5.89779 72.8756 5.69412 72.8756 5.46579V5.39183H71.2841V4.22555H74.3002C74.3063 4.2997 74.3096 4.41064 74.3096 4.55894C74.3096 5.22514 74.1784 5.80994 73.9163 6.31257C73.654 6.8156 73.2933 7.20436 72.8339 7.47886C72.3743 7.75336 71.8515 7.8907 71.2655 7.8907C70.587 7.8907 69.9795 7.73927 69.443 7.43718Z\"></path><mask id=\"mask2_6775_3645\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"120\" height=\"18\"><path fill=\"white\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 17.9239H119.626V0.195679H0V17.9239Z\"></path></mask><g mask=\"url(#mask2_6775_3645)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M75.5491 7.71479H76.9647V1.09744H75.5491V7.71479Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M82.7007 6.34048C83.0152 6.146 83.2605 5.87932 83.4363 5.53987C83.612 5.20061 83.7 4.8273 83.7 4.41995C83.7 4.0128 83.6104 3.6395 83.4316 3.30004C83.2527 2.96098 83.0062 2.69235 82.6915 2.49493C82.377 2.29752 82.022 2.19891 81.6275 2.19891C81.2266 2.19891 80.8673 2.29752 80.5497 2.49493C80.232 2.69235 79.9852 2.96098 79.8095 3.30004C79.6337 3.6395 79.5457 4.0128 79.5457 4.41995C79.5457 4.83337 79.6321 5.20824 79.8049 5.54456C79.9774 5.88089 80.2213 6.146 80.5358 6.34048C80.8503 6.53476 81.2141 6.632 81.6275 6.632C82.0283 6.632 82.3862 6.53476 82.7007 6.34048ZM80.4388 7.68245C80.0531 7.54354 79.6998 7.34769 79.3794 7.09471C78.966 6.76152 78.6483 6.36513 78.4263 5.90534C78.2044 5.44595 78.0933 4.95076 78.0933 4.41995C78.0933 3.94491 78.1795 3.49921 78.3524 3.08267C78.5249 2.66613 78.7809 2.29458 79.1201 1.96745C79.4532 1.64658 79.8387 1.39674 80.2766 1.21771C80.7147 1.03889 81.1648 0.94928 81.6275 0.94928C82.0901 0.94928 82.539 1.03732 82.9738 1.21302C83.4086 1.38891 83.7925 1.64052 84.1256 1.96745C84.4587 2.29458 84.7131 2.66789 84.889 3.08737C85.0646 3.50704 85.1526 3.95117 85.1526 4.41995C85.1526 4.89519 85.0646 5.34245 84.889 5.76193C84.7131 6.18161 84.4587 6.55198 84.1256 6.87265C83.7862 7.19978 83.4007 7.451 82.9691 7.62689C82.5372 7.80278 82.0901 7.89063 81.6275 7.89063C81.2205 7.89063 80.8241 7.82117 80.4388 7.68245Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M86.2534 1.0974H87.7244L90.6483 4.94744C90.8271 5.17596 91.0244 5.56159 91.2403 6.10433C91.1971 5.85781 91.1711 5.63555 91.1617 5.43814C91.1525 5.24072 91.1476 5.02785 91.1476 4.79933V1.0974H92.4987V7.71474H91.1109L88.1039 3.79074C87.9312 3.56848 87.7336 3.17992 87.5118 2.62446C87.5547 2.87138 87.5811 3.09344 87.5905 3.29085C87.5997 3.48846 87.6042 3.70427 87.6042 3.93866V7.71474H86.2534V1.0974Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M56.9248 10.4888H58.396L61.3195 14.339C61.4982 14.5674 61.6958 14.9528 61.9117 15.4959C61.8685 15.249 61.8425 15.027 61.8329 14.8295C61.8237 14.6321 61.8192 14.4193 61.8192 14.1909V10.4888H63.1699V17.1061H61.782L58.7753 13.1821C58.6028 12.9599 58.4052 12.5713 58.1832 12.0159C58.2262 12.2626 58.2525 12.4848 58.2617 12.6823C58.271 12.8799 58.2757 13.0957 58.2757 13.3301V17.1061H56.9248V10.4888Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M68.8694 15.7319C69.1839 15.5376 69.4292 15.2707 69.605 14.9313C69.7807 14.592 69.8687 14.2187 69.8687 13.8115C69.8687 13.4042 69.7791 13.0309 69.6003 12.6916C69.4214 12.3524 69.1749 12.0837 68.8602 11.8863C68.5457 11.6889 68.1907 11.5901 67.7962 11.5901C67.3953 11.5901 67.036 11.6889 66.7184 11.8863C66.4007 12.0837 66.1539 12.3524 65.9782 12.6916C65.8024 13.0309 65.7144 13.4042 65.7144 13.8115C65.7144 14.225 65.8009 14.5996 65.9736 14.936C66.1461 15.2721 66.39 15.5376 66.7045 15.7319C67.019 15.9261 67.3828 16.0234 67.7962 16.0234C68.197 16.0234 68.5549 15.9261 68.8694 15.7319ZM66.6075 17.0736C66.2218 16.9349 65.8685 16.7391 65.5482 16.4861C65.1347 16.1529 64.817 15.7565 64.595 15.2967C64.3731 14.8373 64.262 14.342 64.262 13.8115C64.262 13.3363 64.3482 12.8906 64.5211 12.4741C64.6936 12.0575 64.9497 11.6858 65.2888 11.3586C65.6219 11.0382 66.0074 10.7881 66.4453 10.6091C66.8834 10.4303 67.3335 10.3407 67.7962 10.3407C68.2588 10.3407 68.7077 10.4287 69.1425 10.6046C69.5773 10.7803 69.9612 11.0319 70.2943 11.3586C70.6274 11.6858 70.8818 12.0593 71.0577 12.4786C71.2333 12.8984 71.3213 13.3426 71.3213 13.8115C71.3213 14.2866 71.2333 14.7338 71.0577 15.1533C70.8818 15.573 70.6274 15.9432 70.2943 16.264C69.9549 16.5912 69.5694 16.8424 69.1378 17.0183C68.7059 17.1942 68.2588 17.282 67.7962 17.282C67.3892 17.282 66.9928 17.2126 66.6075 17.0736Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M74.0504 13.3116C74.3835 13.3116 74.6473 13.293 74.8415 13.256C75.0358 13.2191 75.187 13.1404 75.2947 13.0201C75.4027 12.8998 75.4567 12.7162 75.4567 12.4693C75.4567 12.2228 75.4043 12.0344 75.2996 11.9049C75.1946 11.7752 75.0418 11.6873 74.8415 11.6411C74.6411 11.595 74.3774 11.5715 74.0504 11.5715H73.8376V13.3116H74.0504ZM72.4221 10.4887H74.4482C76.0518 10.4887 76.8538 11.115 76.8538 12.3676C76.8538 12.6701 76.7906 12.9461 76.664 13.1958C76.5377 13.4458 76.3634 13.6495 76.1414 13.8066C75.9194 13.9641 75.6665 14.0613 75.3827 14.0983L77.2054 17.1063H75.5772L73.8376 14.015V17.1063H72.4221V10.4887Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M80.1196 13.3116C80.4527 13.3116 80.7165 13.293 80.9108 13.256C81.105 13.2191 81.2562 13.1404 81.3639 13.0201C81.4719 12.8998 81.5259 12.7162 81.5259 12.4693C81.5259 12.2228 81.4735 12.0344 81.3688 11.9049C81.2638 11.7752 81.111 11.6873 80.9108 11.6411C80.7103 11.595 80.4466 11.5715 80.1196 11.5715H79.9068V13.3116H80.1196ZM78.4913 10.4887H80.5174C82.1211 10.4887 82.923 11.115 82.923 12.3676C82.923 12.6701 82.8598 12.9461 82.7333 13.1958C82.6069 13.4458 82.4326 13.6495 82.2106 13.8066C81.9886 13.9641 81.7358 14.0613 81.452 14.0983L83.2746 17.1063H81.6464L79.9068 14.015V17.1063H78.4913V10.4887Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M86.5314 16.0049C86.889 16.0049 87.1589 15.9262 87.341 15.7689C87.5227 15.6114 87.6138 15.3847 87.6138 15.0885C87.6138 14.8108 87.5227 14.5982 87.341 14.4501C87.1589 14.3019 86.8952 14.2278 86.55 14.2278H85.9761V16.0049H86.5314ZM86.2908 13.1359C86.5621 13.1359 86.7826 13.1128 86.9523 13.0662C87.1219 13.02 87.2498 12.94 87.3363 12.8257C87.4227 12.7117 87.4657 12.5526 87.4657 12.3489C87.4657 12.1517 87.4256 11.9976 87.3455 11.8862C87.2653 11.7753 87.1434 11.6964 86.9801 11.6503C86.8166 11.6041 86.5962 11.581 86.3186 11.581H85.9761V13.1359H86.2908ZM84.5607 10.4889H85.8005C86.1643 10.4889 86.4649 10.4951 86.7026 10.5073C86.94 10.5198 87.1665 10.5489 87.3826 10.5953C87.5983 10.6415 87.7957 10.7141 87.9747 10.8127C88.2276 10.9547 88.4249 11.1476 88.5667 11.3912C88.7087 11.635 88.7795 11.9081 88.7795 12.2102C88.7795 12.9938 88.3169 13.4659 87.3918 13.6264C87.9285 13.7066 88.3324 13.8809 88.6039 14.1493C88.8751 14.4176 89.0109 14.7739 89.0109 15.2182C89.0109 15.5391 88.9323 15.8353 88.775 16.1068C88.6178 16.3782 88.4032 16.5877 88.1321 16.7359C87.922 16.8472 87.6938 16.9303 87.4474 16.9859C87.2005 17.0415 86.9445 17.0755 86.6795 17.0876C86.4141 17.1002 86.0688 17.1062 85.6432 17.1062H84.5607V10.4889Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M94.3121 15.7319C94.6266 15.5376 94.8718 15.2707 95.0477 14.9313C95.2233 14.592 95.3113 14.2187 95.3113 13.8115C95.3113 13.4042 95.2217 13.0309 95.043 12.6916C94.864 12.3524 94.6176 12.0837 94.3029 11.8863C93.9884 11.6889 93.6334 11.5901 93.2389 11.5901C92.8379 11.5901 92.4786 11.6889 92.161 11.8863C91.8433 12.0837 91.5965 12.3524 91.4209 12.6916C91.245 13.0309 91.157 13.4042 91.157 13.8115C91.157 14.225 91.2435 14.5996 91.4162 14.936C91.5887 15.2721 91.8326 15.5376 92.1471 15.7319C92.4616 15.9261 92.8254 16.0234 93.2389 16.0234C93.6396 16.0234 93.9976 15.9261 94.3121 15.7319ZM92.0501 17.0736C91.6644 16.9349 91.3112 16.7391 90.9908 16.4861C90.5773 16.1529 90.2597 15.7565 90.0377 15.2967C89.8157 14.8373 89.7046 14.342 89.7046 13.8115C89.7046 13.3363 89.7908 12.8906 89.9637 12.4741C90.1363 12.0575 90.3923 11.6858 90.7314 11.3586C91.0645 11.0382 91.45 10.7881 91.8879 10.6091C92.3261 10.4303 92.7761 10.3407 93.2389 10.3407C93.7014 10.3407 94.1503 10.4287 94.5851 10.6046C95.0199 10.7803 95.4038 11.0319 95.7369 11.3586C96.07 11.6858 96.3245 12.0593 96.5003 12.4786C96.6759 12.8984 96.764 13.3426 96.764 13.8115C96.764 14.2866 96.6759 14.7338 96.5003 15.1533C96.3245 15.573 96.07 15.9432 95.7369 16.264C95.3976 16.5912 95.0121 16.8424 94.5804 17.0183C94.1486 17.1942 93.7014 17.282 93.2389 17.282C92.8319 17.282 92.4354 17.2126 92.0501 17.0736Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M98.7347 11.6919H97.1156V10.4889H101.779V11.6919H100.15V17.1062H98.7347V11.6919Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M104.138 11.6919H102.519V10.4889H107.182V11.6919H105.553V17.1062H104.138V11.6919Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M108.19 10.4888H112.085V11.6829H109.606V13.0432H112.085V14.2463H109.606V15.9031H112.085V17.1061H108.19V10.4888Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M113.381 10.4888H114.852L117.775 14.339C117.954 14.5674 118.152 14.9528 118.368 15.4959C118.324 15.249 118.298 15.027 118.289 14.8295C118.28 14.6321 118.275 14.4193 118.275 14.1909V10.4888H119.626V17.1061H118.238L115.231 13.1821C115.058 12.9599 114.861 12.5713 114.639 12.0159C114.682 12.2626 114.708 12.4848 114.718 12.6823C114.727 12.8799 114.731 13.0957 114.731 13.3301V17.1061H113.381V10.4888Z\"></path></g>`}}export{e as IDSIconNorrbotten};\n", "import{IDSIconNorrbotten as o}from\"./icon-norrbotten-element.js\";import{registerComponent as t}from\"../../../utilities/utils.js\";t(\"ids-icon-norrbotten\",o);\n", "import{svg as c}from\"lit\";import{IDSIconBase as h}from\"../icon-base-element.js\";class o extends h{constructor(){super(),this.vbHeight=49.547,this.vbWidth=139.16}renderIcon(){return c`<path fill=\"${this.colors.color}\" d=\"M463.559 246.227h10.621c11.875 0 18.871 5.253 18.871 13.621 0 7.871-6 12.871-17.496 12.871h-11.996zm-12.5 37.488h21.371c17.25 0 33.871-2.742 33.871-23.613 0-10.625-7.879-18.125-18-19.872v-.253c3.879-1.497 5.754-3.372 8.5-8.743l16.496-34.746h-14.25l-13.367 30.246c-3.879 8.496-8 8.496-14.625 8.496h-7.496v-38.742h-12.5v87.227m112.738-49.238c0 9.746-5.746 17.746-15.871 17.746-11.496 0-16.246-9.493-17.117-17.746zm7.625-35.36c-4.5-1.633-9.621-4.133-20.121-4.133-22.617 0-32.992 13.75-32.992 34.493 0 18.878 11.875 32.246 29.867 32.246 21.246 0 28.121-15.496 28.121-35.996h-45.488c0-12.618 9.871-21.239 20.992-21.239 7.746 0 16.746 4.004 19.621 6.375v-11.746m64 28.485c0 13.253-6.121 24.621-18.617 24.621-11.871 0-17.746-12.871-17.746-23.743 0-12 6.75-22.488 17.746-22.488 10.996 0 18.617 9.746 18.617 21.61zm11.75-28.36c0-19.375-7.996-30.496-30.867-30.496-6.75 0-12.625.879-22.871 4.375l-.75 10.867c8.996-4.121 14.375-5.742 22.996-5.742 12.371 0 19.742 8.371 19.742 21.867v6.25h-.25c-4.992-6.621-13.246-9.875-21.367-9.875-18.246 0-27.246 14.875-27.246 31.367 0 16.368 9.25 33.868 28.496 33.868 11.246 0 17.496-4.121 20.992-10.996h.254v9.492h10.871v-60.977m18.262 60.977h11.742v-63.731h-11.742zm12.496 14.25h-13.25v13.25h13.25v-13.25m46.5-69.981c13.742 0 19.867 12.5 19.867 23.867 0 12.129-7.375 23.868-19.867 23.868-12.625 0-19.996-11.739-19.996-23.868 0-11.367 6.121-23.867 19.996-23.867zm0 57.235c19.367 0 32.363-13.993 32.363-33.368 0-18.242-13.242-33.371-32.363-33.371-19.25 0-32.496 15.129-32.496 33.371 0 19.375 12.996 33.368 32.496 33.368m46.25-1.504h11.375v-10.117h.25c3.496 7.246 11.996 11.621 20.867 11.621 16.496 0 23.867-10.243 23.867-27.371v-37.864h-11.746v32.989c0 14.875-3.246 22.121-13.496 22.746-13.371 0-19.371-10.743-19.371-26.243v-29.492H770.68v63.731m-277.004-86.754h11.75v-12.5h-11.75zm-20.496 0h11.746v-12.5H473.18Zm16.121-97.473c20.125 0 28.746 16.738 28.746 34.11 0 17.746-9.5 34.238-28.746 34.121-19.242.117-28.746-16.375-28.746-34.121 0-17.372 8.625-34.11 28.746-34.11zm0 79.227c26.496 0 41.988-19.246 41.988-45.117 0-26.493-15.371-45.118-41.988-45.118-26.617 0-41.992 18.625-41.992 45.118 0 25.871 15.5 45.117 41.992 45.117m55.137-25h10.996v-9.871h.25c3.125 6.629 9.875 11.375 16.621 11.375 3.5 0 5.25-.371 7.75-.879v-10.496c-2.125.879-4.5 1.132-6.5 1.132-10.496 0-17.371-10-17.371-25.996V66.488h-11.746v63.731m86.109-25.742c0 9.746-5.746 17.746-15.867 17.746-11.5 0-16.246-9.493-17.121-17.746zm7.629-35.36c-4.504-1.633-9.625-4.133-20.121-4.133-22.621 0-32.996 13.75-32.996 34.493 0 18.878 11.875 32.246 29.871 32.246 21.242 0 28.117-15.496 28.117-35.996h-45.488c0-12.618 9.875-21.239 20.992-21.239 7.75 0 16.75 4.004 19.625 6.375V69.117m50.004 53.106c-12.75 0-18.871-12.121-18.871-23.996 0-10.614 5.496-23.739 18.746-23.739 12.621 0 17.871 14.121 17.621 24.121.25 11.493-4.746 23.614-17.496 23.614zm-29.617 37.996h11.746l-1-38.739h.25c3.625 5.868 10 10.243 21.121 10.243 18.496 0 27.492-15.118 27.492-32.246 0-17.489-8.121-34.493-27.371-34.493-11.371 0-18.617 5.754-21.742 10.5h-.25v-8.996h-11.246l1 93.731m73.496-30h11v-9.871h.25c3.125 6.629 9.871 11.375 16.621 11.375 3.5 0 5.246-.371 7.746-.879v-10.496c-2.121.879-4.5 1.132-6.496 1.132-10.5 0-17.375-10-17.375-25.996V66.488h-11.746v63.731m73.117-55.731c13.746 0 19.871 12.5 19.871 23.867 0 12.129-7.375 23.868-19.871 23.868-12.621 0-19.992-11.739-19.992-23.868 0-11.367 6.121-23.867 19.992-23.867zm0 57.235c19.371 0 32.363-13.993 32.363-33.368 0-18.242-13.242-33.37-32.363-33.37-19.246 0-32.492 15.128-32.492 33.37 0 19.375 12.996 33.368 32.492 33.368m84.129 28.496h11.746v-93.73h-11.746v93.73m59.871-7.754h11.746v-12.488h-11.746zm-20.5 0h11.75v-12.488h-11.75zm29.246-55.606c-2.496 0-4.996.246-7.496.246-6.371 0-22.121-.996-22.121-12.246 0-6.75 6.5-10.37 11.871-10.37 11.621 0 17.746 7.245 17.746 16.745zm-34.867 28.868c5.875 3.496 12.875 5.996 21 5.996 18.242 0 25.613-8.993 25.613-26.368V78.988c0-7.254.25-10.625.504-12.5h-11v8.254h-.25c-2.75-3.879-9-9.758-19.746-9.758-13.746 0-23.371 6.008-23.371 19.875 0 15.996 17.496 20.996 29.621 20.996 4.625 0 7.871 0 12.496-.253 0 11.003-4 16.621-15.742 16.621-6.629 0-13.75-2.5-18.5-6.496l-.625 10m64.254 4.492h11.375v-10.117h.25c3.496 7.246 11.996 11.621 20.866 11.621 16.49 0 23.87-10.243 23.87-27.371V66.488h-11.75v32.989c0 14.875-3.25 22.121-13.5 22.746-13.37 0-19.365-10.743-19.365-26.243V66.488h-11.746v63.731\" fill-opacity=\"1\" fill-rule=\"nonzero\" stroke=\"none\" transform=\"matrix(.13333 0 0 -.13333 0 49.547)\"></path><path fill=\"${this.colors.color}\" d=\"M124.43 371.605c-25.121 0-45.563-20.437-45.563-45.562 0-25.121 20.442-45.559 45.563-45.559 25.125 0 45.562 20.438 45.562 45.559 0 25.125-20.437 45.562-45.562 45.562m110.742 0c-25.121 0-45.563-20.437-45.563-45.562 0-25.121 20.442-45.559 45.563-45.559 25.125 0 45.562 20.438 45.562 45.559 0 25.125-20.437 45.562-45.562 45.562\" fill-opacity=\"1\" fill-rule=\"evenodd\" stroke=\"none\" transform=\"matrix(.13333 0 0 -.13333 0 49.547)\"></path><path fill=\"${this.colors.color}\" d=\"M76.332 101.734a234.532 234.532 0 0 0-5.445-.066c-12.387 0-23.907 1.07-33.047 2.703 2.707-8.992 7.035-17.578 11.262-25.68 19.742-33.058 55.375-53.418 94.066-53.418 48.59 0 91.004 34 105.234 79.43-14.972-22.672-41.004-36.258-68.343-36.258-28.121 0-53.856 14.336-68.707 37.828-11.168-2.699-22.868-4.238-35.02-4.539m160.086 93.036-61.438 61.168s-9.031 8.175-16.511 11.8c-6.926 3.352-18.164 7.625-34.996 7.625-60.309 0-82.055-67.566-86.325-81.847 9.774-4.114 21.559-7.489 33.965-7.489 25.996 0 41.059 11.176 45.188 14.735 3.961 3.597 7.738 4.289 10.246 4.035 4.836-.484 8.363-4.527 9.637-5.746l51.449-51.207c10.394-10.164 35.488-27.68 63.172-33.996 1.414 7.047 2.722 16.504 2.722 23.898 0 40.82-17.109 57.024-17.109 57.024m122.227-67.633c.992 5.629 3.492 23.445-.266 43.386-3.074 16.325-5.984 24.602-7.785 28.567-3.645-2.41-11.289-7.449-18.864-11.645 2.754-12.621 4.176-26.101 4.176-40.312 0-10.531-.929-20.82-2.718-30.789 12.839 3.844 22.355 9.054 25.457 10.793\" fill-opacity=\"1\" fill-rule=\"nonzero\" stroke=\"none\" transform=\"matrix(.13333 0 0 -.13333 0 49.547)\"></path><path fill=\"${this.colors.color}\" d=\"M1.227 127.492c5.34-3.754 28.136-17.597 72.859-17.172 37.992.371 72.922 12.571 98.711 36.907l-44.152 44.894s-.52.582-1.407 1.43c-.675.644-1.574 1.179-2.336 1.191-.609.008-1.468-.359-2.062-.758-.723-.48-1.36-1-1.36-1-5.964-5.023-22.914-16.664-51.402-16.242-27.344.41-50.933 15.004-60.437 21.778-2.125-4.786-5.344-13.594-7.621-26.879-3.5-20.403-1.547-38.621-.793-44.149\" fill-opacity=\"1\" fill-rule=\"nonzero\" stroke=\"none\" transform=\"matrix(.13333 0 0 -.13333 0 49.547)\"></path><path fill=\"${this.colors.color}\" d=\"M284.555 40.73c28.422 27.192 44.074 65.528 44.074 107.95 0 20.715-2.926 38.238-7.707 53.054-4.805 12.739-30.508 73.629-82.559 73.629-19.402 0-32.73-5.445-40.496-10.015-5.015-2.95-8.414-5.918-10.359-7.852l55.648-55.687c3.133-3.129 19.34-20.106 19.34-64.063 0-65.828-54.644-121.445-119.328-121.445a118.332 118.332 0 0 0-48.457 10.37C118.8 9.75 148.082 0 179.375 0c40.375 0 77.73 14.465 105.18 40.73\" fill-opacity=\"1\" fill-rule=\"nonzero\" stroke=\"none\" transform=\"matrix(.13333 0 0 -.13333 0 49.547)\"></path>`}}export{o as IDSIconOrebro};\n", "import{IDSIconOrebro as o}from\"./icon-orebro-element.js\";import{registerComponent as i}from\"../../../utilities/utils.js\";i(\"ids-icon-orebro\",o);\n", "import{svg as C}from\"lit\";import{IDSIconBase as l}from\"../icon-base-element.js\";class o extends l{constructor(){super(),this.vbHeight=50,this.vbWidth=210}renderIcon(){return C`<path fill=\"${this.colors.color}\" d=\"M5.54548 20.6907C5.5454 20.6906 5.54557 20.6908 5.54548 20.6907H5.55123C5.54923 20.6906 5.54749 20.6908 5.54548 20.6907Z\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.64384 25.0805C0.753465 23.8739 -0.0279667 22.403 0.000762415 21.2021L0.00650824 21.1963C0.477666 20.2483 1.50042 19.6909 3.01732 19.4209C2.04301 17.1757 2.05575 16.0719 2.06696 15.1017C2.06943 14.8876 2.07183 14.6799 2.06351 14.468C5.80607 14.6549 7.10847 16.051 8.48146 17.5227C9.21848 18.3127 9.97584 19.1246 11.1419 19.7829C11.5499 20.0127 11.998 20.1678 12.4577 20.2598C14.3941 20.6505 18.6575 21.4836 18.6575 21.4836C18.6575 21.4836 15.8592 18.3005 14.4802 16.7204C14.1642 16.3584 13.8022 16.0423 13.3885 15.801C12.243 15.1324 11.1598 14.886 10.1055 14.6462C8.12457 14.1955 6.24571 13.7681 4.24693 10.6068C4.42859 10.5083 4.60072 10.4031 4.77775 10.295C5.59184 9.79781 6.5097 9.23722 8.93552 8.96349C8.67696 8.24526 8.29199 6.54449 9.06767 5.45279C10.0215 4.87246 11.5441 4.72881 13.6299 5.855C13.7275 3.60838 14.6066 2.20065 15.6581 1.62032C16.7039 1.55137 17.7036 2.16043 18.6919 3.34407C20.1416 1.37192 21.1017 0.83022 21.9447 0.354527C22.1308 0.249519 22.3112 0.147727 22.4899 0.0344749C24.1987 3.38095 23.6446 5.20911 23.0602 7.13719C22.7465 8.17198 22.4242 9.23555 22.4382 10.5781C22.4382 11.0492 22.5301 11.5146 22.6795 11.9571C23.3116 13.8359 24.725 17.9557 24.725 17.9557C24.725 17.9557 26.0696 13.9336 26.7476 11.9456C26.9027 11.4916 26.9946 11.0205 26.9946 10.5378C27.0006 9.20712 26.671 8.14182 26.3501 7.10468C25.7483 5.15932 25.177 3.31301 26.9085 0C27.0856 0.10981 27.2637 0.207666 27.447 0.308386C28.2803 0.766304 29.2213 1.28341 30.672 3.25214C31.1604 2.66606 32.4417 1.48242 33.769 1.60883C34.7458 2.14894 35.6364 3.39578 35.7053 5.77455C37.6876 4.73456 39.3482 4.79202 40.3709 5.41831C40.9513 6.29742 40.9225 7.46383 40.3997 8.91752C42.8296 9.19537 43.7775 9.75883 44.6098 10.2536C44.793 10.3625 44.9706 10.4681 45.1572 10.5666C43.1182 13.7279 41.262 14.1609 39.3045 14.6176C38.2556 14.8623 37.1777 15.1137 36.0271 15.7953C35.6249 16.0366 35.2686 16.3469 34.9584 16.6974C33.6541 18.1855 30.8041 21.4721 30.8041 21.4721C30.8041 21.4721 34.9469 20.6333 37.0039 20.2253C37.4693 20.1334 37.929 19.9725 38.3427 19.7369C39.4954 19.0756 40.2508 18.2566 40.9859 17.4597C42.365 15.9646 43.6726 14.547 47.3981 14.3933C47.3918 14.603 47.3965 14.8075 47.4013 15.0179C47.423 15.9719 47.4475 17.0479 46.473 19.2887C47.2199 19.4209 48.8805 19.938 49.4378 21.1561C49.4608 22.2708 48.8288 23.6728 46.812 24.9196C48.7024 26.1263 49.4838 27.5972 49.4551 28.7981C48.9839 29.7461 47.9612 30.3035 46.4443 30.5735C47.4186 32.8187 47.4058 33.9225 47.3946 34.8927C47.3922 35.1068 47.3898 35.3145 47.3981 35.5264C43.6555 35.3395 42.3531 33.9434 40.9801 32.4717C40.2431 31.6817 39.4857 30.8698 38.3197 30.2115C37.906 29.9817 37.4635 29.8266 37.0039 29.7346C35.0675 29.3439 30.8041 28.5108 30.8041 28.5108C30.8041 28.5108 33.6023 31.694 34.9813 33.2741C35.2974 33.6361 35.6593 33.9521 36.073 34.1934C37.2186 34.862 38.3018 35.1084 39.356 35.3482C41.337 35.7989 43.2159 36.2263 45.2147 39.3876C45.033 39.4862 44.8609 39.5913 44.6838 39.6994C43.8697 40.1966 42.9519 40.7572 40.5261 41.0309C40.7846 41.7492 41.1696 43.4499 40.3939 44.5416C39.4401 45.122 37.9175 45.2656 35.8317 44.1394C35.734 46.386 34.8549 47.7938 33.8035 48.3741C32.7577 48.443 31.7579 47.834 30.7697 46.6503C29.32 48.6225 28.3599 49.1642 27.5169 49.6399C27.3308 49.7449 27.1504 49.8467 26.9717 49.9599C25.2629 46.6135 25.817 44.7853 26.4014 42.8572C26.7151 41.8224 27.0374 40.7589 27.0234 39.4164C27.0176 38.9452 26.9257 38.4798 26.7763 38.0374C26.1443 36.1642 24.7308 32.0387 24.7308 32.0387C24.7308 32.0387 23.3863 36.0608 22.7083 38.0488C22.5531 38.5028 22.4612 38.9739 22.4612 39.4566C22.4552 40.7873 22.7848 41.8526 23.1057 42.8897C23.7076 44.8351 24.2788 46.6814 22.5474 49.9944C22.3702 49.8846 22.1922 49.7868 22.0089 49.686C21.1755 49.2281 20.2345 48.711 18.7839 46.7423C18.2955 47.3284 17.0141 48.512 15.6869 48.3856C14.7101 47.8455 13.8195 46.5986 13.7505 44.2199C11.7682 45.2599 10.1077 45.2024 9.08491 44.5761C8.50458 43.697 8.53331 42.5306 9.05618 41.0769C6.62621 40.7991 5.67835 40.2356 4.84604 39.7408C4.66283 39.6319 4.48522 39.5263 4.29864 39.4278C6.3376 36.2665 8.19387 35.8335 10.1514 35.3768C11.2002 35.1322 12.2781 34.8807 13.4288 34.1991C13.831 33.9578 14.1872 33.6475 14.4975 33.2971C15.8018 31.8089 18.6517 28.5223 18.6517 28.5223C18.6517 28.5223 14.509 29.3612 12.452 29.7691C11.9866 29.8611 11.5269 30.0219 11.1132 30.2575C9.96043 30.9188 9.20502 31.7378 8.46991 32.5347C7.09085 34.0298 5.78325 35.4475 2.05777 35.6011C2.064 35.3914 2.05935 35.1869 2.05456 34.9765C2.03286 34.0225 2.00838 32.9465 2.98285 30.7057C2.23589 30.5735 0.575345 30.0564 0.0179999 28.8383C-0.00498341 27.7236 0.627057 26.3274 2.64384 25.0805ZM3.47699 16.0596C3.47124 17.2719 4.4309 19.5185 5.54548 20.6907C4.29733 20.634 2.02231 20.7724 1.40849 21.5641C1.41998 22.8167 4.17223 24.5691 6.0741 25.0863C4.12052 25.6379 1.41998 27.2812 1.41998 28.4763C2.0865 29.3612 4.23543 29.5278 5.49952 29.4703C4.40781 30.6252 3.454 32.8489 3.46549 34.0325C4.73532 33.8831 6.68316 32.7167 7.70591 31.4124C8.75165 30.0794 9.9985 28.8498 11.5671 28.5395C14.7331 27.9132 22.3463 26.3848 22.3463 26.3848C22.3463 26.3848 17.267 32.2398 15.1238 34.6818C14.0608 35.8942 12.406 36.3596 10.7742 36.6009C9.13088 36.8422 7.16581 37.9684 6.38437 38.9912C7.43011 39.6002 9.84911 39.8875 11.4177 39.5083C10.7512 40.5655 9.72844 42.6168 10.1019 43.5476C11.1936 44.1681 14.0838 42.6455 15.48 41.255C14.9744 43.2258 15.0491 46.386 16.0776 46.9894C17.1693 46.8515 18.3931 45.0645 18.9735 43.9383C19.4216 45.4667 20.8639 47.4088 21.8924 47.9891C22.3922 46.8112 22.3635 44.5359 21.7487 42.996C21.1224 41.4216 20.68 39.7209 21.1971 38.204C22.2428 35.1415 24.7308 27.7638 24.7308 27.7638C24.7308 27.7638 27.2475 35.107 28.2817 38.1867C28.7931 39.7209 28.3679 41.3872 27.7588 42.9271C27.1498 44.4784 27.1325 46.748 27.6267 47.9374C28.6782 47.3341 30.1376 45.3748 30.5915 43.8234C31.1661 44.9323 32.4244 46.8457 33.4185 46.9836C34.4987 46.3458 34.6366 43.0764 34.131 41.1688C35.5789 42.588 38.3484 44.1107 39.3826 43.5131C39.8136 42.4961 38.877 40.5425 38.199 39.4738C39.7446 39.8473 42.1406 39.5657 43.1576 38.9624C42.3935 37.9339 40.4169 36.825 38.7793 36.5894C37.1073 36.3423 35.418 35.8769 34.3665 34.6703C32.2406 32.2283 27.1153 26.3791 27.1153 26.3791C27.1153 26.3791 34.7113 27.8673 37.8887 28.505C39.4688 28.8211 40.6927 30.0277 41.7212 31.3262C42.7497 32.6248 44.709 33.774 45.9788 33.9406C45.9846 32.7282 45.025 30.4816 43.9104 29.3095C45.1572 29.3669 47.4383 29.229 48.0531 28.4361C48.0416 27.1835 45.2894 25.431 43.3875 24.9139C45.3411 24.3623 48.0416 22.719 48.0416 21.5239C47.3751 20.639 45.2262 20.4724 43.9621 20.5298C45.0538 19.3749 46.0076 17.1513 45.9961 15.9676C44.7263 16.117 42.7784 17.2834 41.7557 18.5877C40.7099 19.9208 39.4631 21.1504 37.8945 21.4607C34.7285 22.087 27.1153 23.6153 27.1153 23.6153C27.1153 23.6153 32.1946 17.7603 34.3378 15.3184C35.4008 14.106 37.0498 13.6406 38.6874 13.3993C40.3307 13.1579 42.2958 12.0318 43.0772 11.009C42.0315 10.3999 39.6125 10.1127 38.0439 10.4919C38.7104 9.43464 39.7331 7.38338 39.3597 6.45256C38.268 5.83201 35.3778 7.35466 33.9816 8.74514C34.4872 6.77433 34.4125 3.61412 33.384 3.01081C32.2923 3.14871 31.0684 4.93566 30.4881 6.06184C30.0399 4.53346 28.5977 2.59137 27.5692 2.01104C27.0693 3.18893 27.0981 5.46428 27.7129 7.00416C28.3392 8.57852 28.7816 10.2793 28.2645 11.7962C27.2187 14.8587 24.7308 22.2363 24.7308 22.2363C24.7308 22.2363 22.2141 14.8932 21.1799 11.8134C20.6627 10.2793 21.0879 8.61299 21.697 7.07311C22.3061 5.52174 22.3233 3.25214 21.8292 2.06275C20.7777 2.66606 19.3182 4.62539 18.8643 6.17676C18.2897 5.06782 17.0314 3.15446 16.0374 3.01656C14.9571 3.65434 14.8192 6.92372 15.3249 8.83133C13.8769 7.41211 11.1074 5.88947 10.0732 6.48704C9.64226 7.50405 10.5788 9.45763 11.2568 10.5264C9.71121 10.1529 7.3152 10.4344 6.29819 11.0377C7.06238 12.0662 9.03895 13.1752 10.6765 13.4108C12.3485 13.6578 14.0378 14.1232 15.0893 15.3299C17.2153 17.7718 22.3405 23.6211 22.3405 23.6211C22.3405 23.6211 14.7445 22.1329 11.5671 21.4951C9.98701 21.1791 8.76314 19.9725 7.73464 18.6739C6.70614 17.3754 4.74681 16.2262 3.47699 16.0596Z\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M61.62 13.9548C61.4301 13.52 61.2528 13.1141 60.9869 12.7842C60.5617 12.2556 59.8664 12.1694 59.8664 12.1694C60.6306 12.0775 61.2282 11.7442 61.6764 11.296C62.136 10.8306 62.3831 10.1698 62.3831 9.38841C62.3831 8.53803 62.0786 7.78532 61.5097 7.21074C60.6823 6.3776 59.6596 6.31439 58.2001 6.31439H55.3272V17.3349H57.0165V12.698H57.6026C58.8552 12.698 59.2861 12.7727 60.0101 14.3988L61.3259 17.3349H63.1301L61.7166 14.1804V14.1747C61.6838 14.1009 61.6516 14.0273 61.62 13.9548ZM57.8784 11.4052H57.028V7.63593H58.4644C59.1769 7.63593 59.763 7.67041 60.2284 8.14156C60.4525 8.36565 60.6823 8.85405 60.6823 9.43437C60.6823 9.9515 60.4812 10.4571 60.1422 10.7961C59.5849 11.3592 58.8207 11.4052 57.8784 11.4052Z\"><path fill=\"${this.colors.color}\" d=\"M102.374 12.911V17.3238H104.006V12.7329C104.006 11.5722 104.006 10.5724 103.19 9.75651C102.863 9.42326 102.248 9.02679 101.208 9.02679C99.9551 9.02679 98.9381 9.76801 98.8232 9.85419L98.6394 9.99209V9.26812H97.2431V17.3295H98.8749V11.0666L98.9209 11.0321C99.0128 10.9689 99.8402 10.4 100.834 10.4C101.369 10.4 101.759 10.6012 101.949 10.7908C102.357 11.1987 102.374 11.7963 102.374 12.911Z\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M68.1921 9.03229C65.957 9.03229 64.3941 10.8077 64.3941 13.3531C64.3941 15.8985 65.934 17.5361 68.3128 17.5361C69.709 17.5361 70.749 17.0075 71.2259 16.7087L70.6858 15.6802C70.3468 15.8583 69.5194 16.2663 68.4679 16.2663C66.7729 16.2663 65.9972 15.0194 65.9972 13.8588V13.7439H71.6052C71.6052 13.7094 71.6052 13.6691 71.6109 13.6289C71.6224 13.5025 71.6339 13.3531 71.6339 13.198C71.6339 10.5894 70.3468 9.03229 68.1921 9.03229ZM70.0998 12.5832H65.98L65.9972 12.4568C66.1639 11.1065 67.0372 10.2332 68.2266 10.2332C69.6114 10.2332 70.0998 11.4398 70.0998 12.4683V12.5832Z\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M77.6211 9.03229C78.6266 9.03229 79.6838 9.2966 80.7583 9.81947H80.7641V17.289C80.7641 18.5531 80.7066 19.3748 79.9481 20.1505C79.2759 20.8227 78.3451 21.1502 77.0982 21.1502C75.2366 21.1502 74.0299 20.3516 73.7197 20.0758L74.3862 19.03C75.2136 19.5529 76.0582 19.9264 76.8914 19.9264C77.6039 19.9264 78.1382 19.6563 78.5404 19.3173C79.092 18.8404 79.138 18.1337 79.138 17.3293V16.6915L78.9714 16.7719L78.9024 16.8121L78.8873 16.8207C78.649 16.9554 77.9776 17.335 76.9431 17.335C74.5069 17.335 73.3979 15.278 73.3979 13.3704C73.3979 10.8537 75.1734 9.03229 77.6211 9.03229ZM79.0978 15.4619L79.1437 15.4274H79.138V10.6756L79.069 10.6469C78.4715 10.3826 77.9314 10.3308 77.5866 10.3308C76.0697 10.3308 75.0527 11.5202 75.0527 13.2842C75.0527 14.9103 75.9893 16.0479 77.3338 16.0479C78.3048 16.0479 79.0978 15.4619 79.0978 15.4619Z\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M87.1821 13.3187C87.1821 10.756 88.8024 9.03229 91.2157 9.03229C93.537 9.03229 95.0998 10.6871 95.0998 13.2497C95.0998 15.8124 93.3876 17.5361 91.0663 17.5361C88.7449 17.5361 87.1821 15.8813 87.1821 13.3187ZM88.8311 13.2497C88.8311 15.0022 89.7964 16.2203 91.1812 16.2203C92.5774 16.2203 93.445 15.0711 93.445 13.3187C93.445 11.5662 92.497 10.3481 91.1122 10.3481C89.7275 10.3481 88.8311 11.4972 88.8311 13.2497Z\"><path fill=\"${this.colors.color}\" d=\"M83.3497 17.3294H84.9873V9.6817H83.3497V17.3294Z\"><path fill=\"${this.colors.color}\" d=\"M84.1773 8.27416C83.6256 8.27416 83.1888 7.84887 83.1888 7.3029C83.1888 6.75692 83.6313 6.31439 84.1773 6.31439C84.7233 6.31439 85.1486 6.75117 85.1486 7.3029C85.1486 7.85462 84.7233 8.27416 84.1773 8.27416Z\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M126.983 29.7345C128.69 29.7345 130.483 30.1884 132.316 31.079L132.356 31.0963V43.4038C132.356 45.5527 132.264 46.9547 130.96 48.2878C129.81 49.4369 128.213 50 126.093 50C122.841 50 120.761 48.5636 120.295 48.1269L121.49 46.2537C122.892 47.1558 124.329 47.6155 125.748 47.6155C126.932 47.6155 127.828 47.3455 128.495 46.7824C129.414 45.9837 129.489 44.8058 129.489 43.4613V42.8522L129.299 42.9499C129.288 42.9553 129.274 42.9632 129.256 42.973L129.184 43.0131L129.177 43.0171C128.791 43.2396 127.628 43.9094 125.834 43.9094C121.669 43.9094 119.772 40.4045 119.772 37.1409C119.772 32.8487 122.806 29.7345 126.983 29.7345ZM129.437 40.6401L129.489 40.5998L129.494 40.6113V32.6361L129.414 32.6017C128.598 32.2454 127.771 32.073 126.926 32.073C124.398 32.073 122.697 34.0554 122.697 37.003C122.697 39.7207 124.26 41.6169 126.495 41.6169C128.104 41.6169 129.437 40.6401 129.437 40.6401Z\"><path fill=\"${this.colors.color}\" d=\"M156.844 44.2831C155.454 44.2831 154.288 43.8751 153.552 43.1396C152.529 42.1168 152.529 40.8894 152.529 39.2032V32.4639H150.093V30.1368H152.529V26.109H155.425V30.1368H159.551V32.4639H155.425V39.2095C155.425 40.3299 155.425 41.8698 157.448 41.8698C158.315 41.8698 158.942 41.6457 159.235 41.5308L159.953 43.5189C159.482 43.7889 158.402 44.2831 156.844 44.2831Z\"><path fill=\"${this.colors.color}\" d=\"M87.5499 43.1396C88.2853 43.875 89.4517 44.283 90.8422 44.283V44.2773C92.3993 44.2773 93.4796 43.7831 93.9507 43.5131L93.2325 41.525C92.9394 41.6399 92.3131 41.864 91.4455 41.864C89.423 41.864 89.423 40.3241 89.423 39.2037V32.4581H93.5485V30.131H89.423V26.1032H86.5271V30.131H84.0909V32.4581H86.5271V39.1975C86.5271 40.8894 86.5271 42.1168 87.5499 43.1396Z\"><path fill=\"${this.colors.color}\" d=\"M77.3511 44.283C74.6448 44.283 72.8233 43.1568 72.4154 42.881L73.4152 41.0251C73.4152 41.0251 73.4267 41.0308 73.4324 41.0366C73.8978 41.2951 75.3113 42.0766 77.035 42.0766C78.5922 42.0766 79.6034 41.3469 79.6034 40.2207C79.6034 39.1252 78.6628 38.7311 77.099 38.0758L76.9661 38.02L76.5179 37.8304L76.5073 37.8259C74.9799 37.1713 72.898 36.2791 72.898 33.8083C72.898 31.3319 74.9321 29.7403 77.9544 29.7403C80.3446 29.7403 81.8213 30.5792 82.3154 30.9182L81.3444 32.7109C80.9422 32.4925 79.5689 31.8088 78.1555 31.8088C76.4087 31.8088 75.7882 32.7281 75.7882 33.521C75.7882 34.5986 76.8916 35.0643 78.2886 35.6541L78.2991 35.6585L78.5002 35.7447C80.3963 36.5261 82.551 37.4167 82.551 40.0253C82.551 42.6339 80.5113 44.2945 77.3511 44.2945V44.283Z\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M206.253 30.3262V25.2526H209.149V43.9151H206.655V42.7831L206.385 42.9785C205.006 44.0357 203.598 44.2598 202.656 44.2598C198.996 44.2598 196.537 41.4616 196.537 37.204C196.537 32.9463 199.404 29.7401 203.202 29.7401C204.305 29.7401 205.311 29.9872 206.04 30.4296L206.236 30.5503L206.253 30.3262ZM206.126 40.9502L206.253 40.864V32.9405L206.195 32.9003C205.437 32.389 204.581 32.1304 203.661 32.1304C201.11 32.1304 199.461 34.0955 199.461 37.1465C199.461 39.9447 201.047 41.904 203.317 41.904C204.754 41.904 205.78 41.1908 206.123 40.9527L206.126 40.9502Z\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M101.946 29.7345C98.1266 29.736 95.4561 32.7694 95.4561 37.1121C95.4561 41.456 98.0819 44.2542 102.15 44.2542C104.632 44.2542 106.448 43.2774 107.166 42.8177L106.189 40.9676C105.655 41.2491 104.23 41.9846 102.403 41.9846C99.5758 41.9846 98.2888 39.9046 98.2888 37.974V37.8419H107.781C107.781 37.7963 107.785 37.7465 107.79 37.6924L107.793 37.6512C107.795 37.6292 107.797 37.6066 107.798 37.5833C107.815 37.3707 107.833 37.1121 107.833 36.8478C107.833 32.396 105.633 29.7359 101.946 29.7345ZM105.115 35.7446H98.2715L98.2888 35.601C98.5646 33.3486 100.018 31.8949 102.001 31.8949C104.299 31.8949 105.115 33.9002 105.115 35.6182V35.7446Z\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M173.944 29.7058C175.915 29.7058 177.19 30.1425 178.207 31.1653L178.219 31.1595C179.27 32.2167 179.27 33.5555 179.27 35.4114V43.9095H176.777V42.7488L176.57 42.8982C176.145 43.2028 174.599 44.1968 172.519 44.1968C169.905 44.1968 168.147 42.4673 168.147 39.8989C168.147 36.7215 170.755 35.1126 175.898 35.1126H176.541V34.4346C176.541 33.5613 176.461 33.0097 176.041 32.5902C175.57 32.1133 174.886 31.918 173.685 31.918C172.036 31.918 170.525 32.6534 169.956 32.9637L168.98 31.1365C169.359 30.8492 171.077 29.7058 173.944 29.7058ZM176.466 41.0538L176.535 41.0193L176.53 41.0136V37.0949H175.742C173.507 37.0949 172.054 37.4684 171.295 38.2269C170.899 38.6233 170.715 39.1117 170.715 39.7553C170.715 41.1285 171.738 42.0134 173.312 42.0134C174.789 42.0134 175.926 41.3641 176.352 41.117L176.414 41.0826L176.466 41.0538Z\"><path fill=\"${this.colors.color}\" d=\"M191.118 43.9094V36.3594C191.118 34.492 191.09 33.4865 190.423 32.8142C190.113 32.5039 189.469 32.1707 188.584 32.1707C186.956 32.1707 185.571 33.1026 185.4 33.2175L185.384 33.2279L185.332 33.2681V43.9036H182.436V30.1309H184.93V31.2973L185.137 31.1422C185.327 30.9985 187.068 29.7287 189.217 29.7287C190.998 29.7287 192.049 30.4125 192.624 30.987C194.02 32.389 194.02 34.0955 194.02 36.0663V43.9036H191.124L191.118 43.9094Z\"><path fill=\"${this.colors.color}\" d=\"M162.757 43.9096H165.647V25.2414H162.757V43.9096Z\"><path fill=\"${this.colors.color}\" d=\"M110.591 43.9095V30.1367H113.084V32.2799L113.326 31.8547C113.326 31.8547 114.871 29.7345 117.767 29.7345C118.537 29.7345 118.968 29.9069 119.158 29.9931L118.503 32.2167C118.29 32.188 117.917 32.1477 117.647 32.1477C116.446 32.1477 114.751 32.5327 113.498 34.3599L113.475 34.3944V43.9095H110.591Z\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M135.045 37.0547C135.045 32.6764 137.82 29.7345 141.94 29.7345C145.91 29.7345 148.576 32.5672 148.576 36.9398C148.576 41.3123 145.652 44.2542 141.681 44.2542C137.711 44.2542 135.045 41.433 135.045 37.0547ZM137.969 36.9398C137.969 39.8586 139.578 41.8984 141.882 41.8984C144.209 41.8984 145.652 39.9736 145.652 37.0547C145.652 34.1358 144.071 32.096 141.767 32.096C139.463 32.096 137.969 34.0209 137.969 36.9398Z\"><path fill=\"${this.colors.color}\" d=\"M144.422 28.5459C143.514 28.5459 142.773 27.8046 142.773 26.8908C142.773 25.977 143.514 25.2356 144.422 25.2356C145.33 25.2356 146.043 25.977 146.043 26.8908C146.043 27.8046 145.319 28.5459 144.422 28.5459Z\"><path fill=\"${this.colors.color}\" d=\"M137.584 26.8908C137.584 27.8046 138.326 28.5459 139.234 28.5459C140.13 28.5459 140.855 27.8046 140.855 26.8908C140.855 25.977 140.142 25.2356 139.234 25.2356C138.326 25.2356 137.584 25.977 137.584 26.8908Z\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M62.1878 25.1608C57.0567 25.1608 53.4771 29.0852 53.4771 34.7104C53.4771 40.3355 57.0338 44.3117 62.1361 44.3117C67.2383 44.3117 70.795 40.416 70.795 34.6242C70.795 28.8324 67.2613 25.1608 62.1935 25.1608H62.1878ZM62.185 41.8352C58.8539 41.8336 56.5281 38.9382 56.5281 34.7966C56.5281 30.6538 58.7345 27.5856 62.0154 27.5856C65.2963 27.5856 67.7267 30.4585 67.7267 34.5725C67.7267 38.0823 66.268 41.8334 62.185 41.8352Z\"><path fill=\"${this.colors.color}\" d=\"M63.0898 22.2539C63.0898 23.1677 63.8312 23.9091 64.7393 23.9091C65.6358 23.9091 66.3599 23.1677 66.3599 22.2539C66.3599 21.3401 65.6473 20.5988 64.7393 20.5988C63.8312 20.5988 63.0898 21.3401 63.0898 22.2539Z\"><path fill=\"${this.colors.color}\" d=\"M59.5508 23.9091C58.6428 23.9091 57.9014 23.1677 57.9014 22.2539C57.9014 21.3401 58.6428 20.5988 59.5508 20.5988C60.4589 20.5988 61.1715 21.3401 61.1715 22.2539C61.1715 23.1677 60.4474 23.9091 59.5508 23.9091Z\">`}}export{o as IDSIconOstergotland};\n", "import{IDSIconOstergotland as o}from\"./icon-ostergotland-element.js\";import{registerComponent as t}from\"../../../utilities/utils.js\";t(\"ids-icon-ostergotland\",o);\n", "import{svg as l}from\"lit\";import{IDSIconBase as e}from\"../icon-base-element.js\";class o extends e{constructor(){super(),this.vbHeight=28,this.vbWidth=30}renderIcon(){return l`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13.0737 7.92867C13.5979 7.70041 14.1494 7.52794 14.6985 7.41067L14.6731 0C12.7746 0.0267826 11.0031 0.580493 9.49561 1.52438L12.775 8.06806C12.8732 8.02098 12.9704 7.97391 13.0737 7.92867\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.0274 8.47744L7.80698 2.85086C6.4668 4.15388 5.4823 5.82556 5.01672 7.70541L10.6433 9.87825C10.9199 9.33611 11.3957 8.87553 12.0274 8.47744\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.1324 8.57166C20.4077 11.2075 17.4742 11.1432 18.6861 13.2004C19.2491 14.156 21.0231 15.4026 22.7612 16.4642C24.111 14.7331 24.9186 12.5517 24.9186 10.179C24.9186 8.10682 24.3029 6.1805 23.2481 4.57233L18.855 8.16343C18.9623 8.2878 19.0593 8.4205 19.1324 8.57166\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M18.2101 7.65406L21.8599 2.8829C20.5229 1.57116 18.8273 0.629304 16.9344 0.22229L15.5372 7.27707C16.5551 7.17197 17.5115 7.28336 18.2101 7.65406\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14.0409 19.4058C13.435 19.4058 12.9437 18.911 12.9437 18.3004C12.9437 17.6899 13.435 17.1948 14.0409 17.1948C14.6464 17.1948 15.1375 17.6899 15.1375 18.3004C15.1375 18.911 14.6464 19.4058 14.0409 19.4058M16.7092 16.029C14.6683 14.1648 12.1808 15.5148 10.9052 13.0074C10.4521 12.1171 10.3012 11.3518 10.3929 10.6861L4.72004 9.9826C4.71883 10.0481 4.71521 10.1131 4.71521 10.179C4.71521 15.8023 9.23816 20.3615 14.8169 20.3615C16.363 20.3615 17.8275 20.0101 19.1373 19.3843C18.4664 18.1724 17.6128 16.8548 16.7092 16.029\"></path><mask id=\"mask0_6775_6825\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"21\" width=\"5\" height=\"7\"><path fill=\"white\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.0159912 21.0752H4.93306V27.6313H0.0159912V21.0752Z\"></path></mask><g mask=\"url(#mask0_6775_6825)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.64119 22.817C3.70862 22.4052 3.15267 22.2459 2.60657 22.2459C2.03189 22.2459 1.66434 22.4518 1.66434 22.7702C1.66434 23.735 4.93306 23.4635 4.93306 25.6925C4.93306 26.9195 3.89703 27.6314 2.46507 27.6314C1.34429 27.6314 0.788334 27.3407 0.148036 27.013V25.6363C1.07094 26.2452 1.63636 26.4605 2.34248 26.4605C2.955 26.4605 3.28491 26.2452 3.28491 25.8703C3.28491 24.8215 0.0159912 25.2054 0.0159912 22.9108C0.0159912 21.8056 0.976941 21.0752 2.46507 21.0752C3.18125 21.0752 3.83121 21.2251 4.64119 21.5715V22.817Z\"></path></g><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.99331 24.1564L11.8289 27.547H9.82222L7.27854 24.5498V27.547H5.67749V21.1594H7.27854V24.0535H7.29766L9.32282 21.1594H11.0845L8.99331 24.1564Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M23.7779 27.5471H22.4311L19.6016 23.4541V27.5471H18.0001V21.1595H19.4697L22.1767 25.0651V21.1595H23.7779V27.5471Z\"></path><mask id=\"mask1_6775_6825\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"24\" y=\"21\" width=\"6\" height=\"7\"><path fill=\"white\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M24.8203 21.1595H29.6521V27.5471H24.8203V21.1595Z\"></path></mask><g mask=\"url(#mask1_6775_6825)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M29.6522 27.5471H24.8203V21.1595H29.5862V22.3304H26.4216V23.6695H29.4449V24.8403H26.4216V26.3762H29.6522V27.5471Z\"></path></g><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.309581 19.6352H0.473229C0.558977 19.6352 0.643116 19.5918 0.643116 19.4656C0.643116 19.3548 0.582729 19.2982 0.466184 19.2982H0.309581V19.6352ZM0.555555 19.0263C0.810185 19.0263 0.961352 19.2306 0.961352 19.4526C0.961352 19.6155 0.8907 19.7374 0.748792 19.8158C0.876006 19.8918 0.91405 20.0747 1.08917 20.5097H0.748792C0.615539 20.1921 0.566224 19.9073 0.398752 19.9073H0.309581V20.5097H0V19.0263H0.555555Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.17151 20.5097H1.25525V19.0261H2.15903V19.2982H1.56483V19.6092H2.13166V19.8809H1.56483V20.2378H2.17151V20.5097Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.55738 19.4526C3.39917 19.3611 3.24619 19.3154 3.09321 19.3154C2.75625 19.3154 2.6379 19.5633 2.6379 19.7831C2.6379 20.0462 2.8108 20.2201 3.06765 20.2201C3.14414 20.2201 3.18258 20.2116 3.27336 20.168V19.9941H3.09321V19.7224H3.58315V20.3291C3.49035 20.4443 3.26068 20.5291 3.0604 20.5291C2.62703 20.5291 2.31946 20.2138 2.31946 19.7701C2.31946 19.3176 2.62501 19.0066 3.06765 19.0066C3.25323 19.0066 3.43379 19.0567 3.55738 19.1283V19.4526Z\"></path><mask id=\"mask2_6775_6825\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"30\" height=\"28\"><path fill=\"white\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 27.6313H29.6522V0H0V27.6313Z\"></path></mask><g mask=\"url(#mask2_6775_6825)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.87585 20.5096H4.18544V19.026H3.87585V20.5096Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.12199 19.3155C4.88507 19.3155 4.72867 19.496 4.72867 19.7677C4.72867 20.0396 4.88507 20.2202 5.12199 20.2202C5.35689 20.2202 5.5135 20.0396 5.5135 19.7677C5.5135 19.496 5.35689 19.3155 5.12199 19.3155M5.12199 20.5292C4.66668 20.5292 4.41003 20.1463 4.41003 19.7677C4.41003 19.409 4.6542 19.0067 5.12199 19.0067C5.58999 19.0067 5.83214 19.4112 5.83214 19.7677C5.83214 20.1486 5.56825 20.5292 5.12199 20.5292\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.2885 20.5097H7.02804L6.34124 19.5589V20.5097H6.03186V19.0261H6.31588L6.97892 19.9333V19.0261H7.2885V20.5097Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14.0412 22.6848L13.0989 25.1672H15.0774L14.0412 22.6848ZM17.8008 27.5468H16.0764L15.5488 26.282H12.675L12.1941 27.5468H10.4983L13.0893 21.1576H14.9454L17.8008 27.5468Z\"></path></g>`}}export{o as IDSIconSkane};\n", "import{IDSIconSkane as i}from\"./icon-skane-element.js\";import{registerComponent as s}from\"../../../utilities/utils.js\";s(\"ids-icon-skane\",i);\n", "import{svg as C}from\"lit\";import{IDSIconBase as l}from\"../icon-base-element.js\";class L extends l{constructor(){super(),this.vbHeight=34,this.vbWidth=41}renderIcon(){return C`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.05045 24.3848H7.04954C7.0494 24.3848 7.04927 24.3846 7.04905 24.3845H7.04888C7.04237 24.3808 7.02806 24.3642 7.02806 24.3571C7.02806 23.5256 7.02806 22.387 7.05384 22.1378C7.05384 22.1032 7.07144 22.0547 7.08616 22.0497C7.15187 22.0252 7.25925 22.0166 7.33798 22.0166C8.19531 22.0166 8.6674 22.4644 8.6674 23.2775C8.6674 24.0102 8.29254 24.2646 8.06902 24.3511C7.87241 24.4299 7.403 24.4236 7.04916 24.3845L7.05045 24.3848ZM10.6725 27.0897L10.6784 27.0892L10.6826 27.085C10.7051 27.0624 10.7218 26.9612 10.7119 26.9318L10.7087 26.9219L10.6984 26.9208C10.3166 26.8877 10.1892 26.8606 9.79985 26.4712C9.38005 26.0601 8.63715 24.9301 8.36057 24.475C8.3585 24.4718 8.35784 24.4586 8.36697 24.4476C9.23748 24.0858 9.36753 23.4411 9.36753 23.089C9.36753 22.46 8.98057 21.7877 7.89474 21.7877C7.70721 21.7877 7.52058 21.7914 7.32298 21.7953C7.09074 21.8 6.85053 21.8047 6.56665 21.8047C6.44231 21.8047 6.26517 21.7979 6.09393 21.7911C5.93416 21.7852 5.78321 21.7791 5.68403 21.7791L5.677 21.781C5.6693 21.7846 5.65979 21.7937 5.65381 21.8308C5.65367 21.8315 5.64104 21.9116 5.66423 21.9348L5.66853 21.9389L5.6744 21.9394C5.79951 21.9473 5.95305 21.9705 6.06696 21.9991C6.24796 22.0294 6.31864 22.1297 6.32801 22.3698C6.34508 22.7123 6.34508 23.8694 6.34508 24.4257C6.34508 24.8944 6.33648 26.1573 6.32801 26.3961C6.31056 26.7175 6.25828 26.8132 6.07361 26.8616C6.00478 26.882 5.90248 26.8971 5.77279 26.9161L5.68028 26.9299C5.65237 26.937 5.64233 26.9755 5.64233 27.0095C5.64233 27.0436 5.65237 27.0822 5.68403 27.0897C5.72194 27.0897 5.7772 27.0871 5.85375 27.0837C6.01482 27.0762 6.28436 27.0639 6.67794 27.0639C6.9449 27.0639 7.22536 27.0743 7.43013 27.0819C7.54678 27.0863 7.63893 27.0897 7.68909 27.0897H7.6956L7.70029 27.085C7.72036 27.0649 7.72924 27.0235 7.7291 26.9912C7.7291 26.974 7.72637 26.9427 7.70892 26.9255L7.70511 26.9219L7.61833 26.9088C7.48589 26.8895 7.37148 26.8726 7.26485 26.8442C7.11222 26.8043 7.05371 26.7553 7.04513 26.3961C7.02806 26.0452 7.02806 25.1811 7.02806 24.7171C7.02806 24.7051 7.04055 24.6832 7.04654 24.6817C7.08602 24.6817 7.1487 24.6796 7.22117 24.677C7.34917 24.6728 7.50858 24.6671 7.5864 24.6731C7.65743 24.6731 7.72742 24.7234 7.77915 24.812C7.89918 24.9825 8.05311 25.227 8.21616 25.4856C8.48959 25.9193 8.79954 26.4109 9.00536 26.6382C9.12564 26.7827 9.26379 26.8937 9.40544 26.9599C9.63509 27.0574 10.0878 27.0975 10.4318 27.0975C10.5214 27.0975 10.6036 27.0947 10.6725 27.0897Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.08513 24.4207C7.08523 24.4208 7.08543 24.4207 7.08553 24.4208L7.08503 24.4207H7.08513Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14.8769 26.0872L14.8762 26.0846C14.8727 26.07 14.8603 26.0567 14.8393 26.0452C14.8071 26.0272 14.7525 26.0144 14.7274 26.0218L14.7203 26.0241L14.7176 26.0312C14.6163 26.2892 14.4959 26.5009 14.37 26.6427L14.3636 26.6492C14.2731 26.7396 14.1951 26.8178 13.8583 26.8178C13.4751 26.8178 13.1892 26.8108 13.0388 26.7754C12.9989 26.7675 12.9138 26.6914 12.9058 26.5079C12.9001 26.2668 12.8972 25.8521 12.8971 25.3094C12.898 25.3026 12.907 25.281 12.9125 25.2729C13.1679 25.2729 13.636 25.2729 13.8225 25.2898C13.9693 25.3054 14.012 25.3915 14.0487 25.4929C14.0688 25.5625 14.0849 25.6435 14.0997 25.7478L14.1003 25.753L14.1041 25.7567C14.1263 25.7788 14.1737 25.7806 14.1884 25.7806H14.1888C14.2029 25.7806 14.2503 25.7788 14.2722 25.7567L14.2769 25.752V25.7455C14.2769 25.6688 14.2722 25.539 14.2678 25.4136C14.2638 25.3005 14.26 25.1939 14.26 25.1371C14.26 24.9749 14.2853 24.6176 14.294 24.5302L14.2944 24.5258L14.2925 24.5216C14.277 24.4908 14.1519 24.4971 14.1341 24.506L14.1264 24.5096L14.1254 24.5183C14.1162 24.5998 14.0983 24.684 14.0749 24.7547L14.0692 24.7706C14.0284 24.8855 13.9931 24.9851 13.8234 24.9927C13.6436 25.0013 13.2056 25.0013 12.9157 25.0013C12.9079 25.0013 12.8972 24.9919 12.8971 24.9731C12.8891 24.842 12.8967 24.0949 12.9058 23.6546C12.9058 23.6306 12.9306 23.565 12.96 23.5587C13.0496 23.5501 13.7241 23.542 13.8743 23.5589C14.0963 23.5754 14.1354 23.6453 14.1777 23.8147C14.2043 23.8809 14.2292 24.0086 14.2539 24.2052L14.2547 24.2104L14.2585 24.2143C14.2819 24.2372 14.3863 24.2372 14.4094 24.2143L14.4138 24.2099L14.4139 24.2036C14.4226 23.9268 14.4835 23.5082 14.5418 23.3252L14.5426 23.3205C14.5426 23.3163 14.5426 23.3035 14.51 23.2816L14.5043 23.2777L14.4977 23.2793C14.3847 23.3035 14.1959 23.3129 13.8242 23.3129H12.5385C12.3376 23.3129 12.1344 23.3038 11.9711 23.2962C11.8654 23.2915 11.7741 23.2874 11.7159 23.2874L11.7108 23.2881C11.6961 23.2931 11.6867 23.3106 11.6828 23.3398C11.6787 23.369 11.6795 23.4349 11.707 23.4534L11.7147 23.4563C11.8241 23.4646 11.97 23.4901 12.0534 23.5152C12.1901 23.5634 12.2233 23.6158 12.2398 23.8087C12.2398 23.8426 12.2407 23.9132 12.2418 24.0112C12.2442 24.2325 12.2484 24.6032 12.2484 25.0086C12.2484 25.7027 12.2484 26.3022 12.2399 26.5249C12.2314 26.7748 12.18 26.8134 12.0456 26.853C11.9279 26.889 11.7259 26.913 11.578 26.9208L11.5717 26.9213L11.5674 26.9255C11.5447 26.9487 11.5447 27.0618 11.5674 27.085L11.5721 27.0897H11.5787C11.6988 27.0897 11.8299 27.0842 11.9687 27.0788C12.1385 27.0717 12.3311 27.0639 12.5472 27.0639C13.1217 27.0639 13.5522 27.0707 13.8665 27.0756C14.0573 27.0788 14.2078 27.0811 14.3296 27.0811C14.4946 27.0811 14.5544 27.0642 14.5749 27.0131C14.6945 26.7993 14.8593 26.2384 14.8766 26.0901L14.8769 26.0872Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.199 25.4639C20.143 25.4639 20.0718 25.4668 19.9895 25.4702C19.8695 25.4752 19.7202 25.4811 19.5476 25.4811C19.3965 25.4811 19.2195 25.4765 19.0482 25.4718C18.9024 25.4679 18.7649 25.4639 18.665 25.4639L18.6579 25.4658C18.6488 25.4702 18.6423 25.4806 18.6376 25.4981C18.6295 25.5286 18.6269 25.5839 18.6432 25.6086L18.647 25.6144L18.9872 25.6667C19.133 25.6991 19.1979 25.7366 19.2062 25.9605C19.2147 26.1545 19.2066 26.4939 19.189 26.6862C19.181 26.7587 19.1414 26.8319 19.0846 26.8804C19.0058 26.9333 18.8747 26.9636 18.7249 26.9636C17.7262 26.9636 17.1299 26.2744 17.1299 25.1199C17.1299 24.03 17.6425 23.4049 18.5364 23.4049C18.8839 23.4049 19.1391 23.4573 19.317 23.5655C19.5392 23.6938 19.6024 23.8759 19.6691 24.3253L19.6701 24.3324L19.676 24.3363C19.7044 24.3548 19.7861 24.3428 19.8123 24.3285C19.8234 24.3225 19.8291 24.3149 19.829 24.3063C19.8375 24.0068 19.8883 23.5491 19.9403 23.3067L19.9447 23.2855L19.9233 23.2874C19.8234 23.2973 19.6524 23.2754 19.4977 23.2529L19.4263 23.2462C19.2422 23.2285 18.9642 23.2016 18.7679 23.2016C18.2217 23.2016 17.8231 23.2735 17.4759 23.4344C16.7947 23.7363 16.4039 24.3692 16.4039 25.1715C16.4039 26.4639 17.1674 27.1755 18.5537 27.1755C19.0667 27.1755 19.6494 27.0399 19.8982 26.9821L19.9574 26.968C19.9777 26.9581 19.991 26.9328 19.9929 26.901C19.9944 26.8765 19.9888 26.8432 19.9651 26.8278C19.8675 26.7871 19.8625 26.7751 19.8462 26.6779C19.8303 26.5431 19.8363 26.2165 19.8462 25.9775C19.8548 25.7491 19.87 25.7139 19.9791 25.667L20.202 25.624L20.2078 25.6214C20.2321 25.6052 20.2317 25.5549 20.2304 25.5341C20.2288 25.5078 20.2232 25.4744 20.2062 25.4658L20.199 25.4639Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21.9229 27.0897H21.9294C22.0567 27.0897 22.1774 27.084 22.3052 27.0783C22.4573 27.0712 22.6144 27.0639 22.812 27.0639C23.0243 27.0639 23.2672 27.0738 23.4444 27.0814C23.5568 27.0861 23.6455 27.0897 23.6947 27.0897H23.7044L23.7089 27.0809C23.7188 27.0611 23.7304 26.9583 23.7057 26.9341L23.702 26.9302L23.6966 26.9297C23.5716 26.914 23.41 26.888 23.3314 26.8619C23.1993 26.815 23.171 26.7428 23.1534 26.5504C23.1451 26.3442 23.1363 25.8169 23.1363 25.1457C23.1363 24.6066 23.1363 24.0493 23.1534 23.8095C23.1617 23.6098 23.2011 23.5392 23.3218 23.5069C23.3802 23.4902 23.5345 23.4646 23.6275 23.4563L23.6348 23.4537C23.6625 23.4352 23.6634 23.3692 23.6595 23.34C23.6556 23.3106 23.646 23.2931 23.631 23.2882L23.6261 23.2874C23.5561 23.2874 23.4446 23.292 23.3155 23.2976C23.1414 23.3048 22.944 23.3129 22.7776 23.3129C22.5952 23.3129 22.3871 23.3041 22.22 23.2967C22.1052 23.2918 22.0061 23.2874 21.9464 23.2874H21.9397L21.935 23.2923C21.9203 23.3074 21.9123 23.4284 21.935 23.4516L21.939 23.4555L21.9447 23.456C22.0934 23.4727 22.2332 23.4896 22.3109 23.5157C22.4249 23.5459 22.4706 23.6187 22.479 23.7842C22.4917 23.9925 22.4902 24.2852 22.4887 24.6238C22.4881 24.744 22.4875 24.8699 22.4875 25C22.4875 25.5593 22.4875 26.4047 22.4707 26.5924C22.454 26.7662 22.4158 26.8207 22.2758 26.8703C22.2202 26.8888 22.1151 26.9033 22.0225 26.9161C21.9887 26.9206 21.9561 26.9252 21.9269 26.9297L21.9207 26.932C21.9083 26.9401 21.9007 26.957 21.8982 26.9821C21.895 27.0128 21.9004 27.0673 21.9182 27.085L21.9229 27.0897Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M27.5335 26.9294C26.5495 26.9294 26.1014 25.9337 26.1014 25.0086C26.1014 24.6363 26.183 23.4219 27.2337 23.4219C28.1995 23.4219 28.6317 24.3694 28.6317 25.3086C28.6317 25.9138 28.4891 26.9294 27.5335 26.9294ZM27.3195 27.1755C28.0163 27.1755 28.6175 26.8825 28.9689 26.3721C29.2318 26.0241 29.3491 25.6381 29.3491 25.1199C29.3491 24.1608 28.7506 23.193 27.4136 23.193C26.7377 23.193 26.0701 23.5118 25.7126 24.005C25.4865 24.3183 25.3668 24.7187 25.3668 25.1629C25.3668 25.7261 25.559 26.2548 25.894 26.6135C26.2472 26.9758 26.7536 27.1755 27.3195 27.1755Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M31.4918 27.0639C31.6814 27.0639 31.8898 27.0736 32.0571 27.0811C32.1606 27.0858 32.2424 27.0897 32.2889 27.0897H32.2955L32.3002 27.085C32.3201 27.0647 32.3252 26.9881 32.3169 26.9534C32.3128 26.9362 32.305 26.9255 32.294 26.9216L32.29 26.9208C32.1618 26.9117 31.9898 26.8856 31.9097 26.8538C31.7914 26.7986 31.7131 26.7621 31.6964 26.4818C31.6875 26.1307 31.6796 24.6467 31.6874 24.029C31.9804 24.3861 33.8513 26.7209 34.1183 27.1082L34.1233 27.1158L34.1323 27.1153C34.2372 27.1077 34.4502 27.0975 34.5843 27.1069L34.6021 27.108L34.6012 27.0902C34.5929 26.9078 34.5843 26.5535 34.5843 26.2767C34.5843 25.3579 34.5956 24.225 34.6269 23.8014C34.6363 23.6434 34.6682 23.5446 34.8052 23.5066C34.8592 23.4863 34.9517 23.4714 35.0411 23.4573C35.0621 23.4539 35.0826 23.4508 35.1023 23.4474L35.1102 23.4461L35.1139 23.4388C35.1246 23.4174 35.1246 23.3176 35.1139 23.2962L35.1094 23.2874H35.0997C35.0738 23.2874 35.006 23.291 34.9201 23.2954C34.7767 23.3027 34.5804 23.3129 34.4568 23.3129C34.2645 23.3129 34.0978 23.304 33.9639 23.2967C33.8717 23.2918 33.7919 23.2874 33.7285 23.2874H33.7188L33.7144 23.2962C33.7031 23.3189 33.7042 23.4172 33.7135 23.4453L33.7168 23.4552L33.727 23.456C33.8986 23.4735 33.957 23.4816 34.0425 23.5073C34.2001 23.5373 34.2778 23.6416 34.2868 23.8355C34.3121 24.2213 34.3296 25.3995 34.3296 26.2194C34.3287 26.2204 34.3277 26.2217 34.3268 26.223C34.3263 26.2235 34.3259 26.224 34.3253 26.2248C34.049 25.9047 32.8322 24.4499 32.1898 23.6364C32.0293 23.431 31.9933 23.3606 31.9783 23.3155L31.9742 23.303L31.9611 23.3048C31.9021 23.3129 31.6964 23.3129 31.5603 23.3129C31.3931 23.3129 31.1778 23.3035 31.0047 23.2959C30.8943 23.2913 30.8071 23.2874 30.7635 23.2874H30.7569L30.7523 23.292C30.7276 23.3168 30.731 23.4278 30.7406 23.4474L30.7447 23.4555L30.7536 23.4563C31.06 23.4808 31.1741 23.5134 31.2846 23.6069C31.3683 23.6752 31.4073 23.761 31.4073 23.8773C31.4073 25.2257 31.381 26.2339 31.3561 26.498C31.3399 26.675 31.3177 26.804 31.1784 26.8531C31.0478 26.8966 30.8774 26.9138 30.8011 26.9216C30.7864 26.9265 30.777 26.944 30.7731 26.9732C30.769 27.0024 30.7698 27.0683 30.7973 27.0869L30.8014 27.0897H30.8062C30.8575 27.0897 30.9304 27.0855 31.0147 27.0806C31.1467 27.0733 31.3111 27.0639 31.4918 27.0639Z\"></path><mask id=\"mask0_6720_47083\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"28\" width=\"4\" height=\"6\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 28.4252H3.19408V33.9928H0V28.4252Z\"></path></mask><g mask=\"url(#mask0_6720_47083)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.33861 31.1359L2.33847 31.1356C2.2325 31.0663 2.1147 30.9972 1.98984 30.924C1.7878 30.8056 1.57889 30.6834 1.37947 30.5364C0.985228 30.2434 0.812774 29.9355 0.820219 29.5383C0.827912 29.0896 1.11489 28.6369 1.73855 28.6369C2.01888 28.6369 2.20774 28.6809 2.39009 28.7889C2.6097 28.9205 2.69322 29.1382 2.7339 29.685L2.73431 29.6908L2.73861 29.6949C2.75761 29.714 2.82018 29.7124 2.84235 29.7098C2.87701 29.7064 2.89929 29.6978 2.90856 29.684L2.9109 29.6806L2.91118 29.6764C2.93895 29.3206 2.98792 28.9494 3.05675 28.5725L3.05972 28.5555L3.04266 28.554C2.92927 28.5425 2.81693 28.5245 2.69805 28.5055C2.46204 28.468 2.19445 28.4252 1.84984 28.4252C0.886923 28.4252 0.214423 29.0167 0.214423 29.8636C0.214423 30.2079 0.325716 30.5092 0.554451 30.7842C0.740307 31.0077 1.00776 31.2222 1.42144 31.4795C2.18077 31.9562 2.51953 32.263 2.51953 32.8201C2.51953 33.3883 2.15912 33.7553 1.60145 33.7553C1.22985 33.7553 0.973757 33.6902 0.770281 33.5437C0.497619 33.362 0.325716 33.0594 0.177004 32.4987L0.175598 32.4929L0.170496 32.4896C0.149264 32.476 0.102579 32.4796 0.0677794 32.4888C0.0438167 32.4953 0.0129051 32.5078 0.00184753 32.5302L0 32.5341L0.00027575 32.5383C0.0156626 32.7719 0.108066 33.6 0.200195 33.729L0.204 33.733C0.383348 33.8583 0.891114 33.9928 1.36138 33.9928C2.44039 33.9928 3.1941 33.3518 3.1941 32.4343C3.1941 32.0772 3.09246 31.6434 2.33861 31.1359Z\"></path></g><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.89428 29.5771C5.90914 29.586 5.93926 29.5896 5.97521 29.5896C6.05681 29.5896 6.16876 29.5708 6.2015 29.5518C6.28659 29.5088 6.37249 29.3813 6.37249 29.2208C6.37249 29.1739 6.34497 29.0756 6.29925 29.0211C6.28047 29.0023 6.19066 28.9478 6.08234 28.9478C5.9614 28.9478 5.81387 29.0042 5.75222 29.0748C5.70906 29.1394 5.70829 29.2189 5.71507 29.2724C5.71507 29.4074 5.78611 29.5273 5.89428 29.5771Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.81927 33.704C5.83523 33.704 5.38713 32.7082 5.38713 31.7831C5.38713 31.4109 5.46873 30.1964 6.5195 30.1964C7.48526 30.1964 7.91747 31.144 7.91747 32.0831C7.91747 32.6884 7.77488 33.704 6.81927 33.704ZM6.69934 29.9676C6.02345 29.9676 5.35589 30.2864 4.99838 30.7795C4.77226 31.0929 4.65259 31.4933 4.65259 31.9374C4.65259 32.5007 4.84473 33.0294 5.17979 33.388C5.533 33.7504 6.03936 33.9501 6.60526 33.9501C7.30202 33.9501 7.90327 33.6571 8.25463 33.1467C8.51753 32.7987 8.63483 32.4126 8.63483 31.8944C8.63483 30.9354 8.03635 29.9676 6.69934 29.9676Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.15799 29.5896C7.23959 29.5896 7.35116 29.5708 7.38386 29.5518C7.47965 29.5036 7.54652 29.3675 7.54652 29.2208C7.54652 29.1809 7.53086 29.08 7.48186 29.0211C7.46308 29.0023 7.37333 28.9478 7.26501 28.9478C7.14404 28.9478 6.99651 29.0042 6.9345 29.0756C6.9045 29.1253 6.88952 29.2072 6.89774 29.2724C6.89774 29.4074 6.96874 29.5273 7.07695 29.5771C7.09178 29.586 7.12187 29.5896 7.15799 29.5896Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.2875 31.1661C12.2875 31.5673 12.1417 31.81 11.8539 31.8877C11.6973 31.9226 11.3119 31.921 11.1807 31.9129C11.1612 31.9129 11.1538 31.9098 11.1538 31.8775C11.1538 31.3887 11.1621 30.5783 11.1708 30.3862C11.1708 30.3638 11.1863 30.3296 11.2028 30.3242C11.2521 30.3078 11.3368 30.2994 11.395 30.2994C11.9872 30.2994 12.2875 30.5911 12.2875 31.1661ZM13.8478 33.7128L13.8261 33.71C13.5744 33.6777 13.4703 33.6641 13.2574 33.4433L13.2568 33.4428C12.9506 33.1534 12.3985 32.3482 12.1861 31.9948C12.1826 31.9911 12.1785 31.9799 12.1776 31.9755C12.3674 31.9028 12.9533 31.6278 12.9533 31.0118C12.9533 30.4331 12.5405 30.0875 11.8491 30.0875H10.778C10.6376 30.0875 10.449 30.0794 10.2826 30.0724C10.1548 30.0666 10.0444 30.0619 9.98108 30.0619L9.97617 30.0627C9.95502 30.0698 9.94656 30.1018 9.94316 30.1271C9.94198 30.1354 9.93326 30.2079 9.96376 30.2282L9.96726 30.2306L9.97146 30.2308C10.0832 30.2382 10.2157 30.2655 10.3034 30.2835L10.3361 30.29C10.4503 30.3249 10.506 30.3677 10.5138 30.516C10.5266 30.6714 10.5247 31.1839 10.523 31.6361C10.5225 31.781 10.522 31.92 10.522 32.0401C10.522 32.3733 10.522 33.1537 10.5138 33.3159C10.4959 33.5559 10.4288 33.6149 10.3024 33.6448C10.2618 33.656 10.1608 33.6683 10.0631 33.6797C10.0192 33.6852 9.97512 33.6904 9.93602 33.6956L9.93106 33.6972C9.92571 33.6998 9.9093 33.7079 9.9093 33.7798C9.9093 33.8518 9.92571 33.8599 9.93106 33.8625L9.93809 33.8643C9.97943 33.8643 10.0409 33.8612 10.1187 33.8573C10.268 33.8497 10.4934 33.8385 10.7865 33.8385C11.05 33.8385 11.2906 33.8489 11.4663 33.8567C11.5632 33.8609 11.6399 33.8643 11.6864 33.8643H11.693L11.6977 33.8596C11.7157 33.8414 11.7268 33.7775 11.723 33.74C11.7208 33.7191 11.7144 33.7053 11.7035 33.698L11.6964 33.6956C11.5243 33.6763 11.426 33.6591 11.3575 33.6365C11.2494 33.5976 11.1967 33.5677 11.1793 33.3072C11.1617 33.0708 11.1538 32.494 11.1538 32.16C11.154 32.1533 11.1601 32.1355 11.1635 32.1332C11.2499 32.1332 11.3682 32.1332 11.4437 32.1415C11.5431 32.1582 11.5815 32.1814 11.6302 32.2547C11.6956 32.3516 11.7772 32.4781 11.8635 32.6121C12.0803 32.9488 12.3501 33.3674 12.5226 33.5588C12.6224 33.675 12.7199 33.7494 12.8193 33.7856C12.9556 33.8505 13.3107 33.8825 13.5919 33.8825C13.6814 33.8825 13.7635 33.8794 13.8286 33.8729C13.8623 33.8729 13.8649 33.7798 13.8649 33.7512C13.8649 33.7436 13.8647 33.7371 13.864 33.7327C13.8614 33.7144 13.8488 33.7128 13.8478 33.7128Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.0048 33.6959L19.9989 33.6954C19.8863 33.6883 19.7678 33.6639 19.6814 33.6459C19.664 33.6422 19.6478 33.6388 19.6334 33.6359C19.4697 33.5864 19.4308 33.4449 19.4225 33.2481C19.4051 32.7875 19.3712 30.931 19.3795 30.5577C19.3795 30.4276 19.4124 30.3325 19.5739 30.29C19.6582 30.2647 19.7583 30.2481 19.9309 30.2306L19.9383 30.23L19.9425 30.2238C19.9547 30.2053 19.958 30.1698 19.9569 30.1425C19.9561 30.1198 19.9515 30.0794 19.9294 30.0645L19.9255 30.0619H19.9207C19.842 30.0619 19.7385 30.0656 19.6075 30.0703C19.4032 30.0776 19.1232 30.0875 18.7897 30.0875H18.7762L18.774 30.1008C18.7577 30.1983 18.7109 30.3098 18.6467 30.4571C18.3981 31.0222 17.6331 32.5784 17.5242 32.7872C17.524 32.7877 17.5236 32.7885 17.5233 32.789C17.4187 32.5857 16.8706 31.3874 16.4645 30.4738C16.3989 30.3346 16.3549 30.2238 16.3373 30.101L16.3353 30.0875H16.3217C15.9633 30.0875 15.6526 30.0773 15.4259 30.0698C15.2946 30.0653 15.191 30.0619 15.1218 30.0619L15.1167 30.0627C15.1045 30.0669 15.096 30.0794 15.0908 30.1008C15.0822 30.137 15.0831 30.2069 15.1019 30.2262L15.1058 30.23L15.1112 30.2306C15.3198 30.2566 15.4282 30.2738 15.5201 30.3072C15.658 30.3479 15.6966 30.4886 15.6889 30.5739C15.6555 31.1388 15.5262 32.6712 15.4489 33.1863C15.3969 33.5596 15.3541 33.6049 15.1782 33.6529L15.1414 33.6612C15.0808 33.6753 15.0182 33.6899 14.8971 33.7042L14.8918 33.7058C14.8822 33.7105 14.8765 33.7217 14.8731 33.7421C14.8681 33.7736 14.8684 33.8401 14.8876 33.8596L14.8923 33.8643H14.8989C14.9311 33.8643 14.9747 33.8614 15.0347 33.8575C15.1497 33.85 15.3233 33.8385 15.5675 33.8385C15.7409 33.8385 15.9273 33.8479 16.0769 33.8557C16.1702 33.8604 16.244 33.8643 16.2873 33.8643H16.2921L16.296 33.8617C16.328 33.8403 16.3235 33.7611 16.3232 33.7579C16.3209 33.7191 16.3104 33.7095 16.3029 33.7058L16.2983 33.7042C16.1436 33.6797 16.0552 33.6625 15.9489 33.6362C15.7873 33.5898 15.7629 33.4902 15.7718 33.215C15.8063 32.4418 15.8828 31.2792 15.9243 30.7454C16.0004 30.9284 16.0976 31.1588 16.2048 31.4124C16.5675 32.2713 17.0643 33.448 17.1892 33.8617L17.1932 33.8682C17.2049 33.8799 17.241 33.8857 17.2771 33.8857C17.3132 33.8857 17.3493 33.8799 17.3611 33.8682L17.365 33.8622C17.5087 33.4509 18.1913 31.9854 18.5579 31.1979C18.6442 31.0126 18.7117 30.8677 18.7485 30.7871C18.7657 31.3064 18.782 33.0255 18.7652 33.3685C18.7652 33.5022 18.7417 33.5874 18.6218 33.6276C18.5255 33.6597 18.415 33.6769 18.2566 33.6956L18.2514 33.6972C18.2221 33.7118 18.2269 33.8059 18.2269 33.8069C18.2292 33.8398 18.238 33.8583 18.2535 33.8635L18.2584 33.8643C18.2904 33.8643 18.3525 33.8614 18.4387 33.8575C18.6039 33.85 18.8538 33.8385 19.098 33.8385C19.304 33.8385 19.551 33.8484 19.7313 33.8557C19.8477 33.8604 19.9397 33.8643 19.9893 33.8643H19.9977L20.0024 33.8573C20.0225 33.827 20.0337 33.7248 20.0091 33.7001L20.0048 33.6959Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M24.9316 32.6691C24.9087 32.6548 24.8371 32.6233 24.8145 32.6345L24.8091 32.6371L24.8069 32.6426C24.6957 32.9123 24.497 33.2848 24.3472 33.4436C24.2441 33.5539 24.1297 33.601 23.9647 33.601C23.5479 33.601 23.2323 33.5859 23.0784 33.559C23.0597 33.5528 22.9945 33.4915 22.9863 33.4016C22.9692 33.1109 22.9692 32.4223 22.9692 31.8689C22.9692 31.218 22.9692 30.7039 22.9777 30.5327C22.9865 30.375 23.0242 30.3205 23.1471 30.29C23.2127 30.2679 23.2732 30.2585 23.3939 30.2397L23.4598 30.2295L23.4635 30.2238C23.4811 30.1972 23.4824 30.1208 23.4738 30.0885C23.4716 30.0805 23.4676 30.0687 23.4574 30.0638L23.4504 30.0619C23.4054 30.0619 23.3279 30.0656 23.2297 30.07C23.0664 30.0773 22.8428 30.0875 22.6277 30.0875C22.3982 30.0875 22.1933 30.0781 22.0288 30.0706C21.9232 30.0659 21.84 30.0619 21.7795 30.0619H21.7697L21.7653 30.0708C21.7554 30.0906 21.7439 30.2017 21.7683 30.2262L21.7721 30.2298L21.7773 30.2306C21.8099 30.2353 21.8426 30.2394 21.8741 30.2434C21.9564 30.2535 22.034 30.2629 22.0842 30.2817C22.2504 30.3213 22.3034 30.3763 22.3122 30.6442C22.3204 30.8067 22.3204 31.1017 22.3204 31.7487C22.3204 33.0557 22.3123 33.2108 22.3036 33.3756C22.2876 33.5424 22.2371 33.6104 22.1091 33.6362C22.0528 33.6529 21.9756 33.6625 21.878 33.6745C21.8297 33.6805 21.7761 33.687 21.7171 33.6957L21.7117 33.6964L21.7079 33.7001C21.6852 33.7233 21.6852 33.8364 21.7079 33.8596L21.7126 33.8643H21.7193C21.7679 33.8643 21.8834 33.8599 22.0172 33.8552C22.2186 33.8476 22.4692 33.8385 22.6277 33.8385C22.7769 33.8385 23.0906 33.8445 23.4227 33.8508C23.7726 33.8573 24.1344 33.8643 24.3158 33.8643C24.5272 33.8643 24.5825 33.8372 24.6208 33.7796C24.7403 33.5831 24.9046 32.9999 24.9573 32.7002C24.9573 32.6895 24.9496 32.6801 24.9316 32.6691Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M28.1993 32.0537C28.2027 32.0641 28.1954 32.0725 28.1911 32.0761C28.1014 32.0842 27.8301 32.0842 27.683 32.0842C27.3818 32.0842 27.3594 32.0842 27.3111 32.0764C27.301 32.0712 27.2966 32.0675 27.2962 32.0514L27.7541 30.7793H27.758C27.8417 30.9975 27.9852 31.4216 28.112 31.7964C28.1424 31.8858 28.1717 31.9726 28.1993 32.0537ZM30.0072 33.6967L29.999 33.6957C29.5666 33.6352 29.5182 33.6005 29.3515 33.2335H29.3513C29.1487 32.794 28.4479 30.8137 28.3063 30.3982L28.2831 30.3333C28.2477 30.235 28.211 30.1333 28.2044 30.0924L28.2022 30.0791H28.1887C28.1807 30.0791 28.1701 30.0799 28.1555 30.081C28.1233 30.0836 28.0695 30.0875 27.9745 30.0875C27.8579 30.0875 27.796 30.082 27.7727 30.0802C27.7662 30.0794 27.762 30.0791 27.7602 30.0791H27.7478L27.7448 30.0911C27.7285 30.156 27.6859 30.3192 27.6421 30.4329C27.4885 30.9117 26.7904 32.6324 26.5291 33.1988C26.3354 33.6117 26.2474 33.636 25.8126 33.6957L25.8073 33.6964L25.8035 33.7001C25.7808 33.7233 25.7808 33.8364 25.8035 33.8596L25.8082 33.8643H25.8148C25.8658 33.8643 25.9256 33.8604 26.0013 33.8554C26.1175 33.8479 26.262 33.8385 26.449 33.8385C26.6094 33.8385 26.8049 33.8473 26.9619 33.8546C27.0745 33.8599 27.1717 33.8643 27.229 33.8643H27.2376L27.2423 33.857C27.2608 33.8288 27.2724 33.7287 27.2601 33.7042L27.2563 33.6967L27.2479 33.6957C27.1035 33.6774 27.015 33.6602 26.9412 33.636C26.7774 33.5968 26.7729 33.4931 26.7903 33.3964C26.808 33.2786 26.9207 32.9997 27.0297 32.7299C27.077 32.6123 27.1218 32.5015 27.1581 32.4059L27.1591 32.4001C27.1591 32.3931 27.1761 32.3647 27.214 32.3644C27.2729 32.3561 27.3433 32.3561 27.7344 32.3561C28.0703 32.3561 28.2388 32.3561 28.2894 32.3644C28.2934 32.3655 28.3078 32.3746 28.3212 32.3842L28.3223 32.3876C28.44 32.6897 28.637 33.1957 28.7131 33.4746C28.7309 33.5557 28.7235 33.6156 28.6297 33.6448C28.5427 33.6706 28.4485 33.6873 28.3416 33.6954L28.3356 33.6959L28.3315 33.7001C28.3088 33.7233 28.3088 33.8364 28.3315 33.8596L28.3362 33.8643H28.3428C28.4109 33.8643 28.5022 33.8601 28.608 33.8554C28.7747 33.8479 28.9822 33.8385 29.2257 33.8385C29.4127 33.8385 29.601 33.8479 29.7524 33.8554C29.8509 33.8604 29.9287 33.8643 29.9795 33.8643H29.9861L29.9908 33.8596C30.0136 33.8366 30.0219 33.7261 30.011 33.7042L30.0072 33.6967Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M35.3706 30.0619H35.3608C35.335 30.0619 35.2671 30.0656 35.1812 30.07C35.0378 30.0773 34.8415 30.0875 34.718 30.0875C34.5256 30.0875 34.3589 30.0786 34.225 30.0713C34.1328 30.0664 34.053 30.0619 33.9897 30.0619H33.9799L33.9755 30.0708C33.9643 30.0935 33.9653 30.1917 33.9747 30.2199L33.9779 30.2298L33.9881 30.2306C34.1598 30.2481 34.2181 30.2561 34.3037 30.2819C34.4612 30.3119 34.5389 30.4162 34.5479 30.6101C34.5732 30.9959 34.5908 32.1741 34.5908 32.9939C34.5899 32.995 34.5888 32.9963 34.5879 32.9976C34.5874 32.9981 34.587 32.9986 34.5865 32.9994C34.3102 32.6793 33.0934 31.2245 32.4509 30.411C32.2904 30.2056 32.2544 30.1352 32.2394 30.0901L32.2354 30.0776L32.2222 30.0794C32.1632 30.0875 31.9575 30.0875 31.8214 30.0875C31.6542 30.0875 31.4389 30.0781 31.2658 30.0705C31.1554 30.0659 31.0682 30.0619 31.0246 30.0619H31.018L31.0133 30.0666C30.9887 30.0914 30.9921 30.2024 31.0017 30.222L31.0058 30.2301L31.0146 30.2308C31.3211 30.2554 31.4352 30.2879 31.5458 30.3815C31.6294 30.4498 31.6684 30.5356 31.6684 30.6518C31.6684 32.0003 31.6421 33.0085 31.6172 33.2726C31.601 33.4496 31.5789 33.5786 31.4395 33.6276C31.3089 33.6712 31.1385 33.6883 31.0622 33.6962C31.0475 33.7011 31.0381 33.7186 31.0342 33.7478C31.0302 33.777 31.0309 33.8429 31.0585 33.8614L31.0625 33.8643H31.0673C31.1187 33.8643 31.1915 33.8601 31.2759 33.8552C31.4079 33.8479 31.5722 33.8385 31.7529 33.8385C31.9425 33.8385 32.1509 33.8481 32.3183 33.8557C32.4217 33.8604 32.5034 33.8643 32.55 33.8643H32.5566L32.5613 33.8596C32.5813 33.8393 32.5863 33.7626 32.578 33.728C32.574 33.7108 32.5661 33.7001 32.5551 33.6962L32.5512 33.6954C32.4229 33.6863 32.2509 33.6602 32.1709 33.6284C32.0525 33.5731 31.9742 33.5366 31.9575 33.2564C31.9486 32.9053 31.9407 31.4213 31.9485 30.8036C32.2415 31.1606 34.1124 33.4955 34.3794 33.8828L34.3844 33.8904L34.3934 33.8898C34.4985 33.8823 34.7115 33.8721 34.8454 33.8815L34.8632 33.8825L34.8622 33.8648C34.854 33.6824 34.8454 33.3281 34.8454 33.0513C34.8454 32.1324 34.8566 30.9996 34.888 30.576C34.8975 30.418 34.9294 30.3192 35.0663 30.2811C35.1203 30.2608 35.2128 30.246 35.3023 30.2319C35.3232 30.2285 35.3437 30.2254 35.3634 30.222L35.3713 30.2207L35.375 30.2134C35.3857 30.192 35.3857 30.0922 35.375 30.0708L35.3706 30.0619Z\"></path><mask id=\"mask1_6720_47083\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"36\" y=\"30\" width=\"5\" height=\"4\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M36.6134 30.0617H40.6461V33.8899H36.6134V30.0617Z\"></path></mask><g mask=\"url(#mask1_6720_47083)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M38.6848 33.661C38.3832 33.661 38.1586 33.6073 38.019 33.503C37.9531 33.4371 37.9124 33.3284 37.9122 33.2632C37.8866 33.093 37.8866 32.5013 37.8866 31.9289C37.8866 31.4033 37.8866 30.6093 37.8951 30.4308C37.9029 30.3526 37.9238 30.3385 37.9463 30.3234C37.9763 30.3086 38.1517 30.2908 38.2393 30.2908C38.7209 30.2908 39.0484 30.3719 39.3015 30.5536C39.7353 30.8453 39.9373 31.2986 39.9373 31.9802C39.9373 32.5784 39.7718 33.0474 39.4452 33.3743C39.2349 33.5646 38.9791 33.661 38.6848 33.661ZM40.0751 30.4861L40.0747 30.4858C39.7569 30.2181 39.2725 30.0706 38.7106 30.0706C38.4393 30.0706 38.2241 30.0755 38.016 30.0799C37.8417 30.0838 37.6769 30.0875 37.5024 30.0875C37.2931 30.0875 36.8498 30.0711 36.6893 30.0619L36.6839 30.0617L36.6796 30.0645C36.6654 30.0742 36.6565 30.0961 36.6531 30.13C36.6507 30.1553 36.6505 30.2082 36.6685 30.2262L36.6724 30.2301L36.678 30.2306C36.8386 30.2486 36.9623 30.2655 37.0444 30.2903C37.1822 30.3226 37.2127 30.3912 37.2296 30.5669C37.2378 30.8236 37.2378 31.4672 37.2378 31.8517C37.2378 32.463 37.2378 32.9911 37.221 33.3672C37.2041 33.587 37.1302 33.6208 37.0269 33.6446C36.921 33.6732 36.7239 33.6897 36.6442 33.6954L36.6365 33.6983C36.6243 33.7064 36.6168 33.7238 36.6143 33.7504C36.6111 33.7838 36.6162 33.8416 36.6341 33.8596L36.6388 33.8643H36.9795C37.2402 33.8643 37.4918 33.8711 37.7353 33.8776C37.9672 33.8839 38.1861 33.8899 38.4022 33.8899C39.012 33.8899 39.4509 33.7699 39.825 33.5015C40.1316 33.295 40.6461 32.8128 40.6461 31.9031C40.6461 31.3087 40.4486 30.8187 40.0751 30.4861Z\"></path></g><mask id=\"mask2_6720_47083\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"7\" y=\"0\" width=\"26\" height=\"18\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.79065 0.0275269H32.8556V17.9185H7.79065V0.0275269Z\"></path></mask><g mask=\"url(#mask2_6720_47083)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M30.2549 14.9886C29.9859 15.0599 29.632 15.0744 29.2728 15.0081C29.8469 14.094 30.3141 12.7873 30.5616 11.0356C30.7502 9.70007 30.6395 8.45261 30.3969 7.34533C30.9883 6.62474 31.5606 6.015 31.9781 5.59203L32.0548 10.3706C32.0548 12.2589 31.7425 14.5929 30.2549 14.9886ZM26.6603 15.8702C26.5784 15.8586 26.4982 15.8348 26.4189 15.8052C26.6955 15.4026 26.9467 14.9291 27.1609 14.3793C27.3611 14.7809 27.6293 15.0644 27.875 15.254C27.9157 15.2853 27.9579 15.3121 27.9996 15.3407C27.5525 15.7618 27.0844 15.9302 26.6603 15.8702ZM23.464 16.7528C23.3461 16.7457 23.2295 16.7211 23.1137 16.6886C23.6095 16.1704 24.0667 15.4368 24.3987 14.4016C24.4488 14.5629 24.5047 14.7175 24.5667 14.8645C24.7487 15.296 24.9841 15.6572 25.2547 15.9452C24.6478 16.5465 23.9948 16.784 23.464 16.7528ZM20.3185 17.1177C20.0238 17.1177 19.5089 17.0635 18.9516 16.7701C19.2672 16.4798 19.552 16.1161 19.7917 15.6861C20.007 15.2996 20.1814 14.8572 20.3231 14.3753C20.4649 14.8572 20.6392 15.2996 20.8546 15.6861C21.0933 16.1145 21.3768 16.4774 21.6911 16.7671C21.1316 17.0632 20.6142 17.1177 20.3185 17.1177ZM17.1823 16.7528C16.6504 16.7844 15.9974 16.5471 15.3907 15.946C15.6616 15.6579 15.8974 15.2965 16.0795 14.8645C16.1396 14.7219 16.1938 14.5719 16.2427 14.4158C16.5748 15.4451 17.031 16.1749 17.5253 16.6908C17.412 16.7221 17.2977 16.7459 17.1823 16.7528ZM13.986 15.8702C13.5624 15.9301 13.0944 15.7616 12.6472 15.3403C12.6887 15.3118 12.7307 15.2852 12.7712 15.254C13.0169 15.0644 13.2851 14.7809 13.4853 14.3795C13.6995 14.9292 13.9506 15.4027 14.2272 15.8053C14.148 15.8349 14.0678 15.8586 13.986 15.8702ZM10.3915 14.9886C8.90372 14.5929 8.59143 12.2589 8.59143 10.3771L8.6682 5.5915C9.08568 6.01428 9.65808 6.62383 10.2495 7.34434C10.0068 8.45183 9.89597 9.69966 10.0846 11.0356C10.3321 12.7874 10.7992 14.094 11.3733 15.0081C11.0142 15.0743 10.6604 15.0599 10.3915 14.9886ZM12.2821 14.62C12.2345 14.6567 12.1834 14.6868 12.133 14.7183C11.59 13.9108 11.124 12.6678 10.8776 10.9235C10.7414 9.95914 10.7769 9.03896 10.9078 8.18772C11.9987 9.6607 12.9823 11.4211 12.9877 12.9875C12.9902 13.7077 12.7527 14.2569 12.2821 14.62ZM12.3186 4.05279C12.7031 4.46724 13.1971 5.01888 13.6884 5.69714C13.2096 6.83572 12.8361 8.14757 12.7558 9.57745C12.2835 8.70723 11.7017 7.87692 11.1216 7.1437C11.4504 5.85258 11.9556 4.78019 12.3186 4.05279ZM15.7564 11.7457C15.7961 13.1157 15.5714 14.0087 15.3417 14.5536C15.2125 14.8598 15.0542 15.1178 14.8771 15.325C14.2143 14.3628 13.682 12.864 13.5507 10.6735C13.4597 9.15511 13.7693 7.74147 14.2295 6.5068C14.8639 7.54062 15.4192 8.79666 15.6253 10.2561C15.6694 10.5681 15.7005 10.8606 15.7225 11.1381C15.7304 11.347 15.7418 11.5494 15.7564 11.7457ZM16.3301 2.66783C16.6395 3.03094 17.0385 3.51229 17.4565 4.09015C16.8076 5.26488 16.2264 6.64432 15.9254 8.19296C15.5708 7.21416 15.0939 6.35103 14.5996 5.61599C15.1777 4.3519 15.8658 3.3314 16.3301 2.66783ZM18.277 16.2931C17.4751 15.5599 16.7303 14.1854 16.5507 11.6292C16.5462 11.5019 16.5376 11.3714 16.529 11.2407C16.5168 10.9754 16.5086 10.7022 16.5086 10.4126C16.5086 8.28186 17.1595 6.3938 17.9673 4.83799C18.8861 6.26536 19.7663 8.13649 19.8966 10.3104C19.9118 10.5636 19.9191 10.8034 19.9226 11.0365C19.9212 11.1419 19.9241 11.2431 19.9248 11.3466C19.9136 13.3623 19.4834 14.5941 19.0922 15.2964C18.8601 15.7128 18.5814 16.0476 18.277 16.2931ZM20.3185 1.32722C20.8353 1.98067 21.5569 2.90834 22.2339 4.05519C21.5035 5.12984 20.7605 6.48488 20.3231 8.06203C19.8848 6.4813 19.1394 5.12389 18.4074 4.04808C19.0831 2.90451 19.8028 1.97931 20.3185 1.32722ZM22.3645 16.2891C22.062 16.0439 21.785 15.7106 21.5541 15.2964C21.1629 14.5941 20.7327 13.3623 20.7214 11.3468C20.7221 11.2432 20.7251 11.1419 20.7236 11.0365C20.7272 10.8034 20.7345 10.5636 20.7496 10.3104C20.8797 8.1404 21.757 6.27222 22.674 4.84582C23.4798 6.40006 24.1284 8.28542 24.1284 10.4126C24.1284 13.7606 23.2839 15.4455 22.3645 16.2891ZM24.3161 2.66783C24.7804 3.3314 25.4686 4.3519 26.0467 5.61599C25.5496 6.35511 25.0699 7.22356 24.7148 8.20909C24.4153 6.65706 23.8341 5.27458 23.1846 4.09732C23.6044 3.51624 24.0054 3.03243 24.3161 2.66783ZM25.7684 15.3242C25.5916 15.1171 25.4335 14.8593 25.3046 14.5536C25.0002 13.8317 24.704 12.5003 25.0209 10.2561C25.2271 8.79669 25.7823 7.54067 26.4167 6.50683C26.8769 7.7415 27.1865 9.15511 27.0955 10.6735C26.9641 12.8636 26.4314 14.3621 25.7684 15.3242ZM29.7686 10.9235C29.5222 12.668 29.0566 13.9111 28.5137 14.7187C28.4632 14.687 28.4119 14.6568 28.3642 14.62C27.8935 14.2569 27.6561 13.7077 27.6585 12.9875C27.6639 11.4225 28.6477 9.66221 29.7386 8.18891C29.8694 9.03982 29.9048 9.95961 29.7686 10.9235ZM28.3276 4.05279C28.6906 4.78019 29.1959 5.85258 29.5246 7.1437C28.9445 7.87695 28.3627 8.70734 27.8903 9.57758C27.8102 8.14765 27.4366 6.83577 26.9579 5.69717C27.4492 5.01888 27.9431 4.46724 28.3276 4.05279ZM32.7496 3.7702L32.0949 4.36218C32.0092 4.43961 31.1478 5.22586 30.1478 6.38812C29.7688 5.13836 29.2623 4.12788 28.9296 3.46679C28.8766 3.36173 28.8287 3.26632 28.7872 3.18161L28.529 2.65454L28.1324 3.08725C28.0734 3.15164 28.0058 3.22386 27.9313 3.30363C27.5956 3.6626 27.1026 4.19271 26.5829 4.86965C25.9699 3.62844 25.2844 2.65239 24.8529 2.0386L24.3787 1.3559L23.8507 1.97967C23.5614 2.31758 23.1687 2.77827 22.7444 3.34262C22.0715 2.25178 21.3791 1.37688 20.8865 0.754542C20.7939 0.637762 20.7095 0.530881 20.6347 0.4347L20.3185 0.0275269L20.0023 0.4347C19.9274 0.531157 19.8428 0.638038 19.7502 0.75479C19.2588 1.37586 18.5683 2.24836 17.8969 3.33587C17.4744 2.77455 17.0837 2.31625 16.7955 1.97967L16.2676 1.3559L15.7934 2.0386C15.362 2.65239 14.6763 3.62847 14.0633 4.86967C13.5437 4.19273 13.0506 3.6626 12.7149 3.30363C12.6404 3.22386 12.5729 3.15164 12.5138 3.08725L12.1172 2.65454L11.859 3.18161C11.8176 3.26632 11.7696 3.36173 11.7167 3.46679C11.3839 4.12788 10.8774 5.13836 10.4984 6.38812C9.4984 5.22586 8.63706 4.43961 8.55128 4.36218L7.89662 3.7702L7.79065 10.3706C7.79065 13.5257 8.59639 15.3397 10.1857 15.7622C10.3992 15.8191 10.6556 15.8548 10.9338 15.8548C11.2389 15.8548 11.57 15.8103 11.8989 15.7059C12.5032 16.3695 13.1765 16.6827 13.8196 16.6827C13.9131 16.6827 14.0061 16.6761 14.098 16.6631C14.3231 16.6313 14.5393 16.5562 14.7451 16.4479C15.4619 17.1986 16.2861 17.5567 17.0747 17.5567C17.1266 17.5567 17.1786 17.5551 17.2302 17.552C17.5715 17.5315 17.9038 17.4337 18.2201 17.2757C19.0562 17.8302 19.8844 17.9185 20.3185 17.9185C20.7533 17.9185 21.5834 17.8301 22.4208 17.2733C22.7387 17.4328 23.0728 17.5314 23.416 17.552C23.4677 17.5551 23.5195 17.5567 23.5715 17.5567C24.3601 17.5567 25.1843 17.1986 25.901 16.4479C26.1069 16.5562 26.3231 16.6313 26.5482 16.6631C26.6402 16.6761 26.733 16.6827 26.8266 16.6827C27.4697 16.6827 28.1429 16.3695 28.7473 15.7059C29.0762 15.8104 29.4073 15.8548 29.7124 15.8548C29.9906 15.8548 30.2472 15.8191 30.4607 15.7622C32.0499 15.3397 32.8556 13.5257 32.8556 10.3641L32.7496 3.7702Z\"></path></g>`}}export{L as IDSIconSormland};\n", "import{IDSIconSormland as i}from\"./icon-sormland-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-sormland\",i);\n", "import{svg as l}from\"lit\";import{IDSIconBase as e}from\"../icon-base-element.js\";class o extends e{constructor(){super(),this.vbHeight=38,this.vbWidth=209}renderIcon(){return l`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M41.3935 30.2156H34.0142C31.6811 30.2156 29.4437 29.2908 27.7951 27.6449C26.1466 25.999 25.2222 23.7672 25.2256 21.4414V0.211426H21.9177C21.9177 7.30108 21.9177 13.994 21.9177 21.4414C21.9177 24.639 23.1923 27.7056 25.4611 29.966C27.7298 32.2265 30.8066 33.4955 34.0142 33.4938C36.4479 33.4938 39.2339 33.4938 41.4 33.4938V30.2416L41.3935 30.2156Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M40.5882 24.5976H33.3237C31.472 24.587 29.9785 23.0715 29.9856 21.2103V0.211426H26.7882V21.191C26.7848 22.9446 27.475 24.6276 28.7069 25.8693C29.9387 27.1111 31.6111 27.8097 33.3557 27.8114H40.5882V24.5976Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.818037 30.2156H7.90885C10.1497 30.2139 12.298 29.2883 13.8808 27.6426C15.4635 25.9969 16.3509 23.7661 16.3476 21.4414V0.211426H19.4824V21.4414C19.484 24.6361 18.2623 27.7007 16.086 29.961C13.9096 32.2213 10.957 33.4921 7.8775 33.4938C5.57032 33.4938 2.8619 33.4938 0.811768 33.4938V30.2416L0.818037 30.2156Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.811768 24.5976H8.0376C8.93664 24.6028 9.80025 24.2454 10.4354 23.6052C11.0705 22.965 11.4242 22.0955 11.4173 21.191V0.211426H14.6118C14.6118 4.10011 14.6118 17.0902 14.6118 21.191C14.6135 22.9463 13.9216 24.6302 12.6885 25.872C11.4554 27.1137 9.78228 27.8114 8.0376 27.8114H0.811768V24.5976Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M54.0164 30.4594L55.1094 33.4939H58.447L56.8465 29.3448C56.82 29.2747 56.7941 29.2058 56.7686 29.1381C56.3637 28.0603 56.0743 27.2903 55.1745 27.0964V27.0577C56.7514 26.8382 57.8881 25.4481 57.7769 23.8751C57.7769 21.0854 55.2786 20.5056 52.7607 20.5056H47.8941V33.4939H51.0301V28.2432H51.8173C53.0405 28.2432 53.3658 28.7457 54.0164 30.4594ZM51.0301 22.7927H51.9409C53.2421 22.7927 54.5824 22.9796 54.5889 24.3389C54.5889 25.8658 53.1446 25.956 51.9409 25.956H51.0301V22.7927Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M65.0945 31.5226C63.4828 31.5226 62.4106 30.8771 62.2611 29.5118L69 29.518V28.8974C69 26.0675 67.7263 23.7527 64.1977 23.7527C61.1759 23.7527 59.2589 25.7076 59.2589 28.6306C59.2589 31.6963 61.4748 33.4899 64.6851 33.4899C65.8816 33.5262 67.0721 33.3145 68.1747 32.8693V30.7158C67.2361 31.2295 66.1762 31.5071 65.0945 31.5226ZM62.2416 27.7369C62.3196 26.5888 62.9695 25.6952 64.2692 25.6952C65.6403 25.6952 66.1667 26.6447 66.1992 27.7369H62.2416Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M71.0161 36.9185C72.1825 37.3418 73.4207 37.5567 74.6688 37.5526C78.7408 37.5526 80.3975 35.815 80.3642 32.4412V23.9813H77.5032V25.5287H77.4633C76.7937 24.415 75.543 23.7352 74.1964 23.753C71.1425 23.753 69.8118 25.9853 69.8118 28.6996C69.8118 31.4138 71.2689 33.4812 74.0966 33.4812C75.3901 33.5214 76.6151 32.928 77.3435 31.9085H77.3835V32.4222C77.3835 34.1408 76.5584 35.333 74.3495 35.333C73.2496 35.3054 72.1728 35.0271 71.209 34.5213L71.0161 36.9185ZM73.072 28.6679C73.072 27.3171 73.6908 26.0487 75.1678 26.0487C76.7048 26.0487 77.3568 27.2981 77.3568 28.5664C77.3568 30.0694 76.4919 31.2046 75.108 31.2046C73.897 31.2046 73.072 30.0187 73.072 28.6679Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M81.9882 19.6938V22.147L85.2353 22.1406V19.6938H81.9882ZM81.9882 23.7847V33.4938H85.2353V23.7847H81.9882Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M86.8588 28.6512C86.8588 31.5568 89.0098 33.4939 92.1258 33.4939C95.2608 33.4939 97.4118 31.5568 97.4118 28.6512C97.4118 25.5656 95.1157 23.7527 92.1258 23.7527C89.1359 23.7527 86.8588 25.5469 86.8588 28.6512ZM89.9181 28.5395C89.9181 27.1425 90.5741 25.8698 92.1258 25.8698V25.876C93.6775 25.876 94.3651 27.0867 94.3651 28.5395C94.3651 29.9923 93.7848 31.3892 92.1258 31.3892C90.4669 31.3892 89.9181 29.9364 89.9181 28.5395Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M105.766 33.4812V28.7126C105.766 27.1758 105.372 26.1829 104.184 26.1829C102.633 26.1829 102.058 27.4983 102.058 29.2122V33.4686H99.0353V23.982H101.813V25.5504H101.852C102.54 24.3652 103.86 23.6698 105.249 23.7606C107.749 23.7606 108.776 25.4935 108.776 27.5552V33.4939L105.766 33.4812Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M118.983 33.4938C117.774 33.4929 116.572 33.3056 115.415 32.9379L115.684 30.2044C116.675 30.7666 117.782 31.0621 118.907 31.0648C119.942 31.0648 121.064 30.7206 121.064 29.5955C121.064 27.0936 115.271 28.4703 115.271 23.7843C115.271 20.6669 117.935 19.694 120.343 19.694C121.406 19.6891 122.464 19.8565 123.478 20.1904L123.259 22.7121C122.404 22.314 121.478 22.111 120.544 22.1164C119.691 22.1164 118.387 22.3282 118.387 23.6056C118.387 25.8228 124.199 24.5587 124.199 29.2447C124.243 32.501 121.71 33.4938 118.983 33.4938Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M130.287 33.4939C127.732 33.4939 126.877 32.1937 126.877 30.042V25.6866H125.012V23.5284H126.928V21.4417L129.878 20.5056V23.5284H132.145V25.6866H129.878V29.6455C129.878 30.6791 130.121 31.3551 131.155 31.3551C131.513 31.351 131.868 31.2941 132.209 31.1861L132.318 33.2858C131.649 33.424 130.969 33.4937 130.287 33.4939Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M132.318 28.6512C132.318 31.5568 134.469 33.4939 137.585 33.4939C140.713 33.4939 142.864 31.5568 142.871 28.6512C142.871 25.5656 140.575 23.7527 137.585 23.7527C134.595 23.7527 132.318 25.5469 132.318 28.6512ZM135.377 28.5395C135.377 27.1425 136.033 25.8698 137.585 25.8698V25.876C139.13 25.876 139.824 27.0867 139.824 28.5395C139.824 29.9923 139.244 31.3892 137.585 31.3892C135.926 31.3892 135.377 29.9364 135.377 28.5395Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M149.913 33.4937C146.636 33.4937 144.494 31.5941 144.494 28.6145C144.494 25.6348 146.656 23.7539 149.879 23.7539C150.787 23.7372 151.688 23.8891 152.532 24.2009L152.3 26.3735C151.702 26.0637 151.027 25.9094 150.344 25.9266C148.812 25.9266 147.691 26.9819 147.691 28.6517C147.646 29.3565 147.919 30.0466 148.443 30.554C148.968 31.0614 149.696 31.3396 150.45 31.321C151.165 31.3249 151.872 31.1785 152.519 30.8927L152.612 33.115C151.739 33.3718 150.828 33.4996 149.913 33.4937Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M159.407 33.4938L156.5 28.7983H156.461V33.4938H153.424V19.6938H156.461V27.8808H156.5L159.388 23.9434H162.808L159.342 28.2886L163.165 33.4938H159.407Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M170.707 33.4557V28.6651C170.707 27.1212 170.313 26.1237 169.125 26.1237C167.574 26.1237 167 27.4452 167 29.1671V33.443H163.976V19.6938H167V25.3104H167.038C167.752 24.2935 168.935 23.6949 170.191 23.7157C172.691 23.7157 173.718 25.4566 173.718 27.5278V33.4938L170.707 33.4557Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M175.341 28.6512C175.341 31.5568 177.492 33.4939 180.608 33.4939C183.743 33.4939 185.894 31.5568 185.894 28.6512C185.894 25.5656 183.598 23.7527 180.608 23.7527C177.618 23.7527 175.341 25.5469 175.341 28.6512ZM178.4 28.5395C178.4 27.1425 179.056 25.8698 180.608 25.8698V25.876C182.16 25.876 182.847 27.0867 182.847 28.5395C182.847 29.9923 182.267 31.3892 180.608 31.3892C178.949 31.3892 178.4 29.9364 178.4 28.5395Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M187.518 33.4938V19.6938H190.765V33.4938H187.518Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M205.651 33.4939V28.1675C205.651 27.1593 205.408 26.1892 204.283 26.1892C202.916 26.1892 202.417 27.5271 202.417 29.2455V33.4939H199.426V28.1675C199.426 27.1593 199.183 26.1892 198.058 26.1892C196.69 26.1892 196.191 27.5271 196.191 29.2455V33.4939H193.2V23.9825H195.949V25.5741H195.987C196.63 24.412 197.879 23.7099 199.215 23.7606C200.475 23.6688 201.654 24.3825 202.149 25.536C202.81 24.3971 204.052 23.7141 205.376 23.7606C207.978 23.7606 208.624 25.3331 208.624 27.7363V33.4875L205.651 33.4939Z\"></path>`}}export{o as IDSIconStockholm};\n", "import{IDSIconStockholm as o}from\"./icon-stockholm-element.js\";import{registerComponent as i}from\"../../../utilities/utils.js\";i(\"ids-icon-stockholm\",o);\n", "import{svg as C}from\"lit\";import{IDSIconBase as L}from\"../icon-base-element.js\";class l extends L{constructor(){super(),this.vbHeight=23,this.vbWidth=106}renderIcon(){return C`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32.1968 8.67305C32.1968 9.48441 32.0274 10.0379 31.6771 10.3628C31.4037 10.6173 31.0152 10.7357 30.4567 10.7357C30.3734 10.7357 30.2896 10.7333 30.2045 10.7286C30.193 9.46973 30.193 8.19519 30.2045 6.93655C30.4246 6.9226 30.6269 6.91233 30.8237 6.91233C31.2696 6.91233 32.1968 6.91233 32.1968 8.67305ZM32.9192 13.5652L32.1786 11.7636C33.2178 11.3295 33.7664 10.2424 33.7664 8.6087C33.7664 5.43201 31.7773 5.43201 31.0284 5.43201C30.8416 5.43201 30.5972 5.44033 30.3518 5.44791C30.1099 5.45623 29.8686 5.4643 29.6767 5.4643C29.3727 5.48021 29.07 5.48021 28.7486 5.48021H28.6814L28.5574 5.66592L28.5593 5.70678C28.6542 7.68234 28.6618 13.2523 28.6618 13.3071C28.6618 14.366 28.6618 15.367 28.6363 16.4067V16.8919L28.7621 17.0805L28.8354 17.0739C29.4198 17.0274 29.5377 17.0274 30.1067 17.0274H30.1663L30.2972 16.8637L30.2952 16.818C30.229 15.1701 30.2192 13.102 30.2185 12.1693C30.4286 12.169 30.5291 12.1673 30.7512 12.1573L30.9245 12.6166C31.1326 13.1573 31.4172 13.9136 31.6783 14.61L32.0646 15.6369C32.2943 16.2263 32.3689 16.4598 32.4968 16.8894L32.5079 16.9264L32.692 17.0791L32.7432 17.0739C33.2722 17.0289 33.5296 17.0113 34.141 17.0113H34.2214L34.3303 16.773L34.3045 16.7201C33.8902 15.8689 33.8172 15.6954 32.9192 13.5652Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M37.3676 9.66082C37.4872 9.66082 38.0949 9.71734 38.2817 10.8353C38.3354 11.1436 38.343 11.4174 38.344 11.6799H36.2716C36.299 11.3056 36.3667 10.6882 36.6454 10.2018C36.8347 9.84776 37.0845 9.66082 37.3676 9.66082ZM38.4563 8.58154C38.1525 8.40023 37.803 8.30823 37.4186 8.30823C37.0359 8.30823 36.6694 8.40243 36.3552 8.58178C35.3084 9.21404 34.7323 10.6936 34.7323 12.7477C34.7323 14.1488 34.9733 15.2055 35.4694 15.979C36.1779 17.0756 37.1041 17.2029 37.739 17.2029C37.9827 17.2029 38.4558 17.1791 38.8941 17.0198C39.1868 16.9212 39.3486 16.805 39.4518 16.7319L39.5543 16.5586L39.5852 16.1451C39.5959 15.8916 39.6038 15.7196 39.6315 15.3452L39.6374 15.2643L39.3959 15.1385L39.3305 15.1977C39.0998 15.4059 38.7129 15.7548 38.0336 15.7548C37.3031 15.7548 36.7633 15.3408 36.4731 14.5574C36.2814 14.0502 36.2426 13.5126 36.2377 13.0002H39.6764L39.8362 12.8294L39.8369 12.7815C39.8659 11.126 39.7237 9.33246 38.4563 8.58154Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M48.9156 11.597C48.9156 10.5085 48.9269 9.60607 48.9538 8.58037L48.9551 8.54073L48.8195 8.33813L48.7344 8.36016C48.1627 8.50599 48.0309 8.5351 47.4793 8.61316L47.43 8.62001L47.292 8.793L47.2952 8.84144C47.331 9.34402 47.3844 10.1035 47.3844 13.3071C47.3844 14.9289 47.3704 15.9171 47.3334 16.833L47.3317 16.8797L47.4793 17.0647L47.5465 17.0593C48.1091 17.0094 48.2772 17.0116 48.7996 17.0272L48.8692 17.0292L48.9935 16.8423L48.9923 16.8019C48.9582 15.7921 48.9156 14.5352 48.9156 11.597Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M47.3593 5.74847C47.3593 5.9863 47.3593 6.20774 47.3463 6.44532L47.3439 6.49842L47.5182 6.68511L47.5878 6.66945C48.1001 6.55739 48.2835 6.52778 48.7397 6.47982L48.7865 6.47517L48.9427 6.30781L48.941 6.25643C48.9285 5.76291 48.9285 5.53903 48.954 4.90653L48.9559 4.85441L48.7836 4.67065L48.7154 4.68313C48.2293 4.77685 48.0898 4.79324 47.5466 4.85784L47.5008 4.86322L47.3439 5.03131L47.3463 5.0849C47.3593 5.30633 47.3593 5.52753 47.3593 5.74847Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M53.7208 15.162C53.6078 15.4441 53.3984 15.8187 52.8888 15.8187C52.5071 15.8187 51.9744 15.6394 51.7574 14.0869C51.6986 13.7039 51.6692 13.2261 51.6692 12.668C51.6692 11.3031 51.8783 9.67648 52.876 9.67648C53.3104 9.67648 53.5239 9.96643 53.6725 10.2444C53.9365 10.8049 54.0704 11.6904 54.0704 12.8757C54.0704 13.8906 53.9564 14.6371 53.7208 15.162ZM52.9403 8.30823C52.1053 8.30823 51.4339 8.63683 50.9445 9.28475C50.3756 10.0391 50.0868 11.2099 50.0868 12.7636C50.0868 13.3173 50.0868 15.0012 50.8379 16.1091C51.314 16.815 52.0283 17.2029 52.8503 17.2029C53.7426 17.2029 54.4511 16.8016 54.9546 16.0093C55.4182 15.2696 55.6525 14.2156 55.6525 12.8757C55.6525 11.2043 55.351 9.96912 54.7558 9.204C54.2979 8.60967 53.6872 8.30823 52.9403 8.30823Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M61.8266 13.7178L61.8124 12.0762C61.8124 10.7244 61.8124 10.316 61.6148 9.67541C61.3429 8.7789 60.8242 8.32452 60.0736 8.32452C59.3489 8.32452 58.79 8.72384 58.334 9.17308C58.3394 9.02798 58.3492 8.91788 58.361 8.79089L58.3828 8.52149L58.2247 8.32428L58.1131 8.35291C57.588 8.48993 57.4115 8.53642 56.9161 8.613L56.8619 8.62206L56.7445 8.79725L56.7462 8.83835C56.8249 10.4594 56.8362 12.0823 56.8362 13.5945C56.8362 15.169 56.8087 16.1526 56.7847 16.8338L56.783 16.8798L56.9291 17.0631L57.1809 17.0467C57.5432 17.0227 57.6969 17.0134 58.1994 17.0273L58.2619 17.0288L58.4076 16.8475L58.4051 16.8C58.3289 15.3647 58.3281 11.9779 58.3281 10.649C58.4995 10.4324 58.9841 9.88436 59.5095 9.88436C60.1706 9.88436 60.2738 10.6275 60.2937 11.1844C60.3067 11.7652 60.3197 12.7895 60.3197 13.4985C60.3197 14.0241 60.3067 15.5893 60.2812 16.8353L60.2805 16.8747L60.4062 17.0635L60.4778 17.0591C60.9997 17.0273 61.1022 17.0273 61.6748 17.0273H61.7344L61.8788 16.8477L61.8763 16.8003C61.8396 16.0364 61.8381 15.7719 61.8266 13.7178Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M72.3238 5.45957C72.0852 5.47082 71.8948 5.48012 71.4712 5.48012H71.4111L71.2679 5.65825L71.2692 5.704C71.3206 7.53984 71.3206 9.39942 71.3206 11.1978C71.3206 13.0505 71.3116 13.8971 71.1081 14.5492C70.9814 14.9701 70.6413 15.6747 69.7807 15.6747C69.0933 15.6747 68.604 15.2262 68.4037 14.4117C68.2527 13.7995 68.2407 12.686 68.2407 11.2935C68.2407 9.67762 68.2407 7.23619 68.2791 5.67171L68.2804 5.62619L68.1343 5.4444L68.07 5.44807C67.4976 5.48012 67.353 5.48012 66.7448 5.48012H66.6781L66.5551 5.66461L66.5563 5.704C66.5999 7.33505 66.6195 9.08378 66.6195 11.3733V12.2203C66.6195 13.5025 66.6195 14.3496 66.8948 15.1839C67.2022 16.1122 67.9333 17.2189 69.6649 17.2189C70.0726 17.2189 71.3108 17.2189 72.1161 15.8964C72.7491 14.8548 72.7491 13.5676 72.7491 12.0762V10.3825C72.7491 9.82443 72.7491 9.26631 72.7621 8.70526C72.7751 6.85107 72.7751 6.2445 72.7751 5.66852V5.63084L72.6505 5.44513L72.3238 5.45957Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M78.0564 12.3958C78.0564 13.3273 77.9073 14.1693 77.6475 14.7041C77.1584 15.6591 76.3668 15.6591 76.1067 15.6591C76.0057 15.6591 75.9344 15.6513 75.8594 15.6425C75.8469 14.0523 75.8469 13.0354 75.8469 10.487C76.1087 10.1283 76.4141 9.80414 76.862 9.80414C77.3324 9.80414 77.6038 10.2022 77.7232 10.4366C77.8605 10.7224 77.9541 11.0728 77.9943 11.4567C78.0377 11.7278 78.0564 12.018 78.0564 12.3958ZM78.0701 8.49657C77.8154 8.37325 77.5442 8.30817 77.2849 8.30817C76.597 8.30817 76.1156 8.68424 75.8216 8.9852V8.51101L75.6591 8.34169L75.5878 8.36028C75.0509 8.50367 74.9016 8.53474 74.3596 8.61304L74.3039 8.62111L74.2093 8.76352L74.1873 8.81735L74.1895 8.8587C74.2517 9.97665 74.3292 11.3686 74.3292 15.5439C74.3292 17.3839 74.3182 18.1551 74.2966 19.691L74.2902 20.1833L74.4155 20.3709L74.5459 20.3629C74.8567 20.3428 75.1524 20.3274 75.4603 20.3428C75.5522 20.347 75.6437 20.3509 75.7351 20.3509H75.802L75.9251 20.1659L75.8935 19.0482C75.868 18.1818 75.8579 17.8382 75.8483 17.0506C75.8976 17.0545 75.941 17.0572 75.9807 17.0599C76.1062 17.0685 76.196 17.0743 76.3114 17.0743C77.5773 17.0743 78.327 16.3858 78.7325 15.8064C79.3085 14.974 79.6008 13.7942 79.6008 12.3001C79.6008 10.3977 79.0445 9.01285 78.0701 8.49657Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M84.5112 12.3958C84.5112 13.3271 84.3614 14.169 84.1016 14.7041C83.6125 15.6591 82.8207 15.6591 82.5608 15.6591C82.4608 15.6591 82.3887 15.6513 82.3135 15.6425C82.3017 14.0523 82.3017 13.0354 82.3017 10.487C82.5623 10.1283 82.868 9.80414 83.3164 9.80414C83.7873 9.80414 84.0587 10.2022 84.1773 10.4366C84.3141 10.7219 84.408 11.0723 84.448 11.457C84.4916 11.7276 84.5112 12.0175 84.5112 12.3958ZM84.5237 8.49657C84.2702 8.37325 83.9988 8.30817 83.7392 8.30817C83.0514 8.30817 82.5701 8.68424 82.2767 8.9852V8.51101L82.113 8.34169L82.0421 8.36028C81.506 8.50367 81.3564 8.53474 80.8134 8.61304L80.7583 8.62111L80.6639 8.76327L80.6411 8.81417L80.6436 8.85601C80.7061 9.97346 80.7831 11.3647 80.7831 15.5439C80.7831 17.3978 80.773 18.1757 80.7509 19.7264L80.7446 20.1833L80.8708 20.3709L80.9995 20.3629C81.3104 20.3428 81.6058 20.3281 81.9149 20.3428C82.0061 20.347 82.098 20.3509 82.1894 20.3509H82.2566L82.3794 20.1659L82.3471 19.0389C82.3218 18.1796 82.3123 17.8353 82.3032 17.0506C82.3515 17.0545 82.3954 17.0572 82.4353 17.0599C82.5608 17.0685 82.6508 17.0743 82.7658 17.0743C84.0317 17.0743 84.7811 16.3858 85.1866 15.8064C85.7629 14.9733 86.0546 13.7937 86.0546 12.3001C86.0546 10.3977 85.4981 9.01236 84.5237 8.49657Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M89.507 12.0366L89.1003 11.7667C88.7024 11.488 88.359 11.2467 88.359 10.6548C88.359 10.0409 88.7172 9.64455 89.2714 9.64455C89.5977 9.64455 90.0701 9.78475 90.4209 10.1782L90.4768 10.2408L90.7283 10.151V10.063C90.7283 9.87431 90.7283 9.66902 90.7413 9.47181C90.7413 9.27166 90.7538 9.08668 90.767 8.88873L90.7685 8.86378L90.7055 8.68124L90.6616 8.65824C90.0397 8.33306 89.3516 8.30835 89.1562 8.30835C88.4171 8.30835 87.8077 8.5726 87.3919 9.07567C87.0445 9.5249 86.8536 10.1479 86.8536 10.8298C86.8536 12.2032 87.5635 12.7106 88.3168 13.2499L88.6912 13.5076C89.1243 13.8171 89.4668 14.0608 89.4668 14.7129C89.4668 15.2685 89.1645 15.8668 88.5027 15.8668C87.8479 15.8668 87.4042 15.4437 87.1806 15.2301L87.1146 15.1677L86.8791 15.2935V15.3681C86.8791 15.5411 86.8791 15.7144 86.8666 15.9116C86.8666 16.1164 86.8536 16.3219 86.8413 16.5272L86.8398 16.5575L86.9318 16.767L86.9671 16.7875C87.4539 17.0667 87.9937 17.2027 88.6186 17.2027C89.1111 17.2027 89.835 17.1183 90.4202 16.3889C90.695 16.0452 91.0235 15.445 91.0235 14.5372C91.0235 13.0747 90.191 12.5049 89.507 12.0366Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M94.125 15.7065C93.6979 15.7065 93.1995 15.3586 93.1995 14.3774C93.1995 13.9133 93.2755 13.2502 93.9367 12.8523C94.1963 12.6837 94.3887 12.6309 95.0891 12.4464V15.1619C94.908 15.3701 94.5917 15.7065 94.125 15.7065ZM96.5553 13.5149V11.854L96.5565 11.7561C96.5695 10.5337 96.5752 9.97512 96.3266 9.40476C95.8373 8.30835 94.7709 8.30835 94.4194 8.30835C93.7445 8.30835 93.0179 8.49357 92.4747 8.80456L92.445 8.82071L92.3639 8.96263L92.3445 9.1525C92.3347 9.57286 92.3322 9.69985 92.2967 10.1332L92.2913 10.2036L92.518 10.3649L92.5926 10.302C92.8301 10.1004 93.2716 9.72432 94.0872 9.72432C95.0092 9.72432 95.0847 10.2428 95.0886 11.1618L94.6199 11.268C93.6869 11.5009 91.7461 11.9852 91.7461 14.5213C91.7461 16.0716 92.5509 17.1545 93.7021 17.1545C94.3718 17.1545 94.819 16.8482 95.108 16.5852L95.1153 16.8829L95.259 17.063L95.3247 17.0591C95.8076 17.0273 95.8907 17.0273 96.43 17.0273H96.4913L96.6357 16.8467L96.6323 16.7976C96.5553 15.7156 96.5553 15.0256 96.5553 13.5149Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M99.4882 7.93768C99.4882 6.44684 99.5 5.65579 99.5132 4.81898L99.5144 4.7309L99.3595 4.53784L99.1176 4.59779C98.7221 4.69737 98.5412 4.74264 98.0357 4.82632L97.9828 4.83513L97.8641 5.0113L97.8671 5.05314C97.9043 5.63793 97.9311 6.06025 97.9566 7.30078C97.9948 9.2017 97.9948 11.1342 97.9948 13.0031C97.9948 14.595 97.9828 15.7697 97.9695 16.8362L97.9693 16.8749L98.0951 17.065L98.1696 17.0591C98.7315 17.0097 98.8981 17.0117 99.397 17.0273L99.4603 17.0293L99.6051 16.8482L99.6032 16.8012C99.4914 14.1487 99.4882 7.9991 99.4882 7.93768Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M103.026 15.7065C102.599 15.7065 102.1 15.3586 102.1 14.3774C102.1 13.9133 102.176 13.2502 102.838 12.8523C103.097 12.6837 103.29 12.6309 103.989 12.4464V15.1619C103.808 15.3701 103.492 15.7065 103.026 15.7065ZM105.533 16.7976C105.456 15.7156 105.456 15.0256 105.456 13.5149V11.854L105.457 11.7561C105.47 10.5337 105.475 9.97512 105.227 9.40476C104.738 8.30835 103.67 8.30835 103.32 8.30835C102.645 8.30835 101.918 8.49357 101.375 8.80456L101.346 8.82071L101.265 8.96263L101.245 9.1525C101.234 9.57286 101.232 9.69985 101.197 10.1332L101.192 10.2036L101.418 10.3649L101.493 10.302C101.73 10.1004 102.172 9.72432 102.987 9.72432C103.909 9.72432 103.985 10.2428 103.989 11.1618L103.521 11.268C102.587 11.5009 100.646 11.9852 100.646 14.5213C100.646 16.0716 101.451 17.1545 102.603 17.1545C103.271 17.1545 103.719 16.8482 104.009 16.5852L104.015 16.8829L104.16 17.063L104.225 17.0591C104.707 17.0273 104.791 17.0273 105.331 17.0273H105.391L105.536 16.8467L105.533 16.7976Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M44.4142 12.1767L44.4069 12.1848C44.4091 12.336 44.412 12.4875 44.4142 12.6389V15.1976C44.1328 15.5509 43.8337 15.7229 43.502 15.7229C43.1277 15.7229 42.8404 15.5247 42.6002 15.1012C42.3378 14.6179 42.205 13.9174 42.205 13.0189C42.205 12.1019 42.3535 10.4945 43.35 10.0326C43.4197 9.99956 43.6332 9.90022 44.1039 9.90022C44.2331 9.90022 44.3252 9.90878 44.4142 9.92518V12.1767ZM45.988 15.7814L45.9665 13.8283C45.9547 12.8259 45.9405 11.6088 45.9378 10.6979C45.9373 10.5995 45.9373 10.5041 45.9373 10.4138L45.9361 10.4153C45.9451 9.87379 45.9601 9.30393 45.9836 8.6614L45.9851 8.62127L45.8579 8.43042L45.7836 8.43678C45.4183 8.46786 45.1658 8.46786 44.8469 8.46786C43.92 8.46786 42.9612 8.46786 42.1871 9.03454C40.8486 9.98635 40.6486 12.0299 40.6486 13.163C40.6486 15.0121 41.1947 16.3796 42.1442 16.9135C42.5009 17.1264 42.8772 17.1709 43.1306 17.1709C43.7555 17.1709 44.1718 16.8969 44.4272 16.6644L44.4564 16.6551C44.4564 16.7417 44.4574 16.8303 44.4574 16.9167C44.4574 18.6591 44.3267 18.9297 43.8479 18.9808C43.6334 19.0094 43.4616 19.0077 43.2951 19.0001C42.6256 18.9688 42.2292 18.6512 41.9983 18.443L41.9329 18.3838L41.6914 18.5096L41.6973 18.5905C41.7247 18.9652 41.7328 19.1372 41.7434 19.3904L41.7743 19.8034L41.8772 19.9772C41.9799 20.0501 42.1417 20.1663 42.4347 20.2649C42.8727 20.4244 43.3461 20.4482 43.59 20.4482C43.7053 20.4482 43.8325 20.4403 43.9639 20.4271C44.3652 20.4085 45.1977 20.331 45.6689 19.3185C46.0054 18.5972 46.0005 17.8308 45.988 15.7814Z\"></path><mask id=\"mask0_6775_6753\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"23\" height=\"23\"><path fill=\"white\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 0.244629H22.6408V22.8428H0V0.244629Z\"></path></mask><g mask=\"url(#mask0_6775_6753)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.6787 19.8487V3.01393C20.6787 3.01393 20.7059 2.30631 19.9693 2.30631H13.1121C13.1121 2.30631 13.7951 3.01393 13.7951 4.48421V5.02202C17.3872 5.34451 18.3212 7.48792 18.3212 9.40939V14.3091C18.3212 17.5504 15.5552 19.0422 15.5552 19.0422C15.5552 19.0422 14.2358 18.3554 13.8054 17.8731C13.2366 18.5147 11.8153 19.9211 11.3699 19.9211C10.9247 19.9211 9.55777 18.5081 9.00694 17.8692C8.61667 18.3351 7.27451 19.0246 7.27451 19.0246C7.27451 19.0246 4.43624 17.5504 4.43624 14.2555V9.40939C4.43624 7.4402 5.36141 5.45658 8.55857 5.09763C8.55857 5.09763 8.22297 3.6638 6.25961 3.6638C4.24748 3.6638 2.01177 5.31246 2.01177 8.73138V19.9745C2.01177 19.9745 2.0331 20.7998 2.83864 20.7998H19.7268C20.753 20.7998 20.6787 19.8487 20.6787 19.8487ZM15.2902 11.6644V14.7175C15.2902 15.9517 13.9392 16.8749 14.8144 16.8749C15.7165 16.8749 16.5363 15.1107 16.5363 14.3023C16.5363 13.9587 16.5368 9.32571 16.5368 8.96579C16.5368 7.74801 15.7165 6.39395 14.8149 6.39395C13.6308 6.39395 15.2907 7.02938 15.2907 8.2638V11.6644H15.2902ZM11.3517 17.6216C11.9626 17.6216 13.6159 15.3184 13.6159 14.1799V7.84124C13.6159 7.57135 13.1131 6.34868 12.1237 6.34868H10.5808C9.54919 6.34868 9.08783 7.57135 9.08783 7.84124V14.1799C9.08783 15.3184 10.771 17.6216 11.3517 17.6216ZM6.19024 8.96579V14.3023C6.19024 15.1107 7.01024 16.8749 7.91262 16.8749C8.87652 16.8749 7.43606 15.9517 7.43606 14.7165V11.6754V8.2638C7.43606 7.02938 9.09617 6.39395 7.91262 6.39395C7.01024 6.39395 6.19024 7.60805 6.19024 8.96579ZM6.0711 1.83065C10.1665 1.83065 10.4538 5.05799 10.4538 5.05799H12.0345C12.0345 2.83433 10.5974 0.432299 6.78986 0.432299L6.78741 0.244629H20.6694C21.9405 0.244629 22.6408 1.01195 22.6408 2.28355V20.7636C22.6408 22.0472 21.9405 22.8429 20.6606 22.8429H2.01177C0.743888 22.8429 -0.00012207 22.1032 -0.00012207 20.7782V8.42896C-0.00012207 6.67533 0.796103 1.83065 6.0711 1.83065Z\"></path></g>`}}export{l as IDSIconUppsala};\n", "import{IDSIconUppsala as i}from\"./icon-uppsala-element.js\";import{registerComponent as s}from\"../../../utilities/utils.js\";s(\"ids-icon-uppsala\",i);\n", "import{svg as C}from\"lit\";import{IDSIconBase as l}from\"../icon-base-element.js\";class e extends l{constructor(){super(),this.vbHeight=24,this.vbWidth=102}renderIcon(){return C`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.4368 11.4454C13.5673 10.4389 11.304 11.1238 10.2149 11.7698C9.04948 12.4607 8.33757 12.4607 7.77622 12.4819H7.77748C7.21639 12.4607 6.50422 12.4607 5.33908 11.7698C4.24999 11.1238 1.98691 10.4389 0.117188 11.4454V7.14736C1.98691 6.14012 4.24999 6.82475 5.33908 7.47073C6.50422 8.16117 7.21639 8.16117 7.77748 8.18239H7.77622C8.33757 8.16117 9.04948 8.16117 10.2149 7.47073C11.304 6.82475 13.5673 6.14012 15.4368 7.14736V11.4454Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.4368 17.0613C13.5673 16.0546 11.304 16.7397 10.2149 17.3855C9.04948 18.0759 8.33757 18.0759 7.77622 18.0971H7.77748C7.21639 18.0759 6.50422 18.0759 5.33908 17.3855C4.24999 16.7397 1.98691 16.0546 0.117188 17.0613V12.7628C1.98691 11.7553 4.24999 12.441 5.33908 13.0862C6.50422 13.7769 7.21639 13.7769 7.77748 13.7984H7.77622C8.33757 13.7769 9.04948 13.7769 10.2149 13.0862C11.304 12.441 13.5673 11.7553 15.4368 12.7628V17.0613Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.4368 22.6769C13.8204 21.8056 11.304 22.5266 10.2149 23.1726C9.04948 23.8625 8.33757 23.8625 7.77622 23.8845H7.77748C7.21639 23.8625 6.50422 23.8625 5.33908 23.1726C4.24999 22.5266 1.72519 21.8056 0.117188 22.6769V18.3786C1.98691 17.3716 4.24999 18.0565 5.33908 18.702C6.50422 19.3927 7.21639 19.3927 7.77748 19.4139H7.77622C8.33757 19.3927 9.04948 19.3927 10.2149 18.702C11.304 18.0565 13.5673 17.3716 15.4368 18.3786V22.6769Z\"></path><mask id=\"mask0_6775_185\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"16\" height=\"7\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.0621338 0.252686H15.4561V6.47946H0.0621338V0.252686Z\"></path></mask><g mask=\"url(#mask0_6775_185)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.70881 1.5713C9.21913 1.67766 9.73879 1.74461 10.2395 1.87926C10.6824 1.7345 11.1919 1.35934 11.6542 1.6673C12.0489 1.86966 11.5001 2.37012 12.0489 2.43732C12.8285 2.56338 13.2809 1.74461 13.8971 1.4172C14.4067 1.13829 14.9074 0.849279 15.4561 0.666879L15.4298 0.786374C15.1699 2.34511 15.1964 4.07362 15.4561 5.65256C15.0423 5.69071 14.7139 5.45981 14.3397 5.23825C13.8006 4.94974 13.3196 4.52658 12.8093 4.16987C12.4341 3.99682 12.0678 4.26637 11.7502 4.43008C11.6542 4.92094 11.8263 5.2433 11.73 5.79075C11.73 5.79075 11.6697 6.10326 11.5577 5.99867C11.4456 5.89383 10.0276 5.00734 10.0276 5.00734C9.70039 5.0849 9.35378 5.1228 9.03623 5.23825C9.20928 5.63589 9.4033 6.02797 9.33433 6.44153C9.32397 6.50393 9.28608 6.47058 9.28608 6.47058C8.61231 6.13357 7.98679 5.71042 7.32288 5.35345C6.447 5.30595 5.35943 5.36355 4.4449 5.2097C4.42545 5.46941 4.41559 5.78747 4.28119 6.02772C4.18494 6.16237 4.03084 6.24928 3.88633 6.21088C3.54957 5.82562 3.44372 5.28675 3.01046 5.00734C2.03858 4.86334 1.10612 4.65997 0.296183 4.15042C0.0748779 3.98696 0.0268779 3.72726 0.0844779 3.47741C0.123131 3.3809 0.24793 3.33315 0.315383 3.36195C0.421488 3.5537 0.460141 3.85231 0.739299 3.89096C1.00835 3.94856 1.40675 4.01046 1.59547 3.93896C1.80389 3.7692 1.61113 3.49888 1.54772 3.31395C1.25896 2.84178 0.700646 2.98629 0.24793 2.98629C0.0938252 2.92844 0.0362252 2.73593 0.132478 2.62023C1.75943 1.7345 3.66528 1.4652 5.59993 1.4172H6.22545C6.57458 0.996058 6.83909 0.671174 7.17837 0.252563C7.72961 0.6593 8.2081 1.14789 8.70881 1.5713Z\"></path></g><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M26.6188 3.68334C26.6188 2.68519 25.9435 2.18599 24.5929 2.18599C24.1106 2.18599 23.7059 2.21353 23.3788 2.26784C23.4081 2.9977 23.423 3.98953 23.423 5.24359C23.6746 5.25193 23.9156 5.25622 24.1463 5.25622C25.7947 5.25622 26.6188 4.73176 26.6188 3.68334ZM28.5438 9.58431H27.3297C26.927 8.38077 26.6334 7.58372 26.449 7.19391C26.2138 6.70304 25.9478 6.3865 25.6499 6.24376C25.415 6.13058 24.9933 6.07399 24.3855 6.07399C24.029 6.07399 23.7122 6.07803 23.4354 6.08662C23.4354 7.44123 23.4606 8.60713 23.5109 9.58431H22.3407C22.4036 8.28426 22.4352 6.85007 22.4352 5.28123C22.4352 3.80511 22.4036 2.50911 22.3407 1.39349H23.2279C23.4167 1.39349 23.6556 1.38717 23.9452 1.37454C24.2344 1.36191 24.5656 1.35559 24.939 1.35559C26.7762 1.35559 27.6945 1.98894 27.6945 3.25563C27.6945 4.30835 27.1786 5.04856 26.1468 5.47626V5.53917C26.6082 5.67761 26.9815 5.99845 27.2668 6.5017C27.5058 6.92106 27.9314 7.94877 28.5438 9.58431Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M33.6399 5.90411C33.6399 4.72558 33.147 4.13619 32.1615 4.13619C31.155 4.13619 30.5614 4.74882 30.3812 5.97333L33.6399 5.90411ZM34.6906 5.89148C34.6906 6.06756 34.682 6.31084 34.6654 6.62133L30.3433 6.69687C30.3853 7.30924 30.6222 7.82183 31.0542 8.23489C31.4862 8.64819 32.0587 8.85459 32.7716 8.85459C33.4093 8.85459 34.007 8.77703 34.5648 8.62192L34.4577 9.50891C34.0467 9.67261 33.4532 9.75421 32.6774 9.75421C31.5868 9.75421 30.7556 9.45661 30.1829 8.86091C29.6105 8.26545 29.3242 7.5399 29.3242 6.68423C29.3242 5.76996 29.5854 4.98251 30.1074 4.32188C30.6296 3.6615 31.3311 3.33105 32.2118 3.33105C33.0212 3.33105 33.6369 3.57004 34.0583 4.04828C34.4799 4.52625 34.6906 5.14091 34.6906 5.89148Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M40.3144 5.50148C40.3144 5.04017 40.1689 4.68674 39.8774 4.44144C39.5856 4.19613 39.2155 4.07335 38.767 4.07335C38.3431 4.07335 37.9889 4.19184 37.7037 4.42881C37.4185 4.66577 37.276 5.00228 37.276 5.43857C37.276 5.89584 37.4215 6.24371 37.7133 6.48295C38.0046 6.72194 38.379 6.84144 38.836 6.84144C39.2556 6.84144 39.6068 6.72497 39.89 6.4923C40.1727 6.25937 40.3144 5.92919 40.3144 5.50148ZM41.1893 10.6476C41.1893 10.2535 41.0453 9.97533 40.758 9.81415C40.4708 9.65247 39.9309 9.57188 39.1382 9.57188C38.6011 9.57188 38.1105 9.54662 37.6661 9.49634C37.1542 9.74367 36.8986 10.1067 36.8986 10.5847C36.8986 11.6078 37.5693 12.1197 38.9115 12.1197C39.6118 12.1197 40.1669 11.9835 40.5754 11.7109C40.9844 11.4381 41.1893 11.0839 41.1893 10.6476ZM42.3153 2.81525L42.2145 3.68329C41.4346 3.68329 41.0041 3.8091 40.9248 4.06072V4.12363C41.1933 4.45079 41.3275 4.82417 41.3275 5.24354C41.3275 5.89786 41.1122 6.43799 40.6825 6.86342C40.2528 7.28935 39.5891 7.50207 38.6915 7.50207C38.2929 7.50207 37.9763 7.46013 37.7414 7.37626C37.536 7.52304 37.4331 7.70569 37.4331 7.92346C37.4331 8.19201 37.5549 8.37011 37.7982 8.45828C38.1084 8.57575 38.7564 8.63436 39.7419 8.63436C41.3358 8.63436 42.1326 9.16287 42.1326 10.2199C42.1326 10.9747 41.8224 11.5998 41.2017 12.0947C40.5809 12.5893 39.7776 12.8369 38.7921 12.8369C37.7813 12.8369 37.061 12.6535 36.631 12.2864C36.2011 11.9193 35.9863 11.478 35.9863 10.9621C35.9863 10.4925 36.0922 10.115 36.3039 9.82982C36.5156 9.5446 36.7788 9.36851 37.0934 9.30131V9.24472C36.7622 9.08531 36.5964 8.77912 36.5964 8.32615C36.5964 7.91512 36.8061 7.55462 37.2255 7.24413V7.19386C37.0032 7.08472 36.7915 6.9003 36.5901 6.64009C36.3888 6.38013 36.2882 6.05727 36.2882 5.67125C36.2882 5.00455 36.5085 4.4614 36.9489 4.04203C37.3892 3.62266 38.0266 3.41272 38.8613 3.41272C39.5446 3.41272 40.082 3.53651 40.4718 3.78409H40.5408C40.6752 3.07521 41.0273 2.72076 41.5978 2.72076C41.9083 2.72076 42.1475 2.75234 42.3153 2.81525Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M45.2713 1.72055C45.2713 1.93453 45.2023 2.11996 45.0639 2.27735C44.9255 2.43449 44.7304 2.51331 44.4788 2.51331C44.2648 2.51331 44.0981 2.4451 43.9786 2.30868C43.8591 2.17251 43.7995 2.0078 43.7995 1.81504C43.7995 1.6051 43.8705 1.4227 44.0132 1.26759C44.1557 1.11247 44.353 1.03491 44.6046 1.03491C44.81 1.03491 44.9725 1.10312 45.0922 1.23929C45.2117 1.37571 45.2713 1.53613 45.2713 1.72055ZM45.0073 9.58447H43.8685C43.9273 8.74573 43.9566 7.7875 43.9566 6.70952C43.9566 5.4974 43.8831 4.4803 43.7363 3.65824L44.9944 3.48847C44.9442 4.3651 44.9189 5.43853 44.9189 6.70952C44.9189 7.71601 44.9485 8.67449 45.0073 9.58447Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M51.3298 6.6339C51.3298 5.97958 51.1654 5.39777 50.8359 4.88796C50.5065 4.37866 50.0381 4.12375 49.4298 4.12375C48.8257 4.12375 48.3614 4.36501 48.0363 4.84729C47.7111 5.32956 47.5487 5.88939 47.5487 6.52704C47.5487 7.18539 47.7132 7.76847 48.0426 8.276C48.372 8.78329 48.8427 9.03718 49.4551 9.03718C50.0591 9.03718 50.5224 8.79491 50.8453 8.31036C51.1681 7.82607 51.3298 7.26725 51.3298 6.6339ZM52.4184 6.4136C52.4184 7.48729 52.11 8.32527 51.4933 8.92704C50.8769 9.5288 50.1513 9.82969 49.3166 9.82969C48.5365 9.82969 47.8665 9.56341 47.3067 9.03087C46.7466 8.49832 46.4667 7.7475 46.4667 6.77866C46.4667 5.69664 46.7759 4.85133 47.3946 4.24325C48.0133 3.63516 48.7399 3.33099 49.5748 3.33099C50.3549 3.33099 51.0236 3.60055 51.5815 4.13941C52.1393 4.67853 52.4184 5.43643 52.4184 6.4136Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M59.2 9.58444H58.0553C58.1473 8.48145 58.1935 7.27791 58.1935 5.97332C58.1935 5.32759 58.0624 4.88599 57.8004 4.64903C57.5382 4.41206 57.1638 4.29357 56.6775 4.29357C56.0818 4.29357 55.5323 4.50983 55.0291 4.94157C55.0291 6.37197 55.0374 7.91959 55.0543 9.58444H53.9094C53.9806 8.15858 54.016 7.12684 54.016 6.48919C54.016 5.50772 53.9238 4.55581 53.7394 3.63294L54.8467 3.47581L54.9662 4.2433H55.0164C55.6371 3.68119 56.3018 3.40027 57.0107 3.40027C57.707 3.40027 58.2461 3.55437 58.6275 3.86284C59.0093 4.17079 59.2 4.71926 59.2 5.50772C59.2 5.58755 59.1957 5.74469 59.1876 5.97964C59.179 6.21458 59.1747 6.37197 59.1747 6.45155C59.1747 7.1521 59.1833 8.19623 59.2 9.58444Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M28.223 14.5302C28.223 14.8783 27.6935 16.2413 26.6345 18.6196C25.5755 20.9976 25.0459 22.3648 25.0459 22.7213H24.2282C24.2282 22.3984 23.7282 21.0415 22.7278 18.6509C21.7276 16.2602 21.2274 14.8867 21.2274 14.5302H22.4226C22.4226 14.8574 22.8041 16.0223 23.5675 18.0249C24.331 20.0277 24.7125 21.1737 24.7125 21.4629H24.7756C24.7756 21.1358 25.1614 19.9941 25.9332 18.0375C26.7047 16.0811 27.0907 14.9119 27.0907 14.5302H28.223Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M33.2747 14.8511C33.2747 15.0441 33.2108 15.2129 33.0827 15.3574C32.9549 15.5024 32.7778 15.5746 32.5512 15.5746C32.3625 15.5746 32.2157 15.5117 32.1108 15.3859C32.006 15.2601 31.9537 15.109 31.9537 14.933C31.9537 14.7483 32.0174 14.5858 32.1454 14.4454C32.2733 14.3049 32.4526 14.2347 32.6833 14.2347C32.872 14.2347 33.0178 14.2943 33.1206 14.4138C33.2232 14.5335 33.2747 14.6791 33.2747 14.8511ZM32.7336 21.5009C32.7126 20.8632 32.7022 20.291 32.7022 19.7835C31.9135 19.7835 31.314 19.8421 30.903 19.9596C30.2151 20.1692 29.8713 20.5697 29.8713 21.1611C29.8713 21.7315 30.274 22.0167 31.0791 22.0167C31.771 22.0167 32.3225 21.8447 32.7336 21.5009ZM30.8967 14.8511C30.8967 15.0441 30.8328 15.2129 30.7047 15.3574C30.5769 15.5024 30.3998 15.5746 30.1732 15.5746C29.9844 15.5746 29.8377 15.5117 29.7328 15.3859C29.628 15.2601 29.5754 15.109 29.5754 14.933C29.5754 14.7483 29.6393 14.5858 29.7674 14.4454C29.8953 14.3049 30.0746 14.2347 30.3053 14.2347C30.494 14.2347 30.6398 14.2943 30.7426 14.4138C30.8452 14.5335 30.8967 14.6791 30.8967 14.8511ZM33.8472 22.7213L32.8594 22.759C32.8091 22.5536 32.7841 22.3586 32.7841 22.1741H32.7212C32.2053 22.6438 31.5028 22.8787 30.6135 22.8787C30.1312 22.8787 29.7161 22.737 29.368 22.4538C29.0196 22.1708 28.8458 21.7671 28.8458 21.2429C28.8458 20.5972 29.1184 20.078 29.6636 19.6857C30.2088 19.2936 31.2216 19.0872 32.7022 19.0663C32.7149 18.9655 32.7212 18.8503 32.7212 18.7202C32.7212 18.2043 32.5838 17.8604 32.3092 17.6884C32.0343 17.5164 31.618 17.4305 31.0601 17.4305C30.4018 17.4305 29.7538 17.5123 29.1164 17.6758L29.2233 16.8077C29.8523 16.6274 30.5758 16.5372 31.3936 16.5372C32.1401 16.5372 32.7169 16.6913 33.1236 16.9995C33.5304 17.3077 33.734 17.8332 33.734 18.5754C33.734 18.7727 33.7244 19.1302 33.7057 19.6481C33.6868 20.1662 33.6774 20.5111 33.6774 20.6828C33.6774 21.4463 33.734 22.1256 33.8472 22.7213Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M39.44 21.0165C39.44 22.2413 38.6576 22.8534 37.0933 22.8534C36.4014 22.8534 35.7556 22.7842 35.1559 22.6457L35.3507 21.7211C35.8958 21.9308 36.4873 22.0354 37.1249 22.0354C38.0392 22.0354 38.4964 21.7757 38.4964 21.2553C38.4964 21.0036 38.3946 20.8036 38.1913 20.6545C37.9876 20.506 37.6511 20.339 37.1815 20.1545C36.586 19.9196 36.1538 19.6932 35.8855 19.475C35.4914 19.1521 35.2941 18.762 35.2941 18.305C35.2941 17.8268 35.4745 17.4168 35.8352 17.075C36.196 16.7332 36.7452 16.5624 37.4834 16.5624C38.2046 16.5624 38.7834 16.623 39.22 16.7448L39.0247 17.6507C38.5717 17.4703 38.0475 17.3801 37.4521 17.3801C36.6467 17.3801 36.2442 17.6128 36.2442 18.0784C36.2442 18.3134 36.3344 18.5031 36.5145 18.6479C36.6949 18.7924 37.0471 18.9677 37.5715 19.1731C38.1377 19.3954 38.5571 19.6134 38.8297 19.8274C39.2366 20.1586 39.44 20.5552 39.44 21.0165Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M44.2904 21.8531L44.2148 22.6709C43.8836 22.7927 43.5709 22.8535 43.2773 22.8535C42.5224 22.8535 42.0068 22.6615 41.7299 22.2778C41.4533 21.894 41.3146 21.2071 41.3146 20.2173C41.3146 19.5756 41.3187 18.7389 41.3272 17.7072C41.0923 17.7072 40.7464 17.7198 40.2892 17.7451L40.3271 16.8328C40.7255 16.8581 41.0819 16.8705 41.3965 16.8705C41.3965 16.6188 41.4174 16.0214 41.4594 15.0775L42.4469 14.977C42.3757 15.8577 42.34 16.489 42.34 16.8705C42.7511 16.8705 43.3551 16.8495 44.1519 16.8076L44.1077 17.7451C43.3528 17.7198 42.747 17.7072 42.2898 17.7072C42.2814 18.3405 42.2771 19.0535 42.2771 19.8462C42.2771 20.7105 42.3686 21.2817 42.5507 21.5606C42.7334 21.8395 43.0719 21.9789 43.5671 21.9789C43.7303 21.9789 43.9715 21.937 44.2904 21.8531Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M49.575 19.0409C49.575 17.8624 49.0819 17.273 48.0963 17.273C47.0899 17.273 46.4962 17.8857 46.3158 19.1102L49.575 19.0409ZM50.6254 19.0283C50.6254 19.2044 50.6171 19.4477 50.6004 19.7582L46.2784 19.8337C46.3201 20.4461 46.5571 20.9587 46.9891 21.3717C47.4211 21.785 47.9935 21.9914 48.7064 21.9914C49.3441 21.9914 49.9418 21.9141 50.4996 21.7585L50.3925 22.6457C49.9815 22.8095 49.3883 22.8911 48.6122 22.8911C47.5219 22.8911 46.6904 22.5935 46.1177 21.998C45.5453 21.4023 45.259 20.6765 45.259 19.8208C45.259 18.9068 45.5203 18.1193 46.0422 17.4587C46.5644 16.7983 47.2659 16.4679 48.1466 16.4679C48.956 16.4679 49.5717 16.7069 49.9931 17.1851C50.4147 17.6631 50.6254 18.2777 50.6254 19.0283Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M55.8785 16.7447L55.5953 17.7449C55.2681 17.615 54.9642 17.5501 54.6833 17.5501C53.8946 17.5501 53.383 17.9253 53.1481 18.6761C53.1481 20.6054 53.1607 21.9537 53.186 22.7212H52.0724C52.1393 21.3919 52.1729 20.3601 52.1729 19.626C52.1729 18.6321 52.0744 17.68 51.8773 16.77L52.9783 16.6126C53.0579 17.0741 53.0978 17.3824 53.0978 17.5375H53.1481C53.601 16.8705 54.1295 16.537 54.7336 16.537C55.0521 16.537 55.4339 16.6063 55.8785 16.7447Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M62.232 22.7213H61.0873C61.1793 21.6183 61.2255 20.4145 61.2255 19.1102C61.2255 18.4644 61.0944 18.0228 60.8324 17.7859C60.5702 17.5489 60.1958 17.4304 59.7095 17.4304C59.1138 17.4304 58.5643 17.6467 58.061 18.0784C58.061 19.5088 58.0694 21.0562 58.0863 22.7213H56.9414C57.0126 21.2952 57.048 20.2634 57.048 19.626C57.048 18.6446 56.9558 17.6926 56.7714 16.7698L57.8786 16.6126L57.9981 17.3801H58.0484C58.6691 16.818 59.3338 16.5371 60.0427 16.5371C60.7389 16.5371 61.2781 16.6912 61.6595 16.9997C62.0413 17.3076 62.232 17.8561 62.232 18.6446C62.232 18.7244 62.2277 18.8815 62.2196 19.1165C62.211 19.3514 62.2067 19.5088 62.2067 19.5884C62.2067 20.2887 62.2153 21.3331 62.232 22.7213Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M68.2782 19.7706C68.2782 19.1165 68.1137 18.5345 67.7843 18.0249C67.4549 17.5154 66.9865 17.2605 66.3782 17.2605C65.7744 17.2605 65.3098 17.502 64.9849 17.984C64.6598 18.4663 64.4971 19.0264 64.4971 19.6637C64.4971 20.3224 64.6618 20.9052 64.991 21.4127C65.3204 21.9203 65.791 22.1741 66.4034 22.1741C67.0075 22.1741 67.4708 21.9319 67.7936 21.4473C68.1165 20.963 68.2782 20.4042 68.2782 19.7706ZM69.3668 19.5506C69.3668 20.6243 69.0583 21.462 68.4416 22.0637C67.8252 22.6658 67.0997 22.9664 66.265 22.9664C65.4848 22.9664 64.8149 22.7004 64.255 22.1676C63.695 21.635 63.415 20.8842 63.415 19.9154C63.415 18.8333 63.7245 17.9883 64.3432 17.3802C64.9616 16.7721 65.6882 16.468 66.5232 16.468C67.3033 16.468 67.972 16.7375 68.5298 17.2764C69.0876 17.8152 69.3668 18.5734 69.3668 19.5506Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M74.6196 16.7447L74.3364 17.7449C74.0092 17.615 73.7053 17.5501 73.4244 17.5501C72.6357 17.5501 72.1241 17.9253 71.8891 18.6761C71.8891 20.6054 71.9018 21.9537 71.927 22.7212H70.8134C70.8804 21.3919 70.914 20.3601 70.914 19.626C70.914 18.6321 70.8155 17.68 70.6184 16.77L71.7194 16.6126C71.799 17.0741 71.8389 17.3824 71.8389 17.5375H71.8891C72.3421 16.8705 72.8706 16.537 73.4747 16.537C73.7932 16.537 74.175 16.6063 74.6196 16.7447Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M79.4445 16.7447L79.1613 17.7449C78.8342 17.615 78.5303 17.5501 78.2493 17.5501C77.4606 17.5501 76.949 17.9253 76.7141 18.6761C76.7141 20.6054 76.7267 21.9537 76.752 22.7212H75.6384C75.7053 21.3919 75.7389 20.3601 75.7389 19.626C75.7389 18.6321 75.6404 17.68 75.4434 16.77L76.5443 16.6126C76.6239 17.0741 76.6638 17.3824 76.6638 17.5375H76.7141C77.1671 16.8705 77.6956 16.537 78.2996 16.537C78.6182 16.537 78.9999 16.6063 79.4445 16.7447Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M81.4264 22.7213H80.2185C80.2941 21.3371 80.3314 19.7728 80.3314 18.0281C80.3314 16.3337 80.2708 14.9475 80.149 13.8695L81.4264 13.8066C81.3465 14.9475 81.3066 16.3547 81.3066 18.0281C81.3066 19.7518 81.3465 21.3161 81.4264 22.7213Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M86.7739 21.5008C86.7529 20.8634 86.7425 20.291 86.7425 19.7834C85.9538 19.7834 85.3541 19.8423 84.943 19.9595C84.2551 20.1692 83.9113 20.5696 83.9113 21.161C83.9113 21.7315 84.314 22.0167 85.1191 22.0167C85.8113 22.0167 86.3628 21.8446 86.7739 21.5008ZM87.8872 22.7213L86.8997 22.7589C86.8494 22.5535 86.8241 22.3588 86.8241 22.1741H86.7612C86.2454 22.6437 85.5428 22.8787 84.6538 22.8787C84.1713 22.8787 83.7562 22.7372 83.4081 22.4537C83.0599 22.1708 82.8859 21.7673 82.8859 21.2429C82.8859 20.5972 83.1585 20.078 83.7039 19.6857C84.2491 19.2938 85.2619 19.0872 86.7425 19.0662C86.7549 18.9654 86.7612 18.8502 86.7612 18.7201C86.7612 18.2042 86.6238 17.8604 86.3492 17.6884C86.0743 17.5166 85.6582 17.4304 85.1004 17.4304C84.4421 17.4304 83.7938 17.5123 83.1564 17.6757L83.2633 16.8077C83.8926 16.6273 84.6159 16.5371 85.4339 16.5371C86.1802 16.5371 86.7572 16.6912 87.1639 16.9997C87.5707 17.3076 87.7743 17.8331 87.7743 18.5753C87.7743 18.7726 87.7647 19.1301 87.746 19.648C87.7268 20.1662 87.7174 20.511 87.7174 20.683C87.7174 21.4462 87.7743 22.1258 87.8872 22.7213Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M94.8139 22.7213H93.6692C93.7612 21.6183 93.8074 20.4145 93.8074 19.1102C93.8074 18.4644 93.6763 18.0228 93.4143 17.7859C93.1521 17.5489 92.7777 17.4304 92.2914 17.4304C91.6957 17.4304 91.1462 17.6467 90.643 18.0784C90.643 19.5088 90.6513 21.0562 90.6682 22.7213H89.5233C89.5945 21.2952 89.6299 20.2634 89.6299 19.626C89.6299 18.6446 89.5377 17.6926 89.3533 16.7698L90.4606 16.6126L90.5801 17.3801H90.6303C91.251 16.818 91.9157 16.5371 92.6246 16.5371C93.3209 16.5371 93.86 16.6912 94.2414 16.9997C94.6232 17.3076 94.8139 17.8561 94.8139 18.6446C94.8139 18.7244 94.8096 18.8815 94.8015 19.1165C94.7929 19.3514 94.7886 19.5088 94.7886 19.5884C94.7886 20.2887 94.7972 21.3331 94.8139 22.7213Z\"></path><mask id=\"mask1_6775_185\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"96\" y=\"13\" width=\"6\" height=\"10\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M96.2548 13.832H101.885V22.8911H96.2548V13.832Z\"></path></mask><g mask=\"url(#mask1_6775_185)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M100.873 21.4757C100.873 20.1713 100.837 18.9152 100.765 17.7071C100.426 17.4265 100.002 17.2858 99.4948 17.2858C98.7859 17.2858 98.2556 17.5217 97.9032 17.9936C97.551 18.4653 97.3747 19.0577 97.3747 19.7706C97.3747 20.4083 97.5412 20.9451 97.8749 21.3812C98.2081 21.8177 98.6704 22.0355 99.2621 22.0355C100.004 22.0355 100.541 21.849 100.873 21.4757ZM101.885 22.7148L100.948 22.7464C100.914 22.566 100.898 22.3755 100.898 22.1742H100.828C100.388 22.6522 99.7338 22.8911 98.8657 22.8911C98.0687 22.8911 97.4346 22.6019 96.9624 22.0231C96.4907 21.4443 96.2548 20.7458 96.2548 19.928C96.2548 19.0011 96.517 18.2021 97.0412 17.5311C97.5654 16.8601 98.3036 16.5246 99.2558 16.5246C99.9351 16.5246 100.422 16.663 100.715 16.9397H100.765C100.765 15.8996 100.736 14.8784 100.678 13.876L101.873 13.832C101.793 14.8974 101.753 16.2917 101.753 18.0156C101.753 19.7686 101.797 21.3352 101.885 22.7148Z\"></path></g>`}}export{e as IDSIconVasternorrland};\n", "import{IDSIconVasternorrland as r}from\"./icon-vasternorrland-element.js\";import{registerComponent as i}from\"../../../utilities/utils.js\";i(\"ids-icon-vasternorrland\",r);\n", "import{svg as l}from\"lit\";import{IDSIconBase as C}from\"../icon-base-element.js\";class e extends C{constructor(){super(),this.vbHeight=24,this.vbWidth=83}renderIcon(){return l`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M31.6327 7.49258C32.431 7.49258 32.9516 7.01895 32.9516 6.14085C32.9516 5.60954 32.7549 5.19359 32.3037 5.00864C32.0722 4.90461 31.76 4.85856 31.378 4.85856H30.2675V7.49258H31.6327ZM27.7684 10.7159H28.7518V4.78926H27.7684V3.64557H31.3897C31.9913 3.64557 32.4888 3.68 32.9516 3.8186C33.8656 4.11905 34.4672 4.85856 34.4672 6.01387C34.4672 7.15756 33.8656 7.96622 32.9169 8.28962V8.31287C32.9169 8.31287 33.1599 8.43985 33.3219 8.7403L34.2705 10.4502C34.3862 10.6581 34.5482 10.7159 34.8259 10.7159H35.092V11.8481H34.1317C33.449 11.8481 33.2408 11.7092 32.9863 11.2357L31.8177 9.12153C31.6443 8.8096 31.4937 8.70557 31.0195 8.70557H30.2675V10.7159H31.2161V11.8481H27.7684V10.7159Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M39.6321 8.28121C39.6082 7.44481 39.0953 6.943 38.451 6.943C37.6756 6.943 37.1269 7.48071 36.9837 8.28121H39.6321ZM38.4868 5.77216C40.2406 5.77216 41.1949 7.05057 41.1949 8.66342C41.1949 8.84266 41.159 9.1771 41.159 9.1771H36.9479C37.0433 10.3002 37.8546 10.8736 38.7732 10.8736C39.7634 10.8736 40.5387 10.2285 40.5387 10.2285L41.1233 11.3038C41.1233 11.3038 40.1927 12.1519 38.6658 12.1519C36.6498 12.1519 35.3971 10.6944 35.3971 8.96225C35.3971 7.08648 36.6616 5.77216 38.4868 5.77216Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M46.5228 8.73537C46.5228 7.38741 45.8386 7.02718 45.0362 7.02718C44.1277 7.02718 43.6204 7.67793 43.6204 8.67735C43.6204 9.71142 44.1633 10.4785 45.1307 10.4785C45.8386 10.4785 46.5228 10.0718 46.5228 8.73537ZM44.7886 13.0699C45.7089 13.0699 46.4875 12.6748 46.4875 11.5824V11.2105C46.4875 11.0711 46.5111 10.8969 46.5111 10.8969H46.4875C46.1335 11.4198 45.6144 11.7218 44.8121 11.7218C43.0779 11.7218 42.1104 10.3508 42.1104 8.72368C42.1104 7.09689 43.0424 5.77216 44.7767 5.77216C45.4964 5.77216 46.3104 6.03944 46.6408 6.66695H46.6644C46.6644 6.66695 46.6408 6.58555 46.6408 6.46952C46.6408 6.15576 46.8533 5.91157 47.3251 5.91157H48.8236V7.01549H48.2451C48.0918 7.01549 47.9857 7.09689 47.9857 7.24784V11.4779C47.9857 13.5116 46.3813 14.2785 44.8121 14.2785C44.0571 14.2785 43.2547 14.0694 42.6648 13.7672L43.125 12.6748C43.125 12.6748 43.8682 13.0699 44.7886 13.0699Z\"></path><mask id=\"mask0_6775_3959\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"83\" height=\"24\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 24H83V0H0V24Z\" fill=\"white\"></path></mask><g mask=\"url(#mask0_6775_3959)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M50.0671 4.95096H51.607V3.64557H50.0671V4.95096ZM49.1887 10.7505H50.0791V7.05353H49.1287V5.95604H51.6069V10.7505H52.4853V11.8481H49.1887V10.7505Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M56.153 10.8616C57.1342 10.8616 57.9599 10.097 57.9599 8.9621C57.9599 7.83904 57.1342 7.06244 56.153 7.06244C55.1599 7.06244 54.334 7.83904 54.334 8.9621C54.334 10.097 55.1599 10.8616 56.153 10.8616ZM56.141 5.77216C58.0077 5.77216 59.5036 7.0985 59.5036 8.9621C59.5036 10.8379 58.0077 12.1519 56.153 12.1519C54.2863 12.1519 52.7904 10.8379 52.7904 8.9621C52.7904 7.0985 54.2863 5.77216 56.141 5.77216Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M60.1716 10.7423H61.028V7.2738C61.028 7.11074 60.9354 7.01764 60.7734 7.01764H60.114V5.91194H61.6643C62.1849 5.91194 62.4279 6.15639 62.4279 6.57531V6.84302C62.4279 6.9711 62.4047 7.09917 62.4047 7.09917H62.4279C62.4973 6.91284 63.1219 5.77216 64.6029 5.77216C65.8641 5.77216 66.5814 6.45894 66.5814 8.0304V10.7423H67.4375V11.8481H65.1235V8.33295C65.1235 7.61133 64.927 7.12245 64.1864 7.12245C63.1219 7.12245 62.4973 8.14662 62.4973 9.18265V10.7423H63.3418V11.8481H60.1716V10.7423Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M28.5346 15.4222H27.7684V14.2785H31.0332V15.4222H30.1494L31.717 20.1011C31.823 20.4361 31.8584 20.8405 31.8584 20.8405H31.9056C31.9056 20.8405 31.941 20.4361 32.0588 20.1011L33.6146 15.4222H32.7424V14.2785H36.0074V15.4222H35.2295L32.6834 22.481H31.0805L28.5346 15.4222Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M38.9236 15.6472H40.1584V14.2785H38.9236V15.6472ZM37.7955 21.6641C38.6148 21.6641 39.1966 20.791 39.1966 20.0358V19.8355H38.9474C38.3537 19.8355 36.917 19.9297 36.917 20.8381C36.917 21.2865 37.2375 21.6641 37.7955 21.6641ZM36.347 15.6472H37.5819V14.2785H36.347V15.6472ZM38.8048 18.9271H39.1848V18.7263C39.1848 17.9596 38.698 17.6881 38.0686 17.6881C37.1663 17.6881 36.3588 18.2661 36.3588 18.2661L35.8008 17.228C35.8008 17.228 36.7388 16.485 38.1993 16.485C39.8259 16.485 40.6927 17.3225 40.6927 18.8561V21.2631C40.6927 21.4399 40.7875 21.5225 40.954 21.5225H41.5V22.6431H40.0751C39.5173 22.6431 39.3036 22.3483 39.3036 22.0061V21.9354C39.3036 21.7466 39.3392 21.6286 39.3392 21.6286H39.3154C39.3154 21.6286 38.8048 22.7848 37.4037 22.7848C36.3708 22.7848 35.3971 22.1832 35.3971 20.9561C35.3971 19.1156 37.8312 18.9271 38.8048 18.9271Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M42.1697 21.3646H43.0471V17.8626C43.0471 17.6978 42.9523 17.604 42.7863 17.604H42.1104V16.4874H43.6876C44.2211 16.4874 44.4939 16.7107 44.4939 17.2162V17.5686C44.4939 17.7918 44.47 17.9448 44.47 17.9448H44.4939C44.7665 17.0868 45.4898 16.4051 46.4148 16.4051C46.5571 16.4051 46.6876 16.4289 46.6876 16.4289V17.8978C46.6876 17.8978 46.5334 17.8741 46.32 17.8741C45.0987 17.8741 44.5531 18.932 44.5531 20.0601V21.3646H45.4187V22.481H42.1697V21.3646Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M47.3566 21.3753H48.228V17.8949C48.228 17.7319 48.1338 17.6505 47.9689 17.6505H47.2979V16.5446H48.8638C49.3936 16.5446 49.6527 16.789 49.6527 17.2081V17.4759C49.6527 17.6038 49.6292 17.7319 49.6292 17.7319H49.6527C49.9588 17.1267 50.7123 16.4051 51.7014 16.4051C52.5372 16.4051 53.1378 16.789 53.3732 17.697H53.3969C53.7265 16.9985 54.5273 16.4051 55.4808 16.4051C56.6936 16.4051 57.4118 17.1033 57.4118 18.6632V21.3753H58.2831V22.481H55.9164V18.9424C55.9164 18.2673 55.787 17.7552 55.0923 17.7552C54.068 17.7552 53.5617 18.768 53.5617 19.862V21.3753H54.4329V22.481H52.0781V18.9424C52.0781 18.3023 51.9722 17.7552 51.2656 17.7552C50.206 17.7552 49.7233 18.8609 49.7233 19.932V21.3753H50.5827V22.481H47.3566V21.3753Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M58.9215 15.4104H57.9779V14.2785H60.4267V20.7118C60.4267 21.26 60.5461 21.5457 61.0479 21.5457C61.2151 21.5457 61.3345 21.5337 61.3345 21.5337V22.7489C61.3345 22.7489 61.0838 22.7848 60.785 22.7848C59.8176 22.7848 58.9215 22.463 58.9215 20.8071V15.4104Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M64.0379 21.6498C64.8572 21.6498 65.4391 20.7656 65.4391 20.0008V19.798H65.1898C64.5959 19.798 63.1594 19.8936 63.1594 20.8135C63.1594 21.2674 63.48 21.6498 64.0379 21.6498ZM65.0472 18.8781H65.4272V18.6748C65.4272 17.8984 64.9404 17.6234 64.311 17.6234C63.4087 17.6234 62.6012 18.2089 62.6012 18.2089L62.0432 17.1577C62.0432 17.1577 62.9812 16.4051 64.4417 16.4051C66.0683 16.4051 66.9349 17.2532 66.9349 18.8063V21.2436C66.9349 21.4227 67.0301 21.5064 67.1962 21.5064H67.7426V22.6414H66.3177C65.7595 22.6414 65.546 22.3427 65.546 21.9962V21.9245C65.546 21.7334 65.5816 21.6138 65.5816 21.6138H65.5577C65.5577 21.6138 65.0472 22.7848 63.6461 22.7848C62.6132 22.7848 61.6396 22.1755 61.6396 20.9329C61.6396 19.069 64.0735 18.8781 65.0472 18.8781Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M68.4107 21.3753H69.2669V17.9067C69.2669 17.7434 69.1744 17.6505 69.0124 17.6505H68.3529V16.5446H69.9032C70.4239 16.5446 70.6669 16.789 70.6669 17.2081V17.4759C70.6669 17.6038 70.6437 17.7319 70.6437 17.7319H70.6669C70.7361 17.5457 71.3609 16.4051 72.8419 16.4051C74.103 16.4051 74.8203 17.0916 74.8203 18.6632V21.3753H75.6764V22.481H73.3625V18.9659C73.3625 18.2439 73.1658 17.7552 72.4253 17.7552C71.3609 17.7552 70.7361 18.7795 70.7361 19.8155V21.3753H71.5807V22.481H68.4107V21.3753Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M79.2574 21.5241C80.0411 21.5241 80.7662 20.9586 80.7662 19.6745C80.7662 18.6965 80.2867 17.7775 79.3042 17.7775C78.4621 17.7775 77.7836 18.4491 77.7836 19.6389C77.7836 20.7817 78.392 21.5241 79.2574 21.5241ZM79.0118 16.4935C80.2867 16.4935 80.7313 17.3417 80.7313 17.3417H80.7544C80.7544 17.3417 80.7313 17.165 80.7313 16.9175V15.3977H79.8072V14.2785H82.2048V21.265C82.2048 21.4416 82.2985 21.5241 82.4621 21.5241H83V22.6433H81.5965C81.0586 22.6433 80.8362 22.3488 80.8362 22.0071V21.9365C80.8362 21.7716 80.8715 21.6655 80.8715 21.6655H80.848C80.848 21.6655 80.3803 22.7848 78.8948 22.7848C77.3043 22.7848 76.2867 21.5006 76.2867 19.6389C76.2867 17.7305 77.3978 16.4935 79.0118 16.4935Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.3387 17.6865H12.5081C12.8856 18.6522 12.7038 19.5707 13.3716 20.506C14.3213 21.8372 15.4356 21.9358 17.0851 22.4413C17.5593 20.7781 18.0885 19.8201 17.5617 18.2685C17.1858 17.1627 16.4528 16.7583 15.7808 15.8633L16.0756 15.6216C17.0381 15.963 17.8706 16.6464 19.1271 16.656C20.7588 16.6677 21.5338 15.9448 22.9627 14.9771C21.9743 13.5603 21.56 12.5565 20.0324 11.9797C18.9444 11.5689 18.1028 11.8504 17.0571 11.8147L16.9764 11.4717C17.8678 10.9434 18.8443 10.8183 19.6331 9.91005C20.7056 8.67546 20.5978 7.5862 20.7483 5.86235C19.0284 5.74184 18.0026 5.45441 16.582 6.26111C15.5723 6.83494 15.1693 7.59019 14.5279 8.42395L14.2611 8.29014C14.433 7.21198 14.8938 6.48068 14.7073 5.32637C14.4473 3.70927 13.5542 3.09064 12.3349 1.86727C11.116 3.09064 10.2225 3.70927 9.96146 5.32637C9.77525 6.48068 10.2365 7.21198 10.4093 8.29014L10.1418 8.42395C9.49947 7.59019 9.09759 6.83494 8.08743 6.26111C6.66685 5.45441 5.64152 5.74184 3.92144 5.86235C4.07156 7.5862 3.96387 8.67546 5.03605 9.91005C5.82522 10.8183 6.8012 10.9434 7.69247 11.4717L7.61277 11.8147C6.56653 11.8504 5.72461 11.5689 4.63682 11.9797C3.10987 12.5565 2.69561 13.5603 1.70682 14.9771C3.1355 15.9448 3.91113 16.6677 5.54267 16.656C6.7987 16.6464 7.63178 15.963 8.59435 15.6216L8.88869 15.8633C8.21663 16.7583 7.48328 17.1627 7.10777 18.2685C6.5817 19.8201 7.11013 20.7781 7.58523 22.4413C9.23371 21.9358 10.348 21.8372 11.2988 20.506C11.9657 19.5707 11.7838 18.6522 12.1608 17.6865H12.3312H12.3387ZM12.3349 0L14.0043 1.61311C14.0043 1.61311 15.0502 2.55111 15.4618 3.32691C15.7917 3.94983 15.9146 4.30853 16.0205 5.04707C16.6489 4.68866 17.011 4.62257 17.6813 4.49675C18.5418 4.33529 19.9257 4.47072 19.9257 4.47072C19.9257 4.47072 21.3184 4.5692 22.196 4.72045C22.1443 5.61321 21.9678 7.00099 21.9678 7.00099C21.9678 7.00099 21.8993 8.40784 21.5581 9.21646C21.2837 9.86599 21.0826 10.1879 20.577 10.7344C21.2514 11 21.5296 11.2399 22.049 11.6842C22.7155 12.2545 23.4824 13.4188 23.4824 13.4188C23.4824 13.4188 24.2817 14.5663 24.7169 15.3466C23.994 15.8679 22.8075 16.6038 22.8075 16.6038C22.8075 16.6038 21.6763 17.4393 20.8347 17.678C20.1152 17.8816 19.6685 17.8956 18.9267 17.8456C19.1451 18.5379 19.0583 18.924 19.0184 19.6143C18.9671 20.4917 18.5775 21.8234 18.5775 21.8234C18.5775 21.8234 18.1915 23.1696 17.8612 24C17.0031 23.7642 15.6864 23.3017 15.6864 23.3017C15.6864 23.3017 14.3247 22.951 13.6127 22.4389C13.0507 22.0348 12.8072 21.7699 12.3795 21.1597C11.9514 21.7699 11.6799 22.0338 11.1042 22.4389C10.3863 22.9422 9.02967 23.3017 9.02967 23.3017C9.02967 23.3017 7.71339 23.7642 6.85527 24C6.52483 23.1696 6.13931 21.8234 6.13931 21.8234C6.13931 21.8234 5.74877 20.4917 5.69794 19.6143C5.65802 18.924 5.57169 18.5379 5.79002 17.8456C5.04842 17.8956 4.60087 17.8816 3.88255 17.678C3.0396 17.4393 1.90909 16.6038 1.90909 16.6038C1.90909 16.6038 0.723181 15.8679 0 15.3466C0.434734 14.5663 1.23452 13.4188 1.23452 13.4188C1.23452 13.4188 2.00116 12.2545 2.66748 11.6842C3.18677 11.2399 3.46594 11 4.13888 10.7344C3.63388 10.1879 3.43308 9.86599 3.15878 9.21646C2.81656 8.40784 2.74865 7.00099 2.74865 7.00099C2.74865 7.00099 2.5726 5.61321 2.52031 4.72045C3.39846 4.5692 4.79017 4.47072 4.79017 4.47072C4.79017 4.47072 6.17451 4.33529 7.03558 4.49675C7.70632 4.62257 8.06754 4.68866 8.69688 5.04707C8.80236 4.30853 8.92463 3.94983 9.25507 3.32691C9.66667 2.55111 10.7125 1.61311 10.7125 1.61311C10.7125 1.61311 11.6761 0.601774 12.3349 0Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.71326 8.50634C6.71326 8.17074 6.98617 7.89874 7.32355 7.89874C7.66064 7.89874 7.93385 8.17074 7.93385 8.50634C7.93385 8.84179 7.66064 9.11393 7.32355 9.11393C6.98617 9.11393 6.71326 8.84179 6.71326 8.50634Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.49268 14.2786C5.49268 13.9431 5.76623 13.6709 6.10378 13.6709C6.44015 13.6709 6.71326 13.9431 6.71326 14.2786C6.71326 14.6143 6.44015 14.8861 6.10378 14.8861C5.76623 14.8861 5.49268 14.6143 5.49268 14.2786Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.84924 18.532C8.84924 18.1964 9.12216 17.9241 9.45954 17.9241C9.79603 17.9241 10.0698 18.1964 10.0698 18.532C10.0698 18.868 9.79603 19.1393 9.45954 19.1393C9.12216 19.1393 8.84924 18.868 8.84924 18.532Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.7831 8.50634C16.7831 8.1706 17.0571 7.89874 17.394 7.89874C17.7302 7.89874 18.0037 8.1706 18.0037 8.50634C18.0037 8.84164 17.7302 9.11393 17.394 9.11393C17.0571 9.11393 16.7831 8.84164 16.7831 8.50634Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M18.3088 14.2787C18.3088 13.9429 18.5822 13.6709 18.9182 13.6709C19.2562 13.6709 19.5294 13.9429 19.5294 14.2787C19.5294 14.6143 19.2562 14.8861 18.9182 14.8861C18.5822 14.8861 18.3088 14.6143 18.3088 14.2787Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14.6471 18.5316C14.6471 18.196 14.9201 17.9241 15.2572 17.9241C15.5942 17.9241 15.8677 18.196 15.8677 18.5316C15.8677 18.8675 15.5942 19.1393 15.2572 19.1393C14.9201 19.1393 14.6471 18.8675 14.6471 18.5316Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11.9008 6.07598C11.9008 5.74024 12.1735 5.46838 12.5111 5.46838C12.848 5.46838 13.1213 5.74024 13.1213 6.07598C13.1213 6.41201 12.848 6.68357 12.5111 6.68357C12.1735 6.68357 11.9008 6.41201 11.9008 6.07598Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.2059 12.4557H12.8162V6.07593H12.2059V12.4557Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.4966 12.7595L12.2059 12.4089L17.1028 8.50635L17.3934 8.857L12.4966 12.7595Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M18.7966 14.5823L12.511 12.8933L12.6335 12.4557L18.9191 14.1446L18.7966 14.5823Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.1335 18.5316L12.2059 12.6531L12.6352 12.4557L15.5626 18.3341L15.1335 18.5316Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.56976 18.5316L9.15442 18.3281L12.0957 12.4557L12.511 12.6593L9.56976 18.5316Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.22032 14.5823L6.10291 14.1304L12.3936 12.4557L12.511 12.9077L6.22032 14.5823Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.219 12.7595L7.32349 8.85241L7.61566 8.50635L12.511 12.4136L12.219 12.7595Z\"></path></g>`}}export{e as IDSIconVarmland};\n", "import{IDSIconVarmland as i}from\"./icon-varmland-element.js\";import{registerComponent as m}from\"../../../utilities/utils.js\";m(\"ids-icon-varmland\",i);\n", "import{svg as l}from\"lit\";import{IDSIconBase as e}from\"../icon-base-element.js\";class C extends e{constructor(){super(),this.vbHeight=34,this.vbWidth=177}renderIcon(){return l`<mask id=\"mask0_6743_931\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"36\" height=\"40\"><path fill=\"white\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 0.00012207H35.1457V39.8097H0V0.00012207Z\"></path></mask><g mask=\"url(#mask0_6743_931)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M25.3534 18.2152C33.1633 12.8751 37.2317 7.55655 34.0678 0.00012207H19.9281C19.9281 0.00012207 21.5691 2.81023 21.5691 6.27727C21.5691 14.4706 12.7866 19.8939 9.7705 25.6794C11.3464 20.418 19.4525 8.97463 12.9198 0.00012207H-0.000244141V39.8097H8.9903C9.541 33.8708 12.3671 27.0945 25.3534 18.2152Z\"></path></g><mask id=\"mask1_6743_931\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"16\" y=\"-1\" width=\"36\" height=\"41\"><path fill=\"white\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.1469 -0.000305176H51.2932V39.8098H16.1469V-0.000305176Z\"></path></mask><g mask=\"url(#mask1_6743_931)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M25.9391 21.5946C18.1296 26.9347 14.0608 32.2533 17.2246 39.8102H31.3654C31.3654 39.8102 29.7238 36.9996 29.7238 33.5331C29.7238 25.3398 38.5059 19.916 41.522 14.1304C39.946 19.3924 31.8399 30.8352 38.3726 39.8102L51.2932 39.8092V-0.000305176L42.3032 0.000195914C41.7515 5.93911 38.9253 12.7158 25.9391 21.5946Z\"></path></g><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M87.1809 31.0282C87.1027 30.9681 86.8792 30.8458 86.4768 30.6439C86.0925 30.4519 85.5443 30.1909 84.8012 29.8481C83.9899 29.4758 83.579 29.0319 83.579 28.5293C83.579 27.7305 84.0902 27.3432 85.1409 27.3432C85.7808 27.3432 86.5154 27.496 87.3247 27.7977L87.5467 27.8834L87.9611 26.1852L87.9681 26.1561L87.8934 26.1255C87.009 25.7597 86.0895 25.5743 85.1615 25.5743C84.1994 25.5743 83.3666 25.8119 82.6861 26.2789C81.8829 26.8241 81.4755 27.5887 81.4755 28.5493C81.4755 29.4964 81.9059 30.2821 82.7583 30.8879C83.1867 31.1024 83.562 31.2978 83.9058 31.4827C84.2645 31.6751 84.6343 31.871 85.0352 32.079C85.8229 32.5064 86.2218 32.993 86.2218 33.5256C86.2218 34.4361 85.615 34.8791 84.3678 34.8791C83.6888 34.8791 82.6771 34.6466 81.727 34.2722L81.6363 34.2367L81.252 35.9544L81.246 35.9845L81.3241 36.0145C82.3604 36.4069 83.4272 36.6063 84.4925 36.6063C85.5348 36.6063 86.4443 36.3768 87.1954 35.9238C88.0558 35.3927 88.4927 34.5929 88.4927 33.5467C88.4927 32.4899 88.0513 31.643 87.1809 31.0282Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M116.515 15.6043H118.615V8.86461C118.615 7.22355 118.437 6.46289 117.912 5.84806C117.404 5.25276 116.623 4.92505 115.712 4.92505C114.468 4.92505 112.618 5.42263 111.151 6.81917L111.136 6.8337V5.25577H109.08V15.6043H111.181V8.70677L111.183 8.70376C112.289 7.50766 114.14 6.87028 115.051 6.87028C115.9 6.87028 116.405 7.39041 116.471 8.33446C116.493 8.65616 116.515 9.16126 116.515 9.61424V15.6043Z\"></path><mask id=\"mask2_6743_931\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"165\" y=\"25\" width=\"11\" height=\"12\"><path fill=\"white\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M165.753 25.6292H175.286V36.3094H165.753V25.6292Z\"></path></mask><g mask=\"url(#mask2_6743_931)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M174.583 26.5527C174.075 25.9579 173.294 25.6292 172.383 25.6292C171.14 25.6292 169.29 26.1267 167.824 27.5233L167.808 27.5378V25.9604H165.753V36.3094H167.853V29.4104L167.855 29.4084C168.961 28.2118 170.812 27.5749 171.722 27.5749C172.571 27.5749 173.076 28.0945 173.143 29.0386C173.164 29.3603 173.187 29.8659 173.187 30.3188V36.3094H175.286V29.5687C175.286 27.9276 175.109 27.167 174.583 26.5527Z\"></path></g><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M64.2455 33.8718L61.262 25.9601H58.8994L63.0294 36.2865L63.0384 36.3086H65.1881L69.4398 26.0092L69.4594 25.9601H67.3608L64.2455 33.8718Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M93.3799 22.566H91.2798V25.9599H89.4929V27.6696H91.2798V33.2738C91.2798 34.4694 91.3024 34.6177 91.4562 35.1027C91.5659 35.434 91.7839 35.7376 92.0705 35.9581C92.5972 36.3535 93.2426 36.5298 94.1601 36.5298C94.7619 36.5298 95.2008 36.4877 96.0667 36.2517L96.0923 36.2447V34.7184L96.0502 34.7274C95.5701 34.8291 95.2925 34.8492 94.9763 34.8492C94.0939 34.8492 93.5788 34.5796 93.4475 34.0499C93.3994 33.7889 93.3799 33.4622 93.3799 32.921V27.6696H96.0923V25.9599H93.3799V22.566Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M122.263 25.6513C120.958 25.6513 119.974 26.1348 118.63 27.4361L118.615 27.4502V20.8273H116.515V36.3089H118.57V34.9705L118.586 34.9886C119.537 36.1145 120.47 36.5956 121.711 36.5956C124.42 36.5956 126.312 34.1683 126.312 30.6937C126.312 27.7248 124.647 25.6513 122.263 25.6513ZM121.469 34.7826C120.415 34.7826 119.51 34.2209 118.617 33.0143L118.615 33.0123V29.3884L118.617 29.3869C119.482 28.2324 120.55 27.597 121.623 27.597C123.083 27.597 124.102 29.0241 124.102 31.0685C124.102 33.2202 122.995 34.7826 121.469 34.7826Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M79.5536 34.8285L79.5171 34.838C79.2785 34.8967 79.1548 34.9152 79.0095 34.9152C78.7248 34.9152 78.4768 34.7864 78.3636 34.582C78.2744 34.3805 78.2283 34.119 78.2283 33.8033V29.3261C78.2283 27.9511 78.1361 27.3808 77.8334 26.8832C77.3749 26.075 76.5075 25.6295 75.3921 25.6295C74.2441 25.6295 73.2038 25.9547 71.8023 26.753C71.2862 27.0416 71.1258 27.1704 70.7355 27.482L70.6628 27.5417L71.5352 28.828L71.5638 28.8084C72.9633 27.8513 73.9299 27.4425 74.7968 27.4425C75.7679 27.4425 76.1287 27.929 76.1287 29.2379V29.7304L76.1217 29.7319C72.3064 30.5427 70.3727 31.9578 70.3727 33.9356C70.3727 35.4018 71.4405 36.5072 72.8561 36.5072C73.979 36.5072 75.0313 36.0046 76.2685 34.8776L76.281 34.8661L76.2835 34.8831C76.3933 35.9434 77.0808 36.5513 78.1706 36.5513C78.7654 36.5513 79.0601 36.4801 79.7471 36.1689L79.7716 36.1579L79.5597 34.8661L79.5536 34.8285ZM76.1287 33.2551L76.1262 33.2576C75.2162 34.2127 74.2742 34.7383 73.4739 34.7383C72.8932 34.7383 72.4727 34.2984 72.4727 33.6925C72.4727 32.6603 73.6308 31.8581 76.1182 31.1706L76.1287 31.1671V33.2551Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M75.7709 22.9765C75.7709 23.7462 76.3797 24.349 77.1569 24.349C77.9331 24.349 78.5419 23.7462 78.5419 22.9765C78.5419 22.2053 77.9205 21.5775 77.1569 21.5775C76.3922 21.5775 75.7709 22.2053 75.7709 22.9765Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M71.5916 22.976C71.5916 23.7457 72.1944 24.348 72.964 24.348C73.7222 24.348 74.3626 23.7197 74.3626 22.976C74.3626 22.2049 73.7352 21.578 72.964 21.578C72.2074 21.578 71.5916 22.2049 71.5916 22.976Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M150.188 22.566H148.088V25.9599H143.063V22.566H140.964V25.9599H139.177V27.6696H140.964V33.2738C140.964 34.4694 140.986 34.6177 141.14 35.1027C141.25 35.434 141.468 35.7376 141.755 35.9581C142.282 36.3535 142.926 36.5298 143.845 36.5298C144.446 36.5298 144.885 36.4877 145.752 36.2517L145.777 36.2447V34.7184L145.734 34.7274C145.254 34.8291 144.978 34.8492 144.661 34.8492C143.777 34.8492 143.263 34.5796 143.131 34.0499C143.083 33.7889 143.063 33.4622 143.063 32.921V27.6696H148.088V33.2738C148.088 34.4694 148.111 34.6177 148.265 35.1027C148.374 35.434 148.592 35.7376 148.88 35.9581C149.406 36.3535 150.051 36.5298 150.97 36.5298C151.57 36.5298 152.009 36.4877 152.875 36.2517L152.901 36.2447V34.7184L152.859 34.7274C152.379 34.8291 152.101 34.8492 151.785 34.8492C150.902 34.8492 150.387 34.5796 150.256 34.0499C150.208 33.7889 150.188 33.4622 150.188 32.921V27.6696H152.901V25.9599H150.188V22.566Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M62.7863 10.1858C62.7863 9.35648 63.093 8.55072 63.6277 7.97347C64.1874 7.37016 64.8879 7.07702 65.7703 7.07702C65.7959 7.07702 65.8194 7.07852 65.842 7.07903L65.9146 7.08153L66.4167 5.13179L66.4273 5.09171L66.3862 5.0872C66.1852 5.06715 66.0434 5.05262 65.9602 5.04611C65.8781 5.03909 65.8169 5.03558 65.7809 5.03558C65.0352 5.03558 64.3673 5.30918 63.796 5.84935C63.3015 6.31637 62.9622 6.72826 62.7863 7.07552V5.25556H60.6863V15.6041H62.7863V10.1858Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M114.355 25.7506C114.272 25.7436 114.212 25.7401 114.175 25.7401C113.429 25.7401 112.762 26.0131 112.19 26.5533C111.695 27.0208 111.357 27.4322 111.18 27.78V25.96H109.081V36.3085H111.18V30.8902C111.18 30.0614 111.488 29.2547 112.023 28.6784C112.582 28.0746 113.282 27.7815 114.165 27.7815C114.19 27.7815 114.213 27.7825 114.235 27.784C114.25 27.784 114.265 27.7855 114.281 27.7855L114.309 27.786L114.822 25.7957L114.781 25.7917C114.579 25.7716 114.437 25.7576 114.355 25.7506Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M85.873 14.4088L84.2405 14.2104C84.0656 14.1883 83.9053 14.1688 83.7579 14.1518C82.6816 14.022 82.2787 13.9734 81.4529 13.7073L81.4469 13.7053C81.5446 13.5645 81.8959 13.0574 82.1083 12.7432C82.2752 12.7738 82.4331 12.7948 82.5884 12.8078C82.6846 12.8169 82.7913 12.8219 82.9246 12.8244L82.9336 12.8249C82.9382 12.8249 82.9422 12.8259 82.9472 12.8259L82.9807 12.8249C83.0108 12.8249 83.0419 12.8259 83.075 12.8259C85.5062 12.8259 87.4109 11.0761 87.4109 8.84221C87.4109 8.06252 87.2425 7.51232 86.8316 6.96463H88.6461V5.25592H85.2096L85.1444 5.23337C84.3978 4.96128 84.0927 4.90265 83.4272 4.90265C80.9173 4.90265 79.0246 6.68202 79.0246 9.04064C79.0246 9.99873 79.3323 10.8596 79.9141 11.5321L79.9126 11.5351L79.9276 11.5556C79.9366 11.5681 80.1601 11.8713 80.6447 12.1815L80.6321 12.1995C80.4763 12.415 80.34 12.5974 80.2313 12.7447L80.1957 12.7913C80.12 12.8935 80.0584 12.9762 80.0143 13.0368L79.887 13.2092C79.4616 13.781 79.2035 14.1282 79.2 14.3081C79.197 14.3246 79.194 14.3712 79.2316 14.4359C79.3273 14.6027 79.657 14.8523 80.6727 15.1068L80.6502 15.1143C79.0587 15.6225 78.2515 16.5179 78.2515 17.7746C78.2515 19.7013 80.2849 20.8979 83.558 20.8979C87.0852 20.8979 89.5485 19.3415 89.5485 17.1132C89.5485 15.5498 88.4151 14.7155 85.873 14.4088ZM83.2072 6.40742C84.4509 6.40742 85.3544 7.43115 85.3544 8.84221C85.3544 10.335 84.5281 11.2991 83.2508 11.2991C81.966 11.2991 81.1032 10.3114 81.1032 8.84221C81.1032 7.34045 81.9089 6.40742 83.2072 6.40742ZM83.6687 19.3275C81.5466 19.3275 80.3295 18.6891 80.3295 17.5762C80.3295 16.7198 81.0115 16.115 82.4751 15.6706H82.4772H82.4797C83.4342 15.893 83.7344 15.9572 84.9706 16.112C86.1241 16.2669 86.5425 16.3576 86.9163 16.6211C87.1819 16.7975 87.3162 17.0445 87.3162 17.3557C87.3162 18.5162 85.8169 19.3275 83.6687 19.3275Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M106.568 10.2979C106.568 7.18458 104.397 4.92517 101.407 4.92517C98.2115 4.92517 95.891 7.26826 95.891 10.4963C95.891 13.5965 98.0923 15.8474 101.123 15.8474C104.279 15.8474 106.568 13.5133 106.568 10.2979ZM98.1629 10.1876C98.1629 8.15068 99.4272 6.67197 101.169 6.67197C103.04 6.67197 104.297 8.20931 104.297 10.4963C104.297 12.6249 103.089 14.056 101.291 14.056C99.4192 14.056 98.1629 12.5016 98.1629 10.1876Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M133.406 25.6293C130.21 25.6293 127.89 27.9724 127.89 31.2004C127.89 34.3011 130.091 36.551 133.123 36.551C136.277 36.551 138.568 34.2174 138.568 31.002C138.568 27.8887 136.397 25.6293 133.406 25.6293ZM133.29 34.7601C131.419 34.7601 130.162 33.2057 130.162 30.8912C130.162 28.8548 131.426 27.3761 133.167 27.3761C135.039 27.3761 136.296 28.9134 136.296 31.2004C136.296 33.3295 135.088 34.7601 133.29 34.7601Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M106.091 33.4182L106.062 33.4362C105.264 33.9609 104.98 34.1167 104.53 34.3186C103.88 34.6223 103.193 34.7827 102.542 34.7827C100.845 34.7827 99.8867 33.5264 99.8421 31.245V31.2364H106.834V30.6938C106.834 27.4753 105.309 25.6298 102.652 25.6298C99.6917 25.6298 97.5436 28.0185 97.5436 31.3116C97.5436 34.4585 99.4016 36.5736 102.167 36.5736C103.72 36.5736 105.602 35.8314 106.96 34.6829L106.985 34.6619L106.11 33.4453L106.091 33.4182ZM102.498 27.1556C103.827 27.1556 104.646 28.1152 104.69 29.7222L104.69 29.7307H99.9303C100.24 28.1653 101.245 27.1556 102.498 27.1556Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M71.9343 15.869C73.5343 15.869 75.4725 15.1274 76.8705 13.9789L76.8956 13.9579L75.9946 12.7407L75.9746 12.7147L75.947 12.7317C75.1257 13.2558 74.8326 13.4112 74.3686 13.6141C73.6986 13.9178 72.9901 14.0781 72.3201 14.0781C70.5713 14.0781 69.5842 12.8219 69.5386 10.5409V10.5319H76.7403V9.98924C76.7403 6.77074 75.1703 4.92523 72.4334 4.92523C69.3858 4.92523 67.1735 7.31493 67.1735 10.6071C67.1735 13.7539 69.0861 15.869 71.9343 15.869ZM72.2746 6.45105C73.6435 6.45105 74.4884 7.41114 74.5335 9.01863L74.534 9.02615H69.6298C69.9495 7.46074 70.9837 6.45105 72.2746 6.45105Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M162.906 33.4187L162.877 33.4362C162.056 33.9609 161.763 34.1167 161.299 34.3186C160.63 34.6218 159.922 34.7827 159.251 34.7827C157.502 34.7827 156.515 33.5264 156.47 31.245V31.2364H163.67V30.6938C163.67 27.4748 162.101 25.6298 159.365 25.6298C156.317 25.6298 154.104 28.0195 154.104 31.3111C154.104 34.458 156.018 36.5736 158.865 36.5736C160.464 36.5736 162.402 35.8314 163.801 34.6829L163.827 34.6619L162.925 33.4453L162.906 33.4187ZM159.205 27.1556C160.575 27.1556 161.419 28.1152 161.464 29.7232V29.7307H156.561C156.88 28.1653 157.914 27.1556 159.205 27.1556Z\"></path><mask id=\"mask3_6743_931\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"-1\" width=\"177\" height=\"42\"><path fill=\"white\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 40.0788H176.471V-0.000732422H0V40.0788Z\"></path></mask><g mask=\"url(#mask3_6743_931)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M91.2789 15.6047H93.379V5.25623H91.2789V15.6047Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M92.3527 3.68581C93.1234 3.68581 93.7257 3.083 93.7257 2.31282C93.7257 1.52962 93.1234 0.915283 92.3527 0.915283C91.5826 0.915283 90.9557 1.54215 90.9557 2.31282C90.9557 3.083 91.57 3.68581 92.3527 3.68581Z\"></path></g>`}}export{C as IDSIconVasterbotten};\n", "import{IDSIconVasterbotten as t}from\"./icon-vasterbotten-element.js\";import{registerComponent as i}from\"../../../utilities/utils.js\";i(\"ids-icon-vasterbotten\",t);\n", "import{svg as l}from\"lit\";import{IDSIconBase as C}from\"../icon-base-element.js\";class e extends C{constructor(){super(),this.vbHeight=29,this.vbWidth=139}renderIcon(){return l`<mask id=\"mask0_6775_3904\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"15\" height=\"13\"><path fill=\"white\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 0.27887H14.4913V12.5272H0V0.27887Z\"></path></mask><g mask=\"url(#mask0_6775_3904)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.90048 10.8268C6.90048 5.88284 10.0903 1.69764 14.4913 0.27887H0L7.02775 12.5272C6.94327 11.9728 6.90048 11.4043 6.90048 10.8268\"></path></g><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.4182 21.0321C14.3265 21.0321 12.3956 20.3361 10.8345 19.1619L16.4182 28.8923L22.0013 19.1619C20.441 20.3361 18.5095 21.0321 16.4182 21.0321\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32.8356 0.278931H19.9161C12.5615 0.278931 10.8066 6.08981 10.8066 8.81831C10.8066 10.0422 11.059 11.2036 11.5159 12.2562C11.5842 12.3993 11.6544 12.5395 11.7219 12.6759C12.5998 14.2962 14.2661 15.4125 16.1942 15.4903V15.4886H16.1926C16.268 15.4919 16.3421 15.495 16.4183 15.495C16.4869 15.495 16.5543 15.4919 16.6218 15.4903C18.7176 15.3812 20.384 13.6203 20.384 11.4637C20.384 9.23993 18.6114 7.43607 16.4241 7.43217C16.4967 7.36469 16.5703 7.29916 16.6465 7.23614C17.6248 6.39207 18.8909 5.8829 20.2743 5.8829C23.3745 5.8829 25.8879 8.43769 25.8879 11.5889C25.8879 11.9057 25.8619 12.2158 25.813 12.5186L32.8356 0.278931Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M36.0703 10.2119C36.0703 10.2119 34.6638 6.69117 34.6474 6.61505C34.587 6.40926 34.604 6.22857 34.8232 6.1438H32.9606C33.2148 6.24641 33.3144 6.38277 33.4153 6.55398C33.576 6.87159 35.7757 12.1482 35.7757 12.1482C35.7757 12.1482 37.8059 6.88888 37.9494 6.55398C38.033 6.34847 38.05 6.28936 38.2692 6.1438H37.2417C37.4601 6.22857 37.4938 6.34847 37.4181 6.57211C37.4101 6.63178 36.0703 10.2119 36.0703 10.2119\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M46.7079 8.4047C45.9152 8.03634 45.5534 7.83947 45.5534 7.3172C45.5534 6.948 45.806 6.49488 46.4462 6.49488C47.2553 6.49488 47.7361 7.18028 47.8541 7.63396L47.8107 6.36633C47.3809 6.10951 46.8255 6.04956 46.54 6.04956C45.7723 6.04956 44.7026 6.51189 44.7026 7.67691C44.7026 8.32773 45.0389 8.79006 45.8146 9.22701C46.5812 9.64668 47.314 9.75849 47.314 10.5808C47.314 10.9996 47.0614 11.6086 46.2271 11.6086C45.3516 11.6086 44.8458 10.8036 44.6848 10.1954L44.7276 11.6429C45.0222 11.7885 45.5787 12.0537 46.3458 12.0537C47.3809 12.0537 48.3085 11.3259 48.3085 10.2554C48.3085 9.06417 47.4909 8.78225 46.7079 8.4047\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M53.2018 6.63178C53.4039 6.64907 53.5235 6.82809 53.5987 6.97448V6.1438H48.9807V6.97448C49.0578 6.82809 49.2007 6.63178 49.4028 6.63178C49.4028 6.63178 50.1266 6.57211 50.7517 6.57211V11.5827C50.7517 11.772 50.6667 11.8911 50.5315 11.9683H52.0397C51.9133 11.8911 51.8206 11.772 51.8206 11.5827V6.57211C52.4355 6.57211 53.2018 6.63178 53.2018 6.63178\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M56.4743 6.55403C57.3081 6.55403 57.544 7.23915 57.544 7.634C57.544 8.49898 56.9373 8.82411 56.3652 8.82411C56.222 8.82411 55.9858 8.8071 55.9858 8.8071V6.57271C55.9858 6.57271 56.222 6.55403 56.4743 6.55403M58.6565 7.58185C58.6565 7.00882 58.2609 6.14301 56.5163 6.14301H54.697C54.8317 6.21132 54.9148 6.33206 54.9148 6.52893V11.5827C54.9148 11.7704 54.8317 11.8903 54.697 11.9684H56.222C56.078 11.8903 55.9858 11.7704 55.9858 11.5827V9.24461C55.9858 9.24461 56.2555 9.22677 56.3553 9.22677C56.719 9.22677 56.9123 9.59512 57.1312 9.93754C57.4348 10.4177 57.8059 11.0432 58.1844 11.5827C58.3358 11.7891 58.615 11.9854 58.934 11.9854L60.03 11.9684C60.03 11.9684 59.6502 11.8312 59.49 11.6254C59.1951 11.283 58.1844 9.65507 58.1844 9.65507C58.0583 9.46741 57.8059 9.0734 57.2324 9.01261C57.8306 8.97078 58.6565 8.50818 58.6565 7.58185\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M61.9553 9.91273C62.2247 9.26971 62.7982 7.81385 62.7982 7.81385C62.7982 7.81385 63.2611 8.96131 63.6567 9.91273H61.9553ZM63.1177 5.96399C63.1177 5.96399 60.9013 11.223 60.7422 11.5479C60.658 11.7113 60.582 11.8047 60.3453 11.9684H61.5094C61.2812 11.8655 61.2392 11.7456 61.3149 11.5398C61.3322 11.445 61.534 10.9406 61.7869 10.3583H63.8511C64.0864 10.9406 64.3061 11.4628 64.3305 11.5479C64.3903 11.7283 64.3478 11.8482 64.1284 11.9684H65.9312C65.6537 11.8225 65.5941 11.7283 65.5113 11.5479C65.3591 11.223 63.1177 5.96399 63.1177 5.96399V5.96399Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M42.0219 5.58259C42.2559 5.58259 42.4567 5.39409 42.4567 5.14034C42.4567 4.90054 42.2559 4.71204 42.0219 4.71204C41.7861 4.71204 41.6001 4.90054 41.6001 5.14034C41.6001 5.39409 41.7861 5.58259 42.0219 5.58259\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M39.9651 9.91273C40.235 9.26971 40.8071 7.81385 40.8071 7.81385C40.8071 7.81385 41.2712 8.96131 41.6664 9.91273H39.9651ZM43.9424 11.9684C43.6642 11.8225 43.6047 11.7283 43.5211 11.5479C43.3694 11.223 41.1286 5.96399 41.1286 5.96399C41.1286 5.96399 38.9122 11.223 38.7517 11.5479C38.6681 11.7113 38.5921 11.8047 38.3562 11.9684H39.5191C39.2915 11.8655 39.2495 11.7456 39.3244 11.5398C39.3411 11.445 39.5438 10.9406 39.7961 10.3583H41.8614C42.0965 10.9406 42.3156 11.4628 42.3414 11.5479C42.3998 11.7283 42.3587 11.8482 42.1396 11.9684H43.9424Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M40.1501 5.58259C40.3843 5.58259 40.5846 5.39409 40.5846 5.14034C40.5846 4.90054 40.3843 4.71204 40.1501 4.71204C39.9142 4.71204 39.7283 4.90054 39.7283 5.14034C39.7283 5.39409 39.9142 5.58259 40.1501 5.58259\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M36.7239 14.8831C34.5472 14.8831 33.432 16.4212 33.432 17.9351C33.432 19.7771 34.9293 20.9433 36.6215 20.9433C37.3026 20.9433 38.5094 20.7191 39.223 20.3128C39.1808 20.2863 39.0884 20.1313 39.0884 19.9578V18.6793C39.0884 18.48 39.1808 18.3587 39.3092 18.2809H37.7867C37.9227 18.3587 38.0088 18.48 38.0088 18.6793V20.1834C37.6081 20.4514 37.1065 20.4678 36.9276 20.4678C35.1676 20.4678 34.5886 19.0064 34.5886 17.823C34.5886 16.4307 35.423 15.3502 36.8689 15.3502C37.2677 15.3502 38.347 15.5309 38.7815 16.7073L38.7217 15.3329C38.05 15.0387 37.4211 14.8831 36.7239 14.8831\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M51.94 15.471C52.1446 15.4885 52.2634 15.6701 52.3404 15.8173V14.978H47.6797V15.8173C47.7576 15.6701 47.901 15.471 48.1051 15.471C48.1051 15.471 48.8371 15.411 49.4658 15.411V20.4684C49.4658 20.6583 49.3805 20.7791 49.2452 20.8577H50.7669C50.6399 20.7791 50.5461 20.6583 50.5461 20.4684V15.411C51.1668 15.411 51.94 15.471 51.94 15.471\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M54.1642 18.782C54.4368 18.1326 55.0142 16.6642 55.0142 16.6642C55.0142 16.6642 55.4826 17.8231 55.8825 18.782H54.1642ZM55.337 14.7973C55.337 14.7973 53.1017 20.1049 52.9401 20.4333C52.8545 20.5976 52.7777 20.6929 52.5408 20.8561H53.7136C53.4843 20.7535 53.4409 20.6319 53.5186 20.425C53.5361 20.3299 53.7396 19.819 53.9936 19.2321H56.0781C56.3156 19.819 56.537 20.3472 56.5622 20.4333C56.6223 20.6149 56.5795 20.7364 56.3584 20.8561H58.1782C57.8971 20.7097 57.8384 20.6149 57.7525 20.4333C57.5992 20.1049 55.337 14.7973 55.337 14.7973V14.7973Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M60.9291 14.9781H59.3899C59.5336 15.0476 59.6288 15.1689 59.6288 15.3674V20.4684C59.6288 20.6585 59.5336 20.7801 59.3899 20.8571H62.9697L63.1576 19.8627C62.894 20.3641 62.5953 20.3735 61.6518 20.4078C61.2689 20.4078 60.8781 20.3735 60.7083 20.3641V15.3674C60.7083 15.1689 60.7928 15.0476 60.9291 14.9781\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M65.4547 18.782C65.7274 18.1326 66.3055 16.6642 66.3055 16.6642C66.3055 16.6642 66.7734 17.8231 67.1717 18.782H65.4547ZM66.6278 14.7973C66.6278 14.7973 64.3919 20.1049 64.2312 20.4333C64.1456 20.5976 64.0685 20.6929 63.8313 20.8561H65.0046C64.7748 20.7535 64.7317 20.6319 64.8088 20.425C64.8261 20.3299 65.0299 19.819 65.2847 19.2321H67.3678C67.6067 19.819 67.8275 20.3472 67.8533 20.4333C67.9133 20.6149 67.8703 20.7364 67.6487 20.8561H69.4685C69.1873 20.7097 69.1289 20.6149 69.0436 20.4333C68.89 20.1049 66.6278 14.7973 66.6278 14.7973V14.7973Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M74.9617 18.782L71.8248 14.978H70.3607C70.5398 15.0815 70.6591 15.2039 70.7433 15.3068C70.9049 15.5056 70.8975 15.5148 70.8975 15.8517V20.4677C70.8975 20.6584 70.8039 20.78 70.6756 20.8561H71.6194C71.4754 20.78 71.3818 20.6584 71.3818 20.4677V16.1364C71.3818 16.2066 75.4636 21.099 75.4636 21.099V15.3673C75.4636 15.1682 75.5571 15.0466 75.6841 14.978H74.7406C74.8772 15.0466 74.9617 15.1682 74.9617 15.3673V18.782Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M79.9422 15.411C81.7025 15.411 82.2977 16.7938 82.2977 17.8308C82.2977 19.0937 81.7615 20.4076 79.8405 20.4076H79.1597V15.428C79.2873 15.411 79.7382 15.411 79.9422 15.411M80.1197 14.9782H77.8583C77.9858 15.0468 78.0793 15.1689 78.0793 15.3675V20.4684C78.0793 20.6583 77.9858 20.779 77.8583 20.8577H80.044C82.3402 20.8577 83.4795 19.3349 83.4795 17.8308C83.4795 16.9923 82.9181 14.9782 80.1197 14.9782\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M87.2127 17.2608C86.4129 16.8885 86.0481 16.6891 86.0481 16.163C86.0481 15.791 86.3034 15.3328 86.9494 15.3328C87.7656 15.3328 88.2511 16.0241 88.3693 16.4822L88.3259 15.2032C87.8926 14.9438 87.3322 14.8831 87.0423 14.8831C86.2692 14.8831 85.1893 15.3501 85.1893 16.5257C85.1893 17.1827 85.5294 17.65 86.3119 18.0906C87.0854 18.5142 87.8251 18.6271 87.8251 19.4564C87.8251 19.88 87.5695 20.4934 86.7288 20.4934C85.8435 20.4934 85.3331 19.6809 85.1726 19.0671L85.2154 20.5291C85.5127 20.6755 86.0731 20.9435 86.8482 20.9435C87.8926 20.9435 88.8284 20.2085 88.8284 19.1277C88.8284 17.9267 88.0037 17.6406 87.2127 17.2608\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M92.5497 15.3938C93.3915 15.3938 93.6293 16.0842 93.6293 16.4821C93.6293 17.3557 93.0168 17.6842 92.4381 17.6842C92.293 17.6842 92.056 17.6672 92.056 17.6672V15.4111C92.056 15.4111 92.293 15.3938 92.5497 15.3938M94.7508 16.4308C94.7508 15.8517 94.352 14.978 92.5912 14.978H90.7549C90.8912 15.0475 90.9765 15.1679 90.9765 15.3673V20.4677C90.9765 20.6584 90.8912 20.78 90.7549 20.8569H92.293C92.1496 20.78 92.056 20.6584 92.056 20.4677V18.1078C92.056 18.1078 92.3279 18.0905 92.4304 18.0905C92.7952 18.0905 92.991 18.4628 93.2132 18.8077C93.5182 19.2929 93.8931 19.9234 94.2752 20.4677C94.4293 20.6754 94.7091 20.8748 95.033 20.8748L96.1378 20.8569C96.1378 20.8569 95.7549 20.7192 95.5936 20.512C95.2955 20.1654 94.2752 18.5222 94.2752 18.5222C94.1482 18.3328 93.8931 17.9352 93.3144 17.8741C93.9184 17.8309 94.7508 17.3636 94.7508 16.4308\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M100.652 14.9781H97.2339C97.3683 15.0476 97.4881 15.1689 97.4881 15.3674V20.4684C97.4881 20.6755 97.3776 20.7706 97.2339 20.8571H100.89L101.069 19.8627C100.753 20.4078 100.414 20.3897 99.6738 20.4078C99.2569 20.4249 98.7375 20.3897 98.5677 20.3641V17.8229H99.8524C99.9722 17.8229 100.116 17.9523 100.158 18.0736V17.1565C100.116 17.2608 99.9722 17.3988 99.8524 17.3988H98.5677V15.4101C98.5677 15.4101 99.7586 15.4101 100.014 15.4279C100.337 15.4452 100.516 15.5138 100.678 15.7394L100.652 14.9781Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M105.513 14.8831C103.337 14.8831 102.222 16.4212 102.222 17.9351C102.222 19.7771 103.72 20.9433 105.411 20.9433C106.092 20.9433 107.299 20.7191 108.014 20.3128C107.972 20.2863 107.877 20.1313 107.877 19.9578V18.6793C107.877 18.48 107.972 18.3587 108.099 18.2809H106.576C106.713 18.3587 106.798 18.48 106.798 18.6793V20.1834C106.397 20.4514 105.897 20.4678 105.717 20.4678C103.958 20.4678 103.379 19.0064 103.379 17.823C103.379 16.4307 104.213 15.3502 105.658 15.3502C106.058 15.3502 107.138 15.5309 107.572 16.7073L107.512 15.3329C106.84 15.0387 106.211 14.8831 105.513 14.8831\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M110.022 14.9781C110.157 15.0476 110.243 15.1689 110.243 15.3674V20.4684C110.243 20.6585 110.157 20.7801 110.022 20.8571H111.562C111.417 20.7801 111.34 20.6585 111.34 20.4684V15.3674C111.34 15.1689 111.417 15.0476 111.562 14.9781H110.022Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M116.5 15.3328C117.63 15.3328 118.472 16.3188 118.455 17.9863C118.455 19.5512 117.63 20.4513 116.517 20.4513C115.538 20.4513 114.518 19.6119 114.518 17.771C114.534 16.2407 115.376 15.3328 116.5 15.3328M119.654 17.9352C119.679 15.9722 118.03 14.9003 116.575 14.883C114.534 14.8582 113.362 16.3701 113.335 17.8655C113.302 19.6376 114.731 20.9169 116.44 20.9434C117.979 20.9607 119.62 19.9577 119.654 17.9352\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M125.512 18.782L122.374 14.978H120.911C121.09 15.0815 121.209 15.2039 121.293 15.3068C121.456 15.5056 121.447 15.5148 121.447 15.8517V20.4677C121.447 20.6584 121.353 20.78 121.226 20.8561H122.169C122.026 20.78 121.932 20.6584 121.932 20.4677V16.1364C121.932 16.2066 126.014 21.099 126.014 21.099V15.3673C126.014 15.1682 126.108 15.0466 126.235 14.978H125.29C125.426 15.0466 125.512 15.1682 125.512 15.3673V18.782Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M131.623 14.9781H128.206C128.341 15.0476 128.46 15.1689 128.46 15.3674V20.4684C128.46 20.6755 128.35 20.7706 128.206 20.8571H131.86L132.04 19.8627C131.725 20.4078 131.385 20.3897 130.645 20.4078C130.228 20.4249 129.709 20.3897 129.539 20.3641V17.8229H130.823C130.943 17.8229 131.088 17.9523 131.13 18.0736V17.1565C131.088 17.2608 130.943 17.3988 130.823 17.3988H129.539V15.4101C129.539 15.4101 130.729 15.4101 130.986 15.4279C131.309 15.4452 131.488 15.5138 131.649 15.7394L131.623 14.9781Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M137.983 18.782L134.846 14.978H133.383C133.561 15.0815 133.68 15.2039 133.766 15.3068C133.928 15.5056 133.919 15.5148 133.919 15.8517V20.4677C133.919 20.6584 133.825 20.78 133.698 20.8561H134.641C134.497 20.78 134.404 20.6584 134.404 20.4677V16.1364C134.404 16.2066 138.486 21.099 138.486 21.099V15.3673C138.486 15.1682 138.579 15.0466 138.706 14.978H137.762C137.899 15.0466 137.983 15.1682 137.983 15.3673V18.782Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M43.8152 15.3328C44.9452 15.3328 45.7872 16.3188 45.771 17.9863C45.771 19.5512 44.9452 20.4513 43.8322 20.4513C42.853 20.4513 41.833 19.6119 41.833 17.771C41.8511 16.2407 42.692 15.3328 43.8152 15.3328M46.9704 17.9352C46.9951 15.9722 45.3451 14.9003 43.8914 14.883C41.8511 14.8582 40.6777 16.3701 40.6517 17.8655C40.6185 19.6376 42.0461 20.9169 43.7551 20.9434C45.2946 20.9607 46.9367 19.9577 46.9704 17.9352\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M44.7469 14.4603C44.9847 14.4603 45.1857 14.2696 45.1857 14.0141C45.1857 13.7729 44.9847 13.5828 44.7469 13.5828C44.5086 13.5828 44.3229 13.7729 44.3229 14.0141C44.3229 14.2696 44.5086 14.4603 44.7469 14.4603\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M42.8578 14.4603C43.095 14.4603 43.2972 14.2696 43.2972 14.0141C43.2972 13.7729 43.095 13.5828 42.8578 13.5828C42.6208 13.5828 42.4335 13.7729 42.4335 14.0141C42.4335 14.2696 42.6208 14.4603 42.8578 14.4603\"></path>`}}export{e as IDSIconVastraGotaland};\n", "import{IDSIconVastraGotaland as t}from\"./icon-vastra-gotaland-element.js\";import{registerComponent as i}from\"../../../utilities/utils.js\";i(\"ids-icon-vastra-gotaland\",t);\n", "import{svg as l}from\"lit\";import{IDSIconBase as C}from\"../icon-base-element.js\";class e extends C{constructor(){super(),this.vbHeight=24,this.vbWidth=87}renderIcon(){return l`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.6245 11.9043C7.29242 11.8979 4.59656 9.23454 4.59656 5.95206C4.59656 2.66088 7.29242 6.10352e-05 10.6245 6.10352e-05C13.9436 6.10352e-05 16.6403 2.66088 16.6345 5.95206C16.6403 9.23454 13.9436 11.8979 10.6245 11.9043Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21.233 5.9527H18.3582V5.96268C18.3595 9.89889 15.3501 13.1423 11.4777 13.5615V23.8495H14.3252V15.7976C18.3621 14.314 21.2349 10.47 21.233 5.96587V5.9527Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.7344 13.559C5.88197 13.1302 2.88327 9.89061 2.87425 5.96268V5.9527H0.00012207V5.96608C0.0110756 10.4547 2.86652 14.2881 6.87424 15.7817V23.8495H9.72281V13.559H9.7344Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M26.7897 6.46902H24.4753V9.89698H26.7897C28.097 9.89698 28.8571 9.29932 28.8571 8.18364C28.8571 7.06605 28.097 6.46902 26.7897 6.46902ZM27.8187 10.2835L29.3118 13.7661H28.6733L27.2368 10.4271H24.4753V13.7661H23.8934V5.927H26.7897C28.5223 5.927 29.4613 6.82159 29.4613 8.18364C29.4613 9.2099 28.8127 10.0178 27.8187 10.2835Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32.4339 8.61304C31.2834 8.61304 30.5568 9.53162 30.5568 10.6261H34.2574C34.2346 9.57516 33.5744 8.61304 32.4339 8.61304ZM34.8152 11.1347H30.5467C30.5568 11.7764 30.7681 12.3728 31.1266 12.7933C31.4393 13.1586 31.8747 13.3782 32.4797 13.3782C32.97 13.3782 33.3959 13.2032 33.6973 12.8929C33.8983 12.6824 34.0551 12.4394 34.1229 12.1071H34.7043C34.6262 12.583 34.3897 12.9708 34.0772 13.2676C33.6747 13.666 33.1159 13.9096 32.4797 13.9096C31.6736 13.9096 31.1045 13.5785 30.7007 13.1233C30.2428 12.5924 29.9857 11.8651 29.9857 11.0241C29.9857 10.3289 30.0983 9.64185 30.5332 9.05566C31.0038 8.42486 31.6519 8.0929 32.4339 8.0929C33.9428 8.0929 34.8268 9.37552 34.8268 10.7709C34.8268 10.9037 34.8152 11.0024 34.8152 11.1347Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M37.8887 8.59157C37.0169 8.59157 36.3457 9.14379 36.3457 10.0297C36.3457 10.9138 37.0169 11.4446 37.8887 11.4446C38.7615 11.4446 39.4441 10.9138 39.4441 10.0297C39.4441 9.14379 38.7615 8.59157 37.8887 8.59157ZM39.8365 13.9098C39.5773 13.6447 39.1404 13.5005 38.4823 13.5005H37.0055C36.5375 13.6105 36.079 13.9871 36.079 14.6389C36.079 14.9267 36.2018 15.1703 36.3803 15.3351C36.7828 15.713 37.4761 15.7786 38.0352 15.7786C38.5942 15.7786 39.3895 15.713 39.8109 15.2918C39.9804 15.1274 40.1039 14.8825 40.1039 14.5954C40.1039 14.2862 40.0034 14.0871 39.8365 13.9098ZM40.2377 15.6236C39.7568 16.1116 38.917 16.2754 38.0238 16.2754C37.1743 16.2754 36.4134 16.1116 35.9441 15.635C35.6991 15.38 35.5532 15.0595 35.5532 14.6389C35.5532 14.1088 35.867 13.5885 36.3917 13.3461C36.0002 13.2359 35.6875 12.8256 35.6875 12.4394C35.6875 11.9639 35.9334 11.6321 36.3593 11.3892C36.0124 11.0568 35.7991 10.6046 35.7991 10.0297C35.7991 8.83476 36.7152 8.09288 37.8887 8.09288C38.3822 8.09288 38.8305 8.22648 39.198 8.47009C39.3436 7.99348 39.8238 7.71759 40.3268 7.71759C40.3949 7.71759 40.4718 7.74095 40.5401 7.74095V8.21564C40.4718 8.21564 40.3949 8.19249 40.3268 8.19249C39.9246 8.19249 39.6333 8.41465 39.5571 8.79058C39.8365 9.11171 40.0034 9.53161 40.0034 10.0297C40.0034 11.2237 39.0635 11.9427 37.8887 11.9427C37.4761 11.9427 37.0947 11.8539 36.7712 11.6876C36.4815 11.7972 36.2134 12.0302 36.2134 12.3727C36.2134 12.6384 36.3803 12.8039 36.6039 12.8929C36.8043 12.9708 37.1393 12.9797 37.3533 12.9797H38.5715C39.2877 12.9797 39.8582 13.1586 40.2154 13.5224C40.4834 13.7881 40.6629 14.1088 40.6629 14.5954C40.6629 15.0261 40.4834 15.3693 40.2377 15.6236Z\"></path><mask width=\"${this.vbWidth}\" height=\"${this.vbHeight}\" id=\"mask0_6775_6668\" style=\"mask-type:alpha\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 23.9994H86.1083V0H0V23.9994Z\" fill=\"white\"></path></mask><g mask=\"url(#mask0_6775_6668)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M41.8925 13.7662H42.4855V8.23837H41.8925V13.7662ZM41.7898 6.70131H42.5731V5.92694H41.7898V6.70131Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M47.6771 9.12177C47.3874 8.824 46.9836 8.63519 46.4481 8.63519C45.9108 8.63519 45.5089 8.824 45.2175 9.12177C44.7151 9.64191 44.5923 10.2835 44.5923 11.0025C44.5923 11.7223 44.7151 12.362 45.2175 12.8821C45.5089 13.1805 45.9108 13.3683 46.4481 13.3683C46.9836 13.3683 47.3874 13.1805 47.6771 12.8821C48.181 12.362 48.3051 11.7223 48.3051 11.0025C48.3051 10.2835 48.181 9.64191 47.6771 9.12177ZM48.0802 13.2459C47.69 13.634 47.1397 13.9097 46.4481 13.9097C45.7548 13.9097 45.208 13.634 44.8156 13.2459C44.2332 12.6712 44.0216 11.9427 44.0216 11.0025C44.0216 10.0633 44.2332 9.33225 44.8156 8.75731C45.208 8.36991 45.7548 8.09296 46.4481 8.09296C47.1397 8.09296 47.69 8.36991 48.0802 8.75731C48.6616 9.33225 48.8749 10.0633 48.8749 11.0025C48.8749 11.9427 48.6616 12.6712 48.0802 13.2459Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M54.0636 13.7662V10.15C54.0636 9.18919 53.6394 8.63506 52.622 8.63506C51.2462 8.63506 50.7655 9.80937 50.7655 11.0026V13.7662H50.2056V8.23832H50.6972L50.7655 9.24462C51.0773 8.54629 51.8707 8.09283 52.654 8.09283C53.9394 8.09283 54.6222 8.87804 54.6222 10.118V13.7662H54.0636Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M27.783 23.8557H26.1963L23.8934 16.4994H25.4271L27.0229 21.9975L28.6097 16.4994H30.0611L27.783 23.8557Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M32.8693 17.6321H34.1779V16.4995H32.8693V17.6321ZM33.3061 21.3005L31.8308 21.412C31.4049 21.4441 30.9923 21.6998 30.9923 22.1639C30.9923 22.6059 31.3824 22.8822 31.8192 22.8822C32.6891 22.8822 33.3061 22.4183 33.3061 21.5662V21.3005ZM30.5662 17.6321H31.8746V16.4995H30.5662V17.6321ZM34.479 23.9439C33.8768 23.9439 33.5411 23.5661 33.4964 23.1373C33.2271 23.6013 32.5568 23.9993 31.7294 23.9993C30.3433 23.9993 29.6283 23.1373 29.6283 22.1966C29.6283 21.1015 30.4885 20.4733 31.5956 20.3951L33.3061 20.2736V19.9198C33.3061 19.3769 33.1158 19.0112 32.3222 19.0112C31.6736 19.0112 31.2928 19.3002 31.2597 19.8304H29.9073C29.9842 18.5371 31.0239 17.9615 32.3222 17.9615C33.3175 17.9615 34.1682 18.2714 34.502 19.1339C34.6476 19.4997 34.6699 19.9083 34.6699 20.2951V22.4289C34.6699 22.694 34.7591 22.7936 34.9955 22.7936C35.0834 22.7936 35.1732 22.7715 35.1732 22.7715V23.7876C34.9373 23.8878 34.8151 23.9439 34.479 23.9439Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M39.9701 23.3356C39.4985 23.7984 38.7732 23.9994 37.9785 23.9994C37.2393 23.9994 36.5823 23.7876 36.1001 23.3356C35.7653 23.0151 35.485 22.5392 35.485 21.9976H36.7943C36.7943 22.2514 36.9291 22.5292 37.1074 22.6719C37.3303 22.8484 37.5868 22.9257 37.9886 22.9257C38.4592 22.9257 39.1761 22.8276 39.1761 22.1966C39.1761 21.8655 38.9521 21.6437 38.5943 21.587C38.0803 21.5116 37.4983 21.4781 36.9839 21.3662C36.1905 21.2018 35.6532 20.5601 35.6532 19.8304C35.6532 19.2442 35.8989 18.8355 36.2466 18.5371C36.6714 18.1737 37.2844 17.9615 38.011 17.9615C38.7055 17.9615 39.4111 18.1826 39.8353 18.6359C40.1471 18.9689 40.349 19.3996 40.349 19.8204H39.0195C39.0195 19.5986 38.9171 19.4211 38.7827 19.2769C38.6151 19.1112 38.314 19.0112 38.0249 19.0112C37.823 19.0112 37.6334 19.0112 37.4214 19.1006C37.1742 19.1994 36.9738 19.4105 36.9738 19.7089C36.9738 20.1182 37.3303 20.2384 37.6435 20.2838C38.1695 20.3505 38.314 20.3618 38.8851 20.4486C39.8028 20.5935 40.4732 21.1691 40.4732 22.0745C40.4732 22.6273 40.2713 23.0366 39.9701 23.3356Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M43.2666 23.932C42.0924 23.932 41.513 23.2695 41.513 22.1638V19.2443H40.449V18.1057H41.513V16.4994H42.9092V18.1057H44.3738V19.2443H42.9092V22.0417C42.9092 22.4839 43.1105 22.6721 43.5587 22.6721C43.8491 22.6721 44.0821 22.6614 44.4642 22.6173V23.7784C44.072 23.8765 43.6805 23.932 43.2666 23.932Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M51.9802 23.8557V20.2838C51.9802 19.5761 51.7897 19.1672 51.085 19.1672C50.2916 19.1672 49.9452 19.9966 49.9452 20.7164V23.8557H48.5571V20.2838C48.5571 19.5761 48.3668 19.1672 47.6632 19.1672C46.8698 19.1672 46.512 19.9966 46.512 20.7164V23.8557H45.1259V18.1057H46.2871L46.4005 18.8688C46.7227 18.3381 47.2818 17.9615 48.0556 17.9615C48.8711 17.9615 49.4302 18.3153 49.7199 18.9002C50.0676 18.3047 50.6935 17.9615 51.4759 17.9615C52.7177 17.9615 53.3664 18.7796 53.3664 19.9739V23.8557H51.9802Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M57.7408 21.3006L56.2629 21.4121C55.839 21.4442 55.4244 21.6997 55.4244 22.1638C55.4244 22.606 55.816 22.8823 56.2513 22.8823C57.125 22.8823 57.7408 22.4182 57.7408 21.5663V21.3006ZM58.915 23.9438C58.3093 23.9438 57.9751 23.5662 57.9306 23.1371C57.6605 23.6014 56.9895 23.9994 56.1635 23.9994C54.7767 23.9994 54.061 23.1371 54.061 22.1967C54.061 21.1016 54.9219 20.4731 56.0299 20.3952L57.7408 20.2737V19.9199C57.7408 19.377 57.549 19.0113 56.7565 19.0113C56.1076 19.0113 55.7268 19.3003 55.6944 19.8305H54.34C54.4189 18.537 55.4588 17.9614 56.7565 17.9614C57.7517 17.9614 58.599 18.2713 58.9358 19.134C59.081 19.4998 59.104 19.9084 59.104 20.2949V22.4288C59.104 22.6941 59.1946 22.7935 59.4276 22.7935C59.5178 22.7935 59.6083 22.7716 59.6083 22.7716V23.7877C59.3722 23.8879 59.2481 23.9438 58.915 23.9438Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M63.845 23.8557V20.3277C63.845 19.6534 63.6215 19.2443 62.8831 19.2443C62.3908 19.2443 62.0686 19.5546 61.8768 19.9739C61.6749 20.4273 61.6878 21.0254 61.6878 21.5116V23.8557H60.2894V18.1057H61.4643L61.5637 18.8469C61.9106 18.2387 62.6047 17.9615 63.2746 17.9615C64.5156 17.9615 65.2426 18.8248 65.2426 20.0181V23.8557H63.845Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M67.8642 23.9219C66.9114 23.9219 66.2761 23.4684 66.2761 22.3742V16.4995H67.6844V22.1418C67.6844 22.4723 67.7615 22.6941 68.2437 22.6941C68.3646 22.6941 68.4003 22.6839 68.4767 22.6839V23.8431C68.1984 23.8992 68.1442 23.9219 67.8642 23.9219Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M72.4893 21.3006L71.0134 21.4121C70.5886 21.4442 70.1749 21.6997 70.1749 22.1638C70.1749 22.606 70.5652 22.8823 71.0018 22.8823C71.8755 22.8823 72.4893 22.4182 72.4893 21.5663V21.3006ZM73.6629 23.9438C73.0598 23.9438 72.7243 23.5662 72.6796 23.1371C72.4103 23.6014 71.7406 23.9994 70.914 23.9994C69.5265 23.9994 68.8115 23.1371 68.8115 22.1967C68.8115 21.1016 69.6717 20.4731 70.7784 20.3952L72.4893 20.2737V19.9199C72.4893 19.377 72.3008 19.0113 71.5048 19.0113C70.8566 19.0113 70.4767 19.3003 70.4436 19.8305H69.0912C69.1674 18.537 70.2099 17.9614 71.5048 17.9614C72.5014 17.9614 73.3502 18.2713 73.6863 19.134C73.8308 19.4998 73.854 19.9084 73.854 20.2949V22.4288C73.854 22.6941 73.943 22.7935 74.1773 22.7935C74.267 22.7935 74.3575 22.7716 74.3575 22.7716V23.7877C74.1206 23.8879 73.999 23.9438 73.6629 23.9438Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M78.595 23.8557V20.3277C78.595 19.6534 78.3701 19.2443 77.634 19.2443C77.1407 19.2443 76.8153 19.5546 76.6267 19.9739C76.4255 20.4273 76.4384 21.0254 76.4384 21.5116V23.8557H75.0387V18.1057H76.2129L76.3149 18.8469C76.6598 18.2387 77.3533 17.9615 78.0252 17.9615C79.2655 17.9615 79.9919 18.8248 79.9919 20.0181V23.8557H78.595Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M83.4589 19.1226C83.0235 19.1226 82.7215 19.3223 82.5199 19.5761C82.2286 19.952 82.1498 20.4732 82.1498 20.9687C82.1498 21.4676 82.2286 21.9977 82.5199 22.3743C82.7215 22.6272 83.0235 22.8275 83.4589 22.8275C84.5542 22.8275 84.7789 21.7994 84.7789 20.9687C84.7789 20.1389 84.5542 19.1226 83.4589 19.1226ZM84.9017 23.8557L84.8126 23.2255C84.4651 23.7563 83.8167 23.9874 83.1786 23.9874C82.5974 23.9874 82.118 23.7877 81.7602 23.5006C81.066 22.9384 80.7312 22.0744 80.7312 20.9914C80.7312 19.8645 81.0774 18.9903 81.7703 18.4268C82.1281 18.1378 82.5974 17.9615 83.1915 17.9615C83.9301 17.9615 84.4651 18.2053 84.7108 18.5031V16.4994H86.1083V23.8557H84.9017Z\"></path></g>`}}export{e as IDSIconVastmanland};\n", "import{IDSIconVastmanland as i}from\"./icon-vastmanland-element.js\";import{registerComponent as t}from\"../../../utilities/utils.js\";t(\"ids-icon-vastmanland\",i);\n", "import{IDSIconRegion as r}from\"./icon-region-element.js\";import{registerComponent as s}from\"../../utilities/utils.js\";import\"../icons/blekinge/register.js\";import\"../icons/gotland/register.js\";import\"../icons/halland/register.js\";import\"../icons/dalarna/register.js\";import\"../icons/gavleborg/register.js\";import\"../icons/jamtland-harjedalen/register.js\";import\"../icons/jonkoping/register.js\";import\"../icons/kalmar/register.js\";import\"../icons/kronoberg/register.js\";import\"../icons/norrbotten/register.js\";import\"../icons/orebro/register.js\";import\"../icons/ostergotland/register.js\";import\"../icons/skane/register.js\";import\"../icons/sormland/register.js\";import\"../icons/stockholm/register.js\";import\"../icons/uppsala/register.js\";import\"../icons/vasternorrland/register.js\";import\"../icons/varmland/register.js\";import\"../icons/vasterbotten/register.js\";import\"../icons/vastra-gotaland/register.js\";import\"../icons/vastmanland/register.js\";s(\"ids-icon-region\",r);\n", "import * as React from 'react';\nimport { createComponent } from '@lit-labs/react';\nimport '@inera/ids-core/components/navigation/local/register';\nimport { IDSNavigationLocal as IDSNavigationLocal$1 } from '@inera/ids-core/components/navigation/local/navigation-local-element';\n\nconst IDSNavigationLocal = createComponent({\r\n    tagName: 'ids-navigation-local',\r\n    elementClass: IDSNavigationLocal$1,\r\n    react: React\r\n});\n\nexport { IDSNavigationLocal };\n", "import{css as o}from\"lit\";var t=o`.local-navigation{border-bottom:var(--navigation-local_border-top)}::slotted(*){display:block!important;padding:14px 20px 14px 20px;border-top:var(--navigation-local_border-top);position:relative}::slotted(:focus-within),::slotted(:hover){border-top:var(--navigation-local-hover_border-top)}::slotted(*)::before{content:\"\";position:absolute;left:0;top:-1px;display:block;height:calc(100% + 1px);width:5px}::slotted(:focus-within)::before,::slotted(:hover)::before{background-color:var(--navigation-local-active_border-left)!important}::slotted([active])::before{background-color:var(--navigation-local-selected_border-left)}.local-navigation-headline{color:var(--color-grey-base);font-family:var(--font-family_1);font-size:1.25rem;font-style:normal;font-weight:700;letter-spacing:var(--letter-spacing-400);line-height:1.5rem;padding:14px 20px 14px 0}`;export{t as default};\n", "import{__decorate as t}from\"tslib\";import{LitElement as i,html as o}from\"lit\";import{property as r}from\"lit/decorators.js\";import e from\"./navigation-local-styles.js\";class l extends i{constructor(){super(...arguments),this.headline=\"\"}firstUpdated(t){super.firstUpdated(t),this.querySelectorAll(\"ids-link\").forEach((t=>{t.setAttribute(\"color\",\"var(--navigation-link_color)\"),t.setAttribute(\"hovercolor\",\"var(--navigation-link-hover_color)\")}))}render(){return o`<div class=\"local-navigation\"><div class=\"local-navigation-headline\">${this.headline}</div><slot></slot></div>`}}l.styles=[e],t([r({type:String})],l.prototype,\"headline\",void 0);export{l as IDSNavigationLocal};\n", "import{IDSNavigationLocal as i}from\"./navigation-local-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-navigation-local\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/1177/register';\nimport { IDSIcon1177 as IDSIcon1177$1 } from '@inera/ids-core/components/icons/1177/icon-1177-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIcon1177 = createComponent({\r\n    tagName: 'ids-icon-1177',\r\n    elementClass: IDSIcon1177$1,\r\n    react: React,\r\n});\n\nexport { IDSIcon1177 };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/agent/register';\nimport { IDSIconAgent as IDSIconAgent$1 } from '@inera/ids-core/components/icons/agent/icon-agent-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconAgent = createComponent({\r\n    tagName: 'ids-icon-agent',\r\n    elementClass: IDSIconAgent$1,\r\n    react: React,\r\n});\n\nexport { IDSIconAgent };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/arrow/register';\nimport { IDSIconArrow as IDSIconArrow$1 } from '@inera/ids-core/components/icons/arrow/icon-arrow-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconArrow = createComponent({\r\n    tagName: 'ids-icon-arrow',\r\n    elementClass: IDSIconArrow$1,\r\n    react: React,\r\n});\n\nexport { IDSIconArrow };\n", "import{svg as e}from\"lit\";import{IDSIconBase as t}from\"../icon-base-element.js\";class r extends t{constructor(){super(),this.vbHeight=10,this.vbWidth=15}renderIcon(){return e`<path fill=\"${this.colors.color}\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15 5.02632L10.2227 0.337087C9.84974 -0.0290291 9.245 -0.0290292 8.87201 0.337087C8.49902 0.703204 8.49902 1.2968 8.87201 1.66291L11.2813 4.0278L0.955102 4.0278C0.427614 4.0278 0 4.44754 0 4.9653C0 5.48307 0.427614 5.9028 0.955102 5.9028L11.4056 5.9028L8.87201 8.38972C8.49902 8.75584 8.49902 9.34943 8.87201 9.71554C9.245 10.0817 9.84974 10.0817 10.2227 9.71554L15 5.02632Z\"></path>`}}export{r as IDSIconArrow};\n", "import{IDSIconArrow as i}from\"./icon-arrow-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-arrow\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/attention/register';\nimport { IDSIconAttention as IDSIconAttention$1 } from '@inera/ids-core/components/icons/attention/icon-attention-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconAttention = createComponent({\r\n    tagName: 'ids-icon-attention',\r\n    elementClass: IDSIconAttention$1,\r\n    react: React,\r\n});\n\nexport { IDSIconAttention };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/blekinge/register';\nimport { IDSIconBlekinge as IDSIconBlekinge$1 } from '@inera/ids-core/components/icons/blekinge/icon-blekinge-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconBlekinge = createComponent({\r\n    tagName: 'ids-icon-blekinge',\r\n    elementClass: IDSIconBlekinge$1,\r\n    react: React,\r\n});\n\nexport { IDSIconBlekinge };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/bookmark/register';\nimport { IDSIconBookmark as IDSIconBookmark$1 } from '@inera/ids-core/components/icons/bookmark/icon-bookmark-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconBookmark = createComponent({\r\n    tagName: 'ids-icon-bookmark',\r\n    elementClass: IDSIconBookmark$1,\r\n    react: React,\r\n});\n\nexport { IDSIconBookmark };\n", "import{svg as e}from\"lit\";import{IDSIconBase as l}from\"../icon-base-element.js\";class o extends l{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return e`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 3.06452C5 1.37203 6.34315 0 8 0H32C33.6569 0 35 1.37203 35 3.06452V37.9536C35 39.5758 33.2383 40.5509 31.9079 39.6652L20.546 32.1004C20.2142 31.8794 19.7858 31.8794 19.454 32.1004L8.09208 39.6652C6.76171 40.5509 5 39.5758 5 37.9536V3.06452ZM8 2.04301C7.44771 2.04301 7 2.50036 7 3.06452V37.9536L18.3619 30.3888C19.3575 29.7259 20.6425 29.7259 21.6381 30.3888L33 37.9536V3.06452C33 2.50036 32.5523 2.04301 32 2.04301H8Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8 9.69385C8 9.14156 8.44772 8.69385 9 8.69385H31C31.5523 8.69385 32 9.14156 32 9.69385C32 10.2461 31.5523 10.6938 31 10.6938H9C8.44772 10.6938 8 10.2461 8 9.69385Z\"></path>`}}export{o as IDSIconBookmark};\n", "import{IDSIconBookmark as o}from\"./icon-bookmark-element.js\";import{registerComponent as i}from\"../../../utilities/utils.js\";i(\"ids-icon-bookmark\",o);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/calendar/register';\nimport { IDSIconCalendar as IDSIconCalendar$1 } from '@inera/ids-core/components/icons/calendar/icon-calendar-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconCalendar = createComponent({\r\n    tagName: 'ids-icon-calendar',\r\n    elementClass: IDSIconCalendar$1,\r\n    react: React,\r\n});\n\nexport { IDSIconCalendar };\n", "import{svg as o}from\"lit\";import{IDSIconBase as l}from\"../icon-base-element.js\";class t extends l{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return o`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3 0C1.34315 0 0 1.34314 0 3V37C0 38.6569 1.34314 40 3 40H37C38.6569 40 40 38.6569 40 37V3C40 1.34315 38.6569 0 37 0H3ZM2 3C2 2.44771 2.44771 2 3 2H37C37.5523 2 38 2.44771 38 3V6.47217H2V3ZM2 8.47217V37C2 37.5523 2.44771 38 3 38H37C37.5523 38 38 37.5523 38 37V8.47217H2Z\" fill=\"#3B4266\"></path><path fill=\"${this.colors.color}\" d=\"M7 13.9722H10V16.9722H7V13.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M30 13.9722H27V16.9722H30V13.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M34 13.9722H31V16.9722H34V13.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M27 17.9722H30V20.9722H27V17.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M34 17.9722H31V20.9722H34V17.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M27 21.9722H30V24.9722H27V21.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M34 21.9722H31V24.9722H34V21.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M27 25.9722H30V28.9722H27V25.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M34 25.9722H31V28.9722H34V25.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M14 13.9722H11V16.9722H14V13.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M15 13.9722H18V16.9722H15V13.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M22 13.9722H19V16.9722H22V13.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M23 13.9722H26V16.9722H23V13.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M10 17.9722H7V20.9722H10V17.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M11 17.9722H14V20.9722H11V17.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M18 17.9722H15V20.9722H18V17.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M19 17.9722H22V20.9722H19V17.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M26 17.9722H23V20.9722H26V17.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M7 21.9722H10V24.9722H7V21.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M14 21.9722H11V24.9722H14V21.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M15 21.9722H18V24.9722H15V21.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M22 21.9722H19V24.9722H22V21.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M23 21.9722H26V24.9722H23V21.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M10 25.9722H7V28.9722H10V25.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M11 25.9722H14V28.9722H11V25.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M18 25.9722H15V28.9722H18V25.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M19 25.9722H22V28.9722H19V25.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M26 25.9722H23V28.9722H26V25.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M7 29.9722H10V32.9722H7V29.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M14 29.9722H11V32.9722H14V29.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M15 29.9722H18V32.9722H15V29.9722Z\"></path><path fill=\"${this.colors.color}\" d=\"M22 29.9722H19V32.9722H22V29.9722Z\"></path>`}}export{t as IDSIconCalendar};\n", "import{IDSIconCalendar as i}from\"./icon-calendar-element.js\";import{registerComponent as e}from\"../../../utilities/utils.js\";e(\"ids-icon-calendar\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/call/register';\nimport { IDSIconCall as IDSIconCall$1 } from '@inera/ids-core/components/icons/call/icon-call-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconCall = createComponent({\r\n    tagName: 'ids-icon-call',\r\n    elementClass: IDSIconCall$1,\r\n    react: React,\r\n});\n\nexport { IDSIconCall };\n", "import{svg as C}from\"lit\";import{IDSIconBase as o}from\"../icon-base-element.js\";class t extends o{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return C`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.96711 13.4737L12.4019 10.3661C12.5849 10.2005 12.6469 9.93624 12.5543 9.70437L9.66606 2.47589C9.55901 2.20796 9.27815 2.06012 9.00292 2.118L2.50909 3.4837C2.22554 3.54334 2.10705 3.7557 2.10603 3.90831C2.04766 12.6284 5.33688 21.3589 11.9732 28.0086C18.6399 34.6888 27.4005 37.9828 36.1392 37.893C36.283 37.8915 36.4965 37.7775 36.5572 37.4875L37.8818 31.1639C37.9413 30.8795 37.7877 30.5972 37.5248 30.4918L30.3004 27.5935C30.0744 27.5029 29.8152 27.5622 29.6503 27.7452L26.6476 31.0775C25.2891 32.5851 23.0202 33.1569 21.067 32.1416C18.3072 30.7071 15.7193 28.8306 13.4086 26.5152C11.1674 24.2695 9.33873 21.7629 7.92471 19.0916C6.8889 17.1347 7.45193 14.8445 8.96711 13.4737ZM13.8143 11.9272C14.6508 11.1705 14.9281 9.9716 14.5093 8.92324L11.621 1.69476C11.1354 0.47921 9.84849 -0.211141 8.56965 0.0578089L2.07582 1.42351C0.892101 1.67245 0.00892173 2.68229 0.000809994 3.89422C-0.0611618 13.1531 3.43291 22.4314 10.483 29.4958C17.5657 36.5928 26.8783 40.0936 36.1609 39.9981C37.367 39.9857 38.37 39.1019 38.6178 37.9191L39.9423 31.5955C40.2107 30.314 39.5218 29.0246 38.3087 28.5379L31.0842 25.6396C30.038 25.2199 28.8416 25.4978 28.0863 26.3359L25.0836 29.6682C24.3084 30.5286 23.0649 30.8075 22.038 30.2737C19.4676 28.9376 17.0553 27.189 14.8987 25.028C12.8071 22.9322 11.1027 20.5953 9.78538 18.1067C9.23934 17.0751 9.51461 15.8174 10.3795 15.0348L13.8143 11.9272Z\"></path><path fill=\"${this.colors.color}\" d=\"M7.51121 11.7571C7.72899 12.2961 8.34249 12.5565 8.88151 12.3388C9.42053 12.121 9.68095 11.5075 9.46317 10.9685L6.70291 4.13658C6.48514 3.59756 5.87163 3.33714 5.33261 3.55492C4.79359 3.7727 4.53317 4.38621 4.75095 4.92523L7.51121 11.7571Z\"></path><path fill=\"${this.colors.color}\" d=\"M35.1488 35.2593C35.6951 35.4582 36.2991 35.1765 36.498 34.6302C36.6968 34.0839 36.4151 33.4799 35.8688 33.281L28.9448 30.7609C28.3985 30.562 27.7945 30.8437 27.5956 31.39C27.3968 31.9363 27.6785 32.5403 28.2248 32.7392L35.1488 35.2593Z\"></path>`}}export{t as IDSIconCall};\n", "import{IDSIconCall as i}from\"./icon-call-element.js\";import{registerComponent as l}from\"../../../utilities/utils.js\";l(\"ids-icon-call\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/call-active/register';\nimport { IDSIconCallActive as IDSIconCallActive$1 } from '@inera/ids-core/components/icons/call-active/icon-call-active-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconCallActive = createComponent({\r\n    tagName: 'ids-icon-call-active',\r\n    elementClass: IDSIconCallActive$1,\r\n    react: React,\r\n});\n\nexport { IDSIconCallActive };\n", "import{svg as C}from\"lit\";import{IDSIconBase as o}from\"../icon-base-element.js\";class l extends o{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return C`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.77708 14.0359L12.1391 10.9941C12.3182 10.8321 12.3789 10.5734 12.2882 10.3464L9.46121 3.27112C9.35643 3.00887 9.08153 2.86417 8.81213 2.92082L2.45592 4.25758C2.17837 4.31595 2.06239 4.52381 2.06139 4.67319C2.00426 13.2085 5.22378 21.7539 11.7194 28.2627C18.2449 34.8014 26.8198 38.0256 35.3734 37.9376C35.5141 37.9362 35.723 37.8246 35.7825 37.5407L37.079 31.3511C37.1372 31.0728 36.9869 30.7965 36.7296 30.6933L29.6582 27.8564C29.4371 27.7677 29.1833 27.8258 29.0219 28.0049L26.0829 31.2666C24.7532 32.7422 22.5324 33.3019 20.6206 32.3082C17.9192 30.904 15.3862 29.0673 13.1244 26.8009C10.9308 24.6029 9.14082 22.1494 7.75677 19.5347C6.7429 17.6193 7.294 15.3777 8.77708 14.0359ZM13.5216 12.5222C14.3403 11.7814 14.6118 10.608 14.2018 9.58183L11.3748 2.50655C10.8994 1.31676 9.63978 0.641036 8.38804 0.904287L2.03183 2.24104C0.873195 2.48471 0.00873265 3.47315 0.000792828 4.6594C-0.0598656 13.722 3.36016 22.8037 10.2609 29.7184C17.1935 36.665 26.3087 40.0916 35.3945 39.9981C36.5751 39.986 37.5569 39.1209 37.7994 37.9632L39.0958 31.7736C39.3586 30.5193 38.6842 29.2572 37.4968 28.7808L30.4255 25.9439C29.4014 25.5331 28.2303 25.8051 27.4911 26.6255L24.5521 29.8871C23.7932 30.7293 22.5761 31.0023 21.571 30.4798C19.055 29.172 16.6938 27.4605 14.583 25.3453C12.5357 23.2939 10.8674 21.0066 9.578 18.5707C9.04354 17.561 9.31297 16.3299 10.1596 15.5639L13.5216 12.5222Z\"></path><path fill=\"${this.colors.color}\" d=\"M7.35192 12.3558C7.56508 12.8834 8.16558 13.1383 8.69318 12.9251C9.22078 12.7119 9.47568 12.1114 9.26252 11.5838L6.56075 4.89674C6.34759 4.36915 5.74708 4.11425 5.21949 4.32741C4.69189 4.54057 4.43699 5.14108 4.65015 5.66868L7.35192 12.3558Z\"></path><path fill=\"${this.colors.color}\" d=\"M34.404 35.3598C34.9387 35.5544 35.5299 35.2787 35.7245 34.744C35.9192 34.2093 35.6435 33.618 35.1087 33.4234L28.3314 30.9567C27.7967 30.7621 27.2055 31.0378 27.0108 31.5725C26.8162 32.1072 27.0919 32.6984 27.6266 32.8931L34.404 35.3598Z\"></path><path fill=\"${this.colors.color}\" d=\"M38.3881 18.5458C38.9571 18.5458 39.4184 18.0845 39.4184 17.5155C39.4184 7.84196 31.5765 0 21.9029 0C21.3339 0 20.8726 0.461292 20.8726 1.03032C20.8726 1.59936 21.3339 2.06065 21.9029 2.06065C30.4384 2.06065 37.3578 8.98002 37.3578 17.5155C37.3578 18.0845 37.8191 18.5458 38.3881 18.5458Z\"></path><path fill=\"${this.colors.color}\" d=\"M32.108 18.5458C32.6771 18.5458 33.1384 18.0845 33.1384 17.5155C33.1384 11.3103 28.1081 6.28007 21.9029 6.28007C21.3339 6.28007 20.8726 6.74136 20.8726 7.31039C20.8726 7.87942 21.3339 8.34071 21.9029 8.34071C26.97 8.34071 31.0777 12.4484 31.0777 17.5155C31.0777 18.0845 31.539 18.5458 32.108 18.5458Z\"></path><path fill=\"${this.colors.color}\" d=\"M26.8583 17.5155C26.8583 18.0845 26.397 18.5458 25.828 18.5458C25.2589 18.5458 24.7976 18.0845 24.7976 17.5155C24.7976 15.9168 23.5016 14.6208 21.9029 14.6208C21.3339 14.6208 20.8726 14.1595 20.8726 13.5905C20.8726 13.0214 21.3339 12.5601 21.9029 12.5601C24.6397 12.5601 26.8583 14.7787 26.8583 17.5155Z\"></path>`}}export{l as IDSIconCallActive};\n", "import{IDSIconCallActive as i}from\"./icon-call-active-element.js\";import{registerComponent as t}from\"../../../utilities/utils.js\";t(\"ids-icon-call-active\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/camera-off/register';\nimport { IDSIconCameraOff as IDSIconCameraOff$1 } from '@inera/ids-core/components/icons/camera-off/icon-camera-off-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconCameraOff = createComponent({\r\n    tagName: 'ids-icon-camera-off',\r\n    elementClass: IDSIconCameraOff$1,\r\n    react: React,\r\n});\n\nexport { IDSIconCameraOff };\n", "import{svg as o}from\"lit\";import{IDSIconBase as l}from\"../icon-base-element.js\";class t extends l{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return o`<path fill=\"${this.colors.color2}\" d=\"M15.2538 2.64445C15.4342 2.32273 15.7744 2.12352 16.1432 2.12352H24.6317C25.0005 2.12352 25.3407 2.32273 25.5211 2.64445L26.8592 5.03033C26.8963 5.09651 26.9244 5.16196 26.9451 5.22597L27.1728 5.93321H34.6642C35.2274 5.93321 35.684 6.38978 35.684 6.95298V26.3806L37.7235 27.9252V6.95298C37.7235 5.26337 36.3538 3.89368 34.6642 3.89368H28.5601L27.3 1.64678C26.7587 0.681597 25.7383 0.0839844 24.6317 0.0839844H16.1432C15.0366 0.0839844 14.0162 0.681598 13.4749 1.64678L12.2148 3.89368H6.11072C6.07155 3.89368 6.03255 3.89441 5.99373 3.89587L8.68396 5.93321H13.6021L13.8298 5.22597C13.8504 5.16196 13.8786 5.09651 13.9157 5.03033L15.2538 2.64445Z\"></path><path fill=\"${this.colors.color2}\" d=\"M5.09096 10.8874L3.05142 9.34281V29.6573C3.05142 31.3469 4.42112 32.7166 6.11072 32.7166H33.9156L31.2225 30.677H6.11072C5.54752 30.677 5.09096 30.2205 5.09096 29.6573V10.8874Z\"></path><path fill=\"${this.colors.color2}\" d=\"M13.3649 17.1532C13.2889 17.5705 13.2492 18.0005 13.2492 18.4398C13.2492 22.3822 16.4452 25.5782 20.3876 25.5782C21.5152 25.5782 22.5817 25.3168 23.5298 24.8512L21.6039 23.3927C21.2141 23.4881 20.8068 23.5387 20.3876 23.5387C17.6293 23.5387 15.3826 21.3485 15.2916 18.6124L13.3649 17.1532Z\"></path><path fill=\"${this.colors.color}\" d=\"M25.482 18.6544C25.4849 18.5833 25.4864 18.5117 25.4864 18.4398C25.4864 15.6238 23.2036 13.341 20.3876 13.341C19.8329 13.341 19.2989 13.4295 18.799 13.5933L16.9416 12.1868C17.9633 11.6225 19.1379 11.3014 20.3876 11.3014C24.33 11.3014 27.526 14.4974 27.526 18.4398C27.526 18.9979 27.4619 19.541 27.3408 20.0621L25.482 18.6544Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.594567 3.64459C0.934585 3.19561 1.5742 3.10728 2.02318 3.4473L39.9835 32.195C40.4325 32.5351 40.5208 33.1747 40.1808 33.6237C39.8408 34.0726 39.2012 34.161 38.7522 33.821L0.791862 5.0732C0.342881 4.73318 0.254548 4.09357 0.594567 3.64459Z\"></path>`}}export{t as IDSIconCameraOff};\n", "import{registerComponent as i}from\"../../../utilities/utils.js\";import{IDSIconCameraOff as o}from\"./icon-camera-off-element.js\";i(\"ids-icon-camera-off\",o);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/camera-on/register';\nimport { IDSIconCameraOn as IDSIconCameraOn$1 } from '@inera/ids-core/components/icons/camera-on/icon-camera-on-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconCameraOn = createComponent({\r\n    tagName: 'ids-icon-camera-on',\r\n    elementClass: IDSIconCameraOn$1,\r\n    react: React,\r\n});\n\nexport { IDSIconCameraOn };\n", "import{svg as e}from\"lit\";import{IDSIconBase as C}from\"../icon-base-element.js\";class l extends C{constructor(){super(),this.vbHeight=38,this.vbWidth=40}renderIcon(){return e`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.1036 2.35294C14.678 2.35294 14.2856 2.58276 14.0774 2.95392L12.5337 5.70642C12.4909 5.78278 12.4585 5.85829 12.4347 5.93213L12.172 6.74805H3.52941C2.87966 6.74805 2.35294 7.27477 2.35294 7.92452V34.1176C2.35294 34.7674 2.87966 35.2941 3.52941 35.2941H36.4706C37.1203 35.2941 37.6471 34.7674 37.6471 34.1176V7.92452C37.6471 7.27477 37.1203 6.74805 36.4706 6.74805H27.8279L27.5653 5.93213C27.5415 5.85828 27.509 5.78278 27.4662 5.70642L25.9225 2.95392C25.7143 2.58276 25.3219 2.35294 24.8964 2.35294H15.1036ZM12.0252 1.80294C12.6497 0.689446 13.8269 0 15.1036 0H24.8964C26.1731 0 27.3502 0.689445 27.9747 1.80295L29.4285 4.39511H36.4706C38.4198 4.39511 40 5.97528 40 7.92452V34.1176C40 36.0669 38.4198 37.647 36.4706 37.647H3.52941C1.58017 37.647 0 36.0669 0 34.1176V7.92452C0 5.97528 1.58017 4.39511 3.52941 4.39511H10.5714L12.0252 1.80294Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20 15.2941C16.7513 15.2941 14.1176 17.9277 14.1176 21.1765C14.1176 24.4252 16.7513 27.0588 20 27.0588C23.2487 27.0588 25.8824 24.4252 25.8824 21.1765C25.8824 17.9277 23.2487 15.2941 20 15.2941ZM11.7647 21.1765C11.7647 16.6282 15.4518 12.9412 20 12.9412C24.5482 12.9412 28.2353 16.6282 28.2353 21.1765C28.2353 25.7247 24.5482 29.4118 20 29.4118C15.4518 29.4118 11.7647 25.7247 11.7647 21.1765Z\"></path>`}}export{l as IDSIconCameraOn};\n", "import{IDSIconCameraOn as i}from\"./icon-camera-on-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-camera-on\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/camera-switch/register';\nimport { IDSIconCameraSwitch as IDSIconCameraSwitch$1 } from '@inera/ids-core/components/icons/camera-switch/icon-camera-switch-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconCameraSwitch = createComponent({\r\n    tagName: 'ids-icon-camera-switch',\r\n    elementClass: IDSIconCameraSwitch$1,\r\n    react: React,\r\n});\n\nexport { IDSIconCameraSwitch };\n", "import{svg as C}from\"lit\";import{IDSIconBase as o}from\"../icon-base-element.js\";class t extends o{constructor(){super(),this.vbHeight=38,this.vbWidth=40}renderIcon(){return C`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.1036 2.35294C14.678 2.35294 14.2856 2.58276 14.0774 2.95392L12.5337 5.70642C12.4909 5.78278 12.4585 5.85829 12.4347 5.93213L12.172 6.74805H3.52941C2.87966 6.74805 2.35294 7.27477 2.35294 7.92452V34.1176C2.35294 34.7674 2.87966 35.2941 3.52941 35.2941H36.4706C37.1203 35.2941 37.6471 34.7674 37.6471 34.1176V7.92452C37.6471 7.27477 37.1203 6.74805 36.4706 6.74805H27.8279L27.5653 5.93213C27.5415 5.85828 27.509 5.78278 27.4662 5.70642L25.9225 2.95392C25.7143 2.58276 25.3219 2.35294 24.8964 2.35294H15.1036ZM12.0252 1.80294C12.6497 0.689446 13.8269 0 15.1036 0H24.8964C26.1731 0 27.3502 0.689445 27.9747 1.80295L29.4285 4.39511H36.4706C38.4198 4.39511 40 5.97528 40 7.92452V34.1176C40 36.0669 38.4198 37.647 36.4706 37.647H3.52941C1.58017 37.647 0 36.0669 0 34.1176V7.92452C0 5.97528 1.58017 4.39511 3.52941 4.39511H10.5714L12.0252 1.80294Z\"></path><path fill=\"${this.colors.color}\" d=\"M14.8614 17.2566C15.8511 15.2423 18.0034 13.8237 20.53 13.8237C23.496 13.8237 25.9463 15.7788 26.6053 18.3574C26.7259 18.8296 27.2065 19.1145 27.6786 18.9938C28.1508 18.8732 28.4357 18.3926 28.315 17.9205C27.449 14.532 24.2723 12.059 20.53 12.059C17.5987 12.059 15.0145 13.5762 13.6159 15.8621V13.8076C13.6159 13.3203 13.2208 12.9252 12.7335 12.9252C12.2462 12.9252 11.8512 13.3203 11.8512 13.8076V18.139C11.8512 18.6263 12.2462 19.0213 12.7335 19.0213H13.5811C13.594 19.0216 13.6069 19.0216 13.6197 19.0213H17.0649C17.5522 19.0213 17.9472 18.6263 17.9472 18.139C17.9472 17.6516 17.5522 17.2566 17.0649 17.2566H14.8614Z\"></path><path fill=\"${this.colors.color}\" d=\"M26.5739 22.1835H23.1287C22.6414 22.1835 22.2464 22.5785 22.2464 23.0658C22.2464 23.5531 22.6414 23.9482 23.1287 23.9482H25.3322C24.3425 25.9624 22.1902 27.3811 19.6636 27.3811C16.6976 27.3811 14.2473 25.426 13.5883 22.8473C13.4676 22.3752 12.9871 22.0903 12.5149 22.2109C12.0428 22.3316 11.7579 22.8122 11.8786 23.2843C12.7446 26.6728 15.9213 29.1458 19.6636 29.1458C22.5949 29.1458 25.1791 27.6286 26.5777 25.3427V27.3972C26.5777 27.8845 26.9728 28.2795 27.4601 28.2795C27.9474 28.2795 28.3424 27.8845 28.3424 27.3972V23.0658C28.3424 22.5785 27.9474 22.1835 27.4601 22.1835H26.6125C26.5996 22.1832 26.5867 22.1832 26.5739 22.1835Z\"></path>`}}export{t as IDSIconCameraSwitch};\n", "import{IDSIconCameraSwitch as i}from\"./icon-camera-switch-element.js\";import{registerComponent as t}from\"../../../utilities/utils.js\";t(\"ids-icon-camera-switch\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/chart-bar/register';\nimport { IDSIconChartBar as IDSIconChartBar$1 } from '@inera/ids-core/components/icons/chart-bar/icon-chart-bar-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconChartBar = createComponent({\r\n    tagName: 'ids-icon-chart-bar',\r\n    elementClass: IDSIconChartBar$1,\r\n    react: React,\r\n});\n\nexport { IDSIconChartBar };\n", "import{svg as o}from\"lit\";import{IDSIconBase as t}from\"../icon-base-element.js\";class l extends t{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return o`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1 0.193359C1.55228 0.193359 2 0.641075 2 1.19336V38.1934H39C39.5523 38.1934 40 38.6411 40 39.1934C40 39.7456 39.5523 40.1934 39 40.1934H0V1.19336C0 0.641075 0.447715 0.193359 1 0.193359Z\"></path><path fill=\"${this.colors.color}\" d=\"M18 7.88135C18 7.32906 18.4477 6.88135 19 6.88135H21C21.5523 6.88135 22 7.32906 22 7.88135V31.8813C22 32.4336 21.5523 32.8813 21 32.8813H19C18.4477 32.8813 18 32.4336 18 31.8813V7.88135Z\"></path><path fill=\"${this.colors.color}\" d=\"M9 21.8813C9 21.3291 9.44772 20.8813 10 20.8813H12C12.5523 20.8813 13 21.3291 13 21.8813V31.8813C13 32.4336 12.5523 32.8813 12 32.8813H10C9.44772 32.8813 9 32.4336 9 31.8813V21.8813Z\"></path><path fill=\"${this.colors.color}\" d=\"M28 14.8813C27.4477 14.8813 27 15.3291 27 15.8813V31.8813C27 32.4336 27.4477 32.8813 28 32.8813H30C30.5523 32.8813 31 32.4336 31 31.8813V15.8813C31 15.3291 30.5523 14.8813 30 14.8813H28Z\"></path>`}}export{l as IDSIconChartBar};\n", "import{IDSIconChartBar as i}from\"./icon-chart-bar-element.js\";import{registerComponent as r}from\"../../../utilities/utils.js\";r(\"ids-icon-chart-bar\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/chart-line/register';\nimport { IDSIconChartLine as IDSIconChartLine$1 } from '@inera/ids-core/components/icons/chart-line/icon-chart-line-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconChartLine = createComponent({\r\n    tagName: 'ids-icon-chart-line',\r\n    elementClass: IDSIconChartLine$1,\r\n    react: React,\r\n});\n\nexport { IDSIconChartLine };\n", "import{svg as e}from\"lit\";import{IDSIconBase as l}from\"../icon-base-element.js\";class o extends l{constructor(){super(),this.vbHeight=41,this.vbWidth=40}renderIcon(){return e`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M1 0.193359C1.55228 0.193359 2 0.641075 2 1.19336V38.1934H39C39.5523 38.1934 40 38.6411 40 39.1934C40 39.7456 39.5523 40.1934 39 40.1934H0V1.19336C0 0.641075 0.447715 0.193359 1 0.193359Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M34.6915 11.1963C35.2421 11.6128 35.3509 12.3967 34.9345 12.9473L26.0492 24.6968C25.8415 24.9715 25.5297 25.1483 25.1874 25.1855C24.8451 25.2228 24.5026 25.1172 24.2407 24.8937L17.038 18.7466L7.92801 30.5809C7.50689 31.1279 6.72205 31.23 6.17501 30.8089C5.62796 30.3878 5.52588 29.6029 5.94699 29.0559L15.8589 16.1799C16.0678 15.9085 16.3789 15.7347 16.7195 15.6992C17.0601 15.6636 17.4004 15.7693 17.6609 15.9916L24.855 22.1313L32.9405 11.4394C33.3569 10.8888 34.1408 10.7799 34.6915 11.1963Z\"></path>`}}export{o as IDSIconChartLine};\n", "import{IDSIconChartLine as i}from\"./icon-chart-line-element.js\";import{registerComponent as t}from\"../../../utilities/utils.js\";t(\"ids-icon-chart-line\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/check/register';\nimport { IDSIconCheck as IDSIconCheck$1 } from '@inera/ids-core/components/icons/check/icon-check-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconCheck = createComponent({\r\n    tagName: 'ids-icon-check',\r\n    elementClass: IDSIconCheck$1,\r\n    react: React,\r\n});\n\nexport { IDSIconCheck };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/chevron/register';\nimport { IDSIconChevron as IDSIconChevron$1 } from '@inera/ids-core/components/icons/chevron/icon-chevron-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconChevron = createComponent({\r\n    tagName: 'ids-icon-chevron',\r\n    elementClass: IDSIconChevron$1,\r\n    react: React,\r\n});\n\nexport { IDSIconChevron };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/chevron-bold/register';\nimport { IDSIconChevronBold as IDSIconChevronBold$1 } from '@inera/ids-core/components/icons/chevron-bold/icon-chevron-bold-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconChevronBold = createComponent({\r\n    tagName: 'ids-icon-chevron-bold',\r\n    elementClass: IDSIconChevronBold$1,\r\n    react: React,\r\n});\n\nexport { IDSIconChevronBold };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/clipboard/register';\nimport { IDSIconClipboard as IDSIconClipboard$1 } from '@inera/ids-core/components/icons/clipboard/icon-clipboard-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconClipboard = createComponent({\r\n    tagName: 'ids-icon-clipboard',\r\n    elementClass: IDSIconClipboard$1,\r\n    react: React,\r\n});\n\nexport { IDSIconClipboard };\n", "import{svg as o}from\"lit\";import{IDSIconBase as t}from\"../icon-base-element.js\";class e extends t{constructor(){super(),this.vbHeight=41,this.vbWidth=40}renderIcon(){return o`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 3.75C12 2.09315 13.3431 0.75 15 0.75H25C26.6569 0.75 28 2.09315 28 3.75V5.75C28 7.40685 26.6569 8.75 25 8.75H15C13.3431 8.75 12 7.40685 12 5.75V3.75ZM15 2.75C14.4477 2.75 14 3.19772 14 3.75V5.75C14 6.30228 14.4477 6.75 15 6.75H25C25.5523 6.75 26 6.30228 26 5.75V3.75C26 3.19772 25.5523 2.75 25 2.75H15Z\"></path><path fill=\"${this.colors.color2}\" d=\"M11 4H3C1.34315 4 0 5.34315 0 7V38C0 39.6569 1.34314 41 3 41H37C38.6569 41 40 39.6569 40 38V7C40 5.34315 38.6569 4 37 4H29V6H37C37.5523 6 38 6.44771 38 7V38C38 38.5523 37.5523 39 37 39H3C2.44772 39 2 38.5523 2 38V7C2 6.44772 2.44772 6 3 6H11V4Z\"></path>`}}export{e as IDSIconClipboard};\n", "import{IDSIconClipboard as i}from\"./icon-clipboard-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-clipboard\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/clipboard-cross/register';\nimport { IDSIconClipboardCross as IDSIconClipboardCross$1 } from '@inera/ids-core/components/icons/clipboard-cross/icon-clipboard-cross-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconClipboardCross = createComponent({\r\n    tagName: 'ids-icon-clipboard-cross',\r\n    elementClass: IDSIconClipboardCross$1,\r\n    react: React,\r\n});\n\nexport { IDSIconClipboardCross };\n", "import{svg as l}from\"lit\";import{IDSIconBase as o}from\"../icon-base-element.js\";class e extends o{constructor(){super(),this.vbHeight=41,this.vbWidth=40}renderIcon(){return l`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22 22V17H18V22H13V26H18V31H22V26H27V22H22ZM16 20H12C11.4477 20 11 20.4477 11 21V27C11 27.5523 11.4477 28 12 28H16V32C16 32.5523 16.4477 33 17 33H23C23.5523 33 24 32.5523 24 32V28H28C28.5523 28 29 27.5523 29 27V21C29 20.4477 28.5523 20 28 20H24V16C24 15.4477 23.5523 15 23 15H17C16.4477 15 16 15.4477 16 16V20Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 3.75C12 2.09315 13.3431 0.75 15 0.75H25C26.6569 0.75 28 2.09315 28 3.75V5.75C28 7.40685 26.6569 8.75 25 8.75H15C13.3431 8.75 12 7.40685 12 5.75V3.75ZM15 2.75C14.4477 2.75 14 3.19772 14 3.75V5.75C14 6.30228 14.4477 6.75 15 6.75H25C25.5523 6.75 26 6.30228 26 5.75V3.75C26 3.19772 25.5523 2.75 25 2.75H15Z\"></path><path fill=\"${this.colors.color2}\" d=\"M11 4H3C1.34315 4 0 5.34315 0 7V38C0 39.6569 1.34314 41 3 41H37C38.6569 41 40 39.6569 40 38V7C40 5.34315 38.6569 4 37 4H29V6H37C37.5523 6 38 6.44771 38 7V38C38 38.5523 37.5523 39 37 39H3C2.44772 39 2 38.5523 2 38V7C2 6.44772 2.44772 6 3 6H11V4Z\"></path>`}}export{e as IDSIconClipboardCross};\n", "import{IDSIconClipboardCross as i}from\"./icon-clipboard-cross-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-clipboard-cross\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/clipboard-text/register';\nimport { IDSIconClipboardText as IDSIconClipboardText$1 } from '@inera/ids-core/components/icons/clipboard-text/icon-clipboard-text-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconClipboardText = createComponent({\r\n    tagName: 'ids-icon-clipboard-text',\r\n    elementClass: IDSIconClipboardText$1,\r\n    react: React,\r\n});\n\nexport { IDSIconClipboardText };\n", "import{svg as o}from\"lit\";import{IDSIconBase as l}from\"../icon-base-element.js\";class t extends l{constructor(){super(),this.vbHeight=41,this.vbWidth=40}renderIcon(){return o`<path fill=\"${this.colors.color}\" d=\"M11 16C11 15.4477 11.4477 15 12 15H28C28.5523 15 29 15.4477 29 16C29 16.5523 28.5523 17 28 17H12C11.4477 17 11 16.5523 11 16Z\"></path><path fill=\"${this.colors.color}\" d=\"M11 23C11 22.4477 11.4477 22 12 22H28C28.5523 22 29 22.4477 29 23C29 23.5523 28.5523 24 28 24H12C11.4477 24 11 23.5523 11 23Z\"></path><path fill=\"${this.colors.color}\" d=\"M12 29C11.4477 29 11 29.4477 11 30C11 30.5523 11.4477 31 12 31H20C20.5523 31 21 30.5523 21 30C21 29.4477 20.5523 29 20 29H12Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 3.75C12 2.09315 13.3431 0.75 15 0.75H25C26.6569 0.75 28 2.09315 28 3.75V5.75C28 7.40685 26.6569 8.75 25 8.75H15C13.3431 8.75 12 7.40685 12 5.75V3.75ZM15 2.75C14.4477 2.75 14 3.19772 14 3.75V5.75C14 6.30228 14.4477 6.75 15 6.75H25C25.5523 6.75 26 6.30228 26 5.75V3.75C26 3.19772 25.5523 2.75 25 2.75H15Z\"></path><path fill=\"${this.colors.color2}\" d=\"M11 4H3C1.34315 4 0 5.34315 0 7V38C0 39.6569 1.34314 41 3 41H37C38.6569 41 40 39.6569 40 38V7C40 5.34315 38.6569 4 37 4H29V6H37C37.5523 6 38 6.44771 38 7V38C38 38.5523 37.5523 39 37 39H3C2.44772 39 2 38.5523 2 38V7C2 6.44772 2.44772 6 3 6H11V4Z\"></path>`}}export{t as IDSIconClipboardText};\n", "import{IDSIconClipboardText as i}from\"./icon-clipboard-text-element.js\";import{registerComponent as t}from\"../../../utilities/utils.js\";t(\"ids-icon-clipboard-text\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/clock/register';\nimport { IDSIconClock as IDSIconClock$1 } from '@inera/ids-core/components/icons/clock/icon-clock-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconClock = createComponent({\r\n    tagName: 'ids-icon-clock',\r\n    elementClass: IDSIconClock$1,\r\n    react: React,\r\n});\n\nexport { IDSIconClock };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/close/register';\nimport { IDSIconClose as IDSIconClose$1 } from '@inera/ids-core/components/icons/close/icon-close-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconClose = createComponent({\r\n    tagName: 'ids-icon-close',\r\n    elementClass: IDSIconClose$1,\r\n    react: React,\r\n});\n\nexport { IDSIconClose };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/close-bold/register';\nimport { IDSIconCloseBold as IDSIconCloseBold$1 } from '@inera/ids-core/components/icons/close-bold/icon-close-bold-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconCloseBold = createComponent({\r\n    tagName: 'ids-icon-close-bold',\r\n    elementClass: IDSIconCloseBold$1,\r\n    react: React,\r\n});\n\nexport { IDSIconCloseBold };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/cog/register';\nimport { IDSIconCog as IDSIconCog$1 } from '@inera/ids-core/components/icons/cog/icon-cog-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconCog = createComponent({\r\n    tagName: 'ids-icon-cog',\r\n    elementClass: IDSIconCog$1,\r\n    react: React,\r\n});\n\nexport { IDSIconCog };\n", "import{svg as C}from\"lit\";import{IDSIconBase as L}from\"../icon-base-element.js\";class e extends L{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return C`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20 14C16.6863 14 14 16.6863 14 20C14 23.3137 16.6863 26 20 26C23.3137 26 26 23.3137 26 20C26 16.6863 23.3137 14 20 14ZM12 20C12 15.5817 15.5817 12 20 12C24.4183 12 28 15.5817 28 20C28 24.4183 24.4183 28 20 28C15.5817 28 12 24.4183 12 20Z\"></path><path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20 2C18.3488 2 16.9869 3.2427 16.8012 4.8429L16.7233 5.5137L16.072 5.69208C14.8676 6.02191 13.7242 6.4999 12.6625 7.10515L12.0759 7.43953L11.5466 7.02048C10.2826 6.01997 8.43991 6.10424 7.27208 7.27208C6.10424 8.43991 6.02 10.2826 7.02072 11.5464L7.43999 12.0759L7.10538 12.6626C6.49986 13.7243 6.02182 14.8678 5.6917 16.0711L5.51324 16.7215L4.8433 16.7997C3.24272 16.9866 2 18.3489 2 20C2 21.6512 3.2427 23.0131 4.8429 23.1988L5.5137 23.2767L5.69208 23.928C6.02191 25.1324 6.4999 26.2758 7.10515 27.3375L7.43953 27.9241L7.02048 28.4534C6.01997 29.7174 6.10424 31.5601 7.27208 32.7279C8.43991 33.8958 10.2826 33.98 11.5464 32.9793L12.0759 32.56L12.6626 32.8946C13.7243 33.5001 14.8678 33.9782 16.0711 34.3083L16.7215 34.4868L16.7997 35.1567C16.9866 36.7573 18.3489 38 20 38C21.6512 38 23.0131 36.7573 23.1988 35.1571L23.2767 34.4863L23.928 34.3079C25.1324 33.9781 26.2758 33.5001 27.3375 32.8949L27.9241 32.5605L28.4534 32.9795C29.7174 33.98 31.5601 33.8958 32.7279 32.7279C33.8958 31.5601 33.98 29.7174 32.9793 28.4536L32.56 27.9241L32.8946 27.3374C33.5001 26.2757 33.9782 25.1322 34.3083 23.9289L34.4868 23.2785L35.1567 23.2003C36.7573 23.0134 38 21.6511 38 20C38 18.3488 36.7573 16.9869 35.1571 16.8012L34.4863 16.7233L34.3079 16.072C33.9781 14.8676 33.5001 13.7242 32.8949 12.6625L32.5605 12.0759L32.9795 11.5466C33.98 10.2826 33.8958 8.43991 32.7279 7.27208C31.5601 6.10424 29.7174 6.02 28.4536 7.02072L27.9241 7.43999L27.3374 7.10538C26.2757 6.49986 25.1322 6.02182 23.9289 5.6917L23.2785 5.51324L23.2003 4.8433C23.0134 3.24272 21.6511 2 20 2ZM14.9372 3.94159C15.5077 1.67593 17.5577 0 20 0C22.4426 0 24.4924 1.67621 25.0638 3.9415C26.005 4.23834 26.9111 4.61559 27.7733 5.06524C29.7792 3.86636 32.4147 4.13039 34.1421 5.85786C35.8697 7.58538 36.1336 10.2208 34.935 12.2268C35.3844 13.089 35.7617 13.9952 36.0584 14.9373C38.3241 15.5077 40 17.5577 40 20C40 22.4426 38.3238 24.4924 36.0585 25.0638C35.7617 26.005 35.3844 26.9111 34.9348 27.7733C36.1336 29.7792 35.8696 32.4147 34.1421 34.1421C32.4146 35.8697 29.7792 36.1336 27.7732 34.935C26.911 35.3844 26.0048 35.7617 25.0627 36.0584C24.4923 38.3241 22.4423 40 20 40C17.5574 40 15.5076 38.3238 14.9362 36.0585C13.995 35.7617 13.0889 35.3844 12.2267 34.9348C10.2208 36.1336 7.58534 35.8696 5.85786 34.1421C4.13035 32.4146 3.86638 29.7792 5.06501 27.7732C4.61555 26.911 4.23832 26.0048 3.94159 25.0628C1.67593 24.4923 0 22.4423 0 20C0 17.5574 1.67621 15.5076 3.9415 14.9362C4.23834 13.995 4.61559 13.0889 5.06524 12.2267C3.86636 10.2208 4.13039 7.58534 5.85786 5.85786C7.58538 4.13035 10.2208 3.86638 12.2268 5.06501C13.089 4.61555 13.9952 4.23832 14.9372 3.94159Z\"></path>`}}export{e as IDSIconCog};\n", "import{IDSIconCog as i}from\"./icon-cog-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-cog\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/computer/register';\nimport { IDSIconComputer as IDSIconComputer$1 } from '@inera/ids-core/components/icons/computer/icon-computer-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconComputer = createComponent({\r\n    tagName: 'ids-icon-computer',\r\n    elementClass: IDSIconComputer$1,\r\n    react: React,\r\n});\n\nexport { IDSIconComputer };\n", "import{svg as o}from\"lit\";import{IDSIconBase as t}from\"../icon-base-element.js\";class l extends t{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return o`<path fill=\"${this.colors.color}\" d=\"M4.44458 4C3.8923 4 3.44458 4.44772 3.44458 5C3.44458 5.55228 3.8923 6 4.44458 6H35.5557C36.108 6 36.5557 5.55228 36.5557 5C36.5557 4.44772 36.108 4 35.5557 4H4.44458Z\"></path><path fill=\"${this.colors.color2}\" d=\"M4 22C3.44772 22 3 22.4477 3 23C3 23.5523 3.44772 24 4 24H36C36.5523 24 37 23.5523 37 23C37 22.4477 36.5523 22 36 22H4Z\"></path><path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3 0C1.34315 0 0 1.34315 0 3V25C0 26.6569 1.34314 28 3 28H17V38H10.4546C9.90231 38 9.45459 38.4477 9.45459 39C9.45459 39.5523 9.90231 40 10.4546 40H29.5455C30.0978 40 30.5455 39.5523 30.5455 39C30.5455 38.4477 30.0978 38 29.5455 38H22.8V28H37C38.6569 28 40 26.6569 40 25V3C40 1.34315 38.6569 0 37 0H3ZM20.8 28H19V38H20.8V28ZM2 3C2 2.44772 2.44772 2 3 2H37C37.5523 2 38 2.44771 38 3V25C38 25.5523 37.5523 26 37 26H3C2.44771 26 2 25.5523 2 25V3Z\"></path>`}}export{l as IDSIconComputer};\n", "import{IDSIconComputer as i}from\"./icon-computer-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-computer\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/computer-inera/register';\nimport { IDSIconComputerInera as IDSIconComputerInera$1 } from '@inera/ids-core/components/icons/computer-inera/icon-computer-inera-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconComputerInera = createComponent({\r\n    tagName: 'ids-icon-computer-inera',\r\n    elementClass: IDSIconComputerInera$1,\r\n    react: React,\r\n});\n\nexport { IDSIconComputerInera };\n", "import{svg as t}from\"lit\";import{IDSIconBase as e}from\"../icon-base-element.js\";class o extends e{constructor(){super(),this.vbHeight=30,this.vbWidth=30}renderIcon(){return t`<g clip-path=\"url(#clip0_5334_50802)\"><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11.1045 17C14.1421 17 16.6045 14.5376 16.6045 11.5C16.6045 8.46243 14.1421 6 11.1045 6C8.06692 6 5.60449 8.46243 5.60449 11.5C5.60449 14.5376 8.06692 17 11.1045 17ZM11.1045 13.5403C12.2313 13.5403 13.1448 12.6268 13.1448 11.5C13.1448 10.3732 12.2313 9.45968 11.1045 9.45968C9.97765 9.45968 9.06417 10.3732 9.06417 11.5C9.06417 12.6268 9.97765 13.5403 11.1045 13.5403Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.875 13.5C22.5674 13.5 24.75 11.3174 24.75 8.625C24.75 5.93261 22.5674 3.75 19.875 3.75C17.1826 3.75 15 5.93261 15 8.625C15 11.3174 17.1826 13.5 19.875 13.5ZM19.875 10.4335C20.8738 10.4335 21.6835 9.6238 21.6835 8.625C21.6835 7.6262 20.8738 6.81653 19.875 6.81653C18.8762 6.81653 18.0665 7.6262 18.0665 8.625C18.0665 9.6238 18.8762 10.4335 19.875 10.4335Z\"></path><rect x=\"0.75\" y=\"0.75\" width=\"28.5\" height=\"19.5\" rx=\"2\" stroke=\"${this.colors.color2}\" stroke-width=\"2\"></rect><path d=\"M7.84091 29.25H22.1591\" stroke=\"${this.colors.color2}\" stroke-width=\"2\" stroke-linecap=\"round\"></path><path d=\"M13.5 28.875V21.375\" stroke=\"${this.colors.color2}\" stroke-width=\"2\" stroke-linecap=\"square\"></path><path d=\"M16.3496 28.875V21.375\" stroke=\"${this.colors.color2}\" stroke-width=\"2\" stroke-linecap=\"square\"></path></g><defs><clipPath id=\"clip0_5334_50802\"><rect width=\"30\" height=\"30\" fill=\"white\"></rect></clipPath></defs>`}}export{o as IDSIconComputerInera};\n", "import{IDSIconComputerInera as i}from\"./icon-computer-inera-element.js\";import{registerComponent as e}from\"../../../utilities/utils.js\";e(\"ids-icon-computer-inera\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/copy-file/register';\nimport { IDSIconCopyFile as IDSIconCopyFile$1 } from '@inera/ids-core/components/icons/copy-file/icon-copy-file-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconCopyFile = createComponent({\r\n    tagName: 'ids-icon-copy-file',\r\n    elementClass: IDSIconCopyFile$1,\r\n    react: React,\r\n});\n\nexport { IDSIconCopyFile };\n", "import{svg as e}from\"lit\";import{IDSIconBase as l}from\"../icon-base-element.js\";class o extends l{constructor(){super(),this.vbHeight=40,this.vbWidth=33}renderIcon(){return e`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.7931 2C2.35317 2 2 2.35537 2 2.78947V30.2105C2 30.6446 2.35317 31 2.7931 31C3.34539 31 3.7931 31.4477 3.7931 32C3.7931 32.5523 3.34539 33 2.7931 33C1.25243 33 0 31.753 0 30.2105V2.78947C0 1.24698 1.25243 0 2.7931 0H22.3103C23.851 0 25.1034 1.24698 25.1034 2.78947C25.1034 3.34176 24.6557 3.78947 24.1034 3.78947C23.5512 3.78947 23.1034 3.34176 23.1034 2.78947C23.1034 2.35537 22.7503 2 22.3103 2H2.7931Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7.7931 7C7.35317 7 7 7.35537 7 7.78947V37.2105C7 37.6446 7.35317 38 7.7931 38H29.3103C29.7503 38 30.1034 37.6446 30.1034 37.2105V7.78947C30.1034 7.35537 29.7503 7 29.3103 7H7.7931ZM5 7.78947C5 6.24698 6.25243 5 7.7931 5H29.3103C30.851 5 32.1034 6.24698 32.1034 7.78947V37.2105C32.1034 38.753 30.851 40 29.3103 40H7.7931C6.25243 40 5 38.753 5 37.2105V7.78947Z\"></path>`}}export{o as IDSIconCopyFile};\n", "import{IDSIconCopyFile as i}from\"./icon-copy-file-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-copy-file\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/copy-link/register';\nimport { IDSIconCopyLink as IDSIconCopyLink$1 } from '@inera/ids-core/components/icons/copy-link/icon-copy-link-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconCopyLink = createComponent({\r\n    tagName: 'ids-icon-copy-link',\r\n    elementClass: IDSIconCopyLink$1,\r\n    react: React,\r\n});\n\nexport { IDSIconCopyLink };\n", "import{svg as C}from\"lit\";import{IDSIconBase as t}from\"../icon-base-element.js\";class o extends t{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return C`<path fill=\"${this.colors.color}\" d=\"M16.8237 23.1763C14.3482 20.7007 14.3263 16.9472 16.4857 14.7878L26.6754 4.59811C28.8347 2.43876 32.5883 2.46064 35.0638 4.93617C37.5394 7.4117 37.5612 11.1653 35.4019 13.3246L30.307 18.4195C29.7163 19.0102 29.7163 19.9681 30.307 20.5588C30.8978 21.1496 31.8556 21.1496 32.4464 20.5588L37.5412 15.464C41.0095 11.9957 40.7287 6.32234 37.2032 2.79683C33.6777 -0.728682 28.0043 -1.00951 24.536 2.45877L14.3463 12.6485C10.8781 16.1168 11.1589 21.7901 14.6844 25.3156C15.2752 25.9064 16.233 25.9064 16.8237 25.3156C17.4145 24.7249 17.4145 23.767 16.8237 23.1763Z\"></path><path fill=\"${this.colors.color}\" d=\"M23.1763 16.8243C25.6518 19.2998 25.6737 23.0534 23.5143 25.2127L13.3246 35.4025C11.1653 37.5618 7.4117 37.5399 4.93618 35.0644C2.46065 32.5889 2.43876 28.8353 4.59811 26.676L9.69297 21.5811C10.2837 20.9903 10.2837 20.0325 9.69298 19.4418C9.10221 18.851 8.14439 18.851 7.55363 19.4418L2.45877 24.5366C-1.00951 28.0049 -0.728681 33.6782 2.79683 37.2037C6.32234 40.7293 11.9957 41.0101 15.464 37.5418L25.6537 27.3521C29.122 23.8838 28.8411 18.2105 25.3156 14.685C24.7249 14.0942 23.767 14.0942 23.1763 14.685C22.5855 15.2757 22.5855 16.2335 23.1763 16.8243Z\"></path>`}}export{o as IDSIconCopyLink};\n", "import{IDSIconCopyLink as i}from\"./icon-copy-link-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-copy-link\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/dalarna/register';\nimport { IDSIconDalarna as IDSIconDalarna$1 } from '@inera/ids-core/components/icons/dalarna/icon-dalarna-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconDalarna = createComponent({\r\n    tagName: 'ids-icon-dalarna',\r\n    elementClass: IDSIconDalarna$1,\r\n    react: React,\r\n});\n\nexport { IDSIconDalarna };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/doctors-bag/register';\nimport { IDSIconDoctorsBag as IDSIconDoctorsBag$1 } from '@inera/ids-core/components/icons/doctors-bag/icon-doctors-bag-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconDoctorsBag = createComponent({\r\n    tagName: 'ids-icon-doctors-bag',\r\n    elementClass: IDSIconDoctorsBag$1,\r\n    react: React,\r\n});\n\nexport { IDSIconDoctorsBag };\n", "import{svg as l}from\"lit\";import{IDSIconBase as o}from\"../icon-base-element.js\";class e extends o{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return l`<path fill=\"${this.colors.color}\" d=\"M15 0C13.3431 0 12 1.34315 12 3V7H14V3C14 2.44772 14.4477 2 15 2H25C25.5523 2 26 2.44772 26 3V7H28V3C28 1.34315 26.6569 0 25 0H15Z\"></path><path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 11C0 9.34315 1.34315 8 3 8H37C38.6569 8 40 9.34315 40 11V37C40 38.6569 38.6569 40 37 40H3C1.34314 40 0 38.6569 0 37V11ZM3 10C2.44772 10 2 10.4477 2 11V37C2 37.5523 2.44771 38 3 38H37C37.5523 38 38 37.5523 38 37V11C38 10.4477 37.5523 10 37 10H3Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22 22V17H18V22H13V26H18V31H22V26H27V22H22ZM16 20H12C11.4477 20 11 20.4477 11 21V27C11 27.5523 11.4477 28 12 28H16V32C16 32.5523 16.4477 33 17 33H23C23.5523 33 24 32.5523 24 32V28H28C28.5523 28 29 27.5523 29 27V21C29 20.4477 28.5523 20 28 20H24V16C24 15.4477 23.5523 15 23 15H17C16.4477 15 16 15.4477 16 16V20Z\"></path>`}}export{e as IDSIconDoctorsBag};\n", "import{IDSIconDoctorsBag as o}from\"./icon-doctors-bag-element.js\";import{registerComponent as i}from\"../../../utilities/utils.js\";i(\"ids-icon-doctors-bag\",o);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/drag-n-drop/register';\nimport { IDSIconDragNDrop as IDSIconDragNDrop$1 } from '@inera/ids-core/components/icons/drag-n-drop/icon-drag-n-drop-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconDragNDrop = createComponent({\r\n    tagName: 'ids-icon-drag-n-drop',\r\n    elementClass: IDSIconDragNDrop$1,\r\n    react: React,\r\n});\n\nexport { IDSIconDragNDrop };\n", "import{svg as o}from\"lit\";import{IDSIconBase as t}from\"../icon-base-element.js\";class r extends t{constructor(){super(),this.vbHeight=40,this.vbWidth=39}renderIcon(){return o`<path fill=\"${this.colors.color}\" d=\"M1.66667 13.3333C0.746192 13.3333 0 14.0795 0 15C0 15.9205 0.746192 16.6667 1.66667 16.6667H37.2222C38.1427 16.6667 38.8889 15.9205 38.8889 15C38.8889 14.0795 38.1427 13.3333 37.2222 13.3333H1.66667Z\"></path><path fill=\"${this.colors.color}\" d=\"M1.66667 23.3333C0.746192 23.3333 0 24.0795 0 25C0 25.9205 0.746192 26.6667 1.66667 26.6667H37.2222C38.1427 26.6667 38.8889 25.9205 38.8889 25C38.8889 24.0795 38.1427 23.3333 37.2222 23.3333H1.66667Z\"></path><path fill=\"${this.colors.color2}\" d=\"M20.2301 0.325437C19.7962 -0.108479 19.0927 -0.108479 18.6588 0.325437L14.2143 4.76988C13.7804 5.2038 13.7804 5.90731 14.2143 6.34123C14.6482 6.77515 15.3518 6.77515 15.7857 6.34123L19.4444 2.68246L23.1032 6.34123C23.5371 6.77515 24.2407 6.77515 24.6746 6.34123C25.1085 5.90731 25.1085 5.2038 24.6746 4.76988L20.2301 0.325437Z\"></path><path fill=\"${this.colors.color2}\" d=\"M14.2143 35.2301L18.6588 39.6746C19.0927 40.1085 19.7962 40.1085 20.2301 39.6746L24.6746 35.2301C25.1085 34.7962 25.1085 34.0927 24.6746 33.6588C24.2406 33.2249 23.5371 33.2249 23.1032 33.6588L19.4444 37.3175L15.7857 33.6588C15.3518 33.2249 14.6482 33.2249 14.2143 33.6588C13.7804 34.0927 13.7804 34.7962 14.2143 35.2301Z\"></path>`}}export{r as IDSIconDragNDrop};\n", "import{IDSIconDragNDrop as i}from\"./icon-drag-n-drop-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-drag-n-drop\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/ear-hearing/register';\nimport { IDSIconEarHearing as IDSIconEarHearing$1 } from '@inera/ids-core/components/icons/ear-hearing/icon-ear-hearing-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconEarHearing = createComponent({\r\n    tagName: 'ids-icon-ear-hearing',\r\n    elementClass: IDSIconEarHearing$1,\r\n    react: React,\r\n});\n\nexport { IDSIconEarHearing };\n", "import{svg as C}from\"lit\";import{IDSIconBase as l}from\"../icon-base-element.js\";class o extends l{constructor(){super(),this.vbHeight=40,this.vbWidth=31}renderIcon(){return C`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.1551 13.6929C14.7315 10.5156 11.4535 8.36695 8.6469 9.48358C7.16035 10.075 6.0203 11.1166 5.36331 12.1604C5.035 12.6819 4.84551 13.175 4.77699 13.5832C4.70765 13.9963 4.77065 14.2565 4.85271 14.3991C4.87492 14.4377 4.89218 14.4602 4.90272 14.4722C4.90241 14.4722 4.90301 14.4722 4.90272 14.4722C5.01516 14.482 5.17343 14.4485 5.57955 14.3481C5.5888 14.3458 5.59828 14.3434 5.60798 14.341C5.91812 14.2641 6.4572 14.1305 6.99847 14.236C7.68077 14.369 8.1899 14.8242 8.505 15.521C8.8472 16.2777 8.81466 17.0152 8.43067 17.6576C8.10085 18.2093 7.56126 18.5986 7.11721 18.883C6.89248 19.0268 6.6541 19.1665 6.43158 19.2969L6.40253 19.314C6.16519 19.4531 5.94265 19.584 5.73053 19.7205C5.29787 19.9987 4.98428 20.2534 4.78593 20.5178C4.45449 20.9595 3.82767 21.049 3.3859 20.7175C2.94413 20.3861 2.85469 19.7593 3.18614 19.3175C3.59994 18.766 4.15304 18.3571 4.64869 18.0383C4.90072 17.8762 5.15773 17.7253 5.39122 17.5885L5.4057 17.58C5.63989 17.4427 5.84796 17.3208 6.03877 17.1986C6.45329 16.9332 6.64092 16.7536 6.71403 16.6313C6.71547 16.6289 6.71706 16.6265 6.71874 16.6239C6.73914 16.5924 6.77175 16.542 6.68268 16.3451C6.64428 16.2601 6.61333 16.2162 6.59717 16.1965C6.53438 16.1909 6.40032 16.2054 6.05941 16.2897C6.03496 16.2957 6.00855 16.3024 5.98036 16.3095C5.68803 16.3835 5.20416 16.506 4.73045 16.4648C4.43987 16.4395 4.12691 16.3546 3.82816 16.1628C3.53105 15.972 3.29841 15.7079 3.11936 15.3968C2.73873 14.7356 2.68425 13.969 2.80459 13.2521C2.92575 12.5303 3.23309 11.7902 3.67072 11.0949C4.54561 9.70503 6.01384 8.37869 7.90755 7.62526C12.1252 5.94722 16.5716 9.18398 17.1375 13.4286C17.3639 15.1265 16.9325 16.4543 15.9846 17.6287C15.097 18.7283 13.7556 19.688 12.2383 20.7396C11.7354 21.0881 11.3072 21.5986 10.8786 22.2297C10.6772 22.5262 10.4867 22.8324 10.2875 23.1524C10.2758 23.1712 10.2641 23.19 10.2523 23.2089C10.0451 23.5419 9.82603 23.8921 9.59559 24.2202C9.14611 24.8602 8.56822 25.5453 7.75495 25.9225C6.88436 26.3262 5.90925 26.3064 4.83312 25.8681C4.32164 25.6598 4.07588 25.0763 4.2842 24.5648C4.49253 24.0533 5.07605 23.8075 5.58754 24.0159C6.26814 24.2931 6.65208 24.2293 6.91356 24.1081C7.23237 23.9602 7.55956 23.6394 7.95889 23.0708C8.15285 22.7946 8.34415 22.4898 8.55446 22.152C8.56775 22.1306 8.58111 22.1091 8.59454 22.0875C8.78906 21.7749 8.9994 21.4369 9.2241 21.106C9.70243 20.4017 10.2956 19.6526 11.0991 19.0957C12.6675 18.0088 13.754 17.2079 14.4283 16.3725C15.0422 15.6119 15.3067 14.8305 15.1551 13.6929Z\"></path><path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M14.2041 2.29701C9.572 1.28835 4.40189 2.82418 1.84977 6.9358C1.55851 7.40504 0.942 7.54932 0.472761 7.25806C0.00352237 6.9668 -0.140757 6.35029 0.150504 5.88105C3.25196 0.884429 9.37848 -0.800661 14.6296 0.3428C19.9298 1.49695 24.5934 5.59217 24.5934 12.3505C24.5934 16.8535 22.3101 19.5114 19.9536 21.4012C19.229 21.9823 18.4405 22.5318 17.7328 23.025C17.3454 23.295 16.9822 23.5481 16.667 23.7802C15.6897 24.5 15.0886 25.0721 14.8253 25.6356C14.6529 26.0046 14.4695 26.4885 14.2512 27.0812C14.2207 27.1639 14.1896 27.2485 14.158 27.3347C13.9682 27.8515 13.7572 28.4261 13.5213 29.013C12.9741 30.3744 12.2571 31.8968 11.2334 33.1226C10.1943 34.3668 8.79618 35.3532 6.9188 35.5107C5.07139 35.6657 2.94006 35.0016 0.447438 33.3485C-0.0128256 33.0433 -0.138491 32.4227 0.166756 31.9625C0.472003 31.5022 1.09257 31.3765 1.55284 31.6818C3.8409 33.1992 5.52169 33.6209 6.7516 33.5177C7.95154 33.4171 8.89592 32.8014 9.69834 31.8406C10.5161 30.8614 11.1396 29.5758 11.6656 28.2671C11.8893 27.7107 12.0888 27.1674 12.279 26.6496C12.311 26.5623 12.3428 26.4757 12.3744 26.3899C12.5884 25.8091 12.7995 25.2466 13.0134 24.789C13.5122 23.7214 14.5015 22.8912 15.481 22.1699C15.8854 21.8719 16.2875 21.5925 16.6913 21.312C17.3513 20.8533 18.0157 20.3916 18.7024 19.8409C20.8018 18.1573 22.5934 16.0153 22.5934 12.3505C22.5934 6.72492 18.7871 3.29498 14.2041 2.29701Z\"></path><path fill=\"${this.colors.color2}\" d=\"M29.1884 26.2363C29.7406 26.2363 30.1884 26.684 30.1884 27.2363C30.1884 34.2841 24.475 39.9974 17.4272 39.9974C16.875 39.9974 16.4272 39.5497 16.4272 38.9974C16.4272 38.4452 16.875 37.9974 17.4272 37.9974C23.3704 37.9974 28.1884 33.1795 28.1884 27.2363C28.1884 26.684 28.6361 26.2363 29.1884 26.2363Z\"></path><path fill=\"${this.colors.color2}\" d=\"M24.7079 26.2363C25.2602 26.2363 25.7079 26.684 25.7079 27.2363C25.7079 31.8096 22.0005 35.517 17.4272 35.517C16.875 35.517 16.4272 35.0693 16.4272 34.517C16.4272 33.9647 16.875 33.517 17.4272 33.517C20.896 33.517 23.7079 30.7051 23.7079 27.2363C23.7079 26.684 24.1556 26.2363 24.7079 26.2363Z\"></path><path fill=\"${this.colors.color2}\" d=\"M21.2275 27.2363C21.2275 26.684 20.7798 26.2363 20.2275 26.2363C19.6752 26.2363 19.2275 26.684 19.2275 27.2363C19.2275 28.2306 18.4215 29.0366 17.4272 29.0366C16.875 29.0366 16.4272 29.4843 16.4272 30.0366C16.4272 30.5889 16.875 31.0366 17.4272 31.0366C19.5261 31.0366 21.2275 29.3352 21.2275 27.2363Z\"></path>`}}export{o as IDSIconEarHearing};\n", "import{IDSIconEarHearing as i}from\"./icon-ear-hearing-element.js\";import{registerComponent as e}from\"../../../utilities/utils.js\";e(\"ids-icon-ear-hearing\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/edit/register';\nimport { IDSIconEdit as IDSIconEdit$1 } from '@inera/ids-core/components/icons/edit/icon-edit-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconEdit = createComponent({\r\n    tagName: 'ids-icon-edit',\r\n    elementClass: IDSIconEdit$1,\r\n    react: React,\r\n});\n\nexport { IDSIconEdit };\n", "import{svg as o}from\"lit\";import{IDSIconBase as t}from\"../icon-base-element.js\";class l extends t{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return o`<path fill=\"${this.colors.color}\" d=\"M4.18517 31.7221L8.36187 35.8988L9.77608 34.4846L5.59939 30.3079L4.18517 31.7221Z\"></path><path fill=\"${this.colors.color}\" d=\"M24.1669 11.7404L28.3436 15.917L29.7578 14.5028L25.5811 10.3261L24.1669 11.7404Z\"></path><path fill=\"${this.colors.color}\" d=\"M26.5878 9.31945L30.7645 13.4962L32.1787 12.0819L28.002 7.90524L26.5878 9.31945Z\"></path><path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.24331 30.8356L31.8383 1.24062C33.258 -0.179164 35.56 -0.179164 36.9797 1.24062L38.8434 3.10425C40.2632 4.52404 40.2632 6.82596 38.8434 8.24574L9.24843 37.8407L0.526367 39.5576L2.24331 30.8356ZM4.08805 31.8192L3.06435 37.0196L8.26475 35.9959L37.4292 6.83153C38.0679 6.19279 38.0679 5.1572 37.4292 4.51847L35.5655 2.65483C34.9268 2.0161 33.8912 2.0161 33.2525 2.65483L4.08805 31.8192Z\"></path>`}}export{l as IDSIconEdit};\n", "import{IDSIconEdit as i}from\"./icon-edit-element.js\";import{registerComponent as t}from\"../../../utilities/utils.js\";t(\"ids-icon-edit\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/email/register';\nimport { IDSIconEmail as IDSIconEmail$1 } from '@inera/ids-core/components/icons/email/icon-email-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconEmail = createComponent({\r\n    tagName: 'ids-icon-email',\r\n    elementClass: IDSIconEmail$1,\r\n    react: React,\r\n});\n\nexport { IDSIconEmail };\n", "import{svg as l}from\"lit\";import{IDSIconBase as o}from\"../icon-base-element.js\";class e extends o{constructor(){super(),this.vbHeight=30,this.vbWidth=40}renderIcon(){return l`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 3C0 1.34315 1.34315 0 3 0H36.912C38.5688 0 39.912 1.34315 39.912 3V26.0222C39.912 27.6791 38.5688 29.0222 36.912 29.0222H3C1.34314 29.0222 0 27.6791 0 26.0222V3ZM3 2C2.44772 2 2 2.44772 2 3V26.0222C2 26.5745 2.44771 27.0222 3 27.0222H36.912C37.4643 27.0222 37.912 26.5745 37.912 26.0222V3C37.912 2.44771 37.4643 2 36.912 2H3Z\"></path><path fill=\"${this.colors.color}\" d=\"M1.5904 0.739441L19.2676 15.439C19.6382 15.7472 20.1758 15.7472 20.5464 15.439L38.2236 0.739441L39.5024 2.27723L26.5404 13.0558L39.0926 26.7865L37.6164 28.136L25.0009 14.336L21.8251 16.9768C20.7135 17.9013 19.1006 17.9013 17.9889 16.9768L14.8688 14.3823L2.2957 28.136L0.819551 26.7865L13.3293 13.1022L0.311646 2.27723L1.5904 0.739441Z\"></path><path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.00012207 3.00195C0.00012207 1.3451 1.34327 0.00195312 3.00012 0.00195312H36.9121C38.5689 0.00195312 39.9121 1.3451 39.9121 3.00195V26.0242C39.9121 27.681 38.5689 29.0242 36.9121 29.0242H3.00012C1.34327 29.0242 0.00012207 27.681 0.00012207 26.0242V3.00195ZM3.00012 2.00195C2.44784 2.00195 2.00012 2.44967 2.00012 3.00195V26.0242C2.00012 26.5765 2.44784 27.0242 3.00012 27.0242H36.9121C37.4644 27.0242 37.9121 26.5765 37.9121 26.0242V3.00195C37.9121 2.44967 37.4644 2.00195 36.9121 2.00195H3.00012Z\"></path>`}}export{e as IDSIconEmail};\n", "import{IDSIconEmail as i}from\"./icon-email-element.js\";import{registerComponent as m}from\"../../../utilities/utils.js\";m(\"ids-icon-email\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/expand/register';\nimport { IDSIconExpand as IDSIconExpand$1 } from '@inera/ids-core/components/icons/expand/icon-expand-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconExpand = createComponent({\r\n    tagName: 'ids-icon-expand',\r\n    elementClass: IDSIconExpand$1,\r\n    react: React,\r\n});\n\nexport { IDSIconExpand };\n", "import{svg as L}from\"lit\";import{IDSIconBase as e}from\"../icon-base-element.js\";class r extends e{constructor(){super(),this.vbWidth=21,this.vbHeight=22}renderIcon(){return L`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.7148 0.294795L13.3448 0L13.2133 0.00290097C12.6951 0.0468076 12.2785 0.470821 12.2572 1.00397L12.2601 1.13548C12.304 1.65373 12.728 2.07029 13.2611 2.09161L17.2765 2.25145L12.0724 7.45698L11.9911 7.54827C11.6658 7.9591 11.6929 8.55761 12.0724 8.93715C12.4812 9.3459 13.1439 9.34589 13.5526 8.93715L18.7582 3.73014L18.918 7.74844L18.9314 7.8793C19.0165 8.39238 19.4725 8.77374 20.0056 8.75241C20.5832 8.72931 21.0327 8.24236 21.0096 7.66477L20.7148 0.294795ZM9.48647 11.5231C9.10693 11.1436 8.50841 11.1165 8.09759 11.4418L8.00629 11.5231L2.80076 16.7286L2.64093 12.7118L2.62913 12.5909C2.55492 12.1157 2.16318 11.7513 1.6848 11.7108L1.55329 11.7079L1.43232 11.7197C0.957154 11.7939 0.592747 12.1856 0.552217 12.664L0.549316 12.7955L0.844112 20.1655L8.21409 20.4603L8.33633 20.4581C8.85887 20.4185 9.28028 19.9926 9.30173 19.4563C9.32305 18.9231 8.94169 18.4672 8.42861 18.382L8.29775 18.3687L4.28094 18.2088L9.48647 13.0033L9.57354 12.9047C9.89279 12.4941 9.86377 11.9004 9.48647 11.5231Z\"></path>`}}export{r as IDSIconExpand};\n", "import{IDSIconExpand as i}from\"./icon-expand-element.js\";import{registerComponent as e}from\"../../../utilities/utils.js\";e(\"ids-icon-expand\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/external/register';\nimport { IDSIconExternal as IDSIconExternal$1 } from '@inera/ids-core/components/icons/external/icon-external-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconExternal = createComponent({\r\n    tagName: 'ids-icon-external',\r\n    elementClass: IDSIconExternal$1,\r\n    react: React,\r\n});\n\nexport { IDSIconExternal };\n", "import{svg as t}from\"lit\";import{IDSIconBase as o}from\"../icon-base-element.js\";class r extends o{constructor(){super(),this.vbHeight=40,this.vbWidth=41}renderIcon(){return t`<path fill=\"${this.colors.color}\" d=\"M0.5 20C0.5 8.95431 9.45431 0 20.5 0C21.3497 0 22.0385 0.688793 22.0385 1.53846C22.0385 2.38813 21.3497 3.07692 20.5 3.07692C11.1536 3.07692 3.57692 10.6536 3.57692 20C3.57692 29.3464 11.1536 36.9231 20.5 36.9231C29.8464 36.9231 37.4231 29.3464 37.4231 20C37.4231 19.1503 38.1119 18.4615 38.9615 18.4615C39.8112 18.4615 40.5 19.1503 40.5 20C40.5 31.0457 31.5457 40 20.5 40C9.45431 40 0.5 31.0457 0.5 20Z\"></path><path fill=\"${this.colors.color}\" d=\"M39.9908 0.51282L39.9908 8.20513C39.9908 9.0548 39.302 9.74359 38.4523 9.74359C37.6027 9.74359 36.9139 9.0548 36.9139 8.20513V5.89124L21.8884 20.9167C21.2876 21.5175 20.3135 21.5175 19.7127 20.9167C19.1119 20.3159 19.1119 19.3418 19.7127 18.741L34.8639 3.58974L32.295 3.58974C31.4453 3.58974 30.7565 2.90095 30.7565 2.05128C30.7565 1.20161 31.4453 0.51282 32.295 0.51282L39.9908 0.51282Z\"></path>`}}export{r as IDSIconExternal};\n", "import{IDSIconExternal as i}from\"./icon-external-element.js\";import{registerComponent as e}from\"../../../utilities/utils.js\";e(\"ids-icon-external\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/facebook/register';\nimport { IDSIconFacebook as IDSIconFacebook$1 } from '@inera/ids-core/components/icons/facebook/icon-facebook-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconFacebook = createComponent({\r\n    tagName: 'ids-icon-facebook',\r\n    elementClass: IDSIconFacebook$1,\r\n    react: React,\r\n});\n\nexport { IDSIconFacebook };\n", "import{svg as e}from\"lit\";import{IDSIconBase as t}from\"../icon-base-element.js\";class r extends t{constructor(){super(),this.vbHeight=41,this.vbWidth=40}renderIcon(){return e`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.0007 0.902954C8.95339 0.902954 0 9.85635 0 20.9023C0 31.9482 8.95339 40.903 20.0007 40.903C31.0466 40.903 40 31.9482 40 20.9023C40 9.85635 31.0466 0.902954 20.0007 0.902954Z\"></path><path d=\"M22.3949 40.7611V26.6954H27.1295L27.8399 21.1966H22.3949V17.6944C22.3949 16.1054 22.8362 15.0237 25.1127 15.0237H28V10.1182C27.4981 10.051 25.7746 9.90295 23.7699 9.90295C19.5843 9.90295 16.7185 12.4579 16.7185 17.1495V21.1966H12V26.6954H16.7185V40.635C17.7864 40.8113 18.8828 40.903 20.0007 40.903C20.8109 40.903 21.6099 40.8548 22.3949 40.7611Z\" fill=\"white\"></path>`}}export{r as IDSIconFacebook};\n", "import{IDSIconFacebook as o}from\"./icon-facebook-element.js\";import{registerComponent as i}from\"../../../utilities/utils.js\";i(\"ids-icon-facebook\",o);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/file-excel/register';\nimport { IDSIconFileExcel as IDSIconFileExcel$1 } from '@inera/ids-core/components/icons/file-excel/icon-file-excel-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconFileExcel = createComponent({\r\n    tagName: 'ids-icon-file-excel',\r\n    elementClass: IDSIconFileExcel$1,\r\n    react: React,\r\n});\n\nexport { IDSIconFileExcel };\n", "import{svg as t}from\"lit\";import{IDSIconBase as r}from\"../icon-base-element.js\";class C extends r{constructor(){super(),this.vbHeight=40,this.vbWidth=37}renderIcon(){return t`<path fill=\"${this.colors.color2}\" d=\"M35 0.25C36.4625 0.25 37.6584 1.3917 37.745 2.83248L37.75 3V37C37.75 38.4625 36.6083 39.6584 35.1675 39.745L35 39.75H11C9.53747 39.75 8.3416 38.6083 8.25502 37.1675L8.25 37V33C8.25 32.5858 8.58579 32.25 9 32.25C9.3797 32.25 9.69349 32.5322 9.74315 32.8982L9.75 33V37C9.75 37.6472 10.2419 38.1795 10.8722 38.2435L11 38.25H35C35.6472 38.25 36.1795 37.7581 36.2435 37.1278L36.25 37V3C36.25 2.35279 35.7581 1.82047 35.1278 1.75645L35 1.75H11C10.3528 1.75 9.82047 2.24187 9.75645 2.87219L9.75 3V7C9.75 7.41421 9.41421 7.75 9 7.75C8.6203 7.75 8.30651 7.46785 8.25685 7.10177L8.25 7V3C8.25 1.53747 9.3917 0.341596 10.8325 0.255019L11 0.25H35Z\"></path><rect fill=\"${this.colors.color}\" x=\"3\" y=\"30\" width=\"20\" height=\"30\" rx=\"2\" transform=\"rotate(-90 3 30)\"></rect><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M28.0664 21.6991C28.0626 23.0698 26.9805 24 25.1162 24C23.3051 24 22.1546 23.1305 22.0977 21.5852H23.4835C23.5405 22.4015 24.2239 22.7964 25.1048 22.7964C26.0237 22.7964 26.6539 22.3522 26.6577 21.6877C26.6539 21.084 26.0996 20.822 25.2605 20.6094L24.3758 20.3816C23.0963 20.0513 22.3027 19.4096 22.3027 18.2933C22.2989 16.9188 23.5253 16 25.158 16C26.8134 16 27.9335 16.9302 27.9601 18.2439H26.6046C26.5324 17.5833 25.9781 17.1922 25.139 17.1922C24.2581 17.1922 23.7341 17.6213 23.7303 18.206C23.7227 18.8552 24.4138 19.1248 25.0517 19.2767L25.7807 19.4589C26.9501 19.7361 28.0626 20.3512 28.0664 21.6991ZM9.67187 24.1094L11.4531 21.1992H11.5156L13.2969 24.1094H14.9766L12.4727 20.1094L14.9375 16.1094H13.2852L11.5156 19.0391H11.4531L9.6914 16.1094H8.03125L10.5273 20.1094L8 24.1094H9.67187ZM21.0469 24.1094V22.8945H17.5234V16.1094H16.0742V24.1094H21.0469Z\" fill=\"white\"></path>`}}export{C as IDSIconFileExcel};\n", "import{IDSIconFileExcel as i}from\"./icon-file-excel-element.js\";import{registerComponent as e}from\"../../../utilities/utils.js\";e(\"ids-icon-file-excel\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/file-other/register';\nimport { IDSIconFileOther as IDSIconFileOther$1 } from '@inera/ids-core/components/icons/file-other/icon-file-other-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconFileOther = createComponent({\r\n    tagName: 'ids-icon-file-other',\r\n    elementClass: IDSIconFileOther$1,\r\n    react: React,\r\n});\n\nexport { IDSIconFileOther };\n", "import{svg as e}from\"lit\";import{IDSIconBase as o}from\"../icon-base-element.js\";class t extends o{constructor(){super(),this.vbHeight=40,this.vbWidth=36}renderIcon(){return e`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M8.99994 2C8.44765 2 7.99994 2.44772 7.99994 3V7C7.99994 7.55228 7.55222 8 6.99994 8C6.44765 8 5.99994 7.55228 5.99994 7V3C5.99994 1.34315 7.34308 0 8.99994 0H32.9999C34.6568 0 35.9999 1.34315 35.9999 3V37C35.9999 38.6569 34.6568 40 32.9999 40H8.99994C7.34308 40 5.99994 38.6569 5.99994 37V33C5.99994 32.4477 6.44765 32 6.99994 32C7.55222 32 7.99994 32.4477 7.99994 33V37C7.99994 37.5523 8.44765 38 8.99994 38H32.9999C33.5522 38 33.9999 37.5523 33.9999 37V3C33.9999 2.44772 33.5522 2 32.9999 2H8.99994Z\"></path><path fill=\"${this.colors.color}\" d=\"M1.99994 30C0.895369 30 -6.10352e-05 29.1046 -6.10352e-05 28V12C-6.10352e-05 10.8954 0.89537 10 1.99994 10H27.9999C29.1045 10 29.9999 10.8954 29.9999 12V28C29.9999 29.1046 29.1045 30 27.9999 30H1.99994Z\"></path>`}}export{t as IDSIconFileOther};\n", "import{IDSIconFileOther as i}from\"./icon-file-other-element.js\";import{registerComponent as e}from\"../../../utilities/utils.js\";e(\"ids-icon-file-other\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/file-pdf/register';\nimport { IDSIconFilePdf as IDSIconFilePdf$1 } from '@inera/ids-core/components/icons/file-pdf/icon-file-pdf-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconFilePdf = createComponent({\r\n    tagName: 'ids-icon-file-pdf',\r\n    elementClass: IDSIconFilePdf$1,\r\n    react: React,\r\n});\n\nexport { IDSIconFilePdf };\n", "import{svg as e}from\"lit\";import{IDSIconBase as C}from\"../icon-base-element.js\";class l extends C{constructor(){super(),this.vbHeight=40,this.vbWidth=37}renderIcon(){return e`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.5 2C8.94771 2 8.5 2.44772 8.5 3V7C8.5 7.55228 8.05228 8 7.5 8C6.94772 8 6.5 7.55228 6.5 7V3C6.5 1.34315 7.84315 0 9.5 0H33.5C35.1569 0 36.5 1.34315 36.5 3V37C36.5 38.6569 35.1569 40 33.5 40H9.5C7.84315 40 6.5 38.6569 6.5 37V33C6.5 32.4477 6.94772 32 7.5 32C8.05228 32 8.5 32.4477 8.5 33V37C8.5 37.5523 8.94771 38 9.5 38H33.5C34.0523 38 34.5 37.5523 34.5 37V3C34.5 2.44772 34.0523 2 33.5 2H9.5Z\"></path><path fill=\"${this.colors.color}\" d=\"M2.5 30C1.39543 30 0.5 29.1046 0.5 28V12C0.5 10.8954 1.39543 10 2.5 10H28.5C29.6046 10 30.5 10.8954 30.5 12V28C30.5 29.1046 29.6046 30 28.5 30H2.5Z\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.94922 24V21.2969H8.48047C10.3281 21.2969 11.3203 20.1875 11.3203 18.6484C11.3203 17.1211 10.3398 16 8.5 16H5.5V24H6.94922ZM8.28515 20.1055H6.94922V17.2109H8.27734C9.36328 17.2109 9.84375 17.7969 9.84375 18.6484C9.84375 19.5 9.36328 20.1055 8.28515 20.1055ZM19.1719 19.9922C19.1719 22.4922 17.7266 24 15.2891 24H12.5781V16H15.3437C17.7266 16 19.1719 17.5 19.1719 19.9922ZM15.2187 22.7461H14.0273V17.2539H15.2617C16.8867 17.2539 17.7344 18.1602 17.7344 19.9922C17.7344 21.832 16.8867 22.7461 15.2187 22.7461ZM21.9961 20.6016V24H20.5469V16H25.6719V17.2148H21.9961V19.3867H25.3203V20.6016H21.9961Z\" fill=\"white\"></path>`}}export{l as IDSIconFilePdf};\n", "import{IDSIconFilePdf as i}from\"./icon-file-pdf-element.js\";import{registerComponent as e}from\"../../../utilities/utils.js\";e(\"ids-icon-file-pdf\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/file-picture/register';\nimport { IDSIconFilePicture as IDSIconFilePicture$1 } from '@inera/ids-core/components/icons/file-picture/icon-file-picture-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconFilePicture = createComponent({\r\n    tagName: 'ids-icon-file-picture',\r\n    elementClass: IDSIconFilePicture$1,\r\n    react: React,\r\n});\n\nexport { IDSIconFilePicture };\n", "import{svg as e}from\"lit\";import{IDSIconBase as l}from\"../icon-base-element.js\";class t extends l{constructor(){super(),this.vbHeight=40,this.vbWidth=37}renderIcon(){return e`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.25 2C8.69771 2 8.25 2.44772 8.25 3V7C8.25 7.55228 7.80228 8 7.25 8C6.69772 8 6.25 7.55228 6.25 7V3C6.25 1.34315 7.59315 0 9.25 0H33.25C34.9069 0 36.25 1.34315 36.25 3V37C36.25 38.6569 34.9069 40 33.25 40H9.25C7.59315 40 6.25 38.6569 6.25 37V33C6.25 32.4477 6.69772 32 7.25 32C7.80228 32 8.25 32.4477 8.25 33V37C8.25 37.5523 8.69771 38 9.25 38H33.25C33.8023 38 34.25 37.5523 34.25 37V3C34.25 2.44772 33.8023 2 33.25 2H9.25Z\"></path><path fill=\"${this.colors.color}\" d=\"M2.25 30C1.14543 30 0.25 29.1046 0.25 28V12C0.25 10.8954 1.14543 10 2.25 10H28.25C29.3546 10 30.25 10.8954 30.25 12V28C30.25 29.1046 29.3546 30 28.25 30H2.25Z\"></path><path d=\"M6.25 17.4805C7.35457 17.4805 8.25 16.585 8.25 15.4805C8.25 14.3759 7.35457 13.4805 6.25 13.4805C5.14543 13.4805 4.25 14.3759 4.25 15.4805C4.25 16.585 5.14543 17.4805 6.25 17.4805Z\" fill=\"white\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M26.7217 26.165L17.9785 14.1272L12.8357 21.4055L10.1631 17.7282L3.73584 26.165H26.7217ZM12.8529 23.9806L17.9953 16.7028L23.7784 24.665H6.76425L10.1348 20.2406L12.8529 23.9806Z\" fill=\"white\"></path>`}}export{t as IDSIconFilePicture};\n", "import{IDSIconFilePicture as i}from\"./icon-file-picture-element.js\";import{registerComponent as e}from\"../../../utilities/utils.js\";e(\"ids-icon-file-picture\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/file-powerpoint/register';\nimport { IDSIconFilePowerpoint as IDSIconFilePowerpoint$1 } from '@inera/ids-core/components/icons/file-powerpoint/icon-file-powerpoint-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconFilePowerpoint = createComponent({\r\n    tagName: 'ids-icon-file-powerpoint',\r\n    elementClass: IDSIconFilePowerpoint$1,\r\n    react: React,\r\n});\n\nexport { IDSIconFilePowerpoint };\n", "import{svg as e}from\"lit\";import{IDSIconBase as C}from\"../icon-base-element.js\";class l extends C{constructor(){super(),this.vbHeight=40,this.vbWidth=36}renderIcon(){return e`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9 2C8.44771 2 8 2.44772 8 3V7C8 7.55228 7.55228 8 7 8C6.44772 8 6 7.55228 6 7V3C6 1.34315 7.34315 0 9 0H33C34.6569 0 36 1.34315 36 3V37C36 38.6569 34.6569 40 33 40H9C7.34315 40 6 38.6569 6 37V33C6 32.4477 6.44772 32 7 32C7.55228 32 8 32.4477 8 33V37C8 37.5523 8.44771 38 9 38H33C33.5523 38 34 37.5523 34 37V3C34 2.44772 33.5523 2 33 2H9Z\"></path><path fill=\"${this.colors.color}\" d=\"M2 30C0.89543 30 0 29.1046 0 28V12C0 10.8954 0.895431 10 2 10H28C29.1046 10 30 10.8954 30 12V28C30 29.1046 29.1046 30 28 30H2Z\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.44922 24V21.2969H7.98047C9.82812 21.2969 10.8203 20.1875 10.8203 18.6484C10.8203 17.1211 9.83984 16 8 16H5V24H6.44922ZM7.78515 20.1055H6.44922V17.2109H7.77734C8.86328 17.2109 9.34375 17.7969 9.34375 18.6484C9.34375 19.5 8.86328 20.1055 7.78515 20.1055ZM13.5273 21.2969V24H12.0781V16H15.0781C16.918 16 17.8984 17.1211 17.8984 18.6484C17.8984 20.1875 16.9062 21.2969 15.0586 21.2969H13.5273ZM14.8633 20.1055H13.5273V17.2109H14.8555C15.9414 17.2109 16.4219 17.7969 16.4219 18.6484C16.4219 19.5 15.9414 20.1055 14.8633 20.1055ZM22.7148 17.2148V24H21.2773V17.2148H18.8047V16H25.1875V17.2148H22.7148Z\" fill=\"white\"></path>`}}export{l as IDSIconFilePowerpoint};\n", "import{IDSIconFilePowerpoint as i}from\"./icon-file-powerpoint-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-file-powerpoint\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/file-word/register';\nimport { IDSIconFileWord as IDSIconFileWord$1 } from '@inera/ids-core/components/icons/file-word/icon-file-word-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconFileWord = createComponent({\r\n    tagName: 'ids-icon-file-word',\r\n    elementClass: IDSIconFileWord$1,\r\n    react: React,\r\n});\n\nexport { IDSIconFileWord };\n", "import{svg as C}from\"lit\";import{IDSIconBase as e}from\"../icon-base-element.js\";class l extends e{constructor(){super(),this.vbHeight=40,this.vbWidth=36}renderIcon(){return C`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9 2C8.44771 2 8 2.44772 8 3V7C8 7.55228 7.55228 8 7 8C6.44772 8 6 7.55228 6 7V3C6 1.34315 7.34315 0 9 0H33C34.6569 0 36 1.34315 36 3V37C36 38.6569 34.6569 40 33 40H9C7.34315 40 6 38.6569 6 37V33C6 32.4477 6.44772 32 7 32C7.55228 32 8 32.4477 8 33V37C8 37.5523 8.44771 38 9 38H33C33.5523 38 34 37.5523 34 37V3C34 2.44772 33.5523 2 33 2H9Z\"></path><path fill=\"${this.colors.color}\" d=\"M2 30C0.89543 30 0 29.1046 0 28V12C0 10.8954 0.895431 10 2 10H28C29.1046 10 30 10.8954 30 12V28C30 29.1046 29.1046 30 28 30H2Z\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M18.7148 20C18.7148 22.5171 17.1787 24 15.1369 24C13.0913 24 11.5589 22.5133 11.5589 20C11.5589 17.4829 13.0913 16 15.1369 16C17.1787 16 18.7148 17.4829 18.7148 20ZM6.63878 23.8935C9.01141 23.8935 10.4183 22.4259 10.4183 19.9924C10.4183 17.5665 9.01141 16.1065 6.69202 16.1065H4V23.8935H6.63878ZM6.57034 22.673H5.41065V17.327H6.61217C8.19392 17.327 9.01901 18.2091 9.01901 19.9924C9.01901 21.7833 8.19392 22.673 6.57034 22.673ZM15.1369 22.7338C13.8707 22.7338 12.9772 21.7719 12.9772 20C12.9772 18.2281 13.8707 17.2662 15.1369 17.2662C16.4069 17.2662 17.2966 18.2281 17.2966 20C17.2966 21.7719 16.4069 22.7338 15.1369 22.7338ZM26.7186 21.3156C26.5019 22.8023 25.2738 24 23.4221 24C21.3688 24 19.8555 22.5133 19.8555 20C19.8555 17.4829 21.3878 16 23.4221 16C25.1483 16 26.4791 17.0038 26.7186 18.7338H25.2966C25.1331 17.8023 24.3916 17.2662 23.4449 17.2662C22.1711 17.2662 21.2738 18.2433 21.2738 20C21.2738 21.7871 22.1787 22.7338 23.4411 22.7338C24.3726 22.7338 25.1179 22.2205 25.2966 21.308L26.7186 21.3156Z\" fill=\"white\"></path>`}}export{l as IDSIconFileWord};\n", "import{IDSIconFileWord as i}from\"./icon-file-word-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-file-word\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/find-care/register';\nimport { IDSIconFindCare as IDSIconFindCare$1 } from '@inera/ids-core/components/icons/find-care/icon-find-care-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconFindCare = createComponent({\r\n    tagName: 'ids-icon-find-care',\r\n    elementClass: IDSIconFindCare$1,\r\n    react: React,\r\n});\n\nexport { IDSIconFindCare };\n", "import{svg as C}from\"lit\";import{IDSIconBase as e}from\"../icon-base-element.js\";class l extends e{constructor(){super(),this.vbHeight=40,this.vbWidth=32}renderIcon(){return C`<path fill=\"${this.colors.color2}\" d=\"M24.9055 23.4242C25.1398 22.9241 24.9243 22.3288 24.4242 22.0944C23.9241 21.8601 23.3287 22.0756 23.0944 22.5757C22.3241 24.2199 21.1645 25.9614 19.6832 27.7514C18.6676 28.9787 17.5759 30.1375 16.4819 31.191L16.0344 31.6156L15.9997 31.6476L15.9649 31.6156L15.5174 31.191C14.4235 30.1375 13.3317 28.9787 12.3161 27.7514C10.8351 25.9617 9.67576 24.2207 8.90545 22.5768C8.67111 22.0767 8.07572 21.8612 7.57562 22.0956C7.07552 22.3299 6.86008 22.9253 7.09442 23.4254C7.95665 25.2655 9.22196 27.1494 10.7753 29.0265C11.8452 30.3194 12.9902 31.5341 14.1328 32.6342L14.5936 33.0714L14.6044 33.0816L15.0292 33.4729L15.3322 33.7446C15.712 34.0851 16.2873 34.0851 16.6672 33.7446L16.9602 33.482L17.3949 33.0816L17.4058 33.0714L17.8613 32.6392L17.8665 32.6342C19.0091 31.5341 20.1542 30.3194 21.2241 29.0265C22.7777 27.149 24.0432 25.2647 24.9055 23.4242Z\"></path><path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.9999 0C7.20399 0 -6.10352e-05 6.95258 -6.10352e-05 15.5561C-6.10352e-05 16.8017 0.183647 18.0878 0.53278 19.406C1.62168 23.5173 4.28393 27.8774 7.94867 32.2301C9.68229 34.2892 11.5391 36.2253 13.3933 37.9799C14.0422 38.594 14.6456 39.1426 15.188 39.6184C15.2424 39.6662 15.2942 39.7114 15.3433 39.7542C15.7197 40.0819 16.2802 40.0819 16.6566 39.7542C16.7057 39.7114 16.7575 39.6662 16.8119 39.6184C17.3543 39.1426 17.9577 38.594 18.6066 37.9799C20.4608 36.2253 22.3176 34.2892 24.0512 32.2301C27.716 27.8774 30.3782 23.5173 31.4671 19.406C31.8162 18.0878 31.9999 16.8017 31.9999 15.5561C31.9999 7.07725 24.5907 0 15.9999 0ZM1.99994 15.5561C1.99994 8.11301 8.25186 2 15.9999 2C23.549 2 29.9999 8.24367 29.9999 15.5561C29.9999 16.6051 29.8452 17.7182 29.5338 18.894C28.5521 22.6005 26.096 26.6962 22.5213 30.942C20.8419 32.9366 19.038 34.8181 17.2319 36.5272C16.7975 36.9384 16.3851 37.3182 15.9999 37.6646C15.6148 37.3182 15.2024 36.9384 14.768 36.5272C12.9619 34.8181 11.158 32.9366 9.47861 30.942C5.90384 26.6962 3.44781 22.6005 2.46612 18.894C2.15471 17.7182 1.99994 16.6051 1.99994 15.5561Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12.9999 8.38889C12.9999 7.8366 13.4476 7.38889 13.9999 7.38889H17.9999C18.5522 7.38889 18.9999 7.8366 18.9999 8.38889V11.3889H21.9999C22.5522 11.3889 22.9999 11.8366 22.9999 12.3889V16.3889C22.9999 16.9412 22.5522 17.3889 21.9999 17.3889H18.9999V20.3889C18.9999 20.9412 18.5522 21.3889 17.9999 21.3889H13.9999C13.4476 21.3889 12.9999 20.9412 12.9999 20.3889V17.3889H9.99993C9.44764 17.3889 8.99993 16.9412 8.99993 16.3889V12.3889C8.99993 11.8366 9.44764 11.3889 9.99993 11.3889H12.9999V8.38889ZM14.9999 9.38889V12.3889C14.9999 12.9412 14.5522 13.3889 13.9999 13.3889H10.9999V15.3889H13.9999C14.5522 15.3889 14.9999 15.8366 14.9999 16.3889V19.3889H16.9999V16.3889C16.9999 15.8366 17.4476 15.3889 17.9999 15.3889H20.9999V13.3889H17.9999C17.4476 13.3889 16.9999 12.9412 16.9999 12.3889V9.38889H14.9999Z\"></path>`}}export{l as IDSIconFindCare};\n", "import{IDSIconFindCare as i}from\"./icon-find-care-element.js\";import{registerComponent as e}from\"../../../utilities/utils.js\";e(\"ids-icon-find-care\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/find-region/register';\nimport { IDSIconFindRegion as IDSIconFindRegion$1 } from '@inera/ids-core/components/icons/find-region/icon-find-region-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconFindRegion = createComponent({\r\n    tagName: 'ids-icon-find-region',\r\n    elementClass: IDSIconFindRegion$1,\r\n    react: React,\r\n});\n\nexport { IDSIconFindRegion };\n", "import{svg as C}from\"lit\";import{IDSIconBase as e}from\"../icon-base-element.js\";class l extends e{constructor(){super(),this.vbHeight=40,this.vbWidth=32}renderIcon(){return C`<path fill=\"${this.colors.color2}\" d=\"M24.9055 23.4242C25.1398 22.9241 24.9243 22.3288 24.4242 22.0944C23.9241 21.8601 23.3287 22.0756 23.0944 22.5757C22.3241 24.2199 21.1645 25.9614 19.6832 27.7514C18.6676 28.9787 17.5759 30.1375 16.4819 31.191L16.0344 31.6156L15.9997 31.6476L15.9649 31.6156L15.5174 31.191C14.4235 30.1375 13.3317 28.9787 12.3161 27.7514C10.8351 25.9617 9.67576 24.2207 8.90545 22.5768C8.67111 22.0767 8.07572 21.8612 7.57562 22.0956C7.07552 22.3299 6.86008 22.9253 7.09442 23.4254C7.95665 25.2655 9.22196 27.1494 10.7753 29.0265C11.8452 30.3194 12.9902 31.5341 14.1328 32.6342L14.5936 33.0714L14.6044 33.0816L15.0292 33.4729L15.3322 33.7446C15.712 34.0851 16.2873 34.0851 16.6672 33.7446L16.9602 33.482L17.3949 33.0816L17.4058 33.0714L17.8613 32.6392L17.8665 32.6342C19.0091 31.5341 20.1542 30.3194 21.2241 29.0265C22.7777 27.149 24.0432 25.2647 24.9055 23.4242Z\"></path><path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.9999 0C7.20399 0 -6.10352e-05 6.95258 -6.10352e-05 15.5561C-6.10352e-05 16.8017 0.183647 18.0878 0.53278 19.406C1.62168 23.5173 4.28393 27.8774 7.94867 32.2301C9.68229 34.2892 11.5391 36.2253 13.3933 37.9799C14.0422 38.594 14.6456 39.1426 15.188 39.6184C15.2424 39.6662 15.2942 39.7114 15.3433 39.7542C15.7197 40.0819 16.2802 40.0819 16.6566 39.7542C16.7057 39.7114 16.7575 39.6662 16.8119 39.6184C17.3543 39.1426 17.9577 38.594 18.6066 37.9799C20.4608 36.2253 22.3176 34.2892 24.0512 32.2301C27.716 27.8774 30.3782 23.5173 31.4671 19.406C31.8162 18.0878 31.9999 16.8017 31.9999 15.5561C31.9999 7.07725 24.5907 0 15.9999 0ZM1.99994 15.5561C1.99994 8.11301 8.25186 2 15.9999 2C23.549 2 29.9999 8.24367 29.9999 15.5561C29.9999 16.6051 29.8452 17.7182 29.5338 18.894C28.5521 22.6005 26.096 26.6962 22.5213 30.942C20.8419 32.9366 19.038 34.8181 17.2319 36.5272C16.7975 36.9384 16.3851 37.3182 15.9999 37.6646C15.6148 37.3182 15.2024 36.9384 14.768 36.5272C12.9619 34.8181 11.158 32.9366 9.47861 30.942C5.90384 26.6962 3.44781 22.6005 2.46612 18.894C2.15471 17.7182 1.99994 16.6051 1.99994 15.5561Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.9999 10C13.7908 10 11.9999 11.7909 11.9999 14C11.9999 16.2091 13.7908 18 15.9999 18C18.2091 18 19.9999 16.2091 19.9999 14C19.9999 11.7909 18.2091 10 15.9999 10ZM9.99994 14C9.99994 10.6863 12.6862 8 15.9999 8C19.3136 8 21.9999 10.6863 21.9999 14C21.9999 17.3137 19.3136 20 15.9999 20C12.6862 20 9.99994 17.3137 9.99994 14Z\"></path>`}}export{l as IDSIconFindRegion};\n", "import{IDSIconFindRegion as i}from\"./icon-find-region-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-find-region\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/gavleborg/register';\nimport { IDSIconGavleborg as IDSIconGavleborg$1 } from '@inera/ids-core/components/icons/gavleborg/icon-gavleborg-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconGavleborg = createComponent({\r\n    tagName: 'ids-icon-gavleborg',\r\n    elementClass: IDSIconGavleborg$1,\r\n    react: React,\r\n});\n\nexport { IDSIconGavleborg };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/gotland/register';\nimport { IDSIconGotland as IDSIconGotland$1 } from '@inera/ids-core/components/icons/gotland/icon-gotland-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconGotland = createComponent({\r\n    tagName: 'ids-icon-gotland',\r\n    elementClass: IDSIconGotland$1,\r\n    react: React,\r\n});\n\nexport { IDSIconGotland };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/halland/register';\nimport { IDSIconHalland as IDSIconHalland$1 } from '@inera/ids-core/components/icons/halland/icon-halland-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconHalland = createComponent({\r\n    tagName: 'ids-icon-halland',\r\n    elementClass: IDSIconHalland$1,\r\n    react: React,\r\n});\n\nexport { IDSIconHalland };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/house/register';\nimport { IDSIconHouse as IDSIconHouse$1 } from '@inera/ids-core/components/icons/house/icon-house-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconHouse = createComponent({\r\n    tagName: 'ids-icon-house',\r\n    elementClass: IDSIconHouse$1,\r\n    react: React,\r\n});\n\nexport { IDSIconHouse };\n", "import{svg as e}from\"lit\";import{IDSIconBase as l}from\"../icon-base-element.js\";class o extends l{constructor(){super(),this.vbHeight=40,this.vbWidth=38}renderIcon(){return e`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.7554 2.28588C19.3665 1.90471 18.7442 1.90471 18.3553 2.28588L2.50402 17.8243H6.05536V37.514C6.05536 37.5589 6.07358 37.624 6.15147 37.6932C6.23119 37.7641 6.3618 37.8243 6.52905 37.8243H13.6343V27.9623C13.6343 26.5791 14.8555 25.6519 16.108 25.6519H22.0191L22.1618 25.6566L22.1782 25.6577C23.3599 25.7352 24.4764 26.6441 24.4764 27.9623V37.8243H31.5817C31.7489 37.8243 31.8795 37.7641 31.9593 37.6932C32.0371 37.624 32.0554 37.5589 32.0554 37.514V17.8243H35.6067L19.7554 2.28588ZM16.9553 0.857643C18.1218 -0.285881 19.9889 -0.285881 21.1554 0.857643L37.0068 16.3961C38.2861 17.6502 37.3981 19.8243 35.6067 19.8243H34.0554V37.514C34.0554 38.8972 32.8342 39.8243 31.5817 39.8243H22.4764V27.9623C22.4764 27.9187 22.4596 27.8583 22.3906 27.7925C22.3212 27.7264 22.2077 27.6669 22.0599 27.6543L21.9864 27.6519H16.108C15.9407 27.6519 15.8101 27.7122 15.7304 27.783C15.6525 27.8523 15.6343 27.9174 15.6343 27.9623V39.8243H6.52905C5.27654 39.8243 4.05536 38.8972 4.05536 37.514V19.8243H2.50402C0.712582 19.8243 -0.17533 17.6502 1.10397 16.3961L16.9553 0.857643Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M19.5 6.63458L9.18577 16.3528C8.7838 16.7316 8.15092 16.7127 7.77218 16.3108C7.39344 15.9088 7.41227 15.2759 7.81423 14.8972L18.2249 5.08806L18.2479 5.06887C18.9566 4.47704 20.0434 4.47704 20.7521 5.06887L20.7751 5.08806L31.1858 14.8972C31.5877 15.2759 31.6066 15.9088 31.2278 16.3108C30.8491 16.7127 30.2162 16.7316 29.8142 16.3528L19.5 6.63458Z\"></path>`}}export{o as IDSIconHouse};\n", "import{IDSIconHouse as i}from\"./icon-house-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-house\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/id-card/register';\nimport { IDSIconIdCard } from '@inera/ids-core/components/icons/id-card/icon-id-card-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconIDCard = createComponent({\r\n    tagName: 'ids-icon-id-card',\r\n    elementClass: IDSIconIdCard,\r\n    react: React,\r\n});\n\nexport { IDSIconIDCard };\n", "import{svg as l}from\"lit\";import{IDSIconBase as o}from\"../icon-base-element.js\";class t extends o{constructor(){super(),this.vbHeight=30,this.vbWidth=40}renderIcon(){return l`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M40 3C40 1.34315 38.6569 0 37 0H3C1.34314 0 0 1.34315 0 3V27C0 28.6569 1.34314 30 3 30H37C38.6569 30 40 28.6569 40 27V3ZM37 2C37.5523 2 38 2.44772 38 3V27C38 27.5523 37.5523 28 37 28H3C2.44772 28 2 27.5523 2 27V3C2 2.44771 2.44772 2 3 2H37Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M23.5887 9.81459C23.5887 9.53845 23.8125 9.31459 24.0887 9.31459H26.5911C26.8673 9.31459 27.0911 9.53845 27.0911 9.81459V12.4744H27.8418C28.118 12.4744 28.3418 12.6983 28.3418 12.9744C28.3418 13.2506 28.118 13.4744 27.8418 13.4744H26.5911C26.315 13.4744 26.0911 13.2506 26.0911 12.9744V10.3146H24.0887C23.8125 10.3146 23.5887 10.0907 23.5887 9.81459Z\"></path><path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M27.3682 4.641C30.4932 4.641 33.1992 7.32159 33.1992 10.4949C33.1992 12.1974 32.5075 13.9256 31.4729 15.2291C30.447 16.5215 28.9823 17.5156 27.3682 17.5156C25.5689 17.5156 23.9607 16.6011 22.8209 15.3021C21.6814 14.0034 20.9564 12.2637 20.9564 10.4949C20.9564 7.159 23.8332 4.641 27.3682 4.641ZM31.6992 10.4949C31.6992 8.15041 29.6651 6.141 27.3682 6.141C24.5167 6.141 22.4564 8.12531 22.4564 10.4949C22.4564 11.8652 23.0254 13.2608 23.9484 14.3128C24.871 15.3643 26.0936 16.0156 27.3682 16.0156C28.3587 16.0156 29.4345 15.3844 30.298 14.2966C31.1527 13.2198 31.6992 11.8126 31.6992 10.4949Z\"></path><path fill=\"${this.colors.color2}\" d=\"M32.5467 21.0516C31.446 19.989 29.6811 19.4118 26.762 19.4118C24.1356 19.4118 22.5508 19.9693 21.5468 20.9941C20.8279 21.7279 20.4509 22.4523 19.7851 24.7646L19.6011 25.3985L19.6004 25.4011C19.4765 25.8221 19.3686 26.1634 19.2553 26.4903C19.1196 26.8817 18.6924 27.089 18.301 26.9533C17.9096 26.8176 17.7024 26.3904 17.838 25.999C17.9415 25.7007 18.042 25.3834 18.1609 24.9792L18.1613 24.9778L18.3439 24.3488C19.023 21.9904 19.4822 20.9581 20.4753 19.9444C21.8872 18.5033 23.957 17.9118 26.762 17.9118C29.832 17.9118 32.0742 18.5106 33.5885 19.9724C34.6669 21.0134 35.134 22.0305 35.8433 24.4651L35.9933 24.9762L35.9937 24.9775C36.1172 25.3926 36.215 25.7041 36.3174 25.9979C36.4537 26.389 36.2471 26.8166 35.8559 26.9529C35.4648 27.0892 35.0372 26.8826 34.9009 26.4915C34.7875 26.1661 34.6821 25.8294 34.5555 25.4038L34.4032 24.8847C33.7102 22.5057 33.3315 21.8091 32.5467 21.0516Z\"></path><path fill=\"${this.colors.color}\" d=\"M17 8.25C17 7.00736 15.9926 6 14.75 6H14V8.25H17Z\"></path><path fill=\"${this.colors.color}\" d=\"M9 6V15H13V6H9Z\"></path><path fill=\"${this.colors.color}\" d=\"M7.25 6C6.00736 6 5 7.00736 5 8.25H8V6H7.25Z\"></path><path fill=\"${this.colors.color}\" d=\"M5 11.625V9.375H8V11.625H5Z\"></path><path fill=\"${this.colors.color}\" d=\"M5 12.75C5 13.9926 6.00736 15 7.25 15H8V12.75H5Z\"></path><path fill=\"${this.colors.color}\" d=\"M17 9.375V11.625H14V9.375H17Z\"></path><path fill=\"${this.colors.color}\" d=\"M14.75 15C15.9926 15 17 13.9926 17 12.75H14V15H14.75Z\"></path>`}}export{t as IDSIconIdCard};\n", "import{IDSIconIdCard as i}from\"./icon-id-card-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-id-card\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/id-card-locked/register';\nimport { IDSIconIdCardLocked } from '@inera/ids-core/components/icons/id-card-locked/icon-id-card-locked-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconIDCardLocked = createComponent({\r\n    tagName: 'ids-icon-id-card-locked',\r\n    elementClass: IDSIconIdCardLocked,\r\n    react: React,\r\n});\n\nexport { IDSIconIDCardLocked };\n", "import{svg as l}from\"lit\";import{IDSIconBase as o}from\"../icon-base-element.js\";class C extends o{constructor(){super(),this.vbHeight=30,this.vbWidth=40}renderIcon(){return l`<path fill=\"${this.colors.color2}\" d=\"M37.0978 2C37.458 2 37.75 2.29199 37.75 2.65217V22.4783C37.75 22.8384 37.458 23.1304 37.0978 23.1304H17.2717C16.7195 23.1304 16.2717 23.5781 16.2717 24.1304C16.2717 24.6827 16.7195 25.1304 17.2717 25.1304H37.0978C38.5626 25.1304 39.75 23.943 39.75 22.4783V2.65217C39.75 1.18742 38.5626 0 37.0978 0H9.01087C7.54611 0 6.3587 1.18742 6.3587 2.65217V10.1378C6.3587 10.69 6.80641 11.1378 7.3587 11.1378C7.91098 11.1378 8.3587 10.69 8.3587 10.1378V2.65217C8.3587 2.29199 8.65068 2 9.01087 2H37.0978Z\"></path><path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M29.1411 3.92725C31.767 3.92725 34.0384 6.17763 34.0384 8.84354C34.0384 10.2705 33.4593 11.7154 32.5949 12.8044C31.7387 13.883 30.5079 14.7237 29.1411 14.7237C27.6266 14.7237 26.2774 13.9541 25.3241 12.8677C24.3713 11.7817 23.764 10.326 23.764 8.84354C23.764 6.03595 26.1843 3.92725 29.1411 3.92725ZM32.6384 8.84354C32.6384 6.9512 30.9942 5.32725 29.1411 5.32725C26.8222 5.32725 25.164 6.93784 25.164 8.84354C25.164 9.95414 25.6256 11.0885 26.3765 11.9443C27.127 12.7997 28.1163 13.3237 29.1411 13.3237C29.9259 13.3237 30.7937 12.8217 31.4983 11.934C32.1947 11.0566 32.6384 9.91144 32.6384 8.84354Z\"></path><path fill=\"${this.colors.color2}\" d=\"M33.3631 17.6222C32.476 16.7659 31.0437 16.2901 28.6403 16.2901C26.4803 16.2901 25.1971 16.7489 24.3896 17.5732C23.8104 18.1643 23.5034 18.7462 22.9541 20.6539L22.8021 21.1777L22.8014 21.1802C22.6988 21.5288 22.6093 21.812 22.5151 22.0836C22.3885 22.4488 21.9897 22.6423 21.6245 22.5157C21.2592 22.389 21.0657 21.9903 21.1924 21.625C21.2773 21.3801 21.3599 21.1192 21.4579 20.7862L21.4583 20.785L21.6089 20.2658C22.1707 18.3151 22.5544 17.4458 23.3895 16.5934C24.5777 15.3806 26.3136 14.8901 28.6403 14.8901C31.1845 14.8901 33.0623 15.386 34.3355 16.615C35.2421 17.4901 35.6327 18.3476 36.2195 20.3617L36.3433 20.7835L36.3437 20.7847C36.4455 21.127 36.5259 21.383 36.6098 21.6239C36.7371 21.989 36.5443 22.3881 36.1792 22.5153C35.8141 22.6425 35.415 22.4497 35.2878 22.0846C35.1936 21.8142 35.1061 21.5347 35.0014 21.1826L34.8754 20.7533C34.3038 18.7911 33.9957 18.2328 33.3631 17.6222Z\"></path><path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11.6075 16.7902C11.6075 14.4786 9.68469 12.6414 7.35881 12.6414C5.03292 12.6414 3.11009 14.4786 3.11009 16.7902V17.8457H2.51744C1.1271 17.8457 0 18.9728 0 20.3631V26.4935C0 27.8838 1.1271 29.0109 2.51744 29.0109H12.1999C13.5903 29.0109 14.7174 27.8838 14.7174 26.4935V20.3631C14.7174 18.9728 13.5903 17.8457 12.1999 17.8457H11.6075V16.7902ZM4.61009 16.7902V17.8457H10.1075V16.7902C10.1075 15.3476 8.8975 14.1414 7.35881 14.1414C5.82011 14.1414 4.61009 15.3476 4.61009 16.7902ZM10.8575 19.3457L10.8592 19.3457H12.1999C12.7619 19.3457 13.2174 19.8012 13.2174 20.3631V26.4935C13.2174 27.0554 12.7619 27.5109 12.1999 27.5109H2.51744C1.95552 27.5109 1.5 27.0554 1.5 26.4935V20.3631C1.5 19.8012 1.95553 19.3457 2.51744 19.3457H10.8558L10.8575 19.3457Z\"></path><path fill=\"${this.colors.color}\" d=\"M20.5762 6.98907C20.5762 5.96254 19.744 5.13037 18.7175 5.13037H18.0979V6.98907H20.5762Z\"></path><path fill=\"${this.colors.color}\" d=\"M13.9673 5.13037V12.5652H17.2716V5.13037H13.9673Z\"></path><path fill=\"${this.colors.color}\" d=\"M12.5218 5.13037C11.4953 5.13037 10.6631 5.96254 10.6631 6.98907H13.1413V5.13037H12.5218Z\"></path><path fill=\"${this.colors.color}\" d=\"M10.6631 9.77711V7.91841H13.1413V9.77711H10.6631Z\"></path><path fill=\"${this.colors.color}\" d=\"M10.6631 10.7065C10.6631 11.733 11.4953 12.5652 12.5218 12.5652H13.1413V10.7065H10.6631Z\"></path><path fill=\"${this.colors.color}\" d=\"M20.5762 7.91841V9.77711H18.0979V7.91841H20.5762Z\"></path><path fill=\"${this.colors.color}\" d=\"M18.7175 12.5652C19.744 12.5652 20.5762 11.733 20.5762 10.7065H18.0979V12.5652H18.7175Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M25.5842 8.28174C25.5842 8.0056 25.8081 7.78174 26.0842 7.78174H28.1515C28.4276 7.78174 28.6515 8.0056 28.6515 8.28174V10.392H29.1846C29.4608 10.392 29.6846 10.6159 29.6846 10.892C29.6846 11.1682 29.4608 11.392 29.1846 11.392H28.1515C27.8753 11.392 27.6515 11.1682 27.6515 10.892V8.78174H26.0842C25.8081 8.78174 25.5842 8.55788 25.5842 8.28174Z\"></path><path fill=\"${this.colors.color}\" d=\"M8.30504 22.347C8.30504 21.9176 7.95694 21.5695 7.52754 21.5695C7.09815 21.5695 6.75005 21.9176 6.75005 22.347V24.5094C6.75005 24.9388 7.09815 25.2869 7.52754 25.2869C7.95694 25.2869 8.30504 24.9388 8.30504 24.5094V22.347Z\"></path>`}}export{C as IDSIconIdCardLocked};\n", "import{IDSIconIdCardLocked as i}from\"./icon-id-card-locked-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-id-card-locked\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/image/register';\nimport { IDSIconImage as IDSIconImage$1 } from '@inera/ids-core/components/icons/image/icon-image-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconImage = createComponent({\r\n    tagName: 'ids-icon-image',\r\n    elementClass: IDSIconImage$1,\r\n    react: React,\r\n});\n\nexport { IDSIconImage };\n", "import{svg as e}from\"lit\";import{IDSIconBase as l}from\"../icon-base-element.js\";class o extends l{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return e`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 36L0 4C0 1.79086 1.79086 0 4 0H36C38.2091 0 40 1.79086 40 4V36C40 38.2091 38.2091 40 36 40H4C1.79086 40 0 38.2091 0 36ZM2 36C2 37.1046 2.89543 38 4 38H36C37.1046 38 38 37.1046 38 36V4C38 2.89543 37.1046 2 36 2H4C2.89543 2 2 2.89543 2 4L2 36Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9.81895 16C10.9235 16 11.8189 15.1046 11.8189 14C11.8189 12.8954 10.9235 12 9.81895 12C8.71438 12 7.81895 12.8954 7.81895 14C7.81895 15.1046 8.71438 16 9.81895 16ZM23.2919 13.1064L17.1206 21.8405L13.9165 17.4318L6 27.8235H33.9812L23.2919 13.1064ZM23.3143 16.5405L30.0567 25.8235H10.0379L13.8788 20.7818L17.1435 25.2739L23.3143 16.5405Z\"></path>`}}export{o as IDSIconImage};\n", "import{IDSIconImage as i}from\"./icon-image-element.js\";import{registerComponent as m}from\"../../../utilities/utils.js\";m(\"ids-icon-image\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/inera/register';\nimport { IDSIconInera as IDSIconInera$1 } from '@inera/ids-core/components/icons/inera/icon-inera-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconInera = createComponent({\r\n    tagName: 'ids-icon-inera',\r\n    elementClass: IDSIconInera$1,\r\n    react: React,\r\n});\n\nexport { IDSIconInera };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/inera-legacy/register';\nimport { IDSIconIneraLegacy as IDSIconIneraLegacy$1 } from '@inera/ids-core/components/icons/inera-legacy/icon-inera-legacy-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconIneraLegacy = createComponent({\r\n    tagName: 'ids-icon-inera-legacy',\r\n    elementClass: IDSIconIneraLegacy$1,\r\n    react: React,\r\n});\n\nexport { IDSIconIneraLegacy };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/information/register';\nimport { IDSIconInformation as IDSIconInformation$1 } from '@inera/ids-core/components/icons/information/icon-information-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconInformation = createComponent({\r\n    tagName: 'ids-icon-information',\r\n    elementClass: IDSIconInformation$1,\r\n    react: React,\r\n});\n\nexport { IDSIconInformation };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/jamtland-harjedalen/register';\nimport { IDSIconJamtlandHarjedalen as IDSIconJamtlandHarjedalen$1 } from '@inera/ids-core/components/icons/jamtland-harjedalen/icon-jamtland-harjedalen-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconJamtlandHarjedalen = createComponent({\r\n    tagName: 'ids-icon-jamtland-harjedalen',\r\n    elementClass: IDSIconJamtlandHarjedalen$1,\r\n    react: React,\r\n});\n\nexport { IDSIconJamtlandHarjedalen };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/jonkoping/register';\nimport { IDSIconJonkoping as IDSIconJonkoping$1 } from '@inera/ids-core/components/icons/jonkoping/icon-jonkoping-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconJonkoping = createComponent({\r\n    tagName: 'ids-icon-jonkoping',\r\n    elementClass: IDSIconJonkoping$1,\r\n    react: React,\r\n});\n\nexport { IDSIconJonkoping };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/kalmar/register';\nimport { IDSIconKalmar as IDSIconKalmar$1 } from '@inera/ids-core/components/icons/kalmar/icon-kalmar-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconKalmar = createComponent({\r\n    tagName: 'ids-icon-kalmar',\r\n    elementClass: IDSIconKalmar$1,\r\n    react: React,\r\n});\n\nexport { IDSIconKalmar };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/kronoberg/register';\nimport { IDSIconKronoberg as IDSIconKronoberg$1 } from '@inera/ids-core/components/icons/kronoberg/icon-kronoberg-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconKronoberg = createComponent({\r\n    tagName: 'ids-icon-kronoberg',\r\n    elementClass: IDSIconKronoberg$1,\r\n    react: React,\r\n});\n\nexport { IDSIconKronoberg };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/lightbulb/register';\nimport { IDSIconLightbulb as IDSIconLightbulb$1 } from '@inera/ids-core/components/icons/lightbulb/icon-lightbulb-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconLightbulb = createComponent({\r\n    tagName: 'ids-icon-lightbulb',\r\n    elementClass: IDSIconLightbulb$1,\r\n    react: React,\r\n});\n\nexport { IDSIconLightbulb };\n", "import{svg as C}from\"lit\";import{IDSIconBase as o}from\"../icon-base-element.js\";class l extends o{constructor(){super(),this.vbHeight=40,this.vbWidth=24}renderIcon(){return C`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M18.6464 19.7361C20.7035 17.877 22 15.1717 22 12.1514C22 6.52121 17.4993 2 12 2C6.50075 2 2 6.52121 2 12.1514C2 15.1717 3.29653 17.877 5.35357 19.7361C6.96571 21.1932 8.7066 23.2382 9.11816 25.9321L9.52461 28.5933L9.5284 28.6248C9.55659 28.8588 9.74347 29 9.92513 29H14.0749C14.2565 29 14.4434 28.8588 14.4716 28.6248L14.4754 28.5933L14.8818 25.9322C15.2934 23.2382 17.0343 21.1932 18.6464 19.7361ZM7.14109 26.2342C6.83429 24.2259 5.50912 22.5725 4.01254 21.2199C1.5503 18.9945 0 15.7563 0 12.1514C0 5.44035 5.37262 0 12 0C18.6274 0 24 5.44035 24 12.1514C24 15.7563 22.4497 18.9945 19.9875 21.2199C18.4909 22.5725 17.1657 24.2259 16.8589 26.2342L16.4572 28.8639C16.3104 30.0833 15.2881 31 14.0749 31H9.92513C8.71191 31 7.68961 30.0833 7.54275 28.8639L7.14109 26.2342Z\"></path><path fill=\"${this.colors.color}\" d=\"M11.2506 6.16485C11.7955 6.07467 12.1641 5.55985 12.0739 5.01498C11.9837 4.47011 11.4689 4.10151 10.9241 4.19169C7.69217 4.7266 5.15517 7.30777 4.65442 10.5625C4.57043 11.1084 4.94486 11.619 5.49072 11.7029C6.03659 11.7869 6.54718 11.4125 6.63116 10.8666C7.00166 8.45847 8.87967 6.55727 11.2506 6.16485Z\"></path><path fill=\"${this.colors.color}\" d=\"M9.57136 32.2858C9.01907 32.2858 8.57136 32.7335 8.57136 33.2858C8.57136 33.8381 9.01907 34.2858 9.57136 34.2858H14.7142C15.2665 34.2858 15.7142 33.8381 15.7142 33.2858C15.7142 32.7335 15.2665 32.2858 14.7142 32.2858H9.57136Z\"></path><path fill=\"${this.colors.color}\" d=\"M8.57136 36.143C8.57136 35.5907 9.01907 35.143 9.57136 35.143H14.7142C15.2665 35.143 15.7142 35.5907 15.7142 36.143C15.7142 36.6952 15.2665 37.143 14.7142 37.143H9.57136C9.01907 37.143 8.57136 36.6952 8.57136 36.143Z\"></path><path fill=\"${this.colors.color}\" d=\"M11.7142 38.0001C11.1619 38.0001 10.7142 38.4479 10.7142 39.0001C10.7142 39.5524 11.1619 40.0001 11.7142 40.0001H12.5713C13.1236 40.0001 13.5713 39.5524 13.5713 39.0001C13.5713 38.4479 13.1236 38.0001 12.5713 38.0001H11.7142Z\"></path>`}}export{l as IDSIconLightbulb};\n", "import{IDSIconLightbulb as i}from\"./icon-lightbulb-element.js\";import{registerComponent as t}from\"../../../utilities/utils.js\";t(\"ids-icon-lightbulb\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/linkedin/register';\nimport { IDSIconLinkedin as IDSIconLinkedin$1 } from '@inera/ids-core/components/icons/linkedin/icon-linkedin-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconLinkedin = createComponent({\r\n    tagName: 'ids-icon-linkedin',\r\n    elementClass: IDSIconLinkedin$1,\r\n    react: React,\r\n});\n\nexport { IDSIconLinkedin };\n", "import{svg as t}from\"lit\";import{IDSIconBase as e}from\"../icon-base-element.js\";class i extends e{constructor(){super(),this.vbHeight=41,this.vbWidth=40}renderIcon(){return t`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.0007 0.402954C8.95339 0.402954 0 9.35635 0 20.4023C0 31.4482 8.95339 40.403 20.0007 40.403C31.0466 40.403 40 31.4482 40 20.4023C40 9.35635 31.0466 0.402954 20.0007 0.402954Z\"></path><path fill=\"white\" d=\"M12.6621 13.7241C11.1919 13.7241 10 12.5299 10 11.0635C10 9.59114 11.1919 8.40295 12.6621 8.40295C14.1292 8.40295 15.3211 9.59114 15.3211 11.0635C15.3211 12.5299 14.1292 13.7241 12.6621 13.7241Z\"></path><path fill=\"white\" d=\"M31.4176 29.8085H27.0585V22.8184C27.0585 20.5025 26.6047 19.2357 24.9137 19.2357C22.6267 19.2357 21.8221 20.9742 21.8221 22.8184V29.8085H17.4599V15.8586H21.6043V17.9417C22.1578 16.8291 23.7793 15.6379 25.918 15.6379C30.02 15.6379 31.4176 17.4943 31.4176 21.8933V29.8085Z\"></path><path fill=\"white\" d=\"M14.8432 29.8085H10.4811V15.8586H14.8432V29.8085Z\"></path>`}}export{i as IDSIconLinkedin};\n", "import{IDSIconLinkedin as i}from\"./icon-linkedin-element.js\";import{registerComponent as n}from\"../../../utilities/utils.js\";n(\"ids-icon-linkedin\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/list/register';\nimport { IDSIconList as IDSIconList$1 } from '@inera/ids-core/components/icons/list/icon-list-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconList = createComponent({\r\n    tagName: 'ids-icon-list',\r\n    elementClass: IDSIconList$1,\r\n    react: React,\r\n});\n\nexport { IDSIconList };\n", "import{svg as o}from\"lit\";import{IDSIconBase as l}from\"../icon-base-element.js\";class t extends l{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return o`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 3C0 1.34314 1.34315 0 3 0H37C38.6569 0 40 1.34315 40 3V37C40 38.6569 38.6569 40 37 40H3C1.34314 40 0 38.6569 0 37V3ZM3 2C2.44771 2 2 2.44771 2 3V37C2 37.5523 2.44771 38 3 38H37C37.5523 38 38 37.5523 38 37V3C38 2.44771 37.5523 2 37 2H3Z\"></path><path fill=\"${this.colors.color}\" d=\"M9.58207 9.29103C9.58207 10.0041 9.00405 10.5821 8.29103 10.5821C7.57802 10.5821 7 10.0041 7 9.29103C7 8.57802 7.57802 8 8.29103 8C9.00405 8 9.58207 8.57802 9.58207 9.29103Z\"></path><path fill=\"${this.colors.color}\" d=\"M9.58207 16.1738C9.58207 16.8869 9.00405 17.4649 8.29103 17.4649C7.57802 17.4649 7 16.8869 7 16.1738C7 15.4608 7.57802 14.8828 8.29103 14.8828C9.00405 14.8828 9.58207 15.4608 9.58207 16.1738Z\"></path><path fill=\"${this.colors.color}\" d=\"M9.58207 23.0567C9.58207 23.7697 9.00405 24.3477 8.29103 24.3477C7.57802 24.3477 7 23.7697 7 23.0567C7 22.3436 7.57802 21.7656 8.29103 21.7656C9.00405 21.7656 9.58207 22.3436 9.58207 23.0567Z\"></path><path fill=\"${this.colors.color}\" d=\"M9.58207 29.9397C9.58207 30.6527 9.00405 31.2308 8.29103 31.2308C7.57802 31.2308 7 30.6527 7 29.9397C7 29.2267 7.57802 28.6487 8.29103 28.6487C9.00405 28.6487 9.58207 29.2267 9.58207 29.9397Z\"></path><path fill=\"${this.colors.color}\" d=\"M13.7461 9.29102C13.7461 8.73873 14.1938 8.29102 14.7461 8.29102H31.9599C32.5122 8.29102 32.9599 8.73873 32.9599 9.29102C32.9599 9.8433 32.5122 10.291 31.9599 10.291H14.7461C14.1938 10.291 13.7461 9.8433 13.7461 9.29102Z\"></path><path fill=\"${this.colors.color}\" d=\"M13.7461 16.1743C13.7461 15.622 14.1938 15.1743 14.7461 15.1743H31.9599C32.5122 15.1743 32.9599 15.622 32.9599 16.1743C32.9599 16.7266 32.5122 17.1743 31.9599 17.1743H14.7461C14.1938 17.1743 13.7461 16.7266 13.7461 16.1743Z\"></path><path fill=\"${this.colors.color}\" d=\"M13.7461 23.0574C13.7461 22.5051 14.1938 22.0574 14.7461 22.0574H31.9599C32.5122 22.0574 32.9599 22.5051 32.9599 23.0574C32.9599 23.6097 32.5122 24.0574 31.9599 24.0574H14.7461C14.1938 24.0574 13.7461 23.6097 13.7461 23.0574Z\"></path><path fill=\"${this.colors.color}\" d=\"M13.7461 29.9407C13.7461 29.3884 14.1938 28.9407 14.7461 28.9407H31.9599C32.5122 28.9407 32.9599 29.3884 32.9599 29.9407C32.9599 30.493 32.5122 30.9407 31.9599 30.9407H14.7461C14.1938 30.9407 13.7461 30.493 13.7461 29.9407Z\"></path>`}}export{t as IDSIconList};\n", "import{IDSIconList as i}from\"./icon-list-element.js\";import{registerComponent as t}from\"../../../utilities/utils.js\";t(\"ids-icon-list\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/lock/register';\nimport { IDSIconLock as IDSIconLock$1 } from '@inera/ids-core/components/icons/lock/icon-lock-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconLock = createComponent({\r\n    tagName: 'ids-icon-lock',\r\n    elementClass: IDSIconLock$1,\r\n    react: React,\r\n});\n\nexport { IDSIconLock };\n", "import{svg as t}from\"lit\";import{IDSIconBase as o}from\"../icon-base-element.js\";class r extends o{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return t`<path fill=\"${this.colors.color}\" d=\"M20 0.25C24.7525 0.25 28.61 4.16771 28.7463 9.04095L28.75 9.30769V13C28.75 13.4142 28.4142 13.75 28 13.75C27.6203 13.75 27.3065 13.4678 27.2568 13.1018L27.25 13V9.30769C27.25 5.12749 23.9976 1.75 20 1.75C16.0824 1.75 12.8804 4.99374 12.7539 9.05786L12.75 9.30769V13.7207C12.75 14.1349 12.4142 14.4707 12 14.4707C11.6203 14.4707 11.3065 14.1885 11.2568 13.8225L11.25 13.7207V9.30769C11.25 4.31147 15.161 0.25 20 0.25Z\"></path><path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.76744 13.25H34.2326C35.6229 13.25 36.75 14.3771 36.75 15.7674V37.2326C36.75 38.6229 35.6229 39.75 34.2326 39.75H5.76744C4.3771 39.75 3.25 38.6229 3.25 37.2326V15.7674C3.25 14.3771 4.3771 13.25 5.76744 13.25ZM34.2326 14.75H5.76744C5.20552 14.75 4.75 15.2055 4.75 15.7674V37.2326C4.75 37.7945 5.20552 38.25 5.76744 38.25H34.2326C34.7945 38.25 35.25 37.7945 35.25 37.2326V15.7674C35.25 15.2055 34.7945 14.75 34.2326 14.75Z\"></path><rect fill=\"${this.colors.color}\" x=\"18\" y=\"22\" width=\"4\" height=\"10\" rx=\"2\"></rect>`}}export{r as IDSIconLock};\n", "import{IDSIconLock as i}from\"./icon-lock-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-lock\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/lock-open/register';\nimport { IDSIconLockOpen as IDSIconLockOpen$1 } from '@inera/ids-core/components/icons/lock-open/icon-lock-open-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconLockOpen = createComponent({\r\n    tagName: 'ids-icon-lock-open',\r\n    elementClass: IDSIconLockOpen$1,\r\n    react: React,\r\n});\n\nexport { IDSIconLockOpen };\n", "import{svg as t}from\"lit\";import{IDSIconBase as o}from\"../icon-base-element.js\";class r extends o{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return t`<path fill=\"${this.colors.color}\" d=\"M20 0.25C24.7526 0.25 28.6101 4.16771 28.7463 9.04095L28.75 9.30769V13C28.75 13.4142 28.4142 13.75 28 13.75C27.6203 13.75 27.3065 13.4678 27.2569 13.1018L27.25 13V9.30769C27.25 5.12749 23.9976 1.75 20 1.75C17.1252 1.75 14.5536 3.51149 13.3885 6.20171C13.2239 6.5818 12.7823 6.75649 12.4022 6.59187C12.0221 6.42725 11.8474 5.98567 12.012 5.60558C13.4104 2.37688 16.5154 0.25 20 0.25Z\"></path><path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5.76744 13.25H34.2326C35.6229 13.25 36.75 14.3771 36.75 15.7674V37.2326C36.75 38.6229 35.6229 39.75 34.2326 39.75H5.76744C4.3771 39.75 3.25 38.6229 3.25 37.2326V15.7674C3.25 14.3771 4.3771 13.25 5.76744 13.25ZM34.2326 14.75H5.76744C5.20552 14.75 4.75 15.2055 4.75 15.7674V37.2326C4.75 37.7945 5.20552 38.25 5.76744 38.25H34.2326C34.7945 38.25 35.25 37.7945 35.25 37.2326V15.7674C35.25 15.2055 34.7945 14.75 34.2326 14.75Z\"></path><rect fill=\"${this.colors.color}\" x=\"18\" y=\"22\" width=\"4\" height=\"10\" rx=\"2\"></rect>`}}export{r as IDSIconLockOpen};\n", "import{IDSIconLockOpen as o}from\"./icon-lock-open-element.js\";import{registerComponent as i}from\"../../../utilities/utils.js\";i(\"ids-icon-lock-open\",o);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/log/register';\nimport { IDSIconLog as IDSIconLog$1 } from '@inera/ids-core/components/icons/log/icon-log-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconLog = createComponent({\r\n    tagName: 'ids-icon-log',\r\n    elementClass: IDSIconLog$1,\r\n    react: React,\r\n});\n\nexport { IDSIconLog };\n", "import{svg as C}from\"lit\";import{IDSIconBase as l}from\"../icon-base-element.js\";class o extends l{constructor(){super(),this.vbHeight=40,this.vbWidth=38}renderIcon(){return C`<path fill=\"${this.colors.color}\" d=\"M2 3.11111C2 2.4458 2.49797 2 2.99994 2H23.9993C24.5012 2 24.9992 2.44593 24.9992 3.11125L25 9.09518C25.0001 9.64746 25.4478 10.0951 26.0001 10.095C26.5524 10.095 27.0001 9.64719 27 9.09491L26.9992 3.11098C26.9991 1.44448 25.7063 0 23.9993 0H2.99994C1.29283 0 0 1.44456 0 3.11111V36.8889C0 38.5554 1.29283 40 2.99994 40H23.9993C25.7063 40 26.9991 38.5554 26.9992 36.8889L27 30.7311C27.0001 30.1788 26.5524 29.731 26.0001 29.731C25.4478 29.7309 25.0001 30.1786 25 30.7308L24.9992 36.8889C24.9992 37.5542 24.5012 38 23.9993 38H2.99994C2.49797 38 2 37.5542 2 36.8889V3.11111Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M24 15C21.2386 15 19 17.2386 19 20C19 22.7614 21.2386 25 24 25C26.7614 25 29 22.7614 29 20C29 17.2386 26.7614 15 24 15ZM21 20C21 18.3431 22.3431 17 24 17C25.6569 17 27 18.3431 27 20C27 21.6569 25.6569 23 24 23C22.3431 23 21 21.6569 21 20Z\"></path><path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M15.2817 15.9308C13.0608 17.1267 12 18.6113 12 20.0001C12 21.389 13.0608 22.8735 15.2817 24.0694C17.462 25.2434 20.5425 26.0001 24 26.0001C27.4575 26.0001 30.5381 25.2434 32.7183 24.0694C34.9393 22.8735 36 21.389 36 20.0001C36 18.6113 34.9393 17.1267 32.7183 15.9308C30.5381 14.7569 27.4575 14.0001 24 14.0001C20.5425 14.0001 17.462 14.7569 15.2817 15.9308ZM14.3335 14.1699C16.8584 12.8104 20.2778 12.0001 24 12.0001C27.7222 12.0001 31.1417 12.8104 33.6665 14.1699C36.1507 15.5075 38 17.523 38 20.0001C38 22.4773 36.1507 24.4927 33.6665 25.8303C31.1417 27.1899 27.7222 28.0001 24 28.0001C20.2778 28.0001 16.8584 27.1899 14.3335 25.8303C11.8494 24.4927 10 22.4773 10 20.0001C10 17.523 11.8494 15.5075 14.3335 14.1699Z\"></path>`}}export{o as IDSIconLog};\n", "import{IDSIconLog as i}from\"./icon-log-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-log\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/log-locked/register';\nimport { IDSIconLogLocked as IDSIconLogLocked$1 } from '@inera/ids-core/components/icons/log-locked/icon-log-locked-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconLogLocked = createComponent({\r\n    tagName: 'ids-icon-log-locked',\r\n    elementClass: IDSIconLogLocked$1,\r\n    react: React,\r\n});\n\nexport { IDSIconLogLocked };\n", "import{svg as C}from\"lit\";import{IDSIconBase as o}from\"../icon-base-element.js\";class t extends o{constructor(){super(),this.vbHeight=40,this.vbWidth=41}renderIcon(){return C`<path fill=\"${this.colors.color2}\" d=\"M2.5 3.11111C2.5 2.4458 2.99797 2 3.49994 2H24.4993C25.0012 2 25.4992 2.44593 25.4992 3.11125L25.5 9.09518C25.5001 9.64746 25.9478 10.0951 26.5001 10.095C27.0524 10.095 27.5001 9.64719 27.5 9.09491L27.4992 3.11098C27.4991 1.44448 26.2063 0 24.4993 0H3.49994C1.79283 0 0.5 1.44456 0.5 3.11111V36.8889C0.5 38.5554 1.79283 40 3.49994 40H24.4993C26.2063 40 27.4991 38.5554 27.4992 36.8889L27.5 30.7311C27.5001 30.1788 27.0524 29.731 26.5001 29.731C25.9478 29.7309 25.5001 30.1786 25.5 30.7308L25.4992 36.8889C25.4992 37.5542 25.0012 38 24.4993 38H3.49994C2.99797 38 2.5 37.5542 2.5 36.8889V3.11111Z\"></path><path fill=\"${this.colors.color2}\" d=\"M36.5 20C36.5 21.3673 35.4719 22.8274 33.3207 24.0135L34.8189 25.454C36.9676 24.1273 38.5 22.2549 38.5 20C38.5 17.5229 36.6506 15.5074 34.1665 14.1698C31.6416 12.8102 28.2222 12 24.5 12C23.3206 12 22.1716 12.0813 21.0719 12.2357L22.9595 14.0507C23.4632 14.0173 23.9773 14 24.5 14C27.9575 14 31.0381 14.7568 33.2183 15.9307C35.4392 17.1266 36.5 18.6112 36.5 20Z\"></path><path fill=\"${this.colors.color2}\" d=\"M10.5 20C10.5 17.6095 12.2223 15.649 14.5752 14.3126L16.0909 15.7701C15.986 15.8227 15.8829 15.8763 15.7817 15.9307C13.5608 17.1266 12.5 18.6112 12.5 20C12.5 21.3888 13.5608 22.8734 15.7817 24.0693C17.9619 25.2432 21.0425 26 24.5 26C25.2279 26 25.9391 25.9665 26.6287 25.9025L28.4777 27.6804C27.2132 27.8891 25.8773 28 24.5 28C20.7778 28 17.3584 27.1898 14.8335 25.8302C12.3494 24.4926 10.5 22.4771 10.5 20Z\"></path><path fill=\"${this.colors.color}\" d=\"M12.1941 6.47377C11.7965 6.09041 11.1634 6.10192 10.7801 6.49948C10.3967 6.89704 10.4082 7.5301 10.8058 7.91346L38.8058 34.9135C39.2034 35.2968 39.8364 35.2853 40.2198 34.8877C40.6031 34.4902 40.5916 33.8571 40.1941 33.4738L12.1941 6.47377Z\"></path><path fill=\"${this.colors.color}\" d=\"M29.4999 20C29.4999 20.1107 29.4963 20.2205 29.4892 20.3294L23.975 15.0272C24.1475 15.0092 24.3226 15 24.4999 15C27.2614 15 29.4999 17.2386 29.4999 20Z\"></path><path fill=\"${this.colors.color}\" d=\"M19.4999 20C19.4999 19.7004 19.5263 19.407 19.5768 19.1219L21.7581 21.2193C22.0754 21.9318 22.6623 22.4978 23.3892 22.7877L25.5705 24.8851C25.2256 24.9604 24.8674 25 24.4999 25C21.7385 25 19.4999 22.7614 19.4999 20Z\"></path>`}}export{t as IDSIconLogLocked};\n", "import{IDSIconLogLocked as o}from\"./icon-log-locked-element.js\";import{registerComponent as i}from\"../../../utilities/utils.js\";i(\"ids-icon-log-locked\",o);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/menu/register';\nimport { IDSIconMenu as IDSIconMenu$1 } from '@inera/ids-core/components/icons/menu/icon-menu-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconMenu = createComponent({\r\n    tagName: 'ids-icon-menu',\r\n    elementClass: IDSIconMenu$1,\r\n    react: React,\r\n});\n\nexport { IDSIconMenu };\n", "import{svg as t}from\"lit\";import{IDSIconBase as o}from\"../icon-base-element.js\";class r extends o{constructor(){super(),this.vbHeight=35,this.vbWidth=40}renderIcon(){return t`<path fill=\"${this.colors.color}\" d=\"M2.5 0C1.11929 0 0 1.11929 0 2.5C0 3.88071 1.11929 5 2.5 5H37.5C38.8807 5 40 3.88071 40 2.5C40 1.11929 38.8807 0 37.5 0H2.5Z\"></path><path fill=\"${this.colors.color}\" d=\"M0 17.5C0 16.1193 1.11929 15 2.5 15H37.5C38.8807 15 40 16.1193 40 17.5C40 18.8807 38.8807 20 37.5 20H2.5C1.11929 20 0 18.8807 0 17.5Z\"></path><path fill=\"${this.colors.color}\" d=\"M0 32.5C0 31.1193 1.11929 30 2.5 30H37.5C38.8807 30 40 31.1193 40 32.5C40 33.8807 38.8807 35 37.5 35H2.5C1.11929 35 0 33.8807 0 32.5Z\"></path>`}}export{r as IDSIconMenu};\n", "import{IDSIconMenu as i}from\"./icon-menu-element.js\";import{registerComponent as m}from\"../../../utilities/utils.js\";m(\"ids-icon-menu\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/minus/register';\nimport { IDSIconMinus as IDSIconMinus$1 } from '@inera/ids-core/components/icons/minus/icon-minus-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconMinus = createComponent({\r\n    tagName: 'ids-icon-minus',\r\n    elementClass: IDSIconMinus$1,\r\n    react: React,\r\n});\n\nexport { IDSIconMinus };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/norrbotten/register';\nimport { IDSIconNorrbotten as IDSIconNorrbotten$1 } from '@inera/ids-core/components/icons/norrbotten/icon-norrbotten-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconNorrbotten = createComponent({\r\n    tagName: 'ids-icon-norrbotten',\r\n    elementClass: IDSIconNorrbotten$1,\r\n    react: React,\r\n});\n\nexport { IDSIconNorrbotten };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/office-building/register';\nimport { IDSIconOfficeBuilding as IDSIconOfficeBuilding$1 } from '@inera/ids-core/components/icons/office-building/icon-office-building-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconOfficeBuilding = createComponent({\r\n    tagName: 'ids-icon-office-building',\r\n    elementClass: IDSIconOfficeBuilding$1,\r\n    react: React,\r\n});\n\nexport { IDSIconOfficeBuilding };\n", "import{svg as l}from\"lit\";import{IDSIconBase as o}from\"../icon-base-element.js\";class C extends o{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return l`<path fill=\"${this.colors.color}\" d=\"M5.5 7C5.22386 7 5 7.22386 5 7.5V10.5C5 10.7761 5.22386 11 5.5 11H8.5C8.77614 11 9 10.7761 9 10.5V7.5C9 7.22386 8.77614 7 8.5 7H5.5Z\"></path><path fill=\"${this.colors.color}\" d=\"M5.5 14C5.22386 14 5 14.2239 5 14.5V17.5C5 17.7761 5.22386 18 5.5 18H8.5C8.77614 18 9 17.7761 9 17.5V14.5C9 14.2239 8.77614 14 8.5 14H5.5Z\"></path><path fill=\"${this.colors.color}\" d=\"M5 21.5C5 21.2239 5.22386 21 5.5 21H8.5C8.77614 21 9 21.2239 9 21.5V24.5C9 24.7761 8.77614 25 8.5 25H5.5C5.22386 25 5 24.7761 5 24.5V21.5Z\"></path><path fill=\"${this.colors.color}\" d=\"M5.5 28C5.22386 28 5 28.2239 5 28.5V31.5C5 31.7761 5.22386 32 5.5 32H8.5C8.77614 32 9 31.7761 9 31.5V28.5C9 28.2239 8.77614 28 8.5 28H5.5Z\"></path><path fill=\"${this.colors.color}\" d=\"M12 7.5C12 7.22386 12.2239 7 12.5 7H15.5C15.7761 7 16 7.22386 16 7.5V10.5C16 10.7761 15.7761 11 15.5 11H12.5C12.2239 11 12 10.7761 12 10.5V7.5Z\"></path><path fill=\"${this.colors.color}\" d=\"M12.5 14C12.2239 14 12 14.2239 12 14.5V17.5C12 17.7761 12.2239 18 12.5 18H15.5C15.7761 18 16 17.7761 16 17.5V14.5C16 14.2239 15.7761 14 15.5 14H12.5Z\"></path><path fill=\"${this.colors.color}\" d=\"M12 21.5C12 21.2239 12.2239 21 12.5 21H15.5C15.7761 21 16 21.2239 16 21.5V24.5C16 24.7761 15.7761 25 15.5 25H12.5C12.2239 25 12 24.7761 12 24.5V21.5Z\"></path><path fill=\"${this.colors.color}\" d=\"M12.5 28C12.2239 28 12 28.2239 12 28.5V31.5C12 31.7761 12.2239 32 12.5 32H15.5C15.7761 32 16 31.7761 16 31.5V28.5C16 28.2239 15.7761 28 15.5 28H12.5Z\"></path><path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3 0C1.34315 0 0 1.34314 0 3V37C0 38.6569 1.34315 40 3 40H37C38.6569 40 40 38.6569 40 37V16C40 14.3431 38.6569 13 37 13H21V3C21 1.34315 19.6569 0 18 0H3ZM21 15V38H37C37.5523 38 38 37.5523 38 37V16C38 15.4477 37.5523 15 37 15H21ZM19 3C19 2.44772 18.5523 2 18 2H3C2.44771 2 2 2.44772 2 3V37C2 37.5523 2.44772 38 3 38H19V3Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M26 22C25.4477 22 25 22.4477 25 23C25 23.5523 25.4477 24 26 24H33C33.5523 24 34 23.5523 34 23C34 22.4477 33.5523 22 33 22H26ZM26 29C25.4477 29 25 29.4477 25 30C25 30.5523 25.4477 31 26 31H33C33.5523 31 34 30.5523 34 30C34 29.4477 33.5523 29 33 29H26Z\"></path>`}}export{C as IDSIconOfficeBuilding};\n", "import{IDSIconOfficeBuilding as i}from\"./icon-office-building-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-office-building\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/orebro/register';\nimport { IDSIconOrebro as IDSIconOrebro$1 } from '@inera/ids-core/components/icons/orebro/icon-orebro-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconOrebro = createComponent({\r\n    tagName: 'ids-icon-orebro',\r\n    elementClass: IDSIconOrebro$1,\r\n    react: React,\r\n});\n\nexport { IDSIconOrebro };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/organization/register';\nimport { IDSIconOrganization as IDSIconOrganization$1 } from '@inera/ids-core/components/icons/organization/icon-organization-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconOrganization = createComponent({\r\n    tagName: 'ids-icon-organization',\r\n    elementClass: IDSIconOrganization$1,\r\n    react: React,\r\n});\n\nexport { IDSIconOrganization };\n", "import{svg as C}from\"lit\";import{IDSIconBase as l}from\"../icon-base-element.js\";class o extends l{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return C`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M25 5C25 7.76142 22.7614 10 20 10C17.2386 10 15 7.76142 15 5C15 2.23858 17.2386 0 20 0C22.7614 0 25 2.23858 25 5ZM23 5C23 6.65685 21.6569 8 20 8C18.3431 8 17 6.65685 17 5C17 3.34315 18.3431 2 20 2C21.6569 2 23 3.34315 23 5Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M25 35C25 37.7614 22.7614 40 20 40C17.2386 40 15 37.7614 15 35C15 32.2386 17.2386 30 20 30C22.7614 30 25 32.2386 25 35ZM23 35C23 36.6569 21.6569 38 20 38C18.3431 38 17 36.6569 17 35C17 33.3431 18.3431 32 20 32C21.6569 32 23 33.3431 23 35Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M5 40C7.76142 40 10 37.7614 10 35C10 32.2386 7.76142 30 5 30C2.23858 30 0 32.2386 0 35C0 37.7614 2.23858 40 5 40ZM5 38C6.65685 38 8 36.6569 8 35C8 33.3431 6.65685 32 5 32C3.34315 32 2 33.3431 2 35C2 36.6569 3.34315 38 5 38Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M40 35C40 37.7614 37.7614 40 35 40C32.2386 40 30 37.7614 30 35C30 32.2386 32.2386 30 35 30C37.7614 30 40 32.2386 40 35ZM38 35C38 36.6569 36.6569 38 35 38C33.3431 38 32 36.6569 32 35C32 33.3431 33.3431 32 35 32C36.6569 32 38 33.3431 38 35Z\"></path><path fill=\"${this.colors.color2}\" d=\"M21 13C21 12.4477 20.5523 12 20 12C19.4477 12 19 12.4477 19 13V18H5C4.44772 18 4 18.4477 4 19V27C4 27.5523 4.44772 28 5 28C5.55228 28 6 27.5523 6 27V21C6 20.4477 6.44771 20 7 20H19V27C19 27.5523 19.4477 28 20 28C20.5523 28 21 27.5523 21 27V20H33C33.5523 20 34 20.4477 34 21V27C34 27.5523 34.4477 28 35 28C35.5523 28 36 27.5523 36 27V19C36 18.4477 35.5523 18 35 18H21V13Z\"></path>`}}export{o as IDSIconOrganization};\n", "import{IDSIconOrganization as i}from\"./icon-organization-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-organization\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/ostergotland/register';\nimport { IDSIconOstergotland as IDSIconOstergotland$1 } from '@inera/ids-core/components/icons/ostergotland/icon-ostergotland-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconOstergotland = createComponent({\r\n    tagName: 'ids-icon-ostergotland',\r\n    elementClass: IDSIconOstergotland$1,\r\n    react: React,\r\n});\n\nexport { IDSIconOstergotland };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/plus/register';\nimport { IDSIconPlus as IDSIconPlus$1 } from '@inera/ids-core/components/icons/plus/icon-plus-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconPlus = createComponent({\r\n    tagName: 'ids-icon-plus',\r\n    elementClass: IDSIconPlus$1,\r\n    react: React,\r\n});\n\nexport { IDSIconPlus };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/print/register';\nimport { IDSIconPrint as IDSIconPrint$1 } from '@inera/ids-core/components/icons/print/icon-print-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconPrint = createComponent({\r\n    tagName: 'ids-icon-print',\r\n    elementClass: IDSIconPrint$1,\r\n    react: React,\r\n});\n\nexport { IDSIconPrint };\n", "import{svg as o}from\"lit\";import{IDSIconBase as t}from\"../icon-base-element.js\";class l extends t{constructor(){super(),this.vbHeight=34,this.vbWidth=40}renderIcon(){return o`<path fill=\"${this.colors.color}\" d=\"M27.0001 2L13.0001 2C12.4478 2 12.0001 2.44772 12.0001 3V12H10.0001V3C10.0001 1.34315 11.3432 9.83477e-06 13.0001 0H27.0001C28.657 1.0848e-05 30.0001 1.34316 30.0001 3V12H28.0001V3C28.0001 2.44771 27.5524 2 27.0001 2Z\"></path><path fill=\"${this.colors.color}\" d=\"M12.0001 25L12.0001 30.9999C12.0001 31.5523 12.4478 32 13.0001 32H27.0001C27.5524 32 28.0001 31.5523 28.0001 31V25H30.0001V31C30.0001 32.6569 28.6569 34 27.0001 34H13.0001C11.3432 34 10.0001 32.6568 10.0001 30.9999L10.0001 25H12.0001Z\"></path><path fill=\"${this.colors.color}\" d=\"M15.0001 28.5C14.4478 28.5 14.0001 28.9477 14.0001 29.5C14.0001 30.0523 14.4478 30.5 15.0001 30.5H25.0001C25.5524 30.5 26.0001 30.0523 26.0001 29.5C26.0001 28.9477 25.5524 28.5 25.0001 28.5H15.0001Z\"></path><path fill=\"${this.colors.color2}\" d=\"M10.0001 11L2.99997 11C2.4477 11 2 11.4477 2 12V28C2 28.5523 2.44771 29 3 29H10.0001L10.0001 30.9999L3 31C1.34315 31 0 29.6569 0 28V12C0 10.3432 1.34311 9.00002 2.99996 9.00001L10.0001 9.00001V11Z\"></path><path fill=\"${this.colors.color2}\" d=\"M30.0001 11L37.0002 11C37.5525 11 38.0002 11.4477 38.0002 12V28C38.0002 28.5523 37.5524 29 37.0002 29H30.0001V31L37.0002 31C38.657 31 40.0002 29.6569 40.0002 28V12C40.0002 10.3432 38.657 9.00002 37.0002 9.00001L30.0001 9.00002V11Z\"></path><path fill=\"${this.colors.color2}\" d=\"M9.00008 12C8.44779 12 8.00008 12.4477 8.00008 13C8.00008 13.5523 8.44779 14 9.00008 14H31.0001C31.5524 14 32.0001 13.5523 32.0001 13C32.0001 12.4477 31.5524 12 31.0001 12H9.00008Z\"></path><path fill=\"${this.colors.color2}\" d=\"M8.00008 24C8.00008 23.4477 8.44779 23 9.00008 23H31.0001C31.5524 23 32.0001 23.4477 32.0001 24C32.0001 24.5523 31.5524 25 31.0001 25H9.00008C8.44779 25 8.00008 24.5523 8.00008 24Z\"></path>`}}export{l as IDSIconPrint};\n", "import{IDSIconPrint as i}from\"./icon-print-element.js\";import{registerComponent as t}from\"../../../utilities/utils.js\";t(\"ids-icon-print\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/question/register';\nimport { IDSIconQuestion as IDSIconQuestion$1 } from '@inera/ids-core/components/icons/question/icon-question-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconQuestion = createComponent({\r\n    tagName: 'ids-icon-question',\r\n    elementClass: IDSIconQuestion$1,\r\n    react: React,\r\n});\n\nexport { IDSIconQuestion };\n", "import{svg as C}from\"lit\";import{IDSIconBase as o}from\"../icon-base-element.js\";class t extends o{constructor(){super(),this.vbHeight=41,this.vbWidth=40}renderIcon(){return C`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20 38.8867C29.9411 38.8867 38 30.8278 38 20.8867C38 10.9456 29.9411 2.88672 20 2.88672C10.0589 2.88672 2 10.9456 2 20.8867C2 30.8278 10.0589 38.8867 20 38.8867ZM20 40.8867C31.0457 40.8867 40 31.9324 40 20.8867C40 9.84102 31.0457 0.886719 20 0.886719C8.9543 0.886719 0 9.84102 0 20.8867C0 31.9324 8.9543 40.8867 20 40.8867Z\"></path><path fill=\"${this.colors.color}\" d=\"M19.8152 25.8867C20.4507 25.8867 20.9658 25.3716 20.9658 24.7362V23.9739C20.9658 22.2052 21.5762 21.6157 23.4077 20.1418C24.9417 18.9162 26.4444 17.5974 26.4444 15.0841C26.4444 11.5623 23.4546 9.88672 20.324 9.88672C17.5469 9.88672 14.4862 11.1851 14.0522 14.8883C14.0377 15.0118 14.026 15.3642 14.0173 15.7229C14.0048 16.2411 14.4237 16.6648 14.9421 16.6648C15.6528 16.6648 16.226 16.0944 16.2594 15.3844C16.2677 15.2103 16.2771 15.0689 16.2878 15.004C16.5769 13.2481 17.8351 11.8726 20.23 11.8726C22.2337 11.8726 24.0808 12.85 24.0808 15.2082C24.0808 16.8993 23.1729 17.6905 21.6702 18.9006C20.0892 20.1728 18.6647 21.414 18.6647 23.555V24.7362C18.6647 25.3716 19.1798 25.8867 19.8152 25.8867Z\"></path><path fill=\"${this.colors.color}\" d=\"M20.0223 31.8867C21.1271 31.8867 22.0223 30.9724 22.0223 29.8867C22.0223 28.782 21.1271 27.8867 20.0223 27.8867C18.9176 27.8867 18.0223 28.782 18.0223 29.8867C18.0223 30.9724 18.9176 31.8867 20.0223 31.8867Z\"></path>`}}export{t as IDSIconQuestion};\n", "import{IDSIconQuestion as i}from\"./icon-question-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-question\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/reload/register';\nimport { IDSIconReload as IDSIconReload$1 } from '@inera/ids-core/components/icons/reload/icon-reload-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconReload = createComponent({\r\n    tagName: 'ids-icon-reload',\r\n    elementClass: IDSIconReload$1,\r\n    react: React,\r\n});\n\nexport { IDSIconReload };\n", "import{svg as t}from\"lit\";import{IDSIconBase as o}from\"../icon-base-element.js\";class r extends o{constructor(){super(),this.vbHeight=32,this.vbWidth=40}renderIcon(){return t`<path fill=\"${this.colors.color}\" d=\"M31.6132 14.4703L32.9908 15.8479C32.9619 8.73479 27.1867 2.97746 20.0669 2.97746C16.6925 2.97746 13.6203 4.27062 11.3185 6.3884L9.21167 4.28153C12.0535 1.62564 15.8703 0 20.0669 0C28.849 0 35.9683 7.11932 35.9683 15.9015L35.9682 15.9607L37.4586 14.4703C38.04 13.8889 38.9826 13.8889 39.564 14.4703C40.1453 15.0517 40.1453 15.9943 39.564 16.5757L34.5359 21.6038L29.5079 16.5757C28.9265 15.9943 28.9265 15.0517 29.5079 14.4703C30.0892 13.8889 31.0318 13.8889 31.6132 14.4703Z\" fill=\"#396291\"></path><path fill=\"${this.colors.color}\" d=\"M7.16785 16.7114L8.38677 17.9303C8.96815 18.5117 9.91076 18.5117 10.4921 17.9303C11.0735 17.349 11.0735 16.4064 10.4921 15.825L5.46409 10.7969L0.436039 15.825C-0.145346 16.4063 -0.145346 17.349 0.436039 17.9303C1.01742 18.5117 1.96003 18.5117 2.54142 17.9303L4.17036 16.3014C4.3826 24.8987 11.4185 31.8029 20.0669 31.8029C24.1456 31.8029 27.8657 30.2673 30.6805 27.7426L28.5712 25.6334C26.2985 27.621 23.3234 28.8255 20.0669 28.8255C13.2012 28.8255 7.5859 23.4718 7.16785 16.7114Z\" fill=\"#396291\"></path>`}}export{r as IDSIconReload};\n", "import{IDSIconReload as i}from\"./icon-reload-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-reload\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/reply/register';\nimport { IDSIconReply as IDSIconReply$1 } from '@inera/ids-core/components/icons/reply/icon-reply-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconReply = createComponent({\r\n    tagName: 'ids-icon-reply',\r\n    elementClass: IDSIconReply$1,\r\n    react: React,\r\n});\n\nexport { IDSIconReply };\n", "import{svg as C}from\"lit\";import{IDSIconBase as t}from\"../icon-base-element.js\";class r extends t{constructor(){super(),this.vbHeight=32,this.vbWidth=40}renderIcon(){return C`<path fill=\"${this.colors.color}\" xmlns=\"http://www.w3.org/2000/svg\" d=\"M11.5088 23.5703L0 12L11.5088 0.429699C12.0787 -0.143233 13.0027 -0.143233 13.5726 0.429699C14.1425 1.00263 14.1425 1.93154 13.5726 2.50447L5.61953 10.5H20.5C25.2625 10.5 28.9341 11.6949 31.7383 13.5644C34.5332 15.4277 36.3777 17.9012 37.5916 20.3292C38.8027 22.7513 39.4007 25.1552 39.6983 26.9409C39.8477 27.8373 39.923 28.5876 39.961 29.1197C39.9801 29.386 39.9898 29.5984 39.9948 29.7479C39.9973 29.8227 39.9986 29.8818 39.9993 29.9242L39.9999 29.9751L40 29.9908L40 29.9983C40 29.9983 40 30 38.5 30H40C40 30.8284 39.3284 31.5 38.5 31.5C37.6724 31.5 37.0013 30.8297 37 30.0023V30L37 29.9989L36.9996 29.9726C36.9992 29.9468 36.9983 29.9049 36.9964 29.8478C36.9926 29.7337 36.9848 29.5593 36.9687 29.3334C36.9363 28.8811 36.871 28.2252 36.7392 27.4341C36.4743 25.8448 35.9473 23.7487 34.9084 21.6708C33.8723 19.5988 32.3418 17.5723 30.0742 16.0606C27.8159 14.5551 24.7375 13.5 20.5 13.5H5.61953L13.5726 21.4955C14.1425 22.0685 14.1425 22.9974 13.5726 23.5703C13.0027 24.1432 12.0787 24.1432 11.5088 23.5703Z\"></path>`}}export{r as IDSIconReply};\n", "import{IDSIconReply as i}from\"./icon-reply-element.js\";import{registerComponent as e}from\"../../../utilities/utils.js\";e(\"ids-icon-reply\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/search-inera/register';\nimport { IDSIconSearchInera as IDSIconSearchInera$1 } from '@inera/ids-core/components/icons/search-inera/icon-search-inera-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconSearchInera = createComponent({\r\n    tagName: 'ids-icon-search-inera',\r\n    elementClass: IDSIconSearchInera$1,\r\n    react: React,\r\n});\n\nexport { IDSIconSearchInera };\n", "import{svg as r}from\"lit\";import{IDSIconBase as o}from\"../icon-base-element.js\";class e extends o{constructor(){super(),this.vbHeight=32,this.vbWidth=31}renderIcon(){return r`<path stroke=\"${this.colors.color2}\" stroke-width=\"2\" d=\"M22.6621 21.6929L29.002 28.0328C29.4152 28.446 29.39 29.1412 28.9456 29.5855C28.5012 30.0299 27.806 30.0551 27.3928 29.6419L21.053 23.302\" stroke-linecap=\"square\"></path><circle stroke=\"${this.colors.color2}\" cx=\"13.25\" cy=\"13.8901\" r=\"12\" stroke-width=\"2\" stroke-linecap=\"round\"></circle><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M13.25 22.8901C18.2206 22.8901 22.25 18.8607 22.25 13.8901C22.25 8.91957 18.2206 4.89014 13.25 4.89014C8.27943 4.89014 4.25 8.91957 4.25 13.8901C4.25 18.8607 8.27943 22.8901 13.25 22.8901ZM13.25 17.2288C15.0939 17.2288 16.5887 15.7341 16.5887 13.8901C16.5887 12.0462 15.0939 10.5514 13.25 10.5514C11.4061 10.5514 9.91129 12.0462 9.91129 13.8901C9.91129 15.7341 11.4061 17.2288 13.25 17.2288Z\"></path>`}}export{e as IDSIconSearchInera};\n", "import{IDSIconSearchInera as i}from\"./icon-search-inera-element.js\";import{registerComponent as e}from\"../../../utilities/utils.js\";e(\"ids-icon-search-inera\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/search/register';\nimport { IDSIconSearch as IDSIconSearch$1 } from '@inera/ids-core/components/icons/search/icon-search-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconSearch = createComponent({\r\n    tagName: 'ids-icon-search',\r\n    elementClass: IDSIconSearch$1,\r\n    react: React,\r\n});\n\nexport { IDSIconSearch };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/shield-locked-primary/register';\nimport { IDSIconShieldLockedPrimary as IDSIconShieldLockedPrimary$1 } from '@inera/ids-core/components/icons/shield-locked-primary/icon-shield-locked-primary-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconShieldLockedPrimary = createComponent({\r\n    tagName: 'ids-icon-shield-locked-primary',\r\n    elementClass: IDSIconShieldLockedPrimary$1,\r\n    react: React,\r\n});\n\nexport { IDSIconShieldLockedPrimary };\n", "import{svg as t}from\"lit\";import{IDSIconBase as C}from\"../icon-base-element.js\";class e extends C{constructor(){super(),this.vbHeight=40,this.vbWidth=32}renderIcon(){return t`<path fill=\"${this.colors.color}\" d=\"M0 5.21739C10.6665 5.21739 16 0 16 0C16 0 22.2222 5.21739 32 5.21739C32 5.21739 32 10.4348 32 22.6087C32 34.7826 16 40 16 40C16 40 0 34.7826 0 22.6087C0 10.4348 0 5.21739 0 5.21739Z\"></path><path d=\"M16 20.5001C15.4477 20.5001 15 20.9478 15 21.5001V24.5001C15 25.0524 15.4477 25.5001 16 25.5001C16.5523 25.5001 17 25.0524 17 24.5001V21.5001C17 20.9478 16.5523 20.5001 16 20.5001Z\" fill=\"white\"></path><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11 14.1539C11 11.3434 13.2033 9.00007 16 9.00007C18.7967 9.00007 21 11.3434 21 14.1539V15.5001H22.2326C23.761 15.5001 25 16.7391 25 18.2675V27.2326C25 28.761 23.761 30.0001 22.2326 30.0001H9.76744C8.23903 30.0001 7 28.761 7 27.2326V18.2675C7 16.7391 8.23903 15.5001 9.76744 15.5001H11V14.1539ZM19 14.1539V15.5001H13V14.1539C13 12.3762 14.3784 11.0001 16 11.0001C17.6216 11.0001 19 12.3762 19 14.1539ZM9.76744 17.5001C9.3436 17.5001 9 17.8437 9 18.2675V27.2326C9 27.6565 9.3436 28.0001 9.76744 28.0001H22.2326C22.6564 28.0001 23 27.6565 23 27.2326V18.2675C23 17.8437 22.6564 17.5001 22.2326 17.5001H9.76744Z\" fill=\"white\"></path>`}}export{e as IDSIconShieldLockedPrimary};\n", "import{IDSIconShieldLockedPrimary as i}from\"./icon-shield-locked-primary-element.js\";import{registerComponent as e}from\"../../../utilities/utils.js\";e(\"ids-icon-shield-locked-primary\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/shield-locked/register';\nimport { IDSIconShieldLocked as IDSIconShieldLocked$1 } from '@inera/ids-core/components/icons/shield-locked/icon-shield-locked-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconShieldLocked = createComponent({\r\n    tagName: 'ids-icon-shield-locked',\r\n    elementClass: IDSIconShieldLocked$1,\r\n    react: React,\r\n});\n\nexport { IDSIconShieldLocked };\n", "import{svg as C}from\"lit\";import{IDSIconBase as l}from\"../icon-base-element.js\";class o extends l{constructor(){super(),this.vbHeight=40,this.vbWidth=32}renderIcon(){return C`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.0661 2.51281C15.3188 3.05184 14.2565 3.73137 12.8787 4.4053C10.322 5.65584 6.69175 6.8804 2 7.15867V22.6087C2 27.7275 5.35588 31.5526 9.15406 34.2361C11.0223 35.556 12.9038 36.529 14.3251 37.1727C15.0193 37.4871 15.5968 37.7199 16 37.8737C16.4032 37.7199 16.9807 37.4871 17.6749 37.1727C19.0962 36.529 20.9777 35.556 22.8459 34.2361C26.6441 31.5526 30 27.7275 30 22.6087V7.14931C25.6572 6.85291 22.0734 5.63528 19.4833 4.41905C18.0225 3.73311 16.8703 3.04424 16.0661 2.51281ZM32 5.21739C22.2222 5.21739 16 0 16 0C16 0 10.6665 5.21739 0 5.21739V22.6087C0 34.7826 16 40 16 40C16 40 32 34.7826 32 22.6087V5.21739Z\"></path><path fill=\"${this.colors.color2}\" d=\"M16 20.5001C15.4477 20.5001 15 20.9478 15 21.5001V24.5001C15 25.0524 15.4477 25.5001 16 25.5001C16.5523 25.5001 17 25.0524 17 24.5001V21.5001C17 20.9478 16.5523 20.5001 16 20.5001Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M11 14.1539C11 11.3434 13.2033 9.00007 16 9.00007C18.7967 9.00007 21 11.3434 21 14.1539V15.5001H22.2326C23.761 15.5001 25 16.7391 25 18.2675V27.2326C25 28.761 23.761 30.0001 22.2326 30.0001H9.76744C8.23903 30.0001 7 28.761 7 27.2326V18.2675C7 16.7391 8.23903 15.5001 9.76744 15.5001H11V14.1539ZM19 14.1539V15.5001H13V14.1539C13 12.3762 14.3784 11.0001 16 11.0001C17.6216 11.0001 19 12.3762 19 14.1539ZM9.76744 17.5001C9.3436 17.5001 9 17.8437 9 18.2675V27.2326C9 27.6565 9.3436 28.0001 9.76744 28.0001H22.2326C22.6564 28.0001 23 27.6565 23 27.2326V18.2675C23 17.8437 22.6564 17.5001 22.2326 17.5001H9.76744Z\"></path>`}}export{o as IDSIconShieldLocked};\n", "import{IDSIconShieldLocked as i}from\"./icon-shield-locked-element.js\";import{registerComponent as e}from\"../../../utilities/utils.js\";e(\"ids-icon-shield-locked\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/skane/register';\nimport { IDSIconSkane as IDSIconSkane$1 } from '@inera/ids-core/components/icons/skane/icon-skane-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconSkane = createComponent({\r\n    tagName: 'ids-icon-skane',\r\n    elementClass: IDSIconSkane$1,\r\n    react: React,\r\n});\n\nexport { IDSIconSkane };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/sormland/register';\nimport { IDSIconSormland as IDSIconSormland$1 } from '@inera/ids-core/components/icons/sormland/icon-sormland-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconSormland = createComponent({\r\n    tagName: 'ids-icon-sormland',\r\n    elementClass: IDSIconSormland$1,\r\n    react: React,\r\n});\n\nexport { IDSIconSormland };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/star-filled/register';\nimport { IDSIconStarFilled as IDSIconStarFilled$1 } from '@inera/ids-core/components/icons/star-filled/icon-star-filled-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconStarFilled = createComponent({\r\n    tagName: 'ids-icon-star-filled',\r\n    elementClass: IDSIconStarFilled$1,\r\n    react: React,\r\n});\n\nexport { IDSIconStarFilled };\n", "import{svg as t}from\"lit\";import{IDSIconBase as r}from\"../icon-base-element.js\";class o extends r{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return t`<path fill=\"${this.colors.color}\" d=\"M22.2981 1.60172C21.4479 -0.533908 18.5521 -0.533907 17.7019 1.60172L14.0004 10.8993C13.642 11.7996 12.8316 12.4148 11.9012 12.4927L2.29359 13.2974C0.0867348 13.4822 -0.808112 16.3595 0.873276 17.8642L8.19327 24.4152C8.9021 25.0495 9.21166 26.0449 8.9951 26.9933L6.75872 36.7882C6.24503 39.0381 8.58777 40.8164 10.4771 39.6107L18.7026 34.3618C19.4991 33.8536 20.5009 33.8536 21.2974 34.3618L29.5229 39.6107C31.4122 40.8164 33.755 39.0381 33.2413 36.7882L31.0049 26.9933C30.7883 26.0449 31.0979 25.0495 31.8067 24.4152L39.1267 17.8642C40.8081 16.3595 39.9133 13.4822 37.7064 13.2974L28.0988 12.4927C27.1684 12.4148 26.358 11.7996 25.9996 10.8993L22.2981 1.60172Z\"></path>`}}export{o as IDSIconStarFilled};\n", "import{IDSIconStarFilled as i}from\"./icon-star-filled-element.js\";import{registerComponent as t}from\"../../../utilities/utils.js\";t(\"ids-icon-star-filled\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/star/register';\nimport { IDSIconStar as IDSIconStar$1 } from '@inera/ids-core/components/icons/star/icon-star-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconStar = createComponent({\r\n    tagName: 'ids-icon-star',\r\n    elementClass: IDSIconStar$1,\r\n    react: React,\r\n});\n\nexport { IDSIconStar };\n", "import{svg as C}from\"lit\";import{IDSIconBase as L}from\"../icon-base-element.js\";class e extends L{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return C`<path fill=\"${this.colors.color}\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M24.1414 11.639L20.4399 2.34148C20.3764 2.18173 20.2971 2.10791 20.2389 2.06946C20.1726 2.02568 20.0899 2 20 2C19.9101 2 19.8274 2.02568 19.7611 2.06946C19.7029 2.10791 19.6236 2.18173 19.56 2.34148L15.8586 11.639C15.2331 13.2101 13.79 14.3415 12.0681 14.4857L2.46051 15.2904C2.34471 15.3001 2.27251 15.338 2.21489 15.388C2.14743 15.4465 2.07718 15.5446 2.03511 15.6798C1.94887 15.9571 2.02001 16.2065 2.20703 16.3739L9.52703 22.9248C10.7932 24.0579 11.3188 25.801 10.9449 27.4385L8.70854 37.2334C8.63743 37.5449 8.75432 37.7719 8.92599 37.9022C9.01401 37.9691 9.0989 37.995 9.16195 37.9993C9.21238 38.0027 9.28875 37.9966 9.40128 37.9247L17.6268 32.6759C19.0794 31.7489 20.9206 31.7489 22.3732 32.6759L30.5987 37.9247C30.7113 37.9966 30.7876 38.0027 30.8381 37.9993C30.9011 37.995 30.986 37.9691 31.074 37.9022C31.2457 37.7719 31.3626 37.5449 31.2915 37.2334L29.0551 27.4385C28.6812 25.801 29.2069 24.0579 30.473 22.9248L37.793 16.3739C37.98 16.2065 38.0511 15.9571 37.9649 15.6798C37.9228 15.5446 37.8526 15.4465 37.7851 15.388C37.7275 15.338 37.6553 15.3001 37.5395 15.2904L27.9319 14.4857C26.21 14.3415 24.7669 13.2101 24.1414 11.639ZM22.2981 1.60172C21.4479 -0.533908 18.5521 -0.533907 17.7019 1.60172L14.0004 10.8993C13.642 11.7996 12.8316 12.4148 11.9012 12.4927L2.29359 13.2974C0.0867348 13.4822 -0.808112 16.3595 0.873276 17.8642L8.19327 24.4152C8.9021 25.0495 9.21166 26.0449 8.9951 26.9933L6.75872 36.7882C6.24503 39.0381 8.58777 40.8164 10.4771 39.6107L18.7026 34.3618C19.4991 33.8536 20.5009 33.8536 21.2974 34.3618L29.5229 39.6107C31.4122 40.8164 33.755 39.0381 33.2413 36.7882L31.0049 26.9933C30.7883 26.0449 31.0979 25.0495 31.8067 24.4152L39.1267 17.8642C40.8081 16.3595 39.9133 13.4822 37.7064 13.2974L28.0988 12.4927C27.1684 12.4148 26.358 11.7996 25.9996 10.8993L22.2981 1.60172Z\"></path>`}}export{e as IDSIconStar};\n", "import{IDSIconStar as i}from\"./icon-star-element.js\";import{registerComponent as t}from\"../../../utilities/utils.js\";t(\"ids-icon-star\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/stockholm/register';\nimport { IDSIconStockholm as IDSIconStockholm$1 } from '@inera/ids-core/components/icons/stockholm/icon-stockholm-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconStockholm = createComponent({\r\n    tagName: 'ids-icon-stockholm',\r\n    elementClass: IDSIconStockholm$1,\r\n    react: React,\r\n});\n\nexport { IDSIconStockholm };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/success/register';\nimport { IDSIconSuccess as IDSIconSuccess$1 } from '@inera/ids-core/components/icons/success/icon-success-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconSuccess = createComponent({\r\n    tagName: 'ids-icon-success',\r\n    elementClass: IDSIconSuccess$1,\r\n    react: React,\r\n});\n\nexport { IDSIconSuccess };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/swap/register';\nimport { IDSIconSwap as IDSIconSwap$1 } from '@inera/ids-core/components/icons/swap/icon-swap-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconSwap = createComponent({\r\n    tagName: 'ids-icon-swap',\r\n    elementClass: IDSIconSwap$1,\r\n    react: React,\r\n});\n\nexport { IDSIconSwap };\n", "import{svg as t}from\"lit\";import{IDSIconBase as o}from\"../icon-base-element.js\";class r extends o{constructor(){super(),this.vbHeight=31,this.vbWidth=40}renderIcon(){return t`<path fill=\"${this.colors.color}\" d=\"M32.057 16.2548L40 8.31184L32.057 0.368861C31.5652 -0.122954 30.7678 -0.122954 30.276 0.368861C29.7842 0.860675 29.7842 1.65806 30.276 2.14988L35.0718 6.94572L16.3938 6.94572C15.6983 6.94572 15.1344 7.50956 15.1344 8.20509C15.1344 8.90062 15.6983 9.46446 16.3938 9.46446L35.2853 9.46446L30.276 14.4738C29.7842 14.9656 29.7842 15.763 30.276 16.2548C30.7678 16.7466 31.5652 16.7466 32.057 16.2548Z\"></path><path fill=\"${this.colors.color}\" d=\"M0 22.4168L7.94298 30.3598C8.4348 30.8516 9.23218 30.8516 9.724 30.3598C10.2158 29.868 10.2158 29.0706 9.724 28.5788L4.71465 23.5694L23.6062 23.5694C24.3017 23.5694 24.8656 23.0056 24.8656 22.31C24.8656 21.6145 24.3017 21.0507 23.6062 21.0507L4.92816 21.0507L9.724 16.2548C10.2158 15.763 10.2158 14.9656 9.724 14.4738C9.23218 13.982 8.43479 13.982 7.94298 14.4738L0 22.4168Z\"></path>`}}export{r as IDSIconSwap};\n", "import{IDSIconSwap as i}from\"./icon-swap-element.js\";import{registerComponent as s}from\"../../../utilities/utils.js\";s(\"ids-icon-swap\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/telephone/register';\nimport { IDSIconTelephone as IDSIconTelephone$1 } from '@inera/ids-core/components/icons/telephone/icon-telephone-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconTelephone = createComponent({\r\n    tagName: 'ids-icon-telephone',\r\n    elementClass: IDSIconTelephone$1,\r\n    react: React,\r\n});\n\nexport { IDSIconTelephone };\n", "import{svg as o}from\"lit\";import{IDSIconBase as t}from\"../icon-base-element.js\";class l extends t{constructor(){super(),this.vbHeight=40,this.vbWidth=20}renderIcon(){return o`<path fill=\"${this.colors.color}\" d=\"M2 5.02783H18V7.02783H2V5.02783Z\"></path><path fill=\"${this.colors.color}\" d=\"M2 30.0278H18V32.0278H2V30.0278Z\"></path><path fill=\"${this.colors.color}\" d=\"M10 36.0278C10.5523 36.0278 11 35.5801 11 35.0278C11 34.4755 10.5523 34.0278 10 34.0278C9.44772 34.0278 9 34.4755 9 35.0278C9 35.5801 9.44772 36.0278 10 36.0278Z\"></path><path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0 3C0 1.34314 1.34315 0 3 0H17C18.6569 0 20 1.34315 20 3V37C20 38.6569 18.6569 40 17 40H3C1.34315 40 0 38.6569 0 37V3ZM3 2C2.44771 2 2 2.44771 2 3V37C2 37.5523 2.44772 38 3 38H17C17.5523 38 18 37.5523 18 37V3C18 2.44772 17.5523 2 17 2H3Z\"></path>`}}export{l as IDSIconTelephone};\n", "import{IDSIconTelephone as e}from\"./icon-telephone-element.js\";import{registerComponent as i}from\"../../../utilities/utils.js\";i(\"ids-icon-telephone\",e);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/test-tube-analyze/register';\nimport { IDSIconTestTubeAnalyze as IDSIconTestTubeAnalyze$1 } from '@inera/ids-core/components/icons/test-tube-analyze/icon-test-tube-analyze-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconTestTubeAnalyze = createComponent({\r\n    tagName: 'ids-icon-test-tube-analyze',\r\n    elementClass: IDSIconTestTubeAnalyze$1,\r\n    react: React,\r\n});\n\nexport { IDSIconTestTubeAnalyze };\n", "import{svg as C}from\"lit\";import{IDSIconBase as L}from\"../icon-base-element.js\";class l extends L{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return C`<path fill=\"${this.colors.color2}\" d=\"M37 8.25002C38.4625 8.25002 39.6584 9.39173 39.745 10.8325L39.75 11V37C39.75 38.4626 38.6083 39.6584 37.1675 39.745L37 39.75H3C1.53747 39.75 0.341596 38.6083 0.255019 37.1675L0.25 37V11C0.25 9.53749 1.3917 8.34162 2.83242 8.25504L2.99993 8.25002L14.0019 8.24902C14.4161 8.24899 14.752 8.58474 14.752 8.99896C14.752 9.37865 14.4699 9.69247 14.1038 9.74217L14.0021 9.74902L3 9.75002C2.35279 9.75002 1.82047 10.2419 1.75645 10.8722L1.75 11V37C1.75 37.6472 2.24187 38.1796 2.87219 38.2436L3 38.25H37C37.6472 38.25 38.1795 37.7581 38.2435 37.1278L38.25 37V11C38.25 10.3528 37.7581 9.82049 37.1276 9.75648L36.9998 9.75002L33.5108 9.74902C33.0966 9.7489 32.7609 9.41302 32.761 8.99881C32.7611 8.61911 33.0434 8.3054 33.4094 8.25584L33.5112 8.24902L37 8.25002Z\"></path><path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M28.5154 0.25C29.4336 0.25 30.1866 0.95711 30.2596 1.85647L30.2654 2V6.71282C30.2654 7.63099 29.5583 8.38401 28.6589 8.45702L28.62 8.458L28.6203 30.4515C28.6203 33.0644 26.5593 35.1961 23.9743 35.3094L23.7577 35.3141C21.1447 35.3141 19.0131 33.2531 18.8998 30.6681L18.8951 30.4515L18.8953 8.45974C18.0285 8.4086 17.3314 7.72659 17.2566 6.86638L17.25 6.71282V2C17.25 1.08183 17.9571 0.328808 18.8565 0.255801L19 0.25H28.5154ZM27.12 8.462H20.395V30.4515C20.395 32.1848 21.7065 33.6118 23.3913 33.7944L23.5732 33.8091L23.7577 33.8141C25.5529 33.8141 27.0196 32.4073 27.1154 30.636L27.1203 30.4515L27.12 8.462ZM19 1.75H28.5154L28.5727 1.7566C28.6832 1.78251 28.7654 1.88165 28.7654 2V6.71282L28.7588 6.77014C28.7329 6.88059 28.6337 6.96282 28.5154 6.96282H19L18.9427 6.95622C18.8322 6.93031 18.75 6.83117 18.75 6.71282V2L18.7566 1.94268C18.7825 1.83223 18.8817 1.75 19 1.75Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M25.4027 10.2301V29.9318C25.4027 30.8404 24.6662 31.5769 23.7577 31.5769C22.8491 31.5769 22.1126 30.8404 22.1126 29.9318V10.2301H25.4027ZM20.9376 2.9173C21.2358 2.9173 21.4832 3.13489 21.5297 3.41997L21.5376 3.5173V5.53114C21.5376 5.86251 21.269 6.13114 20.9376 6.13114C20.6394 6.13114 20.3919 5.91355 20.3454 5.62847L20.3376 5.53114V3.5173C20.3376 3.18593 20.6062 2.9173 20.9376 2.9173ZM23.7589 2.9173C24.0571 2.9173 24.3045 3.13489 24.351 3.41997L24.3589 3.5173V5.53114C24.3589 5.86251 24.0902 6.13114 23.7589 6.13114C23.4606 6.13114 23.2132 5.91355 23.1667 5.62847L23.1589 5.53114V3.5173C23.1589 3.18593 23.4275 2.9173 23.7589 2.9173ZM26.5801 2.9173C26.8784 2.9173 27.1258 3.13489 27.1723 3.41997L27.1801 3.5173V5.53114C27.1801 5.86251 26.9115 6.13114 26.5801 6.13114C26.2819 6.13114 26.0345 5.91355 25.988 5.62847L25.9801 5.53114V3.5173C25.9801 3.18593 26.2488 2.9173 26.5801 2.9173Z\"></path>`}}export{l as IDSIconTestTubeAnalyze};\n", "import{IDSIconTestTubeAnalyze as t}from\"./icon-test-tube-analyze-element.js\";import{registerComponent as e}from\"../../../utilities/utils.js\";e(\"ids-icon-test-tube-analyze\",t);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/test-tube-empty/register';\nimport { IDSIconTestTubeEmpty as IDSIconTestTubeEmpty$1 } from '@inera/ids-core/components/icons/test-tube-empty/icon-test-tube-empty-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconTestTubeEmpty = createComponent({\r\n    tagName: 'ids-icon-test-tube-empty',\r\n    elementClass: IDSIconTestTubeEmpty$1,\r\n    react: React,\r\n});\n\nexport { IDSIconTestTubeEmpty };\n", "import{svg as o}from\"lit\";import{IDSIconBase as t}from\"../icon-base-element.js\";class l extends t{constructor(){super(),this.vbHeight=40,this.vbWidth=15}renderIcon(){return o`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2 0C0.89543 0 0 0.895431 0 2V7.50256C0 8.53355 0.780096 9.38233 1.78223 9.49084V34.0576C1.78223 37.0705 4.22467 39.5129 7.23758 39.5129C10.2505 39.5129 12.6929 37.0705 12.6929 34.0576V9.49083C13.695 9.38223 14.475 8.53349 14.475 7.50256V2C14.475 0.895432 13.5796 0 12.475 0H2ZM2 2H12.475L12.475 7.50256H2V2ZM3.78223 34.0576V9.50269H10.6929V34.0576C10.6929 35.9659 9.14592 37.5129 7.23758 37.5129C5.32924 37.5129 3.78223 35.9659 3.78223 34.0576Z\"></path><path fill=\"${this.colors.color}\" d=\"M4.18242 3.11353C4.56902 3.11353 4.88242 3.42693 4.88242 3.81353V6.06429C4.88242 6.45089 4.56902 6.76429 4.18242 6.76429C3.79582 6.76429 3.48242 6.45089 3.48242 6.06429V3.81353C3.48242 3.42693 3.79582 3.11353 4.18242 3.11353Z\"></path><path fill=\"${this.colors.color}\" d=\"M7.23882 3.11353C7.62542 3.11353 7.93882 3.42693 7.93882 3.81353V6.06429C7.93882 6.45089 7.62542 6.76429 7.23882 6.76429C6.85222 6.76429 6.53882 6.45089 6.53882 6.06429V3.81353C6.53882 3.42693 6.85222 3.11353 7.23882 3.11353Z\"></path><path fill=\"${this.colors.color}\" d=\"M10.9952 3.81353C10.9952 3.42693 10.6818 3.11353 10.2952 3.11353C9.90862 3.11353 9.59521 3.42693 9.59521 3.81353V6.06429C9.59521 6.45089 9.90862 6.76429 10.2952 6.76429C10.6818 6.76429 10.9952 6.45089 10.9952 6.06429V3.81353Z\"></path>`}}export{l as IDSIconTestTubeEmpty};\n", "import{IDSIconTestTubeEmpty as t}from\"./icon-test-tube-empty-element.js\";import{registerComponent as e}from\"../../../utilities/utils.js\";e(\"ids-icon-test-tube-empty\",t);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/test-tube/register';\nimport { IDSIconTestTube as IDSIconTestTube$1 } from '@inera/ids-core/components/icons/test-tube/icon-test-tube-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconTestTube = createComponent({\r\n    tagName: 'ids-icon-test-tube',\r\n    elementClass: IDSIconTestTube$1,\r\n    react: React,\r\n});\n\nexport { IDSIconTestTube };\n", "import{svg as e}from\"lit\";import{IDSIconBase as l}from\"../icon-base-element.js\";class o extends l{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return e`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M25.475 0.25C26.3932 0.25 27.1462 0.95711 27.2192 1.85647L27.225 2V7.50256C27.225 8.42074 26.5179 9.17376 25.6185 9.24676L25.442 9.252L25.4429 34.0575C25.4429 36.8586 23.2303 39.1429 20.4575 39.2583L20.2375 39.2628C17.4364 39.2628 15.152 37.0503 15.0367 34.2775L15.0321 34.0575L15.032 9.252L15 9.25256C14.0818 9.25256 13.3288 8.54545 13.2558 7.64609L13.25 7.50256V2C13.25 1.08183 13.9571 0.328808 14.8565 0.255801L15 0.25H25.475ZM23.942 9.252H16.532L16.5321 34.0575C16.5321 35.9718 17.9839 37.5471 19.8466 37.7424L20.0407 37.7577L20.2375 37.7628C22.2179 37.7628 23.8354 36.2092 23.9377 34.2542L23.9429 34.0575L23.942 9.252ZM15 1.75H25.475L25.5323 1.7566C25.6428 1.78251 25.725 1.88165 25.725 2V7.50256L25.7184 7.55989C25.6925 7.67033 25.5933 7.75256 25.475 7.75256H15L14.9427 7.74596C14.8322 7.72005 14.75 7.62091 14.75 7.50256V2L14.7566 1.94268C14.7825 1.83223 14.8817 1.75 15 1.75Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M22.0197 11.316V33.392C22.0197 34.3763 21.2218 35.1742 20.2375 35.1742C19.2533 35.1742 18.4554 34.3763 18.4554 33.392V11.316H22.0197Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.1824 3.21346C17.4806 3.21346 17.728 3.43104 17.7745 3.71613L17.7824 3.81346V6.06422C17.7824 6.3956 17.5138 6.66422 17.1824 6.66422C16.8842 6.66422 16.6368 6.44664 16.5903 6.16155L16.5824 6.06422V3.81346C16.5824 3.48208 16.851 3.21346 17.1824 3.21346ZM20.2388 3.21346C20.537 3.21346 20.7844 3.43104 20.8309 3.71613L20.8388 3.81346V6.06422C20.8388 6.3956 20.5701 6.66422 20.2388 6.66422C19.9405 6.66422 19.6931 6.44664 19.6466 6.16155L19.6388 6.06422V3.81346C19.6388 3.48208 19.9074 3.21346 20.2388 3.21346ZM23.8873 3.71613C23.8408 3.43104 23.5934 3.21346 23.2951 3.21346C22.9638 3.21346 22.6951 3.48208 22.6951 3.81346V6.06422L22.703 6.16155C22.7495 6.44664 22.9969 6.66422 23.2951 6.66422C23.6265 6.66422 23.8951 6.3956 23.8951 6.06422V3.81346L23.8873 3.71613Z\"></path>`}}export{o as IDSIconTestTube};\n", "import{IDSIconTestTube as t}from\"./icon-test-tube-element.js\";import{registerComponent as i}from\"../../../utilities/utils.js\";i(\"ids-icon-test-tube\",t);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/toggle-card/register';\nimport { IDSIconToggleCard as IDSIconToggleCard$1 } from '@inera/ids-core/components/icons/toggle-card/icon-toggle-card-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconToggleCard = createComponent({\r\n    tagName: 'ids-icon-toggle-card',\r\n    elementClass: IDSIconToggleCard$1,\r\n    react: React,\r\n});\n\nexport { IDSIconToggleCard };\n", "import{svg as e}from\"lit\";import{IDSIconBase as r}from\"../icon-base-element.js\";class t extends r{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return e`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M16.7619 20.9524C18.0243 20.9524 19.0476 21.9757 19.0476 23.2381V37.7143C19.0476 38.9767 18.0243 40 16.7619 40H2.28571C1.02335 40 0 38.9767 0 37.7143V23.2381C0 21.9757 1.02335 20.9524 2.28571 20.9524H16.7619ZM37.7143 20.9524C38.9767 20.9524 40 21.9757 40 23.2381V37.7143C40 38.9767 38.9767 40 37.7143 40H23.2381C21.9757 40 20.9524 38.9767 20.9524 37.7143V23.2381C20.9524 21.9757 21.9757 20.9524 23.2381 20.9524H37.7143ZM16.7619 0C18.0243 0 19.0476 1.02335 19.0476 2.28571V16.7619C19.0476 18.0243 18.0243 19.0476 16.7619 19.0476H2.28571C1.02335 19.0476 0 18.0243 0 16.7619V2.28571C0 1.02335 1.02335 0 2.28571 0H16.7619ZM37.7143 0C38.9767 0 40 1.02335 40 2.28571V16.7619C40 18.0243 38.9767 19.0476 37.7143 19.0476H23.2381C21.9757 19.0476 20.9524 18.0243 20.9524 16.7619V2.28571C20.9524 1.02335 21.9757 0 23.2381 0H37.7143Z\"></path>`}}export{t as IDSIconToggleCard};\n", "import{IDSIconToggleCard as i}from\"./icon-toggle-card-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-toggle-card\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/toggle-list/register';\nimport { IDSIconToggleList as IDSIconToggleList$1 } from '@inera/ids-core/components/icons/toggle-list/icon-toggle-list-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconToggleList = createComponent({\r\n    tagName: 'ids-icon-toggle-list',\r\n    elementClass: IDSIconToggleList$1,\r\n    react: React,\r\n});\n\nexport { IDSIconToggleList };\n", "import{svg as e}from\"lit\";import{IDSIconBase as l}from\"../icon-base-element.js\";class o extends l{constructor(){super(),this.vbHeight=35,this.vbWidth=40}renderIcon(){return e`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.49994 27.75C5.43294 27.75 6.99994 29.1995 6.99994 30.9875C6.99994 32.7755 5.43294 34.225 3.49994 34.225C1.56694 34.225 -6.10352e-05 32.7755 -6.10352e-05 30.9875C-6.10352e-05 29.1995 1.56694 27.75 3.49994 27.75Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M36.0961 27.75C38.2521 27.75 39.9999 29.1995 39.9999 30.9875C39.9999 32.7755 38.2521 34.225 36.0961 34.225H14.9038C12.7478 34.225 10.9999 32.7755 10.9999 30.9875C10.9999 29.1995 12.7478 27.75 14.9038 27.75H36.0961Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.49994 13.875C5.43294 13.875 6.99994 15.3245 6.99994 17.1125C6.99994 18.9005 5.43294 20.35 3.49994 20.35C1.56694 20.35 -6.10352e-05 18.9005 -6.10352e-05 17.1125C-6.10352e-05 15.3245 1.56694 13.875 3.49994 13.875Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M36.0961 13.875C38.2521 13.875 39.9999 15.3245 39.9999 17.1125C39.9999 18.9005 38.2521 20.35 36.0961 20.35H14.9038C12.7478 20.35 10.9999 18.9005 10.9999 17.1125C10.9999 15.3245 12.7478 13.875 14.9038 13.875H36.0961Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.49994 0C5.43294 0 6.99994 1.44948 6.99994 3.2375C6.99994 5.02552 5.43294 6.475 3.49994 6.475C1.56694 6.475 -6.10352e-05 5.02552 -6.10352e-05 3.2375C-6.10352e-05 1.44948 1.56694 0 3.49994 0Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M36.0961 0C38.2521 0 39.9999 1.44948 39.9999 3.2375C39.9999 5.02552 38.2521 6.475 36.0961 6.475H14.9038C12.7478 6.475 10.9999 5.02552 10.9999 3.2375C10.9999 1.44948 12.7478 0 14.9038 0H36.0961Z\"></path>`}}export{o as IDSIconToggleList};\n", "import{IDSIconToggleList as i}from\"./icon-toggle-list-element.js\";import{registerComponent as t}from\"../../../utilities/utils.js\";t(\"ids-icon-toggle-list\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/trash/register';\nimport { IDSIconTrash as IDSIconTrash$1 } from '@inera/ids-core/components/icons/trash/icon-trash-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconTrash = createComponent({\r\n    tagName: 'ids-icon-trash',\r\n    elementClass: IDSIconTrash$1,\r\n    react: React,\r\n});\n\nexport { IDSIconTrash };\n", "import{svg as o}from\"lit\";import{IDSIconBase as l}from\"../icon-base-element.js\";class t extends l{constructor(){super(),this.vbHeight=41,this.vbWidth=40}renderIcon(){return o`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M25.9794 5.58398H38.9999C39.5522 5.58398 39.9999 6.0317 39.9999 6.58398C39.9999 7.13627 39.5522 7.58398 38.9999 7.58398H34.9551L31.9994 37.3012C31.9658 38.9911 30.3907 40.084 28.8181 40.084H11.1817C9.60913 40.084 8.03402 38.9911 8.00046 37.3012L5.04471 7.58398H0.999939C0.447654 7.58398 -6.10352e-05 7.13627 -6.10352e-05 6.58398C-6.10352e-05 6.0317 0.447654 5.58398 0.999939 5.58398H14.0205C14.2746 2.50422 16.8546 0.0839844 19.9999 0.0839844C23.1453 0.0839844 25.7253 2.50422 25.9794 5.58398ZM16.0309 5.58398H23.969C23.7229 3.61083 22.0397 2.08398 19.9999 2.08398C17.9601 2.08398 16.2769 3.61083 16.0309 5.58398ZM7.05458 7.58398H32.9452L29.9999 37.1965V37.2461C29.9999 37.5549 29.6384 38.084 28.8181 38.084H11.1817C10.3614 38.084 9.99991 37.5549 9.99991 37.2461V37.1965L7.05458 7.58398Z\"></path><path fill=\"${this.colors.color}\" d=\"M14.5385 13.5126C14.5385 12.9603 14.0908 12.5126 13.5385 12.5126C12.9862 12.5126 12.5385 12.9603 12.5385 13.5126V30.6554C12.5385 31.2077 12.9862 31.6554 13.5385 31.6554C14.0908 31.6554 14.5385 31.2077 14.5385 30.6554V13.5126Z\"></path><path fill=\"${this.colors.color}\" d=\"M23.1537 13.5126C23.1537 12.9603 22.706 12.5126 22.1537 12.5126C21.6015 12.5126 21.1537 12.9603 21.1537 13.5126V30.6554C21.1537 31.2077 21.6015 31.6554 22.1537 31.6554C22.706 31.6554 23.1537 31.2077 23.1537 30.6554V13.5126Z\"></path><path fill=\"${this.colors.color}\" d=\"M26.4614 12.5126C27.0136 12.5126 27.4614 12.9603 27.4614 13.5126V30.6554C27.4614 31.2077 27.0136 31.6554 26.4614 31.6554C25.9091 31.6554 25.4614 31.2077 25.4614 30.6554V13.5126C25.4614 12.9603 25.9091 12.5126 26.4614 12.5126Z\"></path><path fill=\"${this.colors.color}\" d=\"M18.8461 13.5126C18.8461 12.9603 18.3984 12.5126 17.8461 12.5126C17.2938 12.5126 16.8461 12.9603 16.8461 13.5126V30.6554C16.8461 31.2077 17.2938 31.6554 17.8461 31.6554C18.3984 31.6554 18.8461 31.2077 18.8461 30.6554V13.5126Z\"></path>`}}export{t as IDSIconTrash};\n", "import{IDSIconTrash as i}from\"./icon-trash-element.js\";import{registerComponent as t}from\"../../../utilities/utils.js\";t(\"ids-icon-trash\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/twitter/register';\nimport { IDSIconTwitter as IDSIconTwitter$1 } from '@inera/ids-core/components/icons/twitter/icon-twitter-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconTwitter = createComponent({\r\n    tagName: 'ids-icon-twitter',\r\n    elementClass: IDSIconTwitter$1,\r\n    react: React,\r\n});\n\nexport { IDSIconTwitter };\n", "import{svg as e}from\"lit\";import{IDSIconBase as t}from\"../icon-base-element.js\";class r extends t{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return e`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20.0007 0C8.95339 0 0 8.95339 0 19.9993C0 31.0453 8.95339 40 20.0007 40C31.0466 40 40 31.0453 40 19.9993C40 8.95339 31.0466 0 20.0007 0Z\"><path d=\"M21.9027 18.6547L29.3482 10H27.5838L21.119 17.5148L15.9555 10H10L17.8082 21.3637L10 30.4395H11.7644L18.5915 22.5036L24.0445 30.4395H30L21.9027 18.6547ZM12.4002 11.3282H15.1103L27.5847 29.1717H24.8746L12.4002 11.3282Z\" fill=\"white\">`}}export{r as IDSIconTwitter};\n", "import{IDSIconTwitter as t}from\"./icon-twitter-element.js\";import{registerComponent as i}from\"../../../utilities/utils.js\";i(\"ids-icon-twitter\",t);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/uppsala/register';\nimport { IDSIconUppsala as IDSIconUppsala$1 } from '@inera/ids-core/components/icons/uppsala/icon-uppsala-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconUppsala = createComponent({\r\n    tagName: 'ids-icon-uppsala',\r\n    elementClass: IDSIconUppsala$1,\r\n    react: React,\r\n});\n\nexport { IDSIconUppsala };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/user/register';\nimport { IDSIconUser as IDSIconUser$1 } from '@inera/ids-core/components/icons/user/icon-user-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconUser = createComponent({\r\n    tagName: 'ids-icon-user',\r\n    elementClass: IDSIconUser$1,\r\n    react: React,\r\n});\n\nexport { IDSIconUser };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/varmland/register';\nimport { IDSIconVarmland as IDSIconVarmland$1 } from '@inera/ids-core/components/icons/varmland/icon-varmland-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconVarmland = createComponent({\r\n    tagName: 'ids-icon-varmland',\r\n    elementClass: IDSIconVarmland$1,\r\n    react: React,\r\n});\n\nexport { IDSIconVarmland };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/vasterbotten/register';\nimport { IDSIconVasterbotten as IDSIconVasterbotten$1 } from '@inera/ids-core/components/icons/vasterbotten/icon-vasterbotten-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconVasterbotten = createComponent({\r\n    tagName: 'ids-icon-vasterbotten',\r\n    elementClass: IDSIconVasterbotten$1,\r\n    react: React,\r\n});\n\nexport { IDSIconVasterbotten };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/vasternorrland/register';\nimport { IDSIconVasternorrland as IDSIconVasternorrland$1 } from '@inera/ids-core/components/icons/vasternorrland/icon-vasternorrland-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconVasternorrland = createComponent({\r\n    tagName: 'ids-icon-vasternorrland',\r\n    elementClass: IDSIconVasternorrland$1,\r\n    react: React,\r\n});\n\nexport { IDSIconVasternorrland };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/vastmanland/register';\nimport { IDSIconVastmanland as IDSIconVastmanland$1 } from '@inera/ids-core/components/icons/vastmanland/icon-vastmanland-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconVastmanland = createComponent({\r\n    tagName: 'ids-icon-vastmanland',\r\n    elementClass: IDSIconVastmanland$1,\r\n    react: React,\r\n});\n\nexport { IDSIconVastmanland };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/vastra-gotaland/register';\nimport { IDSIconVastraGotaland as IDSIconVastraGotaland$1 } from '@inera/ids-core/components/icons/vastra-gotaland/icon-vastra-gotaland-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconVastraGotaland = createComponent({\r\n    tagName: 'ids-icon-vastra-gotaland',\r\n    elementClass: IDSIconVastraGotaland$1,\r\n    react: React,\r\n});\n\nexport { IDSIconVastraGotaland };\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/video-off/register';\nimport { IDSIconVideoOff as IDSIconVideoOff$1 } from '@inera/ids-core/components/icons/video-off/icon-video-off-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconVideoOff = createComponent({\r\n    tagName: 'ids-icon-video-off',\r\n    elementClass: IDSIconVideoOff$1,\r\n    react: React,\r\n});\n\nexport { IDSIconVideoOff };\n", "import{svg as o}from\"lit\";import{IDSIconBase as t}from\"../icon-base-element.js\";class l extends t{constructor(){super(),this.vbHeight=35,this.vbWidth=40}renderIcon(){return o`<path fill=\"${this.colors.color2}\" d=\"M3.53193 7.84115V28.0607C3.53193 29.7469 4.89887 31.1138 6.58507 31.1138H26.843L24.8042 29.0784H6.58507C6.02301 29.0784 5.56736 28.6227 5.56736 28.0607V9.87323L3.53193 7.84115Z\"></path><path fill=\"${this.colors.color2}\" d=\"M29.4836 25.1216V19.1836L36.4939 22.6681C37.1704 23.0043 37.9646 22.5122 37.9646 21.7567V12.0088C37.9646 11.2533 37.1704 10.7612 36.4939 11.0975L29.4836 14.582V5.67097C29.4836 5.1089 29.028 4.65326 28.4659 4.65326H8.98149L6.9427 2.61783H28.4659C30.1521 2.61783 31.5191 3.98477 31.5191 5.67097V11.2973L35.5879 9.27482C37.6175 8.26599 40 9.74234 40 12.0088V21.7567C40 24.0232 37.6175 25.4996 35.5879 24.4907L31.5191 22.4683V27.1537L29.4836 25.1216Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.297488 0.298675C0.694602 -0.0990943 1.33898 -0.0996259 1.73675 0.297488L33.938 32.4457C34.3358 32.8428 34.3363 33.4872 33.9392 33.8849C33.5421 34.2827 32.8977 34.2833 32.5 33.8861L0.298675 1.73794C-0.0990943 1.34083 -0.0996259 0.696445 0.297488 0.298675Z\"></path>`}}export{l as IDSIconVideoOff};\n", "import{IDSIconVideoOff as i}from\"./icon-video-off-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-video-off\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/video-on/register';\nimport { IDSIconVideoOn as IDSIconVideoOn$1 } from '@inera/ids-core/components/icons/video-on/icon-video-on-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconVideoOn = createComponent({\r\n    tagName: 'ids-icon-video-on',\r\n    elementClass: IDSIconVideoOn$1,\r\n    react: React,\r\n});\n\nexport { IDSIconVideoOn };\n", "import{svg as e}from\"lit\";import{IDSIconBase as t}from\"../icon-base-element.js\";class r extends t{constructor(){super(),this.vbHeight=32,this.vbWidth=41}renderIcon(){return e`<path fill=\"${this.colors.color}\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3.83333 2.22222C3.21968 2.22222 2.72222 2.71968 2.72222 3.33333V27.7777C2.72222 28.3914 3.21968 28.8888 3.83333 28.8888H27.7222C28.3358 28.8888 28.8333 28.3914 28.8333 27.7777V17.9753L36.6721 21.8716C37.4107 22.2388 38.2778 21.7015 38.2778 20.8767V10.2342C38.2778 9.4094 37.4107 8.87213 36.6721 9.23927L28.8333 13.1356V3.33333C28.8333 2.71968 28.3358 2.22222 27.7222 2.22222H3.83333ZM0.5 3.33333C0.5 1.49238 1.99238 0 3.83333 0H27.7222C29.5631 0 31.0555 1.49238 31.0555 3.33333V9.54946L35.683 7.24932C37.8989 6.1479 40.5 7.75974 40.5 10.2342V20.8767C40.5 23.3512 37.8989 24.963 35.683 23.8616L31.0555 21.5615V27.7777C31.0555 29.6187 29.5631 31.111 27.7222 31.111H3.83333C1.99238 31.111 0.5 29.6187 0.5 27.7777V3.33333Z\"></path>`}}export{r as IDSIconVideoOn};\n", "import{IDSIconVideoOn as i}from\"./icon-video-on-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-video-on\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/video-switch/register';\nimport { IDSIconVideoSwitch as IDSIconVideoSwitch$1 } from '@inera/ids-core/components/icons/video-switch/icon-video-switch-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconVideoSwitch = createComponent({\r\n    tagName: 'ids-icon-video-switch',\r\n    elementClass: IDSIconVideoSwitch$1,\r\n    react: React,\r\n});\n\nexport { IDSIconVideoSwitch };\n", "import{svg as C}from\"lit\";import{IDSIconBase as o}from\"../icon-base-element.js\";class t extends o{constructor(){super(),this.vbHeight=28,this.vbWidth=36}renderIcon(){return C`<path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M3 2C2.44772 2 2 2.44772 2 3V25C2 25.5523 2.44772 26 3 26H24.5C25.0523 26 25.5 25.5523 25.5 25V16.1778L32.555 19.6845C33.2197 20.0149 34.0001 19.5314 34.0001 18.789V9.21084C34.0001 8.46848 33.2197 7.98493 32.555 8.31536L25.5 11.8221V3C25.5 2.44772 25.0523 2 24.5 2H3ZM0 3C0 1.34315 1.34315 0 3 0H24.5C26.1569 0 27.5 1.34315 27.5 3V8.59454L31.6648 6.5244C33.6591 5.53312 36.0001 6.98378 36.0001 9.21084V18.789C36.0001 21.0161 33.659 22.4668 31.6648 21.4755L27.5 19.4053V25C27.5 26.6569 26.1569 28 24.5 28H3C1.34315 28 0 26.6569 0 25V3Z\"></path><path fill=\"${this.colors.color}\" d=\"M9.63222 10.668C10.4735 8.95587 12.3029 7.75 14.4505 7.75C16.9716 7.75 19.0543 9.41187 19.6145 11.6037C19.7171 12.005 20.1255 12.2472 20.5268 12.1446C20.9282 12.0421 21.1703 11.6336 21.0678 11.2323C20.3317 8.35205 17.6315 6.25 14.4505 6.25C11.9589 6.25 9.76233 7.53961 8.57349 9.48267V7.73633C8.57349 7.32212 8.2377 6.98633 7.82349 6.98633C7.40927 6.98633 7.07349 7.32212 7.07349 7.73633V11.418C7.07349 11.8322 7.40927 12.168 7.82349 12.168H8.54395C8.55492 12.1682 8.56585 12.1682 8.57675 12.168H11.5051C11.9194 12.168 12.2551 11.8322 12.2551 11.418C12.2551 11.0038 11.9194 10.668 11.5051 10.668H9.63222Z\"></path><path fill=\"${this.colors.color}\" d=\"M19.5878 14.8559H16.6594C16.2452 14.8559 15.9094 15.1917 15.9094 15.6059C15.9094 16.0201 16.2452 16.3559 16.6594 16.3559H18.5323C17.6911 18.0681 15.8616 19.2739 13.7141 19.2739C11.193 19.2739 9.11023 17.6121 8.55006 15.4202C8.4475 15.0189 8.03902 14.7767 7.63771 14.8793C7.23639 14.9819 6.99421 15.3903 7.09677 15.7916C7.83288 18.6719 10.5331 20.7739 13.7141 20.7739C16.2056 20.7739 18.4022 19.4843 19.5911 17.5413V19.2876C19.5911 19.7018 19.9269 20.0376 20.3411 20.0376C20.7553 20.0376 21.0911 19.7018 21.0911 19.2876V15.6059C21.0911 15.1917 20.7553 14.8559 20.3411 14.8559H19.6206C19.6096 14.8557 19.5987 14.8557 19.5878 14.8559Z\"></path>`}}export{t as IDSIconVideoSwitch};\n", "import{IDSIconVideoSwitch as i}from\"./icon-video-switch-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-video-switch\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/visibility-off/register';\nimport { IDSIconVisibilityOff as IDSIconVisibilityOff$1 } from '@inera/ids-core/components/icons/visibility-off/icon-visibility-off-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconVisibilityOff = createComponent({\r\n    tagName: 'ids-icon-visibility-off',\r\n    elementClass: IDSIconVisibilityOff$1,\r\n    react: React,\r\n});\n\nexport { IDSIconVisibilityOff };\n", "import{svg as l}from\"lit\";import{IDSIconBase as t}from\"../icon-base-element.js\";class C extends t{constructor(){super(),this.vbHeight=40,this.vbWidth=40}renderIcon(){return l`<g clip-path=\"url(#clip0_12957_54787)\"><path fill=\"${this.colors.color}\" d=\"M13.4051 17.6477C13.1428 18.3829 13 19.1748 13 20C13 23.866 16.134 27 20 27C20.8252 27 21.6171 26.8572 22.3523 26.5949L20.7077 24.9503C20.4765 24.9831 20.2402 25 20 25C17.2386 25 15 22.7614 15 20C15 19.7598 15.0169 19.5235 15.0497 19.2923L13.4051 17.6477Z\"></path><path fill=\"${this.colors.color}\" d=\"M24.9503 20.7077C24.9831 20.4765 25 20.2402 25 20C25 17.2386 22.7614 15 20 15C19.7598 15 19.5235 15.0169 19.2923 15.0497L17.6477 13.4051C18.3829 13.1428 19.1748 13 20 13C23.866 13 27 16.134 27 20C27 20.8252 26.8572 21.6171 26.5949 22.3523L24.9503 20.7077Z\"></path><path fill=\"${this.colors.color2}\" d=\"M7.27201 11.5146C2.83059 13.5322 0 16.5843 0 20C0 26.0751 8.9543 31 20 31C22.17 31 24.2592 30.8099 26.2158 30.4584L24.4656 28.7082C23.0422 28.898 21.547 29 20 29C14.7484 29 10.093 27.825 6.8217 26.0257C3.47838 24.1869 2 21.9711 2 20C2 18.0289 3.47838 15.8131 6.8217 13.9743C7.43228 13.6384 8.09108 13.3244 8.79298 13.0356L7.27201 11.5146Z\"></path><path fill=\"${this.colors.color2}\" d=\"M31.207 26.9644C31.9089 26.6756 32.5677 26.3616 33.1783 26.0257C36.5216 24.1869 38 21.9711 38 20C38 18.0289 36.5216 15.8131 33.1783 13.9743C29.907 12.175 25.2516 11 20 11C18.453 11 16.9578 11.102 15.5344 11.2918L13.7842 9.5416C15.7408 9.19007 17.83 9 20 9C31.0457 9 40 13.9249 40 20C40 23.4157 37.1694 26.4678 32.728 28.4853L31.207 26.9644Z\"></path><path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M0.292893 0.292893C0.683417 -0.0976311 1.31658 -0.0976311 1.70711 0.292893L39.7071 38.2929C40.0976 38.6834 40.0976 39.3166 39.7071 39.7071C39.3166 40.0976 38.6834 40.0976 38.2929 39.7071L0.292893 1.70711C-0.0976311 1.31658 -0.0976311 0.683417 0.292893 0.292893Z\"></path></g><defs><clipPath id=\"clip0_12957_54787\"><rect width=\"40\" height=\"40\" fill=\"white\"></rect></clipPath></defs>`}}export{C as IDSIconVisibilityOff};\n", "import{IDSIconVisibilityOff as i}from\"./icon-visibility-off-element.js\";import{registerComponent as o}from\"../../../utilities/utils.js\";o(\"ids-icon-visibility-off\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/visibility/register';\nimport { IDSIconVisibility as IDSIconVisibility$1 } from '@inera/ids-core/components/icons/visibility/icon-visibility-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconVisibility = createComponent({\r\n    tagName: 'ids-icon-visibility',\r\n    elementClass: IDSIconVisibility$1,\r\n    react: React,\r\n});\n\nexport { IDSIconVisibility };\n", "import{svg as e}from\"lit\";import{IDSIconBase as l}from\"../icon-base-element.js\";class o extends l{constructor(){super(),this.vbHeight=22,this.vbWidth=40}renderIcon(){return e`<path fill=\"${this.colors.color}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M20 16C22.7614 16 25 13.7614 25 11C25 8.23858 22.7614 6 20 6C17.2386 6 15 8.23858 15 11C15 13.7614 17.2386 16 20 16ZM20 18C23.866 18 27 14.866 27 11C27 7.13401 23.866 4 20 4C16.134 4 13 7.13401 13 11C13 14.866 16.134 18 20 18Z\"></path><path fill=\"${this.colors.color2}\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M33.1783 17.0257C36.5216 15.1869 38 12.9711 38 11C38 9.02888 36.5216 6.81309 33.1783 4.97426C29.907 3.17503 25.2516 2 20 2C14.7484 2 10.093 3.17503 6.8217 4.97426C3.47838 6.81309 2 9.02888 2 11C2 12.9711 3.47838 15.1869 6.8217 17.0257C10.093 18.825 14.7484 20 20 20C25.2516 20 29.907 18.825 33.1783 17.0257ZM20 22C31.0457 22 40 17.0751 40 11C40 4.92487 31.0457 0 20 0C8.9543 0 0 4.92487 0 11C0 17.0751 8.9543 22 20 22Z\"></path>`}}export{o as IDSIconVisibility};\n", "import{IDSIconVisibility as i}from\"./icon-visibility-element.js\";import{registerComponent as t}from\"../../../utilities/utils.js\";t(\"ids-icon-visibility\",i);\n", "import * as React from 'react';\nimport '@inera/ids-core/components/icons/warning/register';\nimport { IDSIconWarning as IDSIconWarning$1 } from '@inera/ids-core/components/icons/warning/icon-warning-element';\nimport { createComponent } from '@lit-labs/react';\n\nconst IDSIconWarning = createComponent({\r\n    tagName: 'ids-icon-warning',\r\n    elementClass: IDSIconWarning$1,\r\n    react: React,\r\n});\n\nexport { IDSIconWarning };\n"],
  "mappings": ";;;;;;;AAAA,YAAuB;;;ACMvB,IAAM,YAAY;AA+DlB,IAAM,WAAW;AAEjB,IAAM,0BAA0B,oBAAI,IAAI;EACtC;EACA;EACA;EACA;EACA;CACD;AAED,IAAM,iBAGF,oBAAI,QAAO;AAQf,IAAM,2BAA2B,CAC/B,MACA,OACA,aACE;AACF,MAAI,SAAS,eAAe,IAAI,IAAI;AACpC,MAAI,WAAW,QAAW;AACxB,mBAAe,IAAI,MAAO,SAAS,oBAAI,IAAG,CAAG;;AAE/C,MAAI,UAAU,OAAO,IAAI,KAAK;AAC9B,MAAI,aAAa,QAAW;AAE1B,QAAI,YAAY,QAAW;AACzB,aAAO,IAAI,OAAQ,UAAU,EAAC,aAAa,SAAQ,CAAE;AACrD,WAAK,iBAAiB,OAAO,OAAO;WAE/B;AACL,cAAQ,cAAc;;aAGf,YAAY,QAAW;AAChC,WAAO,OAAO,KAAK;AACnB,SAAK,oBAAoB,OAAO,OAAO;;AAE3C;AAMA,IAAM,cAAc,CAClB,MACA,MACA,OACA,KACA,WACE;AACF,QAAM,QAAQ,WAAM,QAAN,WAAM,SAAA,SAAN,OAAS,IAAI;AAC3B,MAAI,UAAU,UAAa,UAAU,KAAK;AAExC,6BAAyB,MAAM,OAAO,KAA4B;AAClE;;AASF,OACG,UAAU,UAAa,UAAU,SAClC,QAAQ,YAAY,WACpB;AACA,SAAK,gBAAgB,IAAI;AACzB;;AAIF,OAAK,IAAe,IAAI;AAC1B;AAIA,IAAM,SAAS,CAAC,KAAyB,UAAyB;AAChE,MAAI,OAAO,QAAQ,YAAY;AAC7B,QAAI,KAAK;SACJ;AACJ,QAAkC,UAAU;;AAEjD;AA+DM,SAAU,gBAId,iBAAsD,OAAO,OAC7D,SACA,cACA,QACA,aAAoB;AAGpB,MAAIA;AACJ,MAAIC;AACJ,MAAI;AACJ,MAAI,YAAY,QAAW;AACzB,UAAM,UAAU;AAChB,KAAC,EAAC,SAASA,MAAK,cAAc,SAAS,QAAQ,YAAW,IAAI;AAC9D,IAAAD,WAAQ,QAAQ;SACX;AACL,IAAAA,WAAQ;AACR,cAAU;AACV,IAAAC,OAAM;;AAIR,MAAI,UAAU;AACZ,eAAWC,MAAK,yBAAyB;AACvC,UAAIA,MAAK,QAAQ,aAAa,EAAEA,MAAK,YAAY,YAAY;AAM3D,gBAAQ,KAAK,GAAG,OAAO,sBAAsBA,EAAC;;aAEzC;;;;AAKX,QAAM,YAAYF,SAAM;AACxB,QAAM,gBAAgBA,SAAM;AAC5B,QAAM,aAAa,IAAI,IAAI,OAAO,KAAK,WAAM,QAAN,WAAM,SAAN,SAAU,CAAA,CAAE,CAAC;EAIpD,MAAM,uBAAuB,UAAgB;IAA7C,cAAA;;AACU,WAAA,WAAqB;IA+G/B;IAxGU,eAAe,UAAgB;AACrC,UAAI,KAAK,aAAa,MAAM;AAC1B;;AAGF,iBAAW,QAAQ,KAAK,eAAe;AACrC,oBACE,KAAK,UACL,MACA,KAAK,MAAM,IAAI,GACf,WAAW,SAAS,IAAI,IAAI,QAC5B,MAAM;;IAMZ;;;;;IAMS,oBAAiB;;AACxB,WAAK,eAAc;AACnB,OAAAG,MAAA,KAAK,cAAQ,QAAAA,QAAA,SAAA,SAAAA,IAAE,gBAAgB,iBAAiB;IAClD;;;;;IAMS,mBAAmB,KAAU;AACpC,WAAK,eAAe,GAAG;IACzB;;;;;;;;;IAUS,SAAM;AAEb,YAAM,EAAC,gBAAgB,GAAG,UAAS,IAAI,KAAK;AAI5C,UAAI,KAAK,kBAAkB,gBAAgB;AACzC,aAAK,OAAO,CAAC,UAAmB;AAC9B,cAAI,mBAAmB,MAAM;AAC3B,mBAAO,gBAAgB,KAAK;;AAG9B,eAAK,WAAW;AAChB,eAAK,gBAAgB;QACvB;;AAIF,WAAK,gBAAgB,CAAA;AACrB,YAAM,QAAiC,EAAC,KAAK,KAAK,KAAI;AAItD,iBAAW,CAACC,IAAGC,EAAC,KAAK,OAAO,QAAQ,SAAS,GAAG;AAC9C,YAAI,wBAAwB,IAAID,EAAC,GAAG;AAGlC,gBAAMA,OAAM,cAAc,UAAUA,EAAC,IAAIC;AACzC;;AAGF,YAAI,WAAW,IAAID,EAAC,KAAKA,MAAK,QAAQ,WAAW;AAC/C,eAAK,cAAcA,EAAC,IAAIC;AACxB;;AAGF,cAAMD,EAAC,IAAIC;;AAMb,UACE,aACA,cAAc,SAAS,6BACvB,OAAO,KAAK,KAAK,aAAa,EAAE,QAChC;AAEA,cAAM,aAAa,IAAI,KAAK;AAC5B,eAAO,cAA0CJ,MAAK,KAAK;;AAG7D,UAAI,CAAC,WAAW;AAGd,cAAM,0BAA0B,IAAI;;AAGtC,aAAO,cAA0CA,MAAK,KAAK;IAC7D;;AAzGO,iBAAA,cAAc,gBAAW,QAAX,gBAAW,SAAX,cAAe,QAAQ;AA4G9C,QAAM,qBAA8CD,SAAM,WAGxD,CAAC,OAAO,mBACR,cACE,gBACA,EAAC,GAAG,OAAO,eAAc,GACzB,UAAK,QAAL,UAAK,SAAA,SAAL,MAAO,QAAQ,CAChB;AAIH,qBAAmB,cAAc,eAAe;AAEhD,SAAO;AACT;;;ACxVO,SAAS,WAAW,YAAY,QAAQ,KAAK,MAAM;AACtD,MAAIM,KAAI,UAAU,QAAQC,MAAID,KAAI,IAAI,SAAS,SAAS,OAAO,OAAO,OAAO,yBAAyB,QAAQ,GAAG,IAAI,MAAME;AAC3H,MAAI,OAAO,YAAY,YAAY,OAAO,QAAQ,aAAa;AAAY,IAAAD,MAAI,QAAQ,SAAS,YAAY,QAAQ,KAAK,IAAI;AAAA;AACxH,aAASE,MAAI,WAAW,SAAS,GAAGA,OAAK,GAAGA;AAAK,UAAID,KAAI,WAAWC,GAAC;AAAG,QAAAF,OAAKD,KAAI,IAAIE,GAAED,GAAC,IAAID,KAAI,IAAIE,GAAE,QAAQ,KAAKD,GAAC,IAAIC,GAAE,QAAQ,GAAG,MAAMD;AAChJ,SAAOD,KAAI,KAAKC,OAAK,OAAO,eAAe,QAAQ,KAAKA,GAAC,GAAGA;AAChE;;;ACrDA,IAAMG,aAAY;AAClB,IAAM,SAASA,aAAY,aAAa;AAKjC,IAAM,8BACX,OAAO,eACN,OAAO,aAAa,UAAa,OAAO,SAAS,iBAClD,wBAAwB,SAAS,aACjC,aAAa,cAAc;AAkB7B,IAAM,oBAAoB,OAAM;AAEhC,IAAM,cAAc,oBAAI,QAAO;AASzB,IAAO,YAAP,MAAgB;EAOpB,YACE,SACA,SACA,WAAiB;AARnB,SAAC,cAAc,IAAI;AAUjB,QAAI,cAAc,mBAAmB;AACnC,YAAM,IAAI,MACR,mEAAmE;;AAGvE,SAAK,UAAU;AACf,SAAK,WAAW;EAClB;;;EAIA,IAAI,aAAU;AAGZ,QAAI,aAAa,KAAK;AACtB,UAAM,UAAU,KAAK;AACrB,QAAI,+BAA+B,eAAe,QAAW;AAC3D,YAAM,YAAY,YAAY,UAAa,QAAQ,WAAW;AAC9D,UAAI,WAAW;AACb,qBAAa,YAAY,IAAI,OAAO;;AAEtC,UAAI,eAAe,QAAW;AAC5B,SAAC,KAAK,cAAc,aAAa,IAAI,cAAa,GAAI,YACpD,KAAK,OAAO;AAEd,YAAI,WAAW;AACb,sBAAY,IAAI,SAAS,UAAU;;;;AAIzC,WAAO;EACT;EAEA,WAAQ;AACN,WAAO,KAAK;EACd;;AAWF,IAAM,oBAAoB,CAAC,UAAkC;AAE3D,MAAK,MAAoB,cAAc,MAAM,MAAM;AACjD,WAAQ,MAAoB;aACnB,OAAO,UAAU,UAAU;AACpC,WAAO;SACF;AACL,UAAM,IAAI,MACR,mEACK,KAAK,sFACkB;;AAGlC;AASO,IAAM,YAAY,CAAC,UACxB,IAAK,UACH,OAAO,UAAU,WAAW,QAAQ,OAAO,KAAK,GAChD,QACA,iBAAiB;AAWd,IAAM,MAAM,CACjB,YACG,WACU;AACb,QAAM,UACJ,QAAQ,WAAW,IACf,QAAQ,CAAC,IACT,OAAO,OACL,CAAC,KAAKC,IAAG,QAAQ,MAAM,kBAAkBA,EAAC,IAAI,QAAQ,MAAM,CAAC,GAC7D,QAAQ,CAAC,CAAC;AAElB,SAAO,IAAK,UACV,SACA,SACA,iBAAiB;AAErB;AAWO,IAAM,cAAc,CACzB,YACA,WACE;AACF,MAAI,6BAA6B;AAC9B,eAA0B,qBAAqB,OAAO,IAAI,CAACC,QAC1DA,eAAa,gBAAgBA,MAAIA,IAAE,UAAW;SAE3C;AACL,WAAO,QAAQ,CAACA,QAAK;AACnB,YAAM,QAAQ,SAAS,cAAc,OAAO;AAE5C,YAAM,QAAS,OAAe,UAAU;AACxC,UAAI,UAAU,QAAW;AACvB,cAAM,aAAa,SAAS,KAAK;;AAEnC,YAAM,cAAeA,IAAgB;AACrC,iBAAW,YAAY,KAAK;IAC9B,CAAC;;AAEL;AAEA,IAAM,0BAA0B,CAAC,UAAwB;AACvD,MAAI,UAAU;AACd,aAAW,QAAQ,MAAM,UAAU;AACjC,eAAW,KAAK;;AAElB,SAAO,UAAU,OAAO;AAC1B;AAEO,IAAM,qBACX,+BACCF,cAAa,OAAO,kBAAkB,SACnC,CAACE,QAAyBA,MAC1B,CAACA,QACCA,eAAa,gBAAgB,wBAAwBA,GAAC,IAAIA;;;;;;;;AC1KlE,IAAMC,aAAY;AAClB,IAAMC,UAASD,aAAY,aAAa;AAExC,IAAIA,YAAW;AACb,GAAA,KAAAC,QAAO,oBAAc,QAAA,OAAA,SAAA,KAArBA,QAAO,iBAAmB;;AAG5B,IAAMC,YAAW;AAEjB,IAAI;AAOJ,IAAI;AAEJ,IAAM,eAAgBD,QACnB;AAMH,IAAM,iCAAiC,eAClC,aAAa,cACd;AAEJ,IAAM,kBAAkBC,YACpBD,QAAO,wCACPA,QAAO;AAEX,IAAIC,WAAU;AAGZ,QAAM,kBAA0C,KAACD,QAAO,uBAAiB,QAAA,OAAA,SAAA,KAAxBA,QAAO,oBACtD,oBAAI,IAAG;AAGT,iBAAe,CAAC,MAAc,YAAmB;AAC/C,eAAW,4BAA4B,IAAI;AAC3C,QAAI,CAAC,eAAe,IAAI,OAAO,GAAG;AAChC,cAAQ,KAAK,OAAO;AACpB,qBAAe,IAAI,OAAO;;EAE9B;AAEA,eACE,YACA,qDAAqD;AAIvD,QAAI,KAAAA,QAAO,cAAQ,QAAA,OAAA,SAAA,SAAA,GAAE,UAAS,oBAAoB,QAAW;AAC3D,iBACE,4BACA,0GACwD;;AAI5D,0BAAwB,CAAC,UAAU;IACjC,MAAM,CACJ,aACA,gBACE;AACF,mBACE,0BACA,mFACkB,IAAI,qCAAqC;AAE7D,UAAI,gBAAgB,QAAW;AAC7B,oBAAY,KAAK;;IAErB;;;AA0CJ,IAAM,gBAAgBC,YAClB,CAAC,UAA0C;AACzC,QAAM,aAAcD,QACjB;AACH,MAAI,CAAC,YAAY;AACf;;AAEF,EAAAA,QAAO,cACL,IAAI,YAA6C,aAAa;IAC5D,QAAQ;GACT,CAAC;AAEN,IACA;AASJ,IAAM,4BAA4B,CAChC,MACA,SACM;AA+ID,IAAM,mBAA8C;EACzD,YAAY,OAAgB,MAAc;AACxC,YAAQ,MAAM;MACZ,KAAK;AACH,gBAAQ,QAAQ,iCAAiC;AACjD;MACF,KAAK;MACL,KAAK;AAGH,gBAAQ,SAAS,OAAO,QAAQ,KAAK,UAAU,KAAK;AACpD;;AAEJ,WAAO;EACT;EAEA,cAAc,OAAsB,MAAc;AAChD,QAAI,YAAqB;AACzB,YAAQ,MAAM;MACZ,KAAK;AACH,oBAAY,UAAU;AACtB;MACF,KAAK;AACH,oBAAY,UAAU,OAAO,OAAO,OAAO,KAAK;AAChD;MACF,KAAK;MACL,KAAK;AAIH,YAAI;AAEF,sBAAY,KAAK,MAAM,KAAM;iBACtBE,KAAG;AACV,sBAAY;;AAEd;;AAEJ,WAAO;EACT;;AAWK,IAAM,WAAuB,CAAC,OAAgB,QAAyB;AAE5E,SAAO,QAAQ,UAAU,QAAQ,OAAO,UAAU;AACpD;AAEA,IAAM,6BAAkD;EACtD,WAAW;EACX,MAAM;EACN,WAAW;EACX,SAAS;EACT,YAAY;;AASd,IAAM,YAAY;AAeZ,IAAgB,kBAAhB,cASI,YAAW;EAsgBnB,cAAA;AACE,UAAK;AA3CC,SAAA,uBAAwC,oBAAI,IAAG;AAUvD,SAAA,kBAAkB;AAOlB,SAAA,aAAa;AAkBL,SAAA,uBAA2C;AASjD,SAAK,aAAY;EACnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EApbA,OAAO,eAAe,aAAwB;;AAC5C,SAAK,SAAQ;AACb,MAAAC,MAAC,KAAK,mBAAa,QAAAA,QAAA,SAAAA,MAAlB,KAAK,gBAAkB,CAAA,GAAI,KAAK,WAAW;EAC9C;;;;;;EA0GA,WAAW,qBAAkB;AAE3B,SAAK,SAAQ;AACb,UAAM,aAAuB,CAAA;AAG7B,SAAK,kBAAkB,QAAQ,CAACC,IAAGC,OAAK;AACtC,YAAM,OAAO,KAAK,2BAA2BA,IAAGD,EAAC;AACjD,UAAI,SAAS,QAAW;AACtB,aAAK,yBAAyB,IAAI,MAAMC,EAAC;AACzC,mBAAW,KAAK,IAAI;;IAExB,CAAC;AACD,WAAO;EACT;;;;;;;;;;;;;;;;;;;;;;;;;;EA2BA,OAAO,eACL,MACA,UAA+B,4BAA0B;;AAGzD,QAAI,QAAQ,OAAO;AAGhB,cAAgB,YAAY;;AAI/B,SAAK,SAAQ;AACb,SAAK,kBAAkB,IAAI,MAAM,OAAO;AAMxC,QAAI,CAAC,QAAQ,cAAc,CAAC,KAAK,UAAU,eAAe,IAAI,GAAG;AAC/D,YAAM,MAAM,OAAO,SAAS,WAAW,OAAM,IAAK,KAAK,IAAI;AAC3D,YAAM,aAAa,KAAK,sBAAsB,MAAM,KAAK,OAAO;AAChE,UAAI,eAAe,QAAW;AAC5B,eAAO,eAAe,KAAK,WAAW,MAAM,UAAU;AACtD,YAAIJ,WAAU;AAGZ,cAAI,CAAC,KAAK,eAAe,wBAAwB,GAAG;AAClD,iBAAK,yBAAyB,IAAI,KAChCE,MAAA,KAAK,4BAAsB,QAAAA,QAAA,SAAAA,MAAI,CAAA,CAAE;;AAGrC,eAAK,uBAAwB,IAAI,IAAI;;;;EAI7C;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA6BU,OAAO,sBACf,MACA,KACA,SAA4B;AAE5B,WAAO;;MAEL,MAAG;AACD,eAAQ,KAAkC,GAAa;MACzD;MACA,IAA2B,OAAc;AACvC,cAAM,WAAY,KAChB,IAAc;AAEf,aAAwC,GAAa,IAAI;AACzD,aAAoC,cACnC,MACA,UACA,OAAO;MAEX;MACA,cAAc;MACd,YAAY;;EAEhB;;;;;;;;;;;;;;;EAgBA,OAAO,mBAAmB,MAAiB;AACzC,WAAO,KAAK,kBAAkB,IAAI,IAAI,KAAK;EAC7C;;;;;;;EAQU,OAAO,WAAQ;AACvB,QAAI,KAAK,eAAe,SAAS,GAAG;AAClC,aAAO;;AAET,SAAK,SAAS,IAAI;AAElB,UAAM,YAAY,OAAO,eAAe,IAAI;AAC5C,cAAU,SAAQ;AAIlB,QAAI,UAAU,kBAAkB,QAAW;AACzC,WAAK,gBAAgB,CAAC,GAAG,UAAU,aAAa;;AAElD,SAAK,oBAAoB,IAAI,IAAI,UAAU,iBAAiB;AAE5D,SAAK,2BAA2B,oBAAI,IAAG;AAKvC,QAAI,KAAK,eAAe,0BAA0B,cAAc,IAAI,CAAC,GAAG;AACtE,YAAM,QAAQ,KAAK;AAEnB,YAAM,WAAW;QACf,GAAG,OAAO,oBAAoB,KAAK;QACnC,GAAG,OAAO,sBAAsB,KAAK;;AAGvC,iBAAWE,MAAK,UAAU;AAIxB,aAAK,eAAeA,IAAI,MAAcA,EAAC,CAAC;;;AAG5C,SAAK,gBAAgB,KAAK,eAAe,KAAK,MAAM;AAEpD,QAAIJ,WAAU;AACZ,YAAM,uBAAuB,CAAC,MAAc,UAAU,UAAS;AAC7D,YAAI,KAAK,UAAU,eAAe,IAAI,GAAG;AACvC,uBACE,UAAU,gBAAgB,eAC1B,KAAK,IAAI,8BAA8B,KAAK,IAAI,iBAClC,UAAU,YAAY,SAAS,iCACX;;MAGxC;AACA,2BAAqB,YAAY;AACjC,2BAAqB,uBAAuB;AAC5C,2BAAqB,sBAAsB,IAAI;;AAEjD,WAAO;EACT;;;;;;;;;;;;;;;EA4BU,OAAO,eACf,QAAuB;AAEvB,UAAM,gBAAgB,CAAA;AACtB,QAAI,MAAM,QAAQ,MAAM,GAAG;AAIzB,YAAM,MAAM,IAAI,IAAK,OAA0B,KAAK,QAAQ,EAAE,QAAO,CAAE;AAEvE,iBAAWK,OAAK,KAAK;AACnB,sBAAc,QAAQ,mBAAmBA,GAAsB,CAAC;;eAEzD,WAAW,QAAW;AAC/B,oBAAc,KAAK,mBAAmB,MAAM,CAAC;;AAE/C,WAAO;EACT;;;;;EAaQ,OAAO,2BACb,MACA,SAA4B;AAE5B,UAAM,YAAY,QAAQ;AAC1B,WAAO,cAAc,QACjB,SACA,OAAO,cAAc,WACrB,YACA,OAAO,SAAS,WAChB,KAAK,YAAW,IAChB;EACN;;;;;EAqDQ,eAAY;;AAClB,SAAK,kBAAkB,IAAI,QACzB,CAAC,QAAS,KAAK,iBAAiB,GAAI;AAEtC,SAAK,sBAAsB,oBAAI,IAAG;AAClC,SAAK,yBAAwB;AAG7B,SAAK,cAAa;AAClB,KAAAH,MAAC,KAAK,YAAuC,mBAAa,QAAAA,QAAA,SAAA,SAAAA,IAAE,QAAQ,CAACI,QACnEA,IAAE,IAAI,CAAC;EAEX;;;;;;;;;;EAWA,cAAc,YAA8B;;AAC1C,MAAAJ,MAAC,KAAK,mBAAa,QAAAA,QAAA,SAAAA,MAAlB,KAAK,gBAAkB,CAAA,GAAI,KAAK,UAAU;AAK3C,QAAI,KAAK,eAAe,UAAa,KAAK,aAAa;AACrD,OAAAK,MAAA,WAAW,mBAAa,QAAAA,QAAA,SAAA,SAAAA,IAAA,KAAA,UAAA;;EAE5B;;;;;EAMA,iBAAiB,YAA8B;;AAG7C,KAAAL,MAAA,KAAK,mBAAa,QAAAA,QAAA,SAAA,SAAAA,IAAE,OAAO,KAAK,cAAc,QAAQ,UAAU,MAAM,GAAG,CAAC;EAC5E;;;;;;;;;;;;;EAcQ,2BAAwB;AAG7B,SAAK,YAAuC,kBAAkB,QAC7D,CAAC,IAAIE,OAAK;AACR,UAAI,KAAK,eAAeA,EAAC,GAAG;AAC1B,aAAK,qBAAsB,IAAIA,IAAG,KAAKA,EAAe,CAAC;AACvD,eAAO,KAAKA,EAAe;;IAE/B,CAAC;EAEL;;;;;;;;;;EAWU,mBAAgB;;AACxB,UAAM,cACJF,MAAA,KAAK,gBAAU,QAAAA,QAAA,SAAAA,MACf,KAAK,aACF,KAAK,YAAuC,iBAAiB;AAElE,gBACE,YACC,KAAK,YAAuC,aAAa;AAE5D,WAAO;EACT;;;;;;EAOA,oBAAiB;;AAEf,QAAI,KAAK,eAAe,QAAW;AAE/B,WAGA,aAAa,KAAK,iBAAgB;;AAEtC,SAAK,eAAe,IAAI;AACxB,KAAAA,MAAA,KAAK,mBAAa,QAAAA,QAAA,SAAA,SAAAA,IAAE,QAAQ,CAACM,OAAK;AAAA,UAAAN;AAAC,cAAAA,MAAAM,GAAE,mBAAa,QAAAN,QAAA,SAAA,SAAAA,IAAA,KAAAM,EAAA;IAAI,CAAA;EACxD;;;;;;;EAQU,eAAe,kBAAyB;EAAG;;;;;;;EAQrD,uBAAoB;;AAClB,KAAAN,MAAA,KAAK,mBAAa,QAAAA,QAAA,SAAA,SAAAA,IAAE,QAAQ,CAACM,OAAK;AAAA,UAAAN;AAAC,cAAAA,MAAAM,GAAE,sBAAgB,QAAAN,QAAA,SAAA,SAAAA,IAAA,KAAAM,EAAA;IAAI,CAAA;EAC3D;;;;;;;;;;;;;EAcA,yBACE,MACA,MACA,OAAoB;AAEpB,SAAK,sBAAsB,MAAM,KAAK;EACxC;EAEQ,sBACN,MACA,OACA,UAA+B,4BAA0B;;AAEzD,UAAM,OACJ,KAAK,YACL,2BAA2B,MAAM,OAAO;AAC1C,QAAI,SAAS,UAAa,QAAQ,YAAY,MAAM;AAClD,YAAM,cACJN,MAAC,QAAQ,eAAuC,QAAAA,QAAA,SAAA,SAAAA,IAAE,iBAClD,SACK,QAAQ,YACT;AACN,YAAM,YAAY,UAAU,YAAa,OAAO,QAAQ,IAAI;AAC5D,UACEF,aACC,KAAK,YAAuC,gBAAiB,QAC5D,WAAW,KACR,KACL,cAAc,QACd;AACA,qBACE,6BACA,+BAA+B,IAAc,qCACnB,KAAK,SAAS,4HAEC;;AAW7C,WAAK,uBAAuB;AAC5B,UAAI,aAAa,MAAM;AACrB,aAAK,gBAAgB,IAAI;aACpB;AACL,aAAK,aAAa,MAAM,SAAmB;;AAG7C,WAAK,uBAAuB;;EAEhC;;EAGA,sBAAsB,MAAc,OAAoB;;AACtD,UAAM,OAAO,KAAK;AAGlB,UAAM,WAAY,KAAK,yBAA0C,IAAI,IAAI;AAGzE,QAAI,aAAa,UAAa,KAAK,yBAAyB,UAAU;AACpE,YAAM,UAAU,KAAK,mBAAmB,QAAQ;AAChD,YAAM,YACJ,OAAO,QAAQ,cAAc,aACzB,EAAC,eAAe,QAAQ,UAAS,MACjCE,MAAA,QAAQ,eAAS,QAAAA,QAAA,SAAA,SAAAA,IAAE,mBAAkB,SACrC,QAAQ,YACR;AAEN,WAAK,uBAAuB;AAC5B,WAAK,QAAsB,IAAI,UAAU;QACvC;QACA,QAAQ;;;AAIV,WAAK,uBAAuB;;EAEhC;;;;;;;;;;;;;;;EAgBA,cACE,MACA,UACA,SAA6B;AAE7B,QAAI,sBAAsB;AAE1B,QAAI,SAAS,QAAW;AACtB,gBACE,WACC,KAAK,YAAuC,mBAAmB,IAAI;AACtE,YAAM,aAAa,QAAQ,cAAc;AACzC,UAAI,WAAW,KAAK,IAAkB,GAAG,QAAQ,GAAG;AAClD,YAAI,CAAC,KAAK,oBAAoB,IAAI,IAAI,GAAG;AACvC,eAAK,oBAAoB,IAAI,MAAM,QAAQ;;AAM7C,YAAI,QAAQ,YAAY,QAAQ,KAAK,yBAAyB,MAAM;AAClE,cAAI,KAAK,2BAA2B,QAAW;AAC7C,iBAAK,yBAAyB,oBAAI,IAAG;;AAEvC,eAAK,uBAAuB,IAAI,MAAM,OAAO;;aAE1C;AAEL,8BAAsB;;;AAG1B,QAAI,CAAC,KAAK,mBAAmB,qBAAqB;AAChD,WAAK,kBAAkB,KAAK,gBAAe;;AAI7C,WAAOF,YACF,sBAAsB,KAAK,SAAS,IACrC;EACN;;;;EAKQ,MAAM,kBAAe;AAC3B,SAAK,kBAAkB;AACvB,QAAI;AAGF,YAAM,KAAK;aACJC,KAAG;AAKV,cAAQ,OAAOA,GAAC;;AAElB,UAAM,SAAS,KAAK,eAAc;AAIlC,QAAI,UAAU,MAAM;AAClB,YAAM;;AAER,WAAO,CAAC,KAAK;EACf;;;;;;;;;;;;;;;;;;EAmBU,iBAAc;AACtB,WAAO,KAAK,cAAa;EAC3B;;;;;;;;;;;;;;;;;;EAmBU,gBAAa;;AAIrB,QAAI,CAAC,KAAK,iBAAiB;AACzB;;AAEF,sBAAa,QAAb,kBAAa,SAAA,SAAb,cAAgB,EAAC,MAAM,SAAQ,CAAC;AAEhC,QAAI,CAAC,KAAK,YAAY;AAEpB,UAAID,WAAU;AACZ,cAAM,qBAA+B,CAAA;AACrC,SAAAE,MACE,KAAK,YACL,4BAAsB,QAAAA,QAAA,SAAA,SAAAA,IAAE,QAAQ,CAACE,OAAK;;AACtC,cAAI,KAAK,eAAeA,EAAC,KAAK,GAACF,MAAA,KAAK,0BAAoB,QAAAA,QAAA,SAAA,SAAAA,IAAE,IAAIE,EAAC,IAAG;AAChE,+BAAmB,KAAKA,EAAW;;QAEvC,CAAC;AACD,YAAI,mBAAmB,QAAQ;AAC7B,gBAAM,IAAI,MACR,uCAAuC,KAAK,SAAS,kFAExC,mBAAmB,KAAK,IAAI,CAAC,yKAIjB;;;;AAMjC,QAAI,KAAK,sBAAsB;AAI7B,WAAK,qBAAsB,QAAQ,CAACD,IAAGC,OAAQ,KAAaA,EAAC,IAAID,EAAE;AACnE,WAAK,uBAAuB;;AAE9B,QAAI,eAAe;AACnB,UAAM,oBAAoB,KAAK;AAC/B,QAAI;AACF,qBAAe,KAAK,aAAa,iBAAiB;AAClD,UAAI,cAAc;AAChB,aAAK,WAAW,iBAAiB;AACjC,SAAAI,MAAA,KAAK,mBAAa,QAAAA,QAAA,SAAA,SAAAA,IAAE,QAAQ,CAACC,OAAK;AAAA,cAAAN;AAAC,kBAAAA,MAAAM,GAAE,gBAAU,QAAAN,QAAA,SAAA,SAAAA,IAAA,KAAAM,EAAA;QAAI,CAAA;AACnD,aAAK,OAAO,iBAAiB;aACxB;AACL,aAAK,cAAa;;aAEbP,KAAG;AAGV,qBAAe;AAEf,WAAK,cAAa;AAClB,YAAMA;;AAGR,QAAI,cAAc;AAChB,WAAK,YAAY,iBAAiB;;EAEtC;;;;;;;;;;;;;;;;;;;;;;EAuBU,WAAW,oBAAkC;EAAS;;;EAIhE,YAAY,mBAAiC;;AAC3C,KAAAC,MAAA,KAAK,mBAAa,QAAAA,QAAA,SAAA,SAAAA,IAAE,QAAQ,CAACM,OAAK;AAAA,UAAAN;AAAC,cAAAA,MAAAM,GAAE,iBAAW,QAAAN,QAAA,SAAA,SAAAA,IAAA,KAAAM,EAAA;IAAI,CAAA;AACpD,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,aAAa;AAClB,WAAK,aAAa,iBAAiB;;AAErC,SAAK,QAAQ,iBAAiB;AAC9B,QACER,aACA,KAAK,mBACJ,KAAK,YAAuC,gBAAiB,QAC5D,kBAAkB,KACf,GACL;AACA,mBACE,oBACA,WAAW,KAAK,SAAS,8PAIyC;;EAGxE;EAEQ,gBAAa;AACnB,SAAK,sBAAsB,oBAAI,IAAG;AAClC,SAAK,kBAAkB;EACzB;;;;;;;;;;;;;;;;;EAkBA,IAAI,iBAAc;AAChB,WAAO,KAAK,kBAAiB;EAC/B;;;;;;;;;;;;;;;;;;;;;;;;EAyBU,oBAAiB;AACzB,WAAO,KAAK;EACd;;;;;;;;;EAUU,aAAa,oBAAkC;AACvD,WAAO;EACT;;;;;;;;;;EAWU,OAAO,oBAAkC;AACjD,QAAI,KAAK,2BAA2B,QAAW;AAG7C,WAAK,uBAAuB,QAAQ,CAACG,IAAGM,OACtC,KAAK,sBAAsBA,IAAG,KAAKA,EAAe,GAAGN,EAAC,CAAC;AAEzD,WAAK,yBAAyB;;AAEhC,SAAK,cAAa;EACpB;;;;;;;;;;;EAYU,QAAQ,oBAAkC;EAAG;;;;;;;;;;;;;;;;;EAkB7C,aAAa,oBAAkC;EAAG;;KA99B1C;AAAD,gBAAA,EAAA,IAAc;AAQxB,gBAAA,oBAA4C,oBAAI,IAAG;AAmCnD,gBAAA,gBAA0C,CAAA;AAwQ1C,gBAAA,oBAAoC,EAAC,MAAM,OAAM;AA+qB1D,oBAAe,QAAf,oBAAe,SAAA,SAAf,gBAAkB,EAAC,gBAAe,CAAC;AAGnC,IAAIH,WAAU;AAEZ,kBAAgB,kBAAkB,CAAC,kBAAkB;AACrD,QAAM,oBAAoB,SAAU,MAA4B;AAC9D,QACE,CAAC,KAAK,eAAe,0BAA0B,mBAAmB,IAAI,CAAC,GACvE;AACA,WAAK,kBAAkB,KAAK,gBAAiB,MAAK;;EAEtD;AACA,kBAAgB,gBAAgB,SAE9B,SAAoB;AAEpB,sBAAkB,IAAI;AACtB,QAAI,KAAK,gBAAiB,QAAQ,OAAO,IAAI,GAAG;AAC9C,WAAK,gBAAiB,KAAK,OAAO;;EAEtC;AACA,kBAAgB,iBAAiB,SAE/B,SAAoB;AAEpB,sBAAkB,IAAI;AACtB,UAAMM,MAAI,KAAK,gBAAiB,QAAQ,OAAO;AAC/C,QAAIA,OAAK,GAAG;AACV,WAAK,gBAAiB,OAAOA,KAAG,CAAC;;EAErC;;EAKF,KAACP,QAAO,6BAAuB,QAAA,OAAA,SAAA,KAA9BA,QAAO,0BAA4B,CAAA,GAAI,KAAK,OAAO;AACpD,IAAIC,aAAYD,QAAO,wBAAwB,SAAS,GAAG;AACzD,eACE,qBACA,gFACuB;;;;;;;;ACzgD3B,IAAMW,YAAW;AACjB,IAAM,8BAA8B;AACpC,IAAM,0BAA0B;AAChC,IAAMC,aAAY;AAElB,IAAMC,UAASD,aAAY,aAAa;AAmLxC,IAAME,iBAAgBH,YAClB,CAAC,UAAqC;AACpC,QAAM,aAAcE,QACjB;AACH,MAAI,CAAC,YAAY;AACf;;AAEF,EAAAA,QAAO,cACL,IAAI,YAAwC,aAAa;IACvD,QAAQ;GACT,CAAC;AAEN,IACA;AAIJ,IAAI,mBAAmB;AAEvB,IAAIE;AAEJ,IAAIJ,WAAU;AACZ,GAAAK,MAAAH,QAAO,uBAAiB,QAAAG,QAAA,SAAAA,MAAxBH,QAAO,oBAAsB,oBAAI,IAAG;AAGpC,EAAAE,gBAAe,CAAC,MAAc,YAAmB;AAC/C,eAAW,OACP,4BAA4B,IAAI,2BAChC;AACJ,QAAI,CAACF,QAAO,kBAAmB,IAAI,OAAO,GAAG;AAC3C,cAAQ,KAAK,OAAO;AACpB,MAAAA,QAAO,kBAAmB,IAAI,OAAO;;EAEzC;AAEA,EAAAE,cACE,YACA,qDAAqD;;AAIzD,IAAM,OACJ,6BACAE,MAAAJ,QAAO,cAAQ,QAAAI,QAAA,SAAA,SAAAA,IAAE,YACjBC,MAAAL,QAAO,cAAQ,QAAAK,QAAA,SAAA,SAAAA,IAAE,aAAY,OACzBL,QAAO,SAAU,OACjB,CAAC,SAAe;AAEtB,IAAMM,gBAAgBN,QAAsC;AAU5D,IAAM,SAASM,gBACXA,cAAa,aAAa,YAAY;EACpC,YAAY,CAACC,QAAMA;CACpB,IACD;AA0CJ,IAAM,mBAAmC,CAAC,UAAmB;AAC7D,IAAM,gBAAkC,CACtC,OACA,OACA,UACG;AAGL,IAAM,eAAe,CAAC,iBAAkC;AACtD,MAAI,CAAC,6BAA6B;AAChC;;AAEF,MAAI,6BAA6B,eAAe;AAC9C,UAAM,IAAI,MACR,qHAC8D;;AAGlE,6BAA2B;AAC7B;AAKA,IAAM,gDAAgD,MAAK;AACzD,6BAA2B;AAC7B;AAEA,IAAM,kBAAoC,CAAC,MAAM,MAAM,SAAQ;AAC7D,SAAO,yBAAyB,MAAM,MAAM,IAAI;AAClD;AAIA,IAAM,uBAAuB;AAM7B,IAAM,SAAS,OAAO,OAAO,KAAK,OAAM,CAAE,EAAE,MAAM,CAAC,CAAC;AAGpD,IAAM,cAAc,MAAM;AAI1B,IAAM,aAAa,IAAI,WAAW;AAElC,IAAM,IACJR,cAAaC,QAAO,aAAa,SAC5B;EACC,mBAAgB;AACd,WAAO,CAAA;EACT;IAEF;AAGN,IAAM,eAAe,MAAM,EAAE,cAAc,EAAE;AAI7C,IAAM,cAAc,CAAC,UACnB,UAAU,QAAS,OAAO,SAAS,YAAY,OAAO,SAAS;AACjE,IAAM,UAAU,MAAM;AACtB,IAAM,aAAa,CAAC,UAClB,QAAQ,KAAK;AAEb,QAAQ,UAAa,QAAb,UAAK,SAAA,SAAL,MAAgB,OAAO,QAAQ,OAAM;AAE/C,IAAM,aAAa;;AACnB,IAAM,kBAAkB;;AACxB,IAAM,YAAY;AAgBlB,IAAM,eAAe;AACrB,IAAM,gBAAgB;AACtB,IAAM,WAAW;AACjB,IAAM,mBAAmB;AAEzB,IAAM,kBAAkB;AAIxB,IAAM,mBAAmB;AAwBzB,IAAM,cAAc,IAAI,OACtB,KAAK,UAAU,OAAO,SAAS,MAAM,UAAU,KAAK,UAAU,OAAO,eAAe,gBACpF,GAAG;AAEL,IAAM,eAAe;AACrB,IAAM,iBAAiB;AACvB,IAAM,oBAAoB;AAC1B,IAAM,aAAa;AAEnB,IAAM,0BAA0B;AAChC,IAAM,0BAA0B;AAOhC,IAAM,iBAAiB;AAGvB,IAAM,cAAc;AACpB,IAAM,aAAa;AAMnB,IAAM,iBAAiB;AACvB,IAAM,aAAa;AACnB,IAAM,gBAAgB;AACtB,IAAM,yBAAyB;AAC/B,IAAM,aAAa;AACnB,IAAM,eAAe;AACrB,IAAM,eAAe;AAgDrB,IAAM,MACJ,CAAuB,SACvB,CAAC,YAAkC,WAAwC;AAIzE,MAAIF,aAAY,QAAQ,KAAK,CAACS,QAAMA,QAAM,MAAS,GAAG;AACpD,YAAQ,KACN,kGAC8D;;AAGlE,SAAO;;IAEL,CAAC,YAAY,GAAG;IAChB;IACA;;AAEJ;AAeK,IAAM,OAAO,IAAI,WAAW;AAyB5B,IAAM,MAAM,IAAI,UAAU;AAM1B,IAAM,WAAW,OAAO,IAAI,cAAc;AAqB1C,IAAM,UAAU,OAAO,IAAI,aAAa;AAS/C,IAAM,gBAAgB,oBAAI,QAAO;AAqCjC,IAAM,SAAS,EAAE,iBACf,GACA,KACA,MACA,KAAK;AAGP,IAAI,2BAA6C;AAkBjD,SAAS,wBACP,KACA,eAAqB;AAOrB,MAAI,CAAC,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,eAAe,KAAK,GAAG;AACrD,QAAI,UAAU;AACd,QAAIT,WAAU;AACZ,gBAAU;;;;;;;;;;UAWP,KAAI,EACJ,QAAQ,SAAS,IAAI;;AAE1B,UAAM,IAAI,MAAM,OAAO;;AAEzB,SAAO,WAAW,SACd,OAAO,WAAW,aAAa,IAC9B;AACP;AAcA,IAAM,kBAAkB,CACtB,SACA,SAC4C;AAO5C,QAAMU,MAAI,QAAQ,SAAS;AAI3B,QAAM,YAAuC,CAAA;AAC7C,MAAIC,QAAO,SAAS,aAAa,UAAU;AAK3C,MAAI;AAIJ,MAAI,QAAQ;AAEZ,WAASC,MAAI,GAAGA,MAAIF,KAAGE,OAAK;AAC1B,UAAMH,MAAI,QAAQG,GAAC;AAMnB,QAAI,mBAAmB;AACvB,QAAI;AACJ,QAAI,YAAY;AAChB,QAAI;AAIJ,WAAO,YAAYH,IAAE,QAAQ;AAE3B,YAAM,YAAY;AAClB,cAAQ,MAAM,KAAKA,GAAC;AACpB,UAAI,UAAU,MAAM;AAClB;;AAEF,kBAAY,MAAM;AAClB,UAAI,UAAU,cAAc;AAC1B,YAAI,MAAM,aAAa,MAAM,OAAO;AAClC,kBAAQ;mBACC,MAAM,aAAa,MAAM,QAAW;AAE7C,kBAAQ;mBACC,MAAM,QAAQ,MAAM,QAAW;AACxC,cAAI,eAAe,KAAK,MAAM,QAAQ,CAAC,GAAG;AAGxC,8BAAkB,IAAI,OAAO,KAAK,MAAM,QAAQ,CAAC,IAAI,GAAG;;AAE1D,kBAAQ;mBACC,MAAM,gBAAgB,MAAM,QAAW;AAChD,cAAIT,WAAU;AACZ,kBAAM,IAAI,MACR,kJACsE;;AAG1E,kBAAQ;;iBAED,UAAU,aAAa;AAChC,YAAI,MAAM,YAAY,MAAM,KAAK;AAG/B,kBAAQ,oBAAe,QAAf,oBAAe,SAAf,kBAAmB;AAG3B,6BAAmB;mBACV,MAAM,cAAc,MAAM,QAAW;AAE9C,6BAAmB;eACd;AACL,6BAAmB,MAAM,YAAY,MAAM,iBAAiB,EAAE;AAC9D,qBAAW,MAAM,cAAc;AAC/B,kBACE,MAAM,UAAU,MAAM,SAClB,cACA,MAAM,UAAU,MAAM,MACtB,0BACA;;iBAGR,UAAU,2BACV,UAAU,yBACV;AACA,gBAAQ;iBACC,UAAU,mBAAmB,UAAU,kBAAkB;AAClE,gBAAQ;aACH;AAGL,gBAAQ;AACR,0BAAkB;;;AAItB,QAAIA,WAAU;AAIZ,cAAQ,OACN,qBAAqB,MACnB,UAAU,eACV,UAAU,2BACV,UAAU,yBACZ,0BAA0B;;AAiB9B,UAAM,MACJ,UAAU,eAAe,QAAQY,MAAI,CAAC,EAAE,WAAW,IAAI,IAAI,MAAM;AACnE,IAAAD,SACE,UAAU,eACNF,MAAI,aACJ,oBAAoB,KACnB,UAAU,KAAK,QAAS,GACzBA,IAAE,MAAM,GAAG,gBAAgB,IACzB,uBACAA,IAAE,MAAM,gBAAgB,KAC1B,SACA,MACAA,MACA,UACC,qBAAqB,MAAM,UAAU,KAAK,MAAS,GAAGG,OAAK;;AAGpE,QAAM,aACJD,SAAQ,QAAQD,GAAC,KAAK,UAAU,SAAS,aAAa,WAAW;AAGnE,SAAO,CAAC,wBAAwB,SAAS,UAAU,GAAG,SAAS;AACjE;AAIA,IAAM,WAAN,MAAM,UAAQ;EAMZ,YAEE,EAAC,SAAS,CAAC,YAAY,GAAG,KAAI,GAC9B,SAAuB;AALzB,SAAA,QAA6B,CAAA;AAO3B,QAAI;AACJ,QAAI,YAAY;AAChB,QAAI,gBAAgB;AACpB,UAAM,YAAY,QAAQ,SAAS;AACnC,UAAM,QAAQ,KAAK;AAGnB,UAAM,CAACC,OAAM,SAAS,IAAI,gBAAgB,SAAS,IAAI;AACvD,SAAK,KAAK,UAAS,cAAcA,OAAM,OAAO;AAC9C,WAAO,cAAc,KAAK,GAAG;AAG7B,QAAI,SAAS,YAAY;AACvB,YAAM,UAAU,KAAK,GAAG;AACxB,YAAM,aAAa,QAAQ;AAC3B,iBAAW,OAAM;AACjB,cAAQ,OAAO,GAAG,WAAW,UAAU;;AAIzC,YAAQ,OAAO,OAAO,SAAQ,OAAQ,QAAQ,MAAM,SAAS,WAAW;AACtE,UAAI,KAAK,aAAa,GAAG;AACvB,YAAIX,WAAU;AACZ,gBAAMa,OAAO,KAAiB;AAK9B,cACE,2BAA4B,KAAKA,IAAG,KACnC,KAAiB,UAAU,SAAS,MAAM,GAC3C;AACA,kBAAMC,KACJ,0CAA0CD,IAAG,sDACMA,IAAG;AAExD,gBAAIA,SAAQ,YAAY;AACtB,oBAAM,IAAI,MAAMC,EAAC;;AACZ,cAAAV,cAAa,IAAIU,EAAC;;;AAM7B,YAAK,KAAiB,cAAa,GAAI;AAIrC,gBAAM,gBAAgB,CAAA;AACtB,qBAAW,QAAS,KAAiB,kBAAiB,GAAI;AAQxD,gBACE,KAAK,SAAS,oBAAoB,KAClC,KAAK,WAAW,MAAM,GACtB;AACA,oBAAM,WAAW,UAAU,eAAe;AAC1C,4BAAc,KAAK,IAAI;AACvB,kBAAI,aAAa,QAAW;AAE1B,sBAAM,QAAS,KAAiB,aAC9B,SAAS,YAAW,IAAK,oBAAoB;AAE/C,sBAAM,UAAU,MAAM,MAAM,MAAM;AAClC,sBAAMA,KAAI,eAAe,KAAK,QAAQ;AACtC,sBAAM,KAAK;kBACT,MAAM;kBACN,OAAO;kBACP,MAAMA,GAAE,CAAC;kBACT,SAAS;kBACT,MACEA,GAAE,CAAC,MAAM,MACL,eACAA,GAAE,CAAC,MAAM,MACT,uBACAA,GAAE,CAAC,MAAM,MACT,YACA;iBACP;qBACI;AACL,sBAAM,KAAK;kBACT,MAAM;kBACN,OAAO;iBACR;;;;AAIP,qBAAW,QAAQ,eAAe;AAC/B,iBAAiB,gBAAgB,IAAI;;;AAK1C,YAAI,eAAe,KAAM,KAAiB,OAAO,GAAG;AAIlD,gBAAMC,WAAW,KAAiB,YAAa,MAAM,MAAM;AAC3D,gBAAM,YAAYA,SAAQ,SAAS;AACnC,cAAI,YAAY,GAAG;AAChB,iBAAiB,cAAcP,gBAC3BA,cAAa,cACd;AAMJ,qBAASI,MAAI,GAAGA,MAAI,WAAWA,OAAK;AACjC,mBAAiB,OAAOG,SAAQH,GAAC,GAAG,aAAY,CAAE;AAEnD,qBAAO,SAAQ;AACf,oBAAM,KAAK,EAAC,MAAM,YAAY,OAAO,EAAE,UAAS,CAAC;;AAKlD,iBAAiB,OAAOG,SAAQ,SAAS,GAAG,aAAY,CAAE;;;iBAGtD,KAAK,aAAa,GAAG;AAC9B,cAAM,OAAQ,KAAiB;AAC/B,YAAI,SAAS,aAAa;AACxB,gBAAM,KAAK,EAAC,MAAM,YAAY,OAAO,UAAS,CAAC;eAC1C;AACL,cAAIH,MAAI;AACR,kBAAQA,MAAK,KAAiB,KAAK,QAAQ,QAAQA,MAAI,CAAC,OAAO,IAAI;AAGjE,kBAAM,KAAK,EAAC,MAAM,cAAc,OAAO,UAAS,CAAC;AAEjD,YAAAA,OAAK,OAAO,SAAS;;;;AAI3B;;AAKF,IAAAT,mBAAa,QAAbA,mBAAa,SAAA,SAAbA,eAAgB;MACd,MAAM;MACN,UAAU;MACV,kBAAkB,KAAK;MACvB,OAAO,KAAK;MACZ;KACD;EACH;;;EAIA,OAAO,cAAcQ,OAAmB,UAAwB;AAC9D,UAAMK,MAAK,EAAE,cAAc,UAAU;AACrC,IAAAA,IAAG,YAAYL;AACf,WAAOK;EACT;;AAgBF,SAAS,iBACP,MACA,OACA,SAA0B,MAC1B,gBAAuB;;;AAIvB,MAAI,UAAU,UAAU;AACtB,WAAO;;AAET,MAAI,mBACF,mBAAmB,UACfX,MAAC,OAAyB,kBAAY,QAAAA,QAAA,SAAA,SAAAA,IAAG,cAAc,IACtD,OAA+C;AACtD,QAAM,2BAA2B,YAAY,KAAK,IAC9C;;IAEC,MAA0B,iBAAiB;;AAChD,OAAI,qBAAgB,QAAhB,qBAAgB,SAAA,SAAhB,iBAAkB,iBAAgB,0BAA0B;AAE9D,KAAAC,MAAA,qBAAgB,QAAhB,qBAAgB,SAAA,SAAhB,iBAAmB,oCAAoC,OAAC,QAAAA,QAAA,SAAA,SAAAA,IAAA,KAAA,kBAAG,KAAK;AAChE,QAAI,6BAA6B,QAAW;AAC1C,yBAAmB;WACd;AACL,yBAAmB,IAAI,yBAAyB,IAAgB;AAChE,uBAAiB,aAAa,MAAM,QAAQ,cAAc;;AAE5D,QAAI,mBAAmB,QAAW;AAChC,QAAAC,OAAAU,MAAE,QAAyB,kBAAY,QAAAV,QAAA,SAAAA,MAAAU,IAAZ,eAAiB,CAAA,GAAI,cAAc,IAC5D;WACG;AACJ,aAAiC,cAAc;;;AAGpD,MAAI,qBAAqB,QAAW;AAClC,YAAQ,iBACN,MACA,iBAAiB,UAAU,MAAO,MAA0B,MAAM,GAClE,kBACA,cAAc;;AAGlB,SAAO;AACT;AAOA,IAAM,mBAAN,MAAsB;EASpB,YAAY,UAAoB,QAAiB;AAPjD,SAAA,UAAmC,CAAA;AAKnC,SAAA,2BAAiD;AAG/C,SAAK,aAAa;AAClB,SAAK,WAAW;EAClB;;EAGA,IAAI,aAAU;AACZ,WAAO,KAAK,SAAS;EACvB;;EAGA,IAAI,gBAAa;AACf,WAAO,KAAK,SAAS;EACvB;;;EAIA,OAAO,SAAkC;;AACvC,UAAM,EACJ,IAAI,EAAC,QAAO,GACZ,MAAY,IACV,KAAK;AACT,UAAM,aAAYZ,MAAA,YAAO,QAAP,YAAO,SAAA,SAAP,QAAS,mBAAa,QAAAA,QAAA,SAAAA,MAAI,GAAG,WAAW,SAAS,IAAI;AACvE,WAAO,cAAc;AAErB,QAAI,OAAO,OAAO,SAAQ;AAC1B,QAAI,YAAY;AAChB,QAAI,YAAY;AAChB,QAAI,eAAe,MAAM,CAAC;AAE1B,WAAO,iBAAiB,QAAW;AACjC,UAAI,cAAc,aAAa,OAAO;AACpC,YAAI;AACJ,YAAI,aAAa,SAAS,YAAY;AACpC,iBAAO,IAAI,UACT,MACA,KAAK,aACL,MACA,OAAO;mBAEA,aAAa,SAAS,gBAAgB;AAC/C,iBAAO,IAAI,aAAa,KACtB,MACA,aAAa,MACb,aAAa,SACb,MACA,OAAO;mBAEA,aAAa,SAAS,cAAc;AAC7C,iBAAO,IAAI,YAAY,MAAqB,MAAM,OAAO;;AAE3D,aAAK,QAAQ,KAAK,IAAI;AACtB,uBAAe,MAAM,EAAE,SAAS;;AAElC,UAAI,eAAc,iBAAY,QAAZ,iBAAY,SAAA,SAAZ,aAAc,QAAO;AACrC,eAAO,OAAO,SAAQ;AACtB;;;AAMJ,WAAO,cAAc;AACrB,WAAO;EACT;EAEA,QAAQ,QAAsB;AAC5B,QAAIO,MAAI;AACR,eAAW,QAAQ,KAAK,SAAS;AAC/B,UAAI,SAAS,QAAW;AACtB,QAAAT,mBAAa,QAAbA,mBAAa,SAAA,SAAbA,eAAgB;UACd,MAAM;UACN;UACA,OAAO,OAAOS,GAAC;UACf,YAAYA;UACZ;UACA,kBAAkB;SACnB;AACD,YAAK,KAAuB,YAAY,QAAW;AAChD,eAAuB,WAAW,QAAQ,MAAuBA,GAAC;AAInE,UAAAA,OAAM,KAAuB,QAAS,SAAS;eAC1C;AACL,eAAK,WAAW,OAAOA,GAAC,CAAC;;;AAG7B,MAAAA;;EAEJ;;AA8CF,IAAM,YAAN,MAAM,WAAS;EA4Cb,YACE,WACA,SACA,QACA,SAAkC;;AA/C3B,SAAA,OAAO;AAEhB,SAAA,mBAA4B;AA+B5B,SAAA,2BAAiD;AAgB/C,SAAK,cAAc;AACnB,SAAK,YAAY;AACjB,SAAK,WAAW;AAChB,SAAK,UAAU;AAIf,SAAK,iBAAgBP,MAAA,YAAO,QAAP,YAAO,SAAA,SAAP,QAAS,iBAAW,QAAAA,QAAA,SAAAA,MAAI;AAC7C,QAAI,6BAA6B;AAE/B,WAAK,iBAAiB;;EAE1B;;EAtCA,IAAI,gBAAa;;AAIf,YAAOC,OAAAD,MAAA,KAAK,cAAQ,QAAAA,QAAA,SAAA,SAAAA,IAAE,mBAAa,QAAAC,QAAA,SAAAA,MAAI,KAAK;EAC9C;;;;;;;;;;;;;;;;;;;EAqDA,IAAI,aAAU;AACZ,QAAI,aAAmB,KAAK,KAAK,WAAW,EAAE;AAC9C,UAAM,SAAS,KAAK;AACpB,QACE,WAAW,WACX,eAAU,QAAV,eAAU,SAAA,SAAV,WAAY,cAAa,IACzB;AAIA,mBAAc,OAAwC;;AAExD,WAAO;EACT;;;;;EAMA,IAAI,YAAS;AACX,WAAO,KAAK;EACd;;;;;EAMA,IAAI,UAAO;AACT,WAAO,KAAK;EACd;EAEA,WAAW,OAAgB,kBAAmC,MAAI;;AAChE,QAAIN,aAAY,KAAK,eAAe,MAAM;AACxC,YAAM,IAAI,MACR,0UAA0U;;AAG9U,YAAQ,iBAAiB,MAAM,OAAO,eAAe;AACrD,QAAI,YAAY,KAAK,GAAG;AAItB,UAAI,UAAU,WAAW,SAAS,QAAQ,UAAU,IAAI;AACtD,YAAI,KAAK,qBAAqB,SAAS;AACrC,UAAAG,mBAAa,QAAbA,mBAAa,SAAA,SAAbA,eAAgB;YACd,MAAM;YACN,OAAO,KAAK;YACZ,KAAK,KAAK;YACV,QAAQ,KAAK;YACb,SAAS,KAAK;WACf;AACD,eAAK,QAAO;;AAEd,aAAK,mBAAmB;iBACf,UAAU,KAAK,oBAAoB,UAAU,UAAU;AAChE,aAAK,YAAY,KAAK;;eAGd,MAAyB,YAAY,MAAM,QAAW;AAChE,WAAK,sBAAsB,KAAuB;eACxC,MAAe,aAAa,QAAW;AACjD,UAAIH,eAAYK,MAAA,KAAK,aAAO,QAAAA,QAAA,SAAA,SAAAA,IAAE,UAAS,OAAO;AAC5C,aAAK,YACH,6GACuD;AAEzD,gBAAQ,KACN,yCACA,OACA,oEACA,8DACA,oEACA,2CAA2C;AAE7C;;AAEF,WAAK,YAAY,KAAa;eACrB,WAAW,KAAK,GAAG;AAC5B,WAAK,gBAAgB,KAAK;WACrB;AAEL,WAAK,YAAY,KAAK;;EAE1B;EAEQ,QAAwB,MAAO;AACrC,WAAO,KAAK,KAAK,KAAK,WAAW,EAAE,UAAW,EAAE,aAC9C,MACA,KAAK,SAAS;EAElB;EAEQ,YAAY,OAAW;;AAC7B,QAAI,KAAK,qBAAqB,OAAO;AACnC,WAAK,QAAO;AACZ,UACE,+BACA,6BAA6B,eAC7B;AACA,cAAM,kBAAiBA,MAAA,KAAK,YAAY,gBAAU,QAAAA,QAAA,SAAA,SAAAA,IAAE;AACpD,YAAI,mBAAmB,WAAW,mBAAmB,UAAU;AAC7D,cAAI,UAAU;AACd,cAAIL,WAAU;AACZ,gBAAI,mBAAmB,SAAS;AAC9B,wBACE;mBAOG;AACL,wBACE;;;AAKN,gBAAM,IAAI,MAAM,OAAO;;;AAG3B,MAAAG,mBAAa,QAAbA,mBAAa,SAAA,SAAbA,eAAgB;QACd,MAAM;QACN,OAAO,KAAK;QACZ,QAAQ,KAAK;QACb;QACA,SAAS,KAAK;OACf;AACD,WAAK,mBAAmB,KAAK,QAAQ,KAAK;;EAE9C;EAEQ,YAAY,OAAc;AAIhC,QACE,KAAK,qBAAqB,WAC1B,YAAY,KAAK,gBAAgB,GACjC;AACA,YAAM,OAAO,KAAK,KAAK,WAAW,EAAE;AACpC,UAAI,6BAA6B;AAC/B,YAAI,KAAK,mBAAmB,QAAW;AACrC,eAAK,iBAAiB,gBAAgB,MAAM,QAAQ,UAAU;;AAEhE,gBAAQ,KAAK,eAAe,KAAK;;AAEnC,MAAAA,mBAAa,QAAbA,mBAAa,SAAA,SAAbA,eAAgB;QACd,MAAM;QACN;QACA;QACA,SAAS,KAAK;OACf;AACA,WAAc,OAAO;WACjB;AACL,UAAI,6BAA6B;AAC/B,cAAM,WAAW,EAAE,eAAe,EAAE;AACpC,aAAK,YAAY,QAAQ;AAKzB,YAAI,KAAK,mBAAmB,QAAW;AACrC,eAAK,iBAAiB,gBAAgB,UAAU,QAAQ,UAAU;;AAEpE,gBAAQ,KAAK,eAAe,KAAK;AACjC,QAAAA,mBAAa,QAAbA,mBAAa,SAAA,SAAbA,eAAgB;UACd,MAAM;UACN,MAAM;UACN;UACA,SAAS,KAAK;SACf;AACD,iBAAS,OAAO;aACX;AACL,aAAK,YAAY,EAAE,eAAe,KAAe,CAAC;AAClD,QAAAA,mBAAa,QAAbA,mBAAa,SAAA,SAAbA,eAAgB;UACd,MAAM;UACN,MAAM,KAAK,KAAK,WAAW,EAAE;UAC7B;UACA,SAAS,KAAK;SACf;;;AAGL,SAAK,mBAAmB;EAC1B;EAEQ,sBACN,QAA+C;;AAG/C,UAAM,EAAC,QAAQ,CAAC,YAAY,GAAG,KAAI,IAAI;AAKvC,UAAM,WACJ,OAAO,SAAS,WACZ,KAAK,cAAc,MAAwB,KAC1C,KAAK,OAAO,WACV,KAAK,KAAK,SAAS,cAClB,wBAAwB,KAAK,GAAG,KAAK,EAAE,CAAC,CAAC,GACzC,KAAK,OAAO,IAEhB;AAEN,UAAIE,MAAC,KAAK,sBAAqC,QAAAA,QAAA,SAAA,SAAAA,IAAE,gBAAe,UAAU;AACxE,MAAAF,mBAAa,QAAbA,mBAAa,SAAA,SAAbA,eAAgB;QACd,MAAM;QACN;QACA,UAAU,KAAK;QACf,OAAQ,KAAK,iBAAsC;QACnD,SAAS,KAAK;QACd;OACD;AACA,WAAK,iBAAsC,QAAQ,MAAM;WACrD;AACL,YAAM,WAAW,IAAI,iBAAiB,UAAsB,IAAI;AAChE,YAAM,WAAW,SAAS,OAAO,KAAK,OAAO;AAC7C,MAAAA,mBAAa,QAAbA,mBAAa,SAAA,SAAbA,eAAgB;QACd,MAAM;QACN;QACA;QACA,OAAO,SAAS;QAChB,SAAS,KAAK;QACd;QACA;OACD;AACD,eAAS,QAAQ,MAAM;AACvB,MAAAA,mBAAa,QAAbA,mBAAa,SAAA,SAAbA,eAAgB;QACd,MAAM;QACN;QACA;QACA,OAAO,SAAS;QAChB,SAAS,KAAK;QACd;QACA;OACD;AACD,WAAK,YAAY,QAAQ;AACzB,WAAK,mBAAmB;;EAE5B;;;EAIA,cAAc,QAAsB;AAClC,QAAI,WAAW,cAAc,IAAI,OAAO,OAAO;AAC/C,QAAI,aAAa,QAAW;AAC1B,oBAAc,IAAI,OAAO,SAAU,WAAW,IAAI,SAAS,MAAM,CAAE;;AAErE,WAAO;EACT;EAEQ,gBAAgB,OAAwB;AAW9C,QAAI,CAAC,QAAQ,KAAK,gBAAgB,GAAG;AACnC,WAAK,mBAAmB,CAAA;AACxB,WAAK,QAAO;;AAKd,UAAM,YAAY,KAAK;AACvB,QAAI,YAAY;AAChB,QAAI;AAEJ,eAAW,QAAQ,OAAO;AACxB,UAAI,cAAc,UAAU,QAAQ;AAKlC,kBAAU,KACP,WAAW,IAAI,WACd,KAAK,QAAQ,aAAY,CAAE,GAC3B,KAAK,QAAQ,aAAY,CAAE,GAC3B,MACA,KAAK,OAAO,CACZ;aAEC;AAEL,mBAAW,UAAU,SAAS;;AAEhC,eAAS,WAAW,IAAI;AACxB;;AAGF,QAAI,YAAY,UAAU,QAAQ;AAEhC,WAAK,QACH,YAAY,KAAK,SAAS,SAAU,EAAE,aACtC,SAAS;AAGX,gBAAU,SAAS;;EAEvB;;;;;;;;;;;;EAaA,QACE,QAA0B,KAAK,KAAK,WAAW,EAAE,aACjD,MAAa;;AAEb,KAAAE,MAAA,KAAK,+BAAyB,QAAAA,QAAA,SAAA,SAAAA,IAAA,KAAA,MAAG,OAAO,MAAM,IAAI;AAClD,WAAO,SAAS,UAAU,KAAK,WAAW;AACxC,YAAMa,MAAI,KAAK,KAAM,EAAE;AACtB,WAAK,KAAM,EAAc,OAAM;AAChC,cAAQA;;EAEZ;;;;;;;;EAQA,aAAa,aAAoB;;AAC/B,QAAI,KAAK,aAAa,QAAW;AAC/B,WAAK,gBAAgB;AACrB,OAAAb,MAAA,KAAK,+BAAyB,QAAAA,QAAA,SAAA,SAAAA,IAAA,KAAA,MAAG,WAAW;eACnCL,WAAU;AACnB,YAAM,IAAI,MACR,8EACoC;;EAG1C;;AA2BF,IAAM,gBAAN,MAAmB;EAoCjB,YACE,SACA,MACA,SACA,QACA,SAAkC;AAxC3B,SAAA,OAAO;AAgBhB,SAAA,mBAA6C;AAM7C,SAAA,2BAAiD;AAoB/C,SAAK,UAAU;AACf,SAAK,OAAO;AACZ,SAAK,WAAW;AAChB,SAAK,UAAU;AACf,QAAI,QAAQ,SAAS,KAAK,QAAQ,CAAC,MAAM,MAAM,QAAQ,CAAC,MAAM,IAAI;AAChE,WAAK,mBAAmB,IAAI,MAAM,QAAQ,SAAS,CAAC,EAAE,KAAK,IAAI,OAAM,CAAE;AACvE,WAAK,UAAU;WACV;AACL,WAAK,mBAAmB;;AAE1B,QAAI,6BAA6B;AAC/B,WAAK,aAAa;;EAEtB;EA7BA,IAAI,UAAO;AACT,WAAO,KAAK,QAAQ;EACtB;;EAGA,IAAI,gBAAa;AACf,WAAO,KAAK,SAAS;EACvB;;;;;;;;;;;;;;;;;;;;;;;EA8CA,WACE,OACA,kBAAmC,MACnC,YACA,UAAkB;AAElB,UAAM,UAAU,KAAK;AAGrB,QAAI,SAAS;AAEb,QAAI,YAAY,QAAW;AAEzB,cAAQ,iBAAiB,MAAM,OAAO,iBAAiB,CAAC;AACxD,eACE,CAAC,YAAY,KAAK,KACjB,UAAU,KAAK,oBAAoB,UAAU;AAChD,UAAI,QAAQ;AACV,aAAK,mBAAmB;;WAErB;AAEL,YAAM,SAAS;AACf,cAAQ,QAAQ,CAAC;AAEjB,UAAIY,KAAGO;AACP,WAAKP,MAAI,GAAGA,MAAI,QAAQ,SAAS,GAAGA,OAAK;AACvC,QAAAO,KAAI,iBAAiB,MAAM,OAAO,aAAcP,GAAC,GAAG,iBAAiBA,GAAC;AAEtE,YAAIO,OAAM,UAAU;AAElB,UAAAA,KAAK,KAAK,iBAAoCP,GAAC;;AAEjD,mBAAA,SACE,CAAC,YAAYO,EAAC,KAAKA,OAAO,KAAK,iBAAoCP,GAAC;AACtE,YAAIO,OAAM,SAAS;AACjB,kBAAQ;mBACC,UAAU,SAAS;AAC5B,oBAAUA,OAAC,QAADA,OAAC,SAADA,KAAK,MAAM,QAAQP,MAAI,CAAC;;AAInC,aAAK,iBAAoCA,GAAC,IAAIO;;;AAGnD,QAAI,UAAU,CAAC,UAAU;AACvB,WAAK,aAAa,KAAK;;EAE3B;;EAGA,aAAa,OAAc;AACzB,QAAI,UAAU,SAAS;AACpB,WAAK,KAAK,OAAO,EAAc,gBAAgB,KAAK,IAAI;WACpD;AACL,UAAI,6BAA6B;AAC/B,YAAI,KAAK,eAAe,QAAW;AACjC,eAAK,aAAa,yBAChB,KAAK,SACL,KAAK,MACL,WAAW;;AAGf,gBAAQ,KAAK,WAAW,UAAK,QAAL,UAAK,SAAL,QAAS,EAAE;;AAErC,MAAAhB,mBAAa,QAAbA,mBAAa,SAAA,SAAbA,eAAgB;QACd,MAAM;QACN,SAAS,KAAK;QACd,MAAM,KAAK;QACX;QACA,SAAS,KAAK;OACf;AACA,WAAK,KAAK,OAAO,EAAc,aAC9B,KAAK,MACJ,UAAK,QAAL,UAAK,SAAL,QAAS,EAAa;;EAG7B;;AAIF,IAAM,eAAN,cAA2B,cAAa;EAAxC,cAAA;;AACoB,SAAA,OAAO;EAwB3B;;EArBW,aAAa,OAAc;AAClC,QAAI,6BAA6B;AAC/B,UAAI,KAAK,eAAe,QAAW;AACjC,aAAK,aAAa,yBAChB,KAAK,SACL,KAAK,MACL,UAAU;;AAGd,cAAQ,KAAK,WAAW,KAAK;;AAE/B,IAAAA,mBAAa,QAAbA,mBAAa,SAAA,SAAbA,eAAgB;MACd,MAAM;MACN,SAAS,KAAK;MACd,MAAM,KAAK;MACX;MACA,SAAS,KAAK;KACf;AAEA,SAAK,QAAgB,KAAK,IAAI,IAAI,UAAU,UAAU,SAAY;EACrE;;AAOF,IAAMiB,kCAAiCZ,gBAClCA,cAAa,cACd;AAGJ,IAAM,uBAAN,cAAmC,cAAa;EAAhD,cAAA;;AACoB,SAAA,OAAO;EAoB3B;;EAjBW,aAAa,OAAc;AAClC,IAAAL,mBAAa,QAAbA,mBAAa,SAAA,SAAbA,eAAgB;MACd,MAAM;MACN,SAAS,KAAK;MACd,MAAM,KAAK;MACX,OAAO,CAAC,EAAE,SAAS,UAAU;MAC7B,SAAS,KAAK;KACf;AACD,QAAI,SAAS,UAAU,SAAS;AAC7B,WAAK,KAAK,OAAO,EAAc,aAC9B,KAAK,MACLiB,+BAA8B;WAE3B;AACJ,WAAK,KAAK,OAAO,EAAc,gBAAgB,KAAK,IAAI;;EAE7D;;AAkBF,IAAM,YAAN,cAAwB,cAAa;EAGnC,YACE,SACA,MACA,SACA,QACA,SAAkC;AAElC,UAAM,SAAS,MAAM,SAAS,QAAQ,OAAO;AAT7B,SAAA,OAAO;AAWvB,QAAIpB,aAAY,KAAK,YAAY,QAAW;AAC1C,YAAM,IAAI,MACR,QAAQ,QAAQ,SAAS,gBAAgB,IAAI,8HAEF;;EAGjD;;;;EAKS,WACP,aACA,kBAAmC,MAAI;;AAEvC,mBACEK,MAAA,iBAAiB,MAAM,aAAa,iBAAiB,CAAC,OAAC,QAAAA,QAAA,SAAAA,MAAI;AAC7D,QAAI,gBAAgB,UAAU;AAC5B;;AAEF,UAAM,cAAc,KAAK;AAIzB,UAAM,uBACH,gBAAgB,WAAW,gBAAgB,WAC3C,YAAyC,YACvC,YAAyC,WAC3C,YAAyC,SACvC,YAAyC,QAC3C,YAAyC,YACvC,YAAyC;AAI9C,UAAM,oBACJ,gBAAgB,YACf,gBAAgB,WAAW;AAE9B,IAAAF,mBAAa,QAAbA,mBAAa,SAAA,SAAbA,eAAgB;MACd,MAAM;MACN,SAAS,KAAK;MACd,MAAM,KAAK;MACX,OAAO;MACP,SAAS,KAAK;MACd,gBAAgB;MAChB,aAAa;MACb;KACD;AACD,QAAI,sBAAsB;AACxB,WAAK,QAAQ,oBACX,KAAK,MACL,MACA,WAAuC;;AAG3C,QAAI,mBAAmB;AAIrB,WAAK,QAAQ,iBACX,KAAK,MACL,MACA,WAAuC;;AAG3C,SAAK,mBAAmB;EAC1B;EAEA,YAAY,OAAY;;AACtB,QAAI,OAAO,KAAK,qBAAqB,YAAY;AAC/C,WAAK,iBAAiB,MAAKG,OAAAD,MAAA,KAAK,aAAO,QAAAA,QAAA,SAAA,SAAAA,IAAE,UAAI,QAAAC,QAAA,SAAAA,MAAI,KAAK,SAAS,KAAK;WAC/D;AACJ,WAAK,iBAAyC,YAAY,KAAK;;EAEpE;;AAIF,IAAM,cAAN,MAAiB;EAiBf,YACS,SACP,QACA,SAAkC;AAF3B,SAAA,UAAA;AAjBA,SAAA,OAAO;AAYhB,SAAA,2BAAiD;AAS/C,SAAK,WAAW;AAChB,SAAK,UAAU;EACjB;;EAGA,IAAI,gBAAa;AACf,WAAO,KAAK,SAAS;EACvB;EAEA,WAAW,OAAc;AACvB,IAAAH,mBAAa,QAAbA,mBAAa,SAAA,SAAbA,eAAgB;MACd,MAAM;MACN,SAAS,KAAK;MACd;MACA,SAAS,KAAK;KACf;AACD,qBAAiB,MAAM,KAAK;EAC9B;;AAyCF,IAAMkB,mBAAkBC,YACpBC,QAAO,gCACPA,QAAO;AACXF,qBAAe,QAAfA,qBAAe,SAAA,SAAfA,iBAAkB,UAAU,SAAS;EAIrCG,MAACD,QAAO,qBAAe,QAAAC,QAAA,SAAAA,MAAtBD,QAAO,kBAAoB,CAAA,GAAI,KAAK,OAAO;AAC5C,IAAID,aAAYC,QAAO,gBAAgB,SAAS,GAAG;AACjD,EAAAE,cACE,qBACA,gFACiD;;AA6B9C,IAAM,SAAS,CACpB,OACA,WACA,YACY;;AACZ,MAAIH,aAAY,aAAa,MAAM;AAKjC,UAAM,IAAI,UAAU,2CAA2C,SAAS,EAAE;;AAE5E,QAAM,WAAWA,YAAW,qBAAqB;AACjD,QAAM,iBAAgBI,MAAA,YAAO,QAAP,YAAO,SAAA,SAAP,QAAS,kBAAY,QAAAA,QAAA,SAAAA,MAAI;AAG/C,MAAI,OAAmB,cAAsB,YAAY;AACzD,EAAAC,mBAAa,QAAbA,mBAAa,SAAA,SAAbA,eAAgB;IACd,MAAM;IACN,IAAI;IACJ;IACA;IACA;IACA;GACD;AACD,MAAI,SAAS,QAAW;AACtB,UAAM,WAAUC,MAAA,YAAO,QAAP,YAAO,SAAA,SAAP,QAAS,kBAAY,QAAAA,QAAA,SAAAA,MAAI;AAGxC,kBAAsB,YAAY,IAAI,OAAO,IAAI,UAChD,UAAU,aAAa,aAAY,GAAI,OAAO,GAC9C,SACA,QACA,YAAO,QAAP,YAAO,SAAP,UAAW,CAAA,CAAE;;AAGjB,OAAK,WAAW,KAAK;AACrB,EAAAD,mBAAa,QAAbA,mBAAa,SAAA,SAAbA,eAAgB;IACd,MAAM;IACN,IAAI;IACJ;IACA;IACA;IACA;GACD;AACD,SAAO;AACT;AAEA,IAAI,6BAA6B;AAC/B,SAAO,eAAe;AACtB,SAAO,kBAAkB;AACzB,MAAIL,WAAU;AACZ,WAAO,gDACL;;;;;;;;AClkEN,IAAMO,YAAW;AAEjB,IAAIC;AAEJ,IAAID,WAAU;AAGZ,QAAM,kBACJE,MAAC,WAAW,uBAAiB,QAAAA,QAAA,SAAAA,MAA5B,WAAW,oBAAsB,oBAAI,IAAG;AAG3C,EAAAD,gBAAe,CAAC,MAAc,YAAmB;AAC/C,eAAW,4BAA4B,IAAI;AAC3C,QAAI,CAAC,eAAe,IAAI,OAAO,GAAG;AAChC,cAAQ,KAAK,OAAO;AACpB,qBAAe,IAAI,OAAO;;EAE9B;;AAYI,IAAO,aAAP,cAA0B,gBAAe;EAA/C,cAAA;;AAgBW,SAAA,gBAA+B,EAAC,MAAM,KAAI;AAE3C,SAAA,cAAoC;EA8F9C;;;;EAzFqB,mBAAgB;;;AACjC,UAAM,aAAa,MAAM,iBAAgB;AAMzC,KAAAC,OAAAC,MAAA,KAAK,eAAc,kBAAY,QAAAD,QAAA,SAAAA,MAAAC,IAAZ,eAAiB,WAAY;AAChD,WAAO;EACT;;;;;;;;EASmB,OAAO,mBAAiC;AAIzD,UAAM,QAAQ,KAAK,OAAM;AACzB,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,cAAc,cAAc,KAAK;;AAExC,UAAM,OAAO,iBAAiB;AAC9B,SAAK,cAAc,OAAO,OAAO,KAAK,YAAY,KAAK,aAAa;EACtE;;;;;;;;;;;;;;;;;;;;;EAsBS,oBAAiB;;AACxB,UAAM,kBAAiB;AACvB,KAAAD,MAAA,KAAK,iBAAW,QAAAA,QAAA,SAAA,SAAAA,IAAE,aAAa,IAAI;EACrC;;;;;;;;;;;;;;;;;;;;EAqBS,uBAAoB;;AAC3B,UAAM,qBAAoB;AAC1B,KAAAA,MAAA,KAAK,iBAAW,QAAAA,QAAA,SAAA,SAAAA,IAAE,aAAa,KAAK;EACtC;;;;;;;;EASU,SAAM;AACd,WAAO;EACT;;AAvG0B,WAAC,WAAW,IAAI;AAGnC,WAAC,eAAe,IAAI;CAwG7BC,MAAA,WAAW,8BAAwB,QAAAA,QAAA,SAAA,SAAAA,IAAA,KAAA,YAAG,EAAC,WAAU,CAAC;AAGlD,IAAMC,mBAAkBJ,YACpB,WAAW,mCACX,WAAW;AACfI,qBAAe,QAAfA,qBAAe,SAAA,SAAfA,iBAAkB,EAAC,WAAU,CAAC;AAG9B,IAAIJ,WAAU;AAIX,aAAmB,UAAU,IAAI,WAAA;AAChC,UAAMK,aAAa,gBAAwB,SAAS,KAAK,IAAI;AAC7D,QAAI,CAACA,YAAW;AACd,aAAO;;AAET,UAAM,uBAAuB,CAAC,KAAU,MAAc,UAAU,UAAS;AACvE,UAAI,IAAI,eAAe,IAAI,GAAG;AAC5B,cAAM,YAAY,OAAO,QAAQ,aAAa,MAAM,IAAI,aACrD;AACH,QAAAJ,cACE,UAAU,gBAAgB,eAC1B,KAAK,IAAI,8BAA8B,QAAQ,iBACjC,UAAU,YAAY,SAAS,iCACX;;IAGxC;AACA,yBAAqB,MAAM,QAAQ;AACnC,yBAAqB,MAAM,aAAa,IAAI;AAC5C,yBAAsB,KAA2B,WAAW,aAAa;AACzE,WAAO;EACT;;EAqCFK,MAAC,WAAW,wBAAkB,QAAAA,QAAA,SAAAA,MAA7B,WAAW,qBAAuB,CAAA,GAAI,KAAK,OAAO;AACnD,IAAIC,aAAY,WAAW,mBAAmB,SAAS,GAAG;AACxD,EAAAC,cACE,qBACA,gFACuB;;;;AClS3B,IAAM,mBAAmB,CACvB,SACA,YACE;AAIF,MACE,QAAQ,SAAS,YACjB,QAAQ,cACR,EAAE,WAAW,QAAQ,aACrB;AACA,WAAO;MACL,GAAG;MACH,SAAS,OAA6B;AACpC,cAAM,eAAe,QAAQ,KAAK,OAAO;MAC3C;;SAEG;AAIL,WAAO;MACL,MAAM;MACN,KAAK,OAAM;MACX,WAAW;MACX,YAAY,CAAA;;MAEZ,aAAa,QAAQ;;;;;;;;;;MAUrB,cAAW;AACT,YAAI,OAAO,QAAQ,gBAAgB,YAAY;AAC7C,eAAK,QAAQ,GAAa,IAAI,QAAQ,YAAY,KAAK,IAAI;;MAE/D;MACA,SAAS,OAA6B;AACpC,cAAM,eAAe,QAAQ,KAAK,OAAO;MAC3C;;;AAGN;AAEA,IAAM,iBAAiB,CACrB,SACA,OACA,SACE;AACD,QAAM,YAAuC,eAAe,MAAM,OAAO;AAC5E;AAkCM,SAAU,SAAS,SAA6B;AAEpD,SAAO,CAAC,mBAA0C,SAChD,SAAS,SACL,eAAe,SAAU,mBAA6B,IAAI,IAC1D,iBAAiB,SAAU,iBAAiC;AACpE;;;AC7EM,SAAU,MAAM,SAAqC;AACzD,SAAO,SAAS;IACd,GAAG;IACH,OAAO;GACR;AACH;;;;ACrBA,IAAMC,aAAY;AAClB,IAAMC,UAASD,aAAY,aAAa;AAKxC,IAAM,yBACJE,MAAAD,QAAO,qBAAe,QAAAC,QAAA,SAAA,SAAAA,IAAE,UAAU,qBAAoB,OAClD,CAAC,MAAuB,SACtB,KAAK,iBAAiB,IAAI,IAC5B,CAAC,MAAuB,SACtB,KACG,cAAc,IAAI,EAClB,OACC,CAAC,SAA0B,KAAK,aAAa,KAAK,YAAY;;;AChC1E,IAAM,IAAE,CAACC,KAAEC,QAAI;AAAC,iBAAe,IAAID,GAAC,KAAG,eAAe,OAAOA,KAAEC,GAAC;AAAC;AAAjE,IAAmE,IAAE,MAAI,OAAO,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,MAAM,CAAC,CAAC,IAAI,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,MAAM,CAAC,CAAC;AAA1J,IAA6J,IAAE,CAACD,KAAEC,KAAEC,QAAI;AAAC,EAAAA,QAAGF,OAAA,gBAAAA,IAAG,aAAaC,KAAEC;AAAE;AAAhM,IAAkM,IAAE,CAACF,KAAEC,KAAEC,QAAI;AAA7M,MAAAC;AAA8M,EAAAD,SAAGC,MAAAH,IAAE,cAAF,gBAAAG,IAAa,IAAIF;AAAE;AAApO,IAAsO,IAAE,CAACD,KAAEC,QAAI;AAAC,UAAQ,KAAK,oBAAmBD,KAAEC,GAAC;AAAC;AAApR,IAAsR,IAAE,CAACD,KAAEC,QAAI;AAAC,UAAQ,MAAM,kBAAiBD,KAAEC,GAAC;AAAC;AAAnU,IAAqU,IAAE,CAAAD,QAAGA,MAAE,IAAEA,MAAE,KAAG,MAAIA,MAAE,KAAGA,MAAE;AAA9V,IAAiW,IAAE,CAACA,KAAEC,QAAI;AAAC,UAAOD,KAAE;AAAA,IAAC,KAAK;AAAE,aAAM,UAAU,UAAU,GAAEC,GAAC;AAAA,IAAE,KAAK;AAAE,aAAM,WAAW,UAAU,GAAEA,GAAC;AAAA,IAAE,KAAK;AAAE,aAAM,OAAO,UAAU,GAAEA,GAAC;AAAA,IAAE,KAAK;AAAE,aAAM,QAAQ,UAAU,GAAEA,GAAC;AAAA,IAAE,KAAK;AAAE,aAAM,MAAM,UAAU,GAAEA,GAAC;AAAA,IAAE,KAAK;AAAE,aAAM,OAAO,UAAU,GAAEA,GAAC;AAAA,IAAE,KAAK;AAAE,aAAM,OAAO,UAAU,GAAEA,GAAC;AAAA,IAAE,KAAK;AAAE,aAAM,UAAU,UAAU,GAAEA,GAAC;AAAA,IAAE,KAAK;AAAE,aAAM,YAAY,UAAU,GAAEA,GAAC;AAAA,IAAE,KAAK;AAAE,aAAM,UAAU,UAAU,GAAEA,GAAC;AAAA,IAAE,KAAK;AAAG,aAAM,WAAW,UAAU,GAAEA,GAAC;AAAA,IAAE,KAAK;AAAG,aAAM,WAAW,UAAU,GAAEA,GAAC;AAAA,IAAE;AAAQ,aAAM;AAAA,EAAE;AAAC;;;ACAt0B,IAAMG,KAAN,MAAO;AAAA,EAAC,YAAYA,KAAE;AAAC,SAAK,iBAAe,IAAG,KAAK,OAAKA;AAAA,EAAC;AAAA,EAAC,IAAI,eAAc;AAAC,WAAO,KAAK,KAAK,cAAc,mBAAmB;AAAA,EAAC;AAAA,EAAC,IAAI,aAAY;AAAC,WAAO,KAAK,SAAO,KAAK,YAAU,KAAK;AAAA,EAAM;AAAA,EAAC,IAAI,QAAO;AAAC,WAAO,KAAK,KAAK,cAAc,OAAO;AAAA,EAAC;AAAA,EAAC,IAAI,WAAU;AAAC,WAAO,KAAK,KAAK,cAAc,UAAU;AAAA,EAAC;AAAA,EAAC,IAAI,SAAQ;AAAC,WAAO,KAAK,KAAK,cAAc,QAAQ;AAAA,EAAC;AAAA,EAAC,IAAI,QAAO;AAAC,WAAO,KAAK,KAAK,cAAc,OAAO;AAAA,EAAC;AAAA,EAAC,IAAI,SAAQ;AAAC,WAAO,KAAK,KAAK,cAAc,YAAY;AAAA,EAAC;AAAA,EAAC,IAAI,OAAM;AAA5d,QAAAC;AAA6d,aAAOA,MAAA,KAAK,KAAK,eAAV,gBAAAA,IAAsB,cAAc,iBAAc,KAAK,KAAK,cAAc,WAAW;AAAA,EAAC;AAAA,EAAC,IAAI,OAAM;AAAC,WAAO,KAAK,KAAK,cAAc,eAAe;AAAA,EAAC;AAAA,EAAC,mBAAkB;AAAC,SAAK,iBAAe,KAAK,aAAa,MAAM,UAAQ;AAAA,EAAQ;AAAA,EAAC,mBAAkB;AAAC,SAAK,iBAAe,KAAK,aAAa,MAAM,UAAQ;AAAA,EAAO;AAAA,EAAC,wBAAwBD,KAAE;AAAC,QAAIE,MAAE,IAAI,YAAY,gBAAe,EAAC,QAAO,EAAC,OAAMF,IAAC,EAAC,CAAC;AAAE,SAAK,KAAK,cAAcE,GAAC;AAAA,EAAC;AAAA,EAAC,gBAAgBF,KAAE;AAAC,SAAK,gBAAcA,IAAE,aAAa,oBAAmB,KAAK,cAAc,GAAEA,IAAE,aAAa,gBAAe,MAAM,GAAE,KAAK,KAAK,aAAa,SAAQ,OAAO,GAAE,KAAK,wBAAwB,KAAE;AAAA,EAAC;AAAA,EAAC,cAAcA,KAAE;AAAC,SAAK,gBAAcA,IAAE,gBAAgB,kBAAkB,GAAEA,IAAE,gBAAgB,cAAc,GAAE,KAAK,KAAK,aAAa,SAAQ,MAAM,GAAE,KAAK,wBAAwB,IAAE;AAAA,EAAC;AAAC;;;ACAtpC,IAAMG,KAAN,cAAgBC,GAAC;AAAA,EAAC,YAAYA,KAAE;AAAC,UAAMA,GAAC,GAAE,KAAK,WAAS,YAAS;AAAC,YAAM,KAAK,KAAK,gBAAe,KAAK,YAAY,GAAE,KAAK,cAAc,GAAE,KAAK,YAAY,GAAE,KAAK,eAAe;AAAA,IAAC,GAAE,KAAK,KAAK,cAAc,IAAI;AAAA,EAAC;AAAA,EAAC,gBAAe;AAAC,SAAK,SAAS;AAAA,EAAC;AAAA,EAAC,cAAa;AAA5W,QAAAC;AAA6W,MAAAA,MAAA,KAAK,eAAL,gBAAAA,IAAiB,aAAU,KAAK,WAAW,aAAa,iBAAgB,MAAM;AAAA,EAAC;AAAA,EAAC,cAAa;AAA1c,QAAAA,KAAAC,KAAAC;AAA2c,QAAIC,QAAEH,MAAA,KAAK,eAAL,gBAAAA,IAAiB,aAAa,UAAO,EAAE;AAAE,MAAAC,MAAA,KAAK,eAAL,gBAAAA,IAAiB,aAAa,YAAOC,MAAA,KAAK,eAAL,gBAAAA,IAAiB,aAAa,MAAKC,OAAG,KAAK,SAAO,KAAK,MAAM,aAAa,OAAMA,GAAC;AAAA,EAAC;AAAA,EAAC,gBAAe;AAAC,QAAG,KAAK,OAAM;AAAC,UAAIA,MAAE,KAAK,MAAM,aAAa,IAAI,KAAG,EAAE;AAAE,WAAK,MAAM,aAAa,IAAI,KAAG,KAAK,MAAM,aAAa,MAAKA,GAAC,GAAE,KAAK,cAAY,KAAK,WAAW,aAAa,mBAAkBA,GAAC;AAAA,IAAC;AAAM,cAAQ,KAAK,uBAAsB,KAAK,UAAU;AAAA,EAAC;AAAA,EAAC,iBAAgB;AAAC,QAAG,KAAK,MAAK;AAAC,UAAIA,MAAE,KAAK,KAAK,aAAa,IAAI,KAAG,EAAE;AAAE,WAAK,KAAK,aAAa,IAAI,KAAG,KAAK,KAAK,aAAa,MAAKA,GAAC,GAAE,KAAK,cAAY,KAAK,WAAW,aAAa,oBAAmBA,GAAC;AAAA,IAAC;AAAA,EAAC;AAAC;;;ACAzgC,IAAMC,KAAN,cAAgBA,GAAC;AAAA,EAAC,YAAYC,KAAE;AAAC,UAAMA,GAAC,GAAE,KAAK,KAAK,cAAc,IAAI;AAAA,EAAC;AAAA,EAAC,kBAAiB;AAA9I,QAAAC;AAA+I,SAAK,YAAQA,MAAA,KAAK,eAAL,gBAAAA,IAAiB,aAAU,KAAK,MAAM,UAAU,IAAI,oBAAoB,GAAE,KAAK,KAAK,aAAW,SAAK,KAAK,MAAM,UAAU,OAAO,oBAAoB,GAAE,KAAK,KAAK,aAAW;AAAA,EAAI;AAAA,EAAC,mBAAkB;AAA9V,QAAAA;AAA+V,SAAK,WAAOA,MAAA,KAAK,eAAL,gBAAAA,IAAiB,YAAS,KAAK,KAAK,aAAW,OAAG,KAAK,KAAK,aAAW;AAAA,EAAG;AAAA,EAAC,gBAAe;AAAC,QAAG,KAAK,YAAW;AAAC,UAAI,iBAAkB,CAAAD,QAAG;AAAC,QAAAA,IAAE,QAAS,CAAAA,QAAG;AAAC,0BAAcA,IAAE,SAAO,KAAK,gBAAgB,GAAE,KAAK,iBAAiB;AAAA,QAAE,CAAE;AAAA,MAAC,CAAE,EAAE,QAAQ,KAAK,YAAW,EAAC,YAAW,KAAE,CAAC;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,cAAa;AAAC,SAAK,gBAAgB,GAAE,KAAK,iBAAiB;AAAA,EAAC;AAAC;;;ACA7pB,IAAI,IAAE;;;ACA8E,IAAME,KAAN,cAAgBC,GAAC;AAAA,EAAC,YAAYA,KAAE;AAAC,UAAMA,GAAC,GAAE,KAAK,mBAAiB,YAAS;AAAC,YAAM,KAAK,KAAK,iBAAgB,KAAK,aAAa,KAAG,KAAK,mCAAmC,MAAI,KAAK,gBAAgB,GAAE,KAAK,KAAK,aAAa,OAAO,KAAG,WAAS,KAAK,KAAK,aAAa,OAAO,IAAE,KAAK,eAAa,KAAK,gBAAgB,KAAK,UAAU,GAAE,KAAK,iBAAiB,KAAG,KAAK,iBAAiB;AAAA,IAAC,GAAE,KAAK,sBAAoB,CAAAA,QAAG;AAAC,UAAG,KAAK,YAAW;AAAC,QAAAA,IAAE,SAAS,SAAO,KAAK,cAAc,KAAK,UAAU,GAAE,KAAK,iBAAiB,MAAI,KAAK,gBAAgB,KAAK,UAAU,GAAE,KAAK,iBAAiB;AAAA,MAAE;AAAA,IAAC,GAAE,KAAK,KAAK,cAAc,IAAI;AAAA,EAAC;AAAA,EAAC,gBAAe;AAAC,SAAK,iBAAiB;AAAA,EAAC;AAAA,EAAC,eAAc;AAAC,WAAM,CAAC,KAAK,SAAS;AAAA,EAAC;AAAA,EAAC,qCAAoC;AAAC,WAAO,KAAK,SAAS,KAAG,CAAC,KAAK,4BAA4B;AAAA,EAAC;AAAA,EAAC,8BAA6B;AAAh5B,QAAAC;AAAi5B,UAAMD,OAAEC,MAAA,KAAK,SAAS,MAAd,gBAAAA,IAAiB;AAAW,WAAOD,MAAE,MAAM,KAAKA,GAAC,EAAE,KAAM,CAAAA,QAAG,wBAAsBA,IAAE,SAAS,YAAY,CAAE,IAAE;AAAA,EAAI;AAAA,EAAC,WAAU;AAAC,WAAO,KAAK,KAAK,QAAQ,qBAAqB,KAAG,KAAK,KAAK,QAAQ,iBAAiB,KAAG,KAAK,KAAK,QAAQ,oBAAoB;AAAA,EAAC;AAAA,EAAC,kBAAiB;AAAC,SAAK,iBAAe,EAAE,GAAE,KAAK,gBAAc,KAAK,aAAa,aAAa,MAAK,KAAK,cAAc,GAAE,kBAAiB,KAAK,QAAM,CAAC,KAAK,KAAK,gBAAc,KAAK,wBAAwB;AAAA,EAAC;AAAA,EAAC,0BAAyB;AAAC,SAAK,eAAa,KAAK,WAAW,iBAAiB,WAAW,CAAAA,QAAG,KAAK,oBAAoBA,IAAE,MAAM,CAAE,GAAE,KAAK,WAAW,iBAAiB,QAAQ,CAAAA,QAAG,KAAK,oBAAoBA,IAAE,MAAM,CAAE,GAAE,eAAa,KAAK,WAAW,aAAa,MAAM,KAAG,KAAK,WAAW,iBAAiB,UAAU,CAAAA,QAAG,KAAK,oBAAoBA,IAAE,MAAM,CAAE;AAAA,EAAE;AAAA,EAAC,mBAAkB;AAAC,SAAK,eAAa,KAAK,WAAW,oBAAoB,WAAW,CAAAA,QAAG,KAAK,oBAAoBA,IAAE,MAAM,CAAE,GAAE,KAAK,WAAW,oBAAoB,QAAQ,CAAAA,QAAG,KAAK,oBAAoBA,IAAE,MAAM,CAAE,GAAE,eAAa,KAAK,WAAW,aAAa,MAAM,KAAG,KAAK,WAAW,oBAAoB,UAAU,CAAAA,QAAG,KAAK,oBAAoBA,IAAE,MAAM,CAAE;AAAA,EAAE;AAAC;;;ACAzpD,IAAME,KAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,aAAW,OAAG,KAAK,YAAU,OAAG,KAAK,QAAM,OAAG,KAAK,eAAa,OAAG,KAAK,iBAAe,IAAIC,GAAE,IAAI,GAAE,KAAK,qBAAmB,IAAIC,GAAE,IAAI,GAAE,KAAK,kBAAgB,IAAID,GAAE,IAAI;AAAA,EAAC;AAAA,EAAC,IAAI,QAAO;AAAC,WAAO,KAAK,cAAc,OAAO;AAAA,EAAC;AAAA,EAAC,IAAI,WAAU;AAAC,WAAO,KAAK,cAAc,UAAU;AAAA,EAAC;AAAA,EAAC,IAAI,SAAQ;AAAC,WAAO,KAAK,cAAc,QAAQ;AAAA,EAAC;AAAA,EAAC,IAAI,eAAc;AAAC,WAAO,KAAK,cAAc,mBAAmB;AAAA,EAAC;AAAA,EAAC,IAAI,OAAM;AAAC,WAAO,KAAK,cAAc,WAAW;AAAA,EAAC;AAAA,EAAC,IAAI,SAAQ;AAAC,WAAO,KAAK,cAAc,YAAY;AAAA,EAAC;AAAA,EAAC,IAAI,aAAY;AAAC,WAAO,KAAK,SAAO,KAAK,YAAU,KAAK;AAAA,EAAM;AAAA,EAAC,aAAaC,KAAE;AAAr+B,QAAAC;AAAs+B,UAAM,aAAaD,GAAC,GAAE,KAAK,eAAWC,MAAA,KAAK,eAAL,gBAAAA,IAAiB,UAAQ,KAAK,QAAM,KAAK,KAAK,aAAa,QAAO,GAAG,GAAE,KAAK,WAAW;AAAA,EAAC;AAAA,EAAC,aAAY;AAAC,SAAK,WAAW,KAAK,cAAc,OAAO,GAAE,OAAO,GAAE,KAAK,cAAY,KAAK,WAAW,KAAK,YAAW,KAAK,WAAW,QAAQ,YAAY,CAAC,GAAE,KAAK,WAAW,KAAK,cAAa,WAAW,GAAE,KAAK,WAAW,KAAK,MAAK,MAAM,GAAE,KAAK,WAAW,KAAK,QAAO,QAAQ;AAAA,EAAC;AAAA,EAAC,WAAWD,KAAED,KAAE;AAAr4C,QAAAE;AAAs4C,IAAAD,SAAGC,MAAA,KAAK,eAAL,gBAAAA,IAAiB,cAAc,cAAcF,GAAC,UAAOC,IAAE,aAAa,QAAOD,GAAC;AAAA,EAAC;AAAA,EAAC,aAAY;AAAC,QAAG,KAAK,cAAc,eAAe;AAAE,aAAO;AAAA,EAA+D;AAAA,EAAC,SAAQ;AAAC,WAAO;AAAA,EAAgB;AAAC;AAACD,GAAE,SAAO,CAAC,CAAC,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,GAAE,WAAU,cAAa,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,GAAE,WAAU,aAAY,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,GAAE,WAAU,gBAAe,MAAM;;;ACA1zD,IAAII,KAAE;;;ACAyL,IAAM,IAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,UAAQ,OAAG,KAAK,QAAM,QAAO,KAAK,YAAU,OAAG,KAAK,YAAU,OAAG,KAAK,kBAAgB,MAAI;AAA5W,UAAAC;AAA6W,WAAK,aAAUA,MAAA,KAAK,UAAL,gBAAAA,IAAY;AAAA,IAAO,GAAE,KAAK,kBAAgB,MAAI;AAA1a,UAAAA;AAA2a,OAAAA,MAAA,KAAK,UAAL,gBAAAA,IAAY,SAAQ,KAAK,gBAAgB;AAAA,IAAC,GAAE,KAAK,gBAAc,MAAI;AAAC,WAAK,YAAU;AAAA,IAAE,GAAE,KAAK,eAAa,MAAI;AAAC,WAAK,YAAU;AAAA,IAAE,GAAE,KAAK,gBAAc,CAAAC,QAAG;AAAC,WAAK,cAAc,IAAI,MAAM,WAAUA,GAAC,CAAC;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,oBAAmB;AAAC,UAAM,kBAAkB;AAAA,EAAC;AAAA,EAAC,uBAAsB;AAAnrB,QAAAD,KAAAE,KAAAC,KAAAC;AAAorB,KAAAJ,MAAA,KAAK,UAAL,gBAAAA,IAAY,oBAAoB,QAAO,KAAK,iBAAeE,MAAA,KAAK,UAAL,gBAAAA,IAAY,oBAAoB,SAAQ,KAAK,iBAAeC,MAAA,KAAK,UAAL,gBAAAA,IAAY,oBAAoB,WAAU,KAAK,iBAAeC,MAAA,KAAK,UAAL,gBAAAA,IAAY,oBAAoB,UAAS,KAAK,kBAAiB,MAAM,qBAAqB;AAAA,EAAC;AAAA,EAAC,aAAaH,KAAE;AAAp9B,QAAAD,KAAAE,KAAAC,KAAAC,KAAAC,KAAA;AAAq9B,UAAM,aAAaJ,GAAC,GAAE,KAAK,cAAUD,MAAA,KAAK,UAAL,gBAAAA,IAAY,YAAS,QAAGE,MAAA,KAAK,UAAL,gBAAAA,IAAY,iBAAiB,QAAO,KAAK,gBAAcC,MAAA,KAAK,UAAL,gBAAAA,IAAY,iBAAiB,SAAQ,KAAK,iBAAeC,MAAA,KAAK,UAAL,gBAAAA,IAAY,iBAAiB,WAAU,KAAK,iBAAeC,MAAA,KAAK,UAAL,gBAAAA,IAAY,iBAAiB,UAAS,KAAK,kBAAiB,WAAO,UAAK,UAAL,mBAAY,aAAa,kBAAa,UAAK,WAAW,cAAc,sBAAsB,MAApD,mBAAuD,UAAU,IAAI;AAAA,EAAgC;AAAA,EAAC,iBAAgB;AAAC,WAAO,KAAK,aAAW,YAAU,KAAK,QAAM,4GAAuG,KAAK,YAAU,iEAA4D;AAAA,EAAG;AAAA,EAAC,SAAQ;AAAC,WAAO,8CAA2C,KAAK,eAAe,+BAA+B,KAAK,YAAU,iCAA+B,EAAE,KAAK,KAAK,eAAe,CAAC;AAAA,EAAyD;AAAC;AAAC,EAAE,SAAO,CAAC,GAAGN,GAAE,QAAOO,EAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAE,EAAE,WAAU,WAAU,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAE,EAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAE,EAAE,WAAU,aAAY,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAE,EAAE,WAAU,aAAY,MAAM;;;ACA/iE,IAAI,IAAE;;;ACA2L,IAAMC,KAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,QAAM,IAAG,KAAK,cAAY,IAAG,KAAK,QAAM,qBAAoB,KAAK,SAAO,sBAAqB,KAAK,OAAK,KAAI,KAAK,QAAM,IAAG,KAAK,SAAO,IAAG,KAAK,SAAO,IAAG,KAAK,SAAO,OAAG,KAAK,aAAW,OAAG,KAAK,UAAQ,EAAE,GAAE,KAAK,SAAO,EAAC,QAAO,MAAK,OAAM,KAAI,GAAE,KAAK,QAAM,EAAC,QAAO,MAAK,OAAM,KAAI,GAAE,KAAK,SAAO,EAAC,QAAO,MAAK,OAAM,KAAI,GAAE,KAAK,WAAS,GAAE,KAAK,UAAQ;AAAA,EAAC;AAAA,EAAC,IAAI,aAAY;AAAC,QAAG,KAAK,SAAO,KAAK;AAAO,aAAM,EAAC,OAAM,KAAK,OAAM,QAAO,KAAK,OAAM;AAAE,YAAO,KAAK,MAAK;AAAA,MAAC,KAAI;AAAK,eAAO,KAAK;AAAA,MAAO,KAAI;AAAA,MAAI;AAAQ,eAAO,KAAK;AAAA,MAAM,KAAI;AAAI,eAAO,KAAK;AAAA,IAAM;AAAA,EAAC;AAAA,EAAC,gBAAe;AAAC,QAAG,KAAK,SAAO,KAAK;AAAO,aAAM,EAAC,OAAM,KAAK,OAAM,QAAO,KAAK,OAAM;AAAE,YAAO,KAAK,MAAK;AAAA,MAAC,KAAI;AAAK,eAAO,KAAK;AAAA,MAAO,KAAI;AAAA,MAAI;AAAQ,eAAO,KAAK;AAAA,MAAM,KAAI;AAAI,eAAO,KAAK;AAAA,IAAM;AAAA,EAAC;AAAA,EAAC,IAAI,SAAQ;AAAC,QAAG,KAAK;AAAW,aAAM,EAAC,OAAM,mCAAkC,QAAO,kCAAiC;AAAE,UAAMC,MAAE,EAAC,OAAM,KAAK,OAAM,QAAO,KAAK,OAAM;AAAE,WAAM,CAAC,MAAM,KAAK,WAAW,KAAG,KAAK,cAAY,MAAIA,IAAE,QAAM,0BAA0B,KAAK,WAAW,KAAIA,IAAE,SAAO,2BAA2B,KAAK,WAAW,MAAKA;AAAA,EAAC;AAAA,EAAC,oBAAmB;AAAC,UAAM,kBAAkB,GAAE,KAAK,UAAU,IAAI,UAAU;AAAA,EAAC;AAAA,EAAC,aAAaA,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,YAAY;AAAA,EAAC;AAAA,EAAC,cAAa;AAAC,QAAG,KAAK,OAAM;AAAC,YAAMA,MAAE,SAAS,cAAc,OAAO;AAAE,MAAAA,IAAE,aAAa,MAAK,KAAK,OAAO,GAAEA,IAAE,YAAU,GAAG,KAAK,KAAK,IAAG,KAAK,WAAW,cAAc,KAAK,EAAE,QAAQA,GAAC,GAAE,KAAK,WAAW,cAAc,KAAK,EAAE,aAAa,mBAAkB,KAAK,OAAO;AAAA,IAAC;AAAM,WAAK,WAAW,cAAc,KAAK,EAAE,aAAa,eAAc,MAAM;AAAA,EAAC;AAAA,EAAC,aAAY;AAAC,WAAO;AAAA,EAAG;AAAA,EAAC,SAAQ;AAAC,WAAO,gEAA8D,KAAK,WAAW,KAAK,aAAa,KAAK,WAAW,MAAM,YAAY,KAAK,SAAO,WAAW,KAAK,MAAM,QAAM,IAAI,kBAAkB,KAAK,OAAO,IAAI,KAAK,QAAQ,iBAAiB,KAAK,WAAW,CAAC;AAAA,EAAQ;AAAC;AAACD,GAAE,SAAO,CAAC,CAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,eAAc,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,UAAS,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,UAAS,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,UAAS,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,UAAS,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,GAAE,WAAU,cAAa,MAAM;;;ACArgF,IAAME,KAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK;AAAA,EAA6c;AAAC;;;ACAriB,EAAE,kBAAiBC,EAAC;;;ACAe,EAAE,gBAAe,CAAC;;;AvBK5K,IAAM,cAAc,gBAAgB,OAAO,gBAAgB,CAAa;;;AwBLxE,IAAAC,gBAA2B;;;ACAmF,IAAMC,KAAN,cAAgBC,GAAC;AAAA,EAAC,YAAYA,KAAE;AAAC,UAAMA,GAAC,GAAE,KAAK,SAAO,CAAC,GAAE,KAAK,4BAA0B,YAAS;AAAC,YAAM,KAAK,KAAK,gBAAe,KAAK,KAAK,aAAa,OAAO,KAAG,WAAS,KAAK,KAAK,aAAa,OAAO,KAAG,KAAK,iBAAiB,GAAE,KAAK,uBAAqB,KAAK,iBAAe,EAAE,GAAE,KAAK,mBAAmB,aAAa,MAAK,KAAK,cAAc,GAAE,kBAAiB,KAAK,QAAM,CAAC,KAAK,KAAK,gBAAc,KAAK,8BAA8B;AAAA,IAAE,GAAE,KAAK,qBAAmB,MAAI;AAAC,UAAG,KAAK,aAAa,GAAE;AAAC,cAAMA,MAAE,WAAS,KAAK,OAAO,KAAM,CAAAA,QAAGA,IAAE,OAAQ;AAAE,aAAK,oBAAoBA,GAAC;AAAA,MAAC;AAAC,UAAG,KAAK,gBAAgB,KAAG,KAAK,iBAAiB,GAAE;AAAC,cAAMA,MAAE,OAAK,KAAK,OAAO,OAAQ,CAAAA,QAAGA,IAAE,QAAS,EAAE,UAAW,CAAAA,QAAG,CAACA,IAAE,OAAQ;AAAE,aAAK,oBAAoBA,GAAC;AAAA,MAAC;AAAA,IAAC,GAAE,KAAK,sBAAoB,CAAAA,QAAG;AAAC,MAAAA,OAAG,KAAK,OAAO,QAAS,CAAAA,QAAG;AAAx3B,YAAAC;AAAy3B,SAAAA,MAAA,KAAK,WAAWD,GAAC,MAAjB,gBAAAC,IAAoB,aAAa,SAAQ,SAAQ,KAAK,cAAcD,GAAC;AAAA,MAAC,CAAE,GAAE,KAAK,iBAAiB,MAAI,KAAK,OAAO,QAAS,CAAAA,QAAG;AAAr/B,YAAAC,KAAAC;AAAs/B,QAAAF,IAAE,YAAU,CAACA,IAAE,WAAS,KAAK,gBAAgBA,GAAC,IAAEC,MAAA,KAAK,WAAWD,GAAC,MAAjB,gBAAAC,IAAoB,aAAa,SAAQ,UAAS,KAAK,KAAK,aAAa,SAAQ,MAAM,MAAI,KAAK,cAAcD,GAAC,IAAEE,MAAA,KAAK,WAAWF,GAAC,MAAjB,gBAAAE,IAAoB,aAAa,SAAQ,SAAQ,KAAK,KAAK,aAAa,SAAQ,OAAO;AAAA,MAAE,CAAE,GAAE,KAAK,iBAAiB;AAAA,IAAE,GAAE,KAAK,KAAK,cAAc,IAAI;AAAA,EAAC;AAAA,EAAC,IAAI,qBAAoB;AAAC,WAAO,MAAM,KAAK,KAAK,KAAK,UAAU,EAAE,KAAM,CAAAF,QAAG,wBAAsBA,IAAE,SAAS,YAAY,CAAE;AAAA,EAAC;AAAA,EAAC,gBAAe;AAAC,SAAK,0BAA0B;AAAA,EAAC;AAAA,EAAC,eAAc;AAAC,WAAO,KAAK,KAAK,QAAQ,SAAS,OAAO;AAAA,EAAC;AAAA,EAAC,kBAAiB;AAAC,WAAO,KAAK,KAAK,QAAQ,SAAS,UAAU;AAAA,EAAC;AAAA,EAAC,mBAAkB;AAAC,WAAO,KAAK,KAAK,QAAQ,SAAS,iBAAiB;AAAA,EAAC;AAAA,EAAC,WAAWA,KAAE;AAAC,QAAG,KAAK,gBAAgB,KAAG,KAAK,iBAAiB;AAAE,aAAOA,IAAE,QAAQ,cAAc;AAAE,QAAG,KAAK,aAAa;AAAE,aAAOA,IAAE,QAAQ,WAAW;AAAE,UAAM,IAAI,MAAM,oCAAoC;AAAA,EAAC;AAAA,EAAC,mBAAkB;AAAC,SAAK,uBAAqB,KAAK,mBAAmB,MAAM,UAAQ;AAAA,EAAQ;AAAA,EAAC,mBAAkB;AAAC,SAAK,uBAAqB,KAAK,mBAAmB,MAAM,UAAQ;AAAA,EAAO;AAAA,EAAC,gCAA+B;AAAC,SAAK,SAAO,MAAM,KAAK,KAAK,KAAK,iBAAiB,OAAO,CAAC,GAAE,KAAK,OAAO,QAAS,CAAAA,QAAG;AAAC,MAAAA,IAAE,iBAAiB,WAAW,MAAI,KAAK,oBAAoB,KAAE,CAAE,GAAEA,IAAE,iBAAiB,UAAS,KAAK,kBAAkB;AAAA,IAAC,CAAE;AAAA,EAAC;AAAA,EAAC,mBAAkB;AAAC,SAAK,UAAQ,KAAK,sBAAoB,KAAK,OAAO,QAAS,CAAAA,QAAG;AAAC,MAAAA,IAAE,oBAAoB,WAAW,MAAI,KAAK,oBAAoB,KAAE,CAAE,GAAEA,IAAE,oBAAoB,UAAS,KAAK,kBAAkB;AAAA,IAAC,CAAE;AAAA,EAAC;AAAC;;;ACAn8E,IAAIG,KAAE;;;ACAoD,IAAMC,KAAN,cAAgB,WAAC;AAAA,EAAC,SAAQ;AAAC,WAAO;AAAA,EAAqN;AAAC;AAACA,GAAE,SAAO,CAACC,EAAC;;;ACAxQ,IAAMC,KAAN,cAAgBA,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,2rBAA2rB,KAAK,OAAO,KAAK;AAAA,EAAwyB;AAAC;;;ACAzkD,EAAE,oBAAmBC,EAAC;;;ACAoB,EAAE,qBAAoBC,EAAC;;;ACAlK,IAAIC,KAAE;;;ACA8O,IAAM,IAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,OAAK,IAAG,KAAK,WAAS,OAAG,KAAK,eAAa,OAAG,KAAK,SAAO,IAAG,KAAK,SAAO,CAAC,GAAE,KAAK,gBAAc,IAAG,KAAK,uBAAqB,IAAIC,GAAE,IAAI;AAAA,EAAC;AAAA,EAAC,aAAaC,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,iBAAiB,KAAK,aAAa,EAAE,QAAS,CAAAA,QAAG;AAAC,YAAMC,MAAED,IAAE,cAAc,OAAO;AAAE,MAAAC,OAAG,KAAK,OAAO,KAAKA,GAAC;AAAA,IAAC,CAAE,GAAE,KAAK,OAAO,QAAS,CAAAD,QAAG;AAAC,WAAK,QAAMA,IAAE,aAAa,QAAO,KAAK,IAAI,GAAE,KAAK,YAAUA,IAAE,aAAa,YAAW,EAAE;AAAA,IAAC,CAAE;AAAA,EAAC;AAAA,EAAC,SAAQ;AAAC,WAAO;AAAA,EAAgB;AAAC;AAAC,EAAE,SAAO,CAACC,EAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAE,EAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAE,EAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAE,EAAE,WAAU,gBAAe,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAE,EAAE,WAAU,UAAS,MAAM;;;ACA3wB,IAAMC,KAAN,cAAgB,EAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,IAAI,aAAY;AAAC,WAAO,KAAK,iBAAiB,cAAc;AAAA,EAAC;AAAA,EAAC,oBAAmB;AAAC,SAAK,gBAAc,gBAAe,MAAM,kBAAkB;AAAA,EAAC;AAAA,EAAC,aAAaC,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,WAAS,KAAK,WAAW,QAAS,CAAAA,QAAGA,IAAE,aAAa,WAAU,MAAM,CAAE;AAAA,EAAC;AAAA,EAAC,SAAQ;AAAC,WAAO,yBAAsB,KAAK,MAAM;AAAA,EAAmC;AAAC;AAAC,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAED,GAAE,WAAU,WAAU,MAAM;;;ACA5hB,EAAE,sBAAqBE,EAAC;;;AVKvJ,IAAM,mBAAmB,gBAAgB;AAAA,EACrC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAO,cAAAC;AACX,CAAC;;;AWTD,IAAAC,SAAuB;;;ACAG,IAAIC,KAAE;;;ACAwK,IAAMC,KAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,kBAAgB,OAAG,KAAK,UAAQ,OAAG,KAAK,eAAa,MAAI;AAA1T,UAAAC,KAAAC;AAA2T,WAAK,kBAAgB,GAACD,MAAA,KAAK,eAAL,gBAAAA,IAAiB,aAAU,SAAQC,MAAA,KAAK,eAAL,gBAAAA,IAAiB,MAAM,MAAM;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,aAAaC,KAAE;AAAna,QAAAF,KAAAC;AAAoa,QAAG,MAAM,aAAaC,GAAC,GAAE,eAAWF,MAAA,KAAK,eAAL,gBAAAA,IAAiB,aAAa;AAAQ,OAAAC,MAAA,KAAK,cAAc,YAAY,MAA/B,gBAAAA,IAAkC,aAAa,UAAS,SAAQ,KAAK,WAAW,iBAAiB,SAAQ,KAAK,YAAY,GAAE,KAAK,aAAa;AAAA,SAAM;AAAC,YAAMC,MAAE,KAAK,cAAc,WAAW;AAAE,MAAAA,QAAI,KAAK,UAAQ,MAAGA,IAAE,aAAa,QAAO,aAAa;AAAA,IAAE;AAAA,EAAC;AAAA,EAAC,mBAAkB;AAAxvB,QAAAF;AAAyvB,WAAM,eAAWA,MAAA,KAAK,eAAL,gBAAAA,IAAiB,aAAa,WAAQ,+FAA0F;AAAA,EAAI;AAAA,EAAC,kBAAiB;AAAC,WAAO,KAAK,kBAAgB,8HAAyH;AAAA,EAAI;AAAA,EAAC,SAAQ;AAAC,WAAO,+DAA4D,KAAK,UAAQ,iBAAe,EAAE,kDAAkD,KAAK,gBAAgB,CAAC,IAAI,KAAK,iBAAiB,CAAC,oCAAoC,KAAK,WAAW,CAAC;AAAA,EAAgC;AAAC;AAACF,GAAE,SAAO,CAAC,GAAGC,GAAE,QAAOG,EAAC,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEJ,GAAE,WAAU,mBAAkB,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,GAAE,WAAU,WAAU,MAAM;;;ACA13C,IAAMK,KAAN,cAAgBA,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,+uBAA+uB,KAAK,OAAO,KAAK;AAAA,EAAyhB;AAAC;;;ACAh3C,EAAE,mBAAkBC,EAAC;;;ACA9D,IAAMC,KAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK;AAAA,EAAykB;AAAC;;;ACAxpB,EAAE,uBAAsBC,EAAC;;;ACA4E,EAAE,aAAYC,EAAC;;;APKpP,IAAM,WAAW,gBAAgB;AAAA,EAC7B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AQTD,IAAAC,SAAuB;;;ACAG,IAAIC,KAAE;;;ACAgJ,IAAMC,KAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,QAAM;AAAA,EAAM;AAAC;AAACD,GAAE,SAAO,CAAC,GAAGC,GAAE,QAAOC,EAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEF,GAAE,WAAU,SAAQ,MAAM;;;ACA5M,IAAMG,KAAN,cAAgB,EAAC;AAAA,EAAC,oBAAmB;AAAC,SAAK,gBAAc,aAAY,MAAM,kBAAkB;AAAA,EAAC;AAAA,EAAC,SAAQ;AAAC,WAAO,yBAAsB,KAAK,MAAM;AAAA,EAAmC;AAAC;;;ACAtG,EAAE,mBAAkBC,EAAC,GAAE,EAAE,aAAYC,EAAC;;;AJKlP,IAAM,WAAW,gBAAgB;AAAA,EAC7B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AKTD,IAAAC,SAAuB;AAKvB,IAAM,gBAAgB,gBAAgBC,QAAO,mBAAmBC,EAAe;;;ACL/E,IAAAC,SAAuB;;;ACAG,IAAIC,KAAE;;;ACAyL,IAAMC,KAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,SAAO,OAAG,KAAK,UAAQ,OAAG,KAAK,UAAQ,OAAG,KAAK,aAAW,OAAG,KAAK,kBAAgB,MAAK,KAAK,eAAa,MAAI;AAAC,WAAK,eAAa,KAAK,aAAW,MAAG,KAAK,YAAY,IAAG,aAAa,KAAK,eAAe,GAAE,KAAK,kBAAgB,WAAY,MAAI;AAAC,aAAK,aAAW,OAAG,KAAK,WAAW;AAAA,MAAC,GAAG,GAAG;AAAA,IAAC,GAAE,KAAK,aAAW,MAAI;AAAC,WAAK,UAAQ,OAAG,KAAK,UAAQ,KAAK,aAAa;AAAA,IAAC,GAAE,KAAK,cAAY,MAAI;AAAC,WAAK,UAAQ,MAAG,KAAK,WAAS,KAAK,UAAQ;AAAA,IAAG,GAAE,KAAK,eAAa,MAAI;AAAC,UAAG,KAAK,YAAW;AAAC,cAAMC,MAAE,KAAK,WAAW,eAAa,KAAK,WAAW;AAAa,YAAG,KAAK,WAAW,MAAM,SAAO,KAAG,CAAC,KAAK,WAASA,KAAE;AAAC,eAAK,UAAQ;AAAG,eAAK,WAAW,cAAc,oBAAoB,EAAE,MAAM,QAAM,KAAK,WAAW,cAAY,KAAG;AAAA,QAAI;AAAA,MAAC;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,aAAaA,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,eAAe,GAAE,IAAI,eAAe,KAAK,YAAY,EAAE,QAAQ,KAAK,UAAU;AAAA,EAAC;AAAA,EAAC,iBAAgB;AAAhmC,QAAAC,KAAAC;AAAimC,KAAAD,MAAA,KAAK,eAAL,gBAAAA,IAAiB,iBAAiB,QAAO,KAAK,cAAYC,MAAA,KAAK,eAAL,gBAAAA,IAAiB,iBAAiB,SAAQ,KAAK;AAAA,EAAY;AAAA,EAAC,uBAAsB;AAA7uC,QAAAD,KAAAC;AAA8uC,SAAK,YAASD,MAAA,KAAK,eAAL,gBAAAA,IAAiB,oBAAoB,QAAO,KAAK,cAAYC,MAAA,KAAK,eAAL,gBAAAA,IAAiB,oBAAoB,SAAQ,KAAK,eAAc,MAAM,qBAAqB;AAAA,EAAC;AAAA,EAAC,SAAQ;AAAC,WAAO,gEAA6D,KAAK,UAAQ,sBAAoB,EAAE,2DAA2D,KAAK,WAAW,CAAC;AAAA,EAAgC;AAAC;AAACJ,GAAE,SAAO,CAAC,GAAGC,GAAE,QAAOI,EAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEL,GAAE,WAAU,UAAS,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,GAAE,WAAU,WAAU,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,GAAE,WAAU,WAAU,MAAM;;;ACAjnD,EAAE,gBAAeM,EAAC;;;AHK3K,IAAM,cAAc,gBAAgB;AAAA,EAChC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AITD,IAAAC,SAAuB;;;ACAG,IAAIC,KAAE;;;ACA6P,IAAMC,KAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,YAAU,OAAG,KAAK,MAAI,GAAE,KAAK,MAAI,GAAE,KAAK,OAAK,GAAE,KAAK,oBAAkB,MAAI;AAAC,UAAG,KAAK,OAAM;AAAC,cAAMC,MAAE,CAAC,KAAK,MAAM;AAAM,aAAK,MAAM,MAAM,iBAAe,OAAKA,MAAE,KAAK,QAAM,KAAK,MAAI,KAAK,OAAK,UAAS,KAAK,MAAM,aAAa,iBAAgB,KAAK,MAAM,KAAK;AAAA,MAAC;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,aAAaA,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,YAAY,GAAE,KAAK,cAAc,GAAE,KAAK,kBAAkB;AAAA,EAAC;AAAA,EAAC,uBAAsB;AAAC,SAAK,SAAO,KAAK,MAAM,iBAAiB,SAAQ,KAAK,iBAAiB,GAAE,MAAM,qBAAqB;AAAA,EAAC;AAAA,EAAC,cAAa;AAAC,SAAK,UAAQ,KAAK,MAAI,CAAC,KAAK,MAAM,KAAI,KAAK,MAAI,CAAC,KAAK,MAAM,KAAI,KAAK,OAAK,CAAC,KAAK,MAAM,MAAK,KAAK,MAAM,aAAa,iBAAgB,KAAG,KAAK,GAAG,GAAE,KAAK,MAAM,aAAa,iBAAgB,KAAG,KAAK,GAAG,GAAE,KAAK,MAAM,iBAAiB,SAAQ,KAAK,iBAAiB;AAAA,EAAE;AAAA,EAAC,gBAAe;AAAC,SAAK,MAAI,KAAK,OAAK,EAAE,MAAK,+BAA+B,GAAE,KAAK,MAAI,KAAK,OAAK,KAAG,EAAE,MAAK,qBAAqB;AAAA,EAAC;AAAA,EAAC,aAAaA,KAAE;AAAC,WAAO,mCAAgCA,GAAC;AAAA,EAAQ;AAAA,EAAC,gBAAe;AAAC,QAAG,KAAK,OAAK,GAAE;AAAC,YAAMA,MAAE,CAAC;AAAE,eAAQC,MAAE,KAAK,KAAIA,OAAG,KAAK,KAAIA,OAAG,KAAK;AAAK,QAAAD,IAAE,KAAK,KAAK,aAAa,KAAK,MAAMC,GAAC,CAAC,CAAC;AAAE,aAAOD;AAAA,IAAC;AAAC,WAAM;AAAA,EAAE;AAAA,EAAC,SAAQ;AAAC,WAAO,2CAAwC,KAAK,YAAU,oCAAiC,KAAK,cAAc,CAAC,WAAS,EAAE;AAAA,EAAQ;AAAC;AAACF,GAAE,SAAO,CAAC,GAAGC,GAAE,QAAOG,EAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEJ,GAAE,WAAU,aAAY,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,GAAE,WAAU,OAAM,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,GAAE,WAAU,OAAM,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,GAAE,WAAU,QAAO,MAAM;;;ACA1kD,EAAE,aAAYK,EAAC;;;AHKlK,IAAM,WAAW,gBAAgB;AAAA,EAC7B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AITD,IAAAC,SAAuB;;;ACAG,IAAIC,KAAE;;;ACA4F,IAAMC,KAAN,cAAgBC,GAAC;AAAA,EAAC,SAAQ;AAAC,WAAO;AAAA,EAA0J;AAAC;AAACD,GAAE,SAAO,CAAC,GAAGC,GAAE,QAAOC,EAAC;;;ACAjQ,IAAMC,KAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAC;AAAA,EAAC,aAAY;AAAC,WAAO,qBAAmB,KAAK,OAAO,KAAK;AAAA,EAA6W;AAAC;;;ACA1b,EAAE,yBAAwBC,EAAC;;;ACAF,EAAE,cAAaC,EAAC;;;ALK7K,IAAM,YAAY,gBAAgB;AAAA,EAC9B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AMTD,IAAAC,SAAuB;;;ACAG,IAAIC,KAAE;;;ACAN,IAAIC,KAAE;;;ACA0T,IAAMC,KAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,uBAAqB,IAAIC,GAAE,IAAI,GAAE,KAAK,cAAY,IAAG,KAAK,YAAU,IAAG,KAAK,QAAM,IAAG,KAAK,gBAAc,QAAO,KAAK,qBAAmB,SAAQ,KAAK,iBAAe,CAAC,GAAE,KAAK,oBAAkB,OAAG,KAAK,oBAAkB,CAAAA,QAAG;AAAC,MAAAA,IAAE,cAAc,cAAc,OAAO,EAAE,aAAa,iBAAgBA,IAAE,OAAO,OAAO,GAAEA,IAAE,cAAc,cAAc,OAAO,EAAE,aAAa,gBAAeA,IAAE,OAAO,OAAO,GAAE,KAAK,kBAAkB;AAAA,IAAC,GAAE,KAAK,oBAAkB,MAAI;AAAC,WAAK,iBAAe,CAAC,GAAE,KAAK,WAAW,QAAS,CAAAA,QAAG;AAAl4B,YAAAC,KAAAC;AAAm4B,aAAGD,MAAAD,IAAE,cAAc,OAAO,MAAvB,gBAAAC,IAA0B,SAAQ;AAAC,gBAAME,OAAED,MAAAF,IAAE,cAAc,OAAO,MAAvB,gBAAAE,IAA0B;AAAU,UAAAC,OAAG,KAAK,eAAe,KAAKA,GAAC;AAAA,QAAC;AAAA,MAAC,CAAE;AAAE,YAAMH,MAAE,EAAC,UAAS,MAAG,SAAQ,MAAG,QAAO,KAAK,eAAc;AAAE,WAAK,cAAc,IAAI,YAAY,UAASA,GAAC,CAAC;AAAA,IAAC,GAAE,KAAK,YAAU,CAAAA,QAAG;AAAC,gBAAQA,IAAE,OAAKA,IAAE,YAAU,KAAK,aAAa;AAAA,IAAC,GAAE,KAAK,eAAa,CAAAA,QAAG;AAAC,WAAK,qBAAmB,aAAWA,IAAE,OAAK,KAAK,aAAa;AAAA,IAAC,GAAE,KAAK,mBAAiB,MAAI;AAAC,WAAK,oBAAkB,KAAK,aAAa,IAAE,KAAK,aAAa;AAAA,IAAC,GAAE,KAAK,eAAa,MAAI;AAA92C,UAAAC;AAA+2C,WAAK,oBAAkB,QAAGA,MAAA,KAAK,iBAAL,gBAAAA,IAAmB,UAAU,IAAI;AAAA,IAAO,GAAE,KAAK,eAAa,MAAI;AAAz8C,UAAAA;AAA08C,WAAK,oBAAkB,OAAGA,MAAA,KAAK,iBAAL,gBAAAA,IAAmB,UAAU,OAAO;AAAA,IAAO,GAAE,KAAK,qBAAmB,CAAAD,QAAG;AAAC,WAAK,SAASA,IAAE,MAAM,KAAG,KAAK,aAAa;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,IAAI,aAAY;AAAC,WAAO,KAAK,iBAAiB,cAAc;AAAA,EAAC;AAAA,EAAC,IAAI,eAAc;AAA3qD,QAAAC;AAA4qD,YAAOA,MAAA,KAAK,eAAL,gBAAAA,IAAiB,cAAc;AAAA,EAAqB;AAAA,EAAC,IAAI,iBAAgB;AAAC,WAAO,KAAK,iBAAiB,OAAO;AAAA,EAAC;AAAA,EAAC,aAAaD,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,kBAAkB,GAAE,KAAK,oBAAoB;AAAA,EAAC;AAAA,EAAC,uBAAsB;AAAC,SAAK,qBAAqB,GAAE,MAAM,qBAAqB;AAAA,EAAC;AAAA,EAAC,sBAAqB;AAAC,aAAS,iBAAiB,SAAQ,KAAK,kBAAkB,GAAE,KAAK,WAAW,QAAS,CAAAA,QAAG;AAAC,MAAAA,IAAE,iBAAiB,WAAU,KAAK,YAAY,GAAEA,IAAE,iBAAiB,UAAS,KAAK,iBAAiB;AAAA,IAAC,CAAE,GAAE,KAAK,WAAW,KAAK,WAAW,SAAO,CAAC,EAAE,iBAAiB,WAAU,KAAK,SAAS;AAAA,EAAC;AAAA,EAAC,uBAAsB;AAAC,aAAS,oBAAoB,SAAQ,KAAK,kBAAkB,GAAE,KAAK,WAAW,QAAS,CAAAA,QAAG;AAAC,MAAAA,IAAE,oBAAoB,WAAU,KAAK,YAAY,GAAEA,IAAE,oBAAoB,UAAS,KAAK,iBAAiB;AAAA,IAAC,CAAE;AAAA,EAAC;AAAA,EAAC,cAAa;AAAC,WAAO,KAAK,SAAO,KAAK,MAAM,SAAO,IAAE,oBAAiB,KAAK,YAAY,8DAA8D,KAAK,KAAK,mBAAiB;AAAA,EAAE;AAAA,EAAC,WAAU;AAAC,QAAG,MAAM,KAAK,KAAK,iBAAiB,OAAO,CAAC,EAAE,OAAQ,CAAAA,QAAG,CAACA,IAAE,WAASA,IAAE,QAAS,EAAE,SAAO;AAAE,aAAO,KAAK;AAAY,UAAMA,MAAE,KAAK,eAAe,SAAO,IAAE,KAAK,qBAAmB,KAAK;AAAc,WAAO,KAAK,eAAe,SAAO,IAAE,GAAG,KAAK,eAAe,MAAM,IAAIA,GAAC,KAAG,KAAK;AAAA,EAAW;AAAA,EAAC,SAAQ;AAAC,WAAO,OAAI,KAAK,YAAY,CAAC,iDAAiD,KAAK,gBAAgB,oBAAoB,KAAK,iBAAiB,8DAA8D,MAAI,KAAK,eAAe,SAAO,gBAAc,EAAE,2BAA2B,KAAK,SAAS,CAAC,4CAA4C,KAAK,oBAAkB,wBAAsB,EAAE,sJAAsJ,KAAK,SAAS;AAAA,EAAuF;AAAC;AAACF,GAAE,SAAO,CAACM,IAAE,GAAGL,GAAE,QAAOM,EAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEP,GAAE,WAAU,eAAc,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,aAAY,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,iBAAgB,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,sBAAqB,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,GAAE,WAAU,kBAAiB,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,GAAE,WAAU,qBAAoB,MAAM;;;ACAlwH,EAAE,uBAAsBQ,EAAC;;;AJK7O,IAAM,oBAAoB,gBAAgB;AAAA,EACtC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AKTD,IAAAC,SAAuB;AAKvB,IAAM,kBAAkB,gBAAgB;AAAA,EACpC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,UAAuB;;;ACAG,IAAIC,KAAE;;;ACA0F,IAAMC,KAAN,cAAgBC,GAAC;AAAA,EAAC,SAAQ;AAAC,WAAO;AAAA,EAAoK;AAAC;AAACD,GAAE,SAAO,CAAC,GAAGC,GAAE,QAAOC,EAAC;;;ACAzQ,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,weAAwe,KAAK,OAAO,KAAK;AAAA,EAAqW;AAAC;;;ACAv7B,EAAE,kBAAiBC,GAAC;;;ACA4C,EAAE,YAAWC,EAAC;;;ALKrM,IAAM,UAAU,gBAAgB;AAAA,EAC5B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AMTD,IAAAC,UAAuB;;;ACAG,IAAIC,MAAE;;;ACA8H,IAAMC,KAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,SAAO,UAAS,KAAK,OAAK;AAAA,EAAQ;AAAA,EAAC,SAAQ;AAAC,WAAO,qCAAkC,KAAK,IAAI,mDAAmD,KAAK,MAAM;AAAA,EAA4G;AAAC;AAACA,GAAE,SAAO,CAACC,GAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAED,GAAE,WAAU,UAAS,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,QAAO,MAAM;;;ACA5d,EAAE,eAAcE,EAAC;;;AHKnI,IAAM,aAAa,gBAAgB;AAAA,EAC/B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AITD,IAAAC,UAAuB;;;ACAvB;AAAA;AAAA,eAAAC;AAAA,EAAA,aAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAAC;AAAA,EAAA,kBAAAC;AAAA,EAAA,iBAAAC;AAAA,EAAA,gBAAAC;AAAA,EAAA,oBAAAC;AAAA,EAAA;AAAA,mBAAAC;AAAA,EAAA;AAAA;AAAA,qBAAAC;AAAA,EAAA;AAAA;AAAA,uBAAAC;AAAA,EAAA;AAAA;AAAA,mBAAAC;AAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2B,IAAMC,KAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,gaAAgaA,IAAE,MAAM,mpBAAmpBA,IAAE,MAAM,u4BAAu4BA,IAAE,KAAK,0ZAA0ZA,IAAE,MAAM,4qBAA4qBA,IAAE,MAAM,8rCAA6rC;AAAvhJ,IAA0hJC,MAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAD,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,kdAAid;AAAxxK,IAA2xKE,MAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAF,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,kYAAkYA,IAAE,KAAK,6yBAA4yB;AAA9vN,IAAiwNG,KAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAH,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,oeAAoeA,IAAE,KAAK,6NAA4N;AAAtvP,IAAyvPI,KAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAJ,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,65CAA65CA,IAAE,KAAK,sQAAsQA,IAAE,KAAK,6PAA4P;AAAp9T,IAAu9TK,KAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAL,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,45CAA45CA,IAAE,KAAK,wQAAwQA,IAAE,KAAK,oQAAoQA,IAAE,KAAK,uTAAuTA,IAAE,KAAK,mUAAmUA,IAAE,KAAK,gUAA+T;AAAzoa,IAA4oa,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,mBAAgBA,IAAE,KAAK,aAAaA,IAAE,MAAM,oFAAoFA,IAAE,MAAM,4VAA4VA,IAAE,KAAK,uDAAuDA,IAAE,KAAK,yDAAyDA,IAAE,KAAK,yDAAyDA,IAAE,KAAK,yDAAyDA,IAAE,KAAK,yDAAyDA,IAAE,KAAK,yDAAyDA,IAAE,KAAK,yDAAyDA,IAAE,KAAK,yDAAyDA,IAAE,KAAK,yDAAyDA,IAAE,KAAK,yDAAyDA,IAAE,KAAK,yDAAyDA,IAAE,KAAK,yDAAyDA,IAAE,KAAK,yDAAyDA,IAAE,KAAK,wDAAwDA,IAAE,KAAK,yDAAyDA,IAAE,KAAK,yDAAyDA,IAAE,KAAK,yDAAyDA,IAAE,KAAK,yDAAyDA,IAAE,KAAK,uDAAuDA,IAAE,KAAK,yDAAyDA,IAAE,KAAK,yDAAyDA,IAAE,KAAK,yDAAyDA,IAAE,KAAK,yDAAyDA,IAAE,KAAK,wDAAwDA,IAAE,KAAK,yDAAyDA,IAAE,KAAK,yDAAyDA,IAAE,KAAK,yDAAyDA,IAAE,KAAK,yDAAyDA,IAAE,KAAK,uDAAuDA,IAAE,KAAK,yDAAyDA,IAAE,KAAK,yDAAyDA,IAAE,KAAK,mDAAkD;AAAvwf,IAA0wfM,KAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAN,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,2pBAA2pBA,IAAE,MAAM,sMAAsMA,IAAE,MAAM,wTAAwTA,IAAE,KAAK,4VAA4VA,IAAE,KAAK,0SAAyS;AAAp3jB,IAAu3jBO,KAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAP,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,04BAA04BA,IAAE,KAAK,kcAAic;AAAv/mB,IAA0/mBQ,KAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAR,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,04BAA04BA,IAAE,KAAK,koBAAkoBA,IAAE,KAAK,yoBAAwoB;AAA18rB,IAA68rB,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,mBAAgBA,IAAE,KAAK,aAAaA,IAAE,MAAM,oFAAoFA,IAAE,MAAM,0PAA0PA,IAAE,KAAK,iNAAiNA,IAAE,KAAK,6MAA6MA,IAAE,KAAK,2MAA0M;AAAlnuB,IAAqnuBS,KAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAT,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,0PAA0PA,IAAE,KAAK,siBAAqiB;AAAzswB,IAA4swB,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,qCAAkCA,IAAE,KAAK,aAAaA,IAAE,MAAM,iIAAiIA,IAAE,KAAK,8cAA6c;AAArgyB,IAAwgyBU,KAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,KAAI,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAV,QAAG,uCAAoCA,IAAE,KAAK,aAAaA,IAAE,MAAM,sFAAsFA,IAAE,KAAK,uYAAsY;AAAhtzB,IAAmtzB,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,KAAI,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,gDAAgDA,IAAE,KAAK,6aAA4a;AAA160B,IAA660B,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,iXAAiXA,IAAE,MAAM,qQAAoQ;AAAv12B,IAA012B,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,qXAAqXA,IAAE,KAAK,iXAAiXA,IAAE,MAAM,qQAAoQ;AAAho5B,IAAmo5BW,KAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAX,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,oJAAoJA,IAAE,KAAK,oJAAoJA,IAAE,KAAK,oJAAoJA,IAAE,KAAK,iXAAiXA,IAAE,MAAM,qQAAoQ;AAA9/7B,IAAig8BY,KAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAZ,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,0kBAAykB;AAAv39B,IAA039B,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,mBAAgBA,IAAE,KAAK,aAAaA,IAAE,MAAM,oFAAoFA,IAAE,MAAM,keAAkeA,IAAE,KAAK,sWAAqW;AAAt//B,IAAy//B,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,umBAAsmB;AAA54hC,IAA+4hC,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,6SAA6SA,IAAE,MAAM,snFAAqnF;AAAtmoC,IAAymoC,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,qdAAqdA,IAAE,KAAK,gaAA+Z;AAAjxqC,IAAoxqC,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,okBAAokBA,IAAE,KAAK,4jBAA2jB;AAAvstC,IAA0stC,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,8LAA8LA,IAAE,MAAM,8IAA8IA,IAAE,MAAM,ofAAmf;AAAt0vC,IAAy0vC,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,uFAAuFA,IAAE,KAAK,+aAA+aA,IAAE,KAAK,2dAA2dA,IAAE,MAAM,gEAAgEA,IAAE,MAAM,oFAAoFA,IAAE,MAAM,wFAAwFA,IAAE,MAAM,4JAA2J;AAAp9yC,IAAu9yC,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,KAAK,iDAAiDA,IAAE,KAAK,yJAAyJA,IAAE,MAAM,sTAAsTA,IAAE,KAAK,+WAA8W;AAA/k1C,IAAkl1C,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,KAAK,iDAAiDA,IAAE,KAAK,8NAA8NA,IAAE,KAAK,8NAA8NA,IAAE,MAAM,6VAA6VA,IAAE,MAAM,kVAAiV;AAA//3C,IAAkg4C,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,u9EAAu9EA,IAAE,MAAM,04CAA04CA,IAAE,MAAM,mUAAmUA,IAAE,MAAM,4TAA4TA,IAAE,MAAM,8TAA6T;AAA5miD,IAA+miD,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,uYAAuYA,IAAE,KAAK,qWAAqWA,IAAE,MAAM,4iBAA2iB;AAAnslD,IAAsslD,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,wGAAwGA,IAAE,KAAK,uGAAuGA,IAAE,KAAK,uGAAuGA,IAAE,MAAM,0bAAyb;AAAxvnD,IAA2vnD,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,yhCAAwhC;AAAhkqD,IAAmkqD,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,0aAA0aA,IAAE,KAAK,oZAAmZ;AAAprsD,IAAursD,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,6lBAA4lB;AAAhkuD,IAAmkuD,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,weAAweA,IAAE,KAAK,4mBAA2mB;AAA38wD,IAA88wD,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,qjBAAqjBA,IAAE,KAAK,2NAA0N;AAAlhzD,IAAqhzD,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,kpBAAkpBA,IAAE,KAAK,8+BAA6+B;AAAz82D,IAA482D,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,2cAA2cA,IAAE,KAAK,yzBAAwzB;AAApg6D,IAAug6D,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,iZAAiZA,IAAE,KAAK,qyBAAoyB;AAAj/8D,IAAo/8D,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,iZAAiZA,IAAE,KAAK,ksCAAisC;AAA33gE,IAA83gE,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,m2BAAm2BA,IAAE,MAAM,woCAAwoCA,IAAE,KAAK,y1BAAw1B;AAA9/mE,IAAignE,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,m2BAAm2BA,IAAE,MAAM,woCAAwoCA,IAAE,KAAK,8XAA6X;AAAtqsE,IAAyqsE,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,gmCAAgmCA,IAAE,KAAK,mZAAkZ;AAAh9vE,IAAm9vE,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,+SAA+SA,IAAE,KAAK,6ZAA6ZA,IAAE,MAAM,8oBAA8oBA,IAAE,MAAM,y4BAAy4BA,IAAE,KAAK,wEAAwEA,IAAE,KAAK,sCAAsCA,IAAE,KAAK,mEAAmEA,IAAE,KAAK,kDAAkDA,IAAE,KAAK,uEAAuEA,IAAE,KAAK,oDAAoDA,IAAE,KAAK,sEAAqE;AAA/81E,IAAk91E,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,ogBAAogBA,IAAE,MAAM,qpBAAqpBA,IAAE,MAAM,64BAA64BA,IAAE,MAAM,yyBAAyyBA,IAAE,KAAK,+GAA+GA,IAAE,KAAK,wEAAwEA,IAAE,KAAK,gHAAgHA,IAAE,KAAK,wEAAwEA,IAAE,KAAK,+GAA+GA,IAAE,KAAK,wEAAwEA,IAAE,KAAK,8GAA8GA,IAAE,KAAK,uZAAuZA,IAAE,KAAK,+OAA8O;AAA/7+E,IAAk8+E,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,mTAAmTA,IAAE,KAAK,yYAAwY;AAAl7gF,IAAq7gF,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,6RAA6RA,IAAE,KAAK,8XAA8XA,IAAE,KAAK,8vBAA6vB;AAAzokF,IAA4okF,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,8zBAA8zBA,IAAE,KAAK,sUAAsUA,IAAE,KAAK,wPAAwPA,IAAE,KAAK,+OAA+OA,IAAE,KAAK,kPAAiP;AAAlzoF,IAAqzoF,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,6SAA6SA,IAAE,KAAK,oMAAoMA,IAAE,KAAK,sNAAsNA,IAAE,KAAK,sNAAsNA,IAAE,KAAK,sNAAsNA,IAAE,KAAK,mPAAmPA,IAAE,KAAK,sPAAsPA,IAAE,KAAK,wPAAwPA,IAAE,KAAK,gPAA+O;AAA9ttF,IAAiutF,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,szBAAqzB;AAAn0vF,IAAs0vF,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,mlBAAmlBA,IAAE,KAAK,6SAA6SA,IAAE,MAAM,qwBAAowB;AAAtwzF,IAAywzF,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,ymBAAymBA,IAAE,MAAM,+XAA+XA,IAAE,MAAM,8aAA8aA,IAAE,KAAK,uQAAuQA,IAAE,KAAK,8KAA8KA,IAAE,KAAK,wOAAuO;AAA9o4F,IAAip4F,IAAE,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,ubAAubA,IAAE,MAAM,qeAAqeA,IAAE,KAAK,uDAAsD;AAA/56F,IAAk66F,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,qZAAqZA,IAAE,MAAM,qeAAqeA,IAAE,KAAK,uDAAsD;AAA/o9F,IAAkp9F,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,mJAAmJA,IAAE,KAAK,4JAA4JA,IAAE,KAAK,sJAAqJ;AAAl5+F,IAAq5+F,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,KAAI,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,gDAAgDA,IAAE,KAAK,kOAAiO;AAAl6/F,IAAq6/F,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,2JAA2JA,IAAE,KAAK,iKAAiKA,IAAE,KAAK,iKAAiKA,IAAE,KAAK,iKAAiKA,IAAE,KAAK,sKAAsKA,IAAE,KAAK,4KAA4KA,IAAE,KAAK,4KAA4KA,IAAE,KAAK,4KAA4KA,IAAE,MAAM,+XAA+XA,IAAE,KAAK,mTAAkT;AAA5ukG,IAA+ukG,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,8RAA8RA,IAAE,KAAK,6SAA6SA,IAAE,KAAK,8RAA8RA,IAAE,KAAK,6SAA6SA,IAAE,MAAM,mYAAkY;AAAlloG,IAAqloG,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,8cAA6c;AAAh1pG,IAAm1pG,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,gPAAgPA,IAAE,KAAK,iQAAiQA,IAAE,KAAK,6NAA6NA,IAAE,MAAM,2NAA2NA,IAAE,MAAM,6PAA6PA,IAAE,MAAM,2MAA2MA,IAAE,MAAM,qMAAoM;AAAputG,IAAuutG,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,kYAAkYA,IAAE,KAAK,8sBAA8sBA,IAAE,KAAK,gOAA+N;AAAn1wG,IAAs1wG,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,+fAA+fA,IAAE,KAAK,ggBAA+f;AAAzozG,IAA4ozG,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,oiCAAmiC;AAA791G,IAAg+1G,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,yuBAAyuBA,IAAE,KAAK,0hBAAyhB;AAAxh5G,IAA2h5G,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,mDAAmDA,IAAE,MAAM,6MAA6MA,IAAE,MAAM,yFAAyFA,IAAE,KAAK,gcAA+b;AAAhk7G,IAAmk7G,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,qqBAAqqBA,IAAE,MAAM,2MAA2MA,IAAE,KAAK,wpBAAupB;AAAx4+G,IAA24+G,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,mjCAAkjC;AAA3uhH,IAA8uhH,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,m2DAAk2D;AAA93lH,IAAi4lH,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,sqBAAqqB;AAAp1nH,IAAu1nH,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,mYAAmYA,IAAE,KAAK,oZAAmZ;AAAn6pH,IAAs6pH,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,kaAAkaA,IAAE,KAAK,uYAAsY;AAAngsH,IAAsgsH,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,uDAAuDA,IAAE,KAAK,uDAAuDA,IAAE,KAAK,wLAAwLA,IAAE,MAAM,uSAAsS;AAAt5tH,IAAy5tH,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,k7BAAk7BA,IAAE,KAAK,oMAAoMA,IAAE,KAAK,qzBAAozB;AAAhoyH,IAAmoyH,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,uwBAAuwBA,IAAE,MAAM,q6BAAq6BA,IAAE,KAAK,g7BAA+6B;AAA5h4H,IAA+h4H,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,4fAA4fA,IAAE,KAAK,wPAAwPA,IAAE,KAAK,wPAAwPA,IAAE,KAAK,kPAAiP;AAAhk7H,IAAmk7H,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,62BAA42B;AAA7t9H,IAAgu9H,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,oRAAoRA,IAAE,KAAK,qRAAqRA,IAAE,KAAK,qRAAqRA,IAAE,KAAK,sRAAsRA,IAAE,KAAK,+PAA+PA,IAAE,KAAK,0PAAyP;AAA7nhI,IAAgohI,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,k1BAAk1BA,IAAE,KAAK,wPAAwPA,IAAE,KAAK,sPAAsPA,IAAE,KAAK,wPAAwPA,IAAE,KAAK,kPAAiP;AAApvlI,IAAuvlI,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,mbAAkb;AAAv9mI,IAA09mI,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,mbAAkb;AAA1roI,IAA6roI,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,8ZAA8ZA,IAAE,MAAM,omBAAomBA,IAAE,MAAM,+wCAA8wC;AAA3wtI,IAA8wtI,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,uMAAuMA,IAAE,MAAM,qdAAqdA,IAAE,KAAK,0TAAyT;AAAjiwI,IAAoiwI,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,qlBAAqlBA,IAAE,KAAK,mnBAAmnBA,IAAE,KAAK,woBAAuoB;AAAhr0I,IAAmr0I,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,2yBAA0yB;AAA3w2I,IAA8w2I,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,iSAAiSA,IAAE,MAAM,2dAA0d;AAA/z4I,IAAk04I,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,wFAAwFA,IAAE,KAAK,sRAAsRA,IAAE,KAAK,sRAAsRA,IAAE,MAAM,yWAAyWA,IAAE,MAAM,2WAA2WA,IAAE,KAAK,saAAqa;AAA118I,IAA618I,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,MAAM,qrBAAqrBA,IAAE,KAAK,yyBAAwyB;AAAhngJ,IAAmngJ,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,OAAM,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,kGAAkGA,IAAE,KAAK,8LAA8LA,IAAE,KAAK,sMAAsMA,IAAE,KAAK,2HAA2HA,IAAE,KAAK,2KAA2KA,IAAE,KAAK,yHAAyHA,IAAE,KAAK,8KAA6K;AAAt8iJ,IAAy8iJ,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,OAAM,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,kDAAkDA,IAAE,KAAK,uhCAAuhCA,IAAE,KAAK,48BAA48BA,IAAE,KAAK,qgBAAqgBA,IAAE,KAAK,wQAAwQA,IAAE,KAAK,i3CAAi3CA,IAAE,KAAK,m4DAAm4DA,IAAE,KAAK,izCAAizCA,IAAE,KAAK,omDAAmmD;AAAlq1J,IAAqq1J,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,OAAM,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,wEAAqEA,IAAE,KAAK,aAAaA,IAAE,MAAM,+9GAA89G;AAA548J,IAA+48J,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,OAAM,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,kDAAkDA,IAAE,KAAK,0ZAA0ZA,IAAE,KAAK,6QAA6QA,IAAE,KAAK,qXAAqXA,IAAE,KAAK,qWAAqWA,IAAE,KAAK,4hBAA4hBA,IAAE,KAAK,8fAA8fA,IAAE,KAAK,ktBAAktBA,IAAE,KAAK,wKAAwKA,IAAE,KAAK,ueAAueA,IAAE,KAAK,6VAA6VA,IAAE,KAAK,0kBAA0kBA,IAAE,KAAK,6XAA6XA,IAAE,KAAK,seAAseA,IAAE,KAAK,0hBAA0hBA,IAAE,KAAK,oNAAoNA,IAAE,KAAK,mVAAmVA,IAAE,KAAK,8dAA8dA,IAAE,KAAK,gHAAgHA,IAAE,KAAK,2iBAA0iB;AAA5/sK,IAA+/sK,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,OAAM,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,2oBAA2oBA,IAAE,KAAK,8oBAA8oBA,IAAE,KAAK,siCAAsiCA,IAAE,KAAK,2cAA2cA,IAAE,KAAK,wtBAAwtBA,IAAE,KAAK,2MAA2MA,IAAE,KAAK,4hBAA4hBA,IAAE,KAAK,wkBAAwkBA,IAAE,KAAK,+lCAA+lCA,IAAE,KAAK,6QAA6QA,IAAE,KAAK,qQAAqQA,IAAE,KAAK,o8BAAo8BA,IAAE,KAAK,ogBAAogBA,IAAE,KAAK,2hBAA2hBA,IAAE,KAAK,mzDAAmzDA,IAAE,KAAK,0dAA0dA,IAAE,KAAK,udAAudA,IAAE,KAAK,unBAAunBA,IAAE,KAAK,2nBAA2nBA,IAAE,KAAK,knBAAknBA,IAAE,KAAK,kXAAkXA,IAAE,KAAK,6QAA6QA,IAAE,KAAK,gBAAe;AAA38oL,IAA88oL,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,opBAAopBA,IAAE,KAAK,kiBAAkiBA,IAAE,KAAK,8xBAA8xBA,IAAE,KAAK,gTAAgTA,IAAE,KAAK,6dAA6dA,IAAE,KAAK,geAAgeA,IAAE,KAAK,8jBAA8jBA,IAAE,KAAK,onBAAonBA,IAAE,KAAK,ieAAieA,IAAE,KAAK,+dAA+dA,IAAE,KAAK,4dAA4dA,IAAE,KAAK,upBAAupBA,IAAE,KAAK,wiBAAwiBA,IAAE,KAAK,knBAAknBA,IAAE,KAAK,+xBAA+xBA,IAAE,KAAK,mOAAmOA,IAAE,KAAK,yeAAyeA,IAAE,KAAK,2OAA2OA,IAAE,KAAK,4eAA4eA,IAAE,KAAK,4aAA4aA,IAAE,KAAK,krBAAkrBA,IAAE,KAAK,gBAAe;AAAts/L,IAAys/L,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,OAAM,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,+dAA+dA,IAAE,KAAK,kNAAkNA,IAAE,KAAK,+qBAA+qBA,IAAE,KAAK,udAAudA,IAAE,KAAK,oqBAAoqBA,IAAE,KAAK,4ZAA4ZA,IAAE,KAAK,+3BAA+3BA,IAAE,KAAK,mmBAAmmBA,IAAE,KAAK,+QAA+QA,IAAE,KAAK,6lBAA6lBA,IAAE,KAAK,+QAA+QA,IAAE,KAAK,0nBAA0nBA,IAAE,KAAK,6YAA6YA,IAAE,KAAK,+lBAA+lBA,IAAE,KAAK,8WAA8WA,IAAE,KAAK,kmBAAkmBA,IAAE,KAAK,8dAA8dA,IAAE,KAAK,+cAA+cA,IAAE,KAAK,yqBAAyqBA,IAAE,KAAK,o4BAAo4BA,IAAE,KAAK,+iBAA+iBA,IAAE,KAAK,goBAAgoBA,IAAE,KAAK,6SAA6SA,IAAE,KAAK,odAAodA,IAAE,KAAK,4dAA4dA,IAAE,KAAK,yiBAAyiBA,IAAE,KAAK,6dAA6dA,IAAE,KAAK,udAAudA,IAAE,KAAK,+QAA+QA,IAAE,KAAK,6QAA6QA,IAAE,KAAK,YAAW;AAAtg+M,IAAyg+M,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,OAAM,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,+gBAA+gBA,IAAE,KAAK,6eAA6eA,IAAE,KAAK,6eAA6eA,IAAE,KAAK,qOAAqOA,IAAE,KAAK,6lDAA6lDA,IAAE,KAAK,29BAA29BA,IAAE,KAAK,2vBAA2vBA,IAAE,KAAK,89DAA89DA,IAAE,KAAK,8qBAA8qBA,IAAE,KAAK,s1BAAs1BA,IAAE,KAAK,kuBAAkuBA,IAAE,KAAK,4eAA4eA,IAAE,KAAK,q4DAAq4DA,IAAE,KAAK,64BAA64BA,IAAE,KAAK,uyBAAuyBA,IAAE,KAAK,qvBAAqvBA,IAAE,KAAK,ofAAofA,IAAE,KAAK,2uBAA2uBA,IAAE,KAAK,g1BAAg1BA,IAAE,KAAK,ifAAifA,IAAE,KAAK,qfAAqfA,IAAE,KAAK,uSAAuSA,IAAE,KAAK,gnCAAgnCA,IAAE,KAAK,ivBAAivBA,IAAE,KAAK,+NAA+NA,IAAE,KAAK,+9BAA+9BA,IAAE,KAAK,gBAAe;AAA/vnO,IAAkwnO,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,6sBAA6sBA,IAAE,KAAK,6TAA6TA,IAAE,KAAK,ynBAAynBA,IAAE,KAAK,0gBAA0gBA,IAAE,KAAK,2tBAA2tBA,IAAE,KAAK,8jBAA8jBA,IAAE,KAAK,ieAAieA,IAAE,KAAK,mVAAmVA,IAAE,KAAK,wNAAwNA,IAAE,KAAK,quBAAquBA,IAAE,KAAK,gHAAgHA,IAAE,KAAK,siBAAsiBA,IAAE,KAAK,ouBAAouBA,IAAE,KAAK,8UAA8UA,IAAE,KAAK,gHAAgHA,IAAE,KAAK,8nCAA8nCA,IAAE,KAAK,sVAAsVA,IAAE,KAAK,gBAAe;AAAji5O,IAAoi5O,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,OAAM,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,kDAAkDA,IAAE,KAAK,yNAAyNA,IAAE,KAAK,8pBAA8pBA,IAAE,KAAK,kHAAkHA,IAAE,KAAK,sHAAsHA,IAAE,KAAK,ieAAieA,IAAE,KAAK,sMAAsMA,IAAE,KAAK,sVAAsVA,IAAE,KAAK,oPAAoPA,IAAE,KAAK,sIAAsIA,IAAE,KAAK,sPAAsPA,IAAE,KAAK,qYAAqYA,IAAE,KAAK,mMAAmMA,IAAE,KAAK,uPAAuPA,IAAE,KAAK,6mBAA6mBA,IAAE,KAAK,sYAAqY;AAAn7iP,IAAs7iP,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,2TAA2TA,IAAE,KAAK,yNAAyNA,IAAE,KAAK,wOAAwOA,IAAE,KAAK,kYAAkYA,IAAE,KAAK,kxBAAkxBA,IAAE,KAAK,+qDAA+qDA,IAAE,KAAK,yZAAyZA,IAAE,KAAK,i1BAAi1BA,IAAE,KAAK,mVAAmVA,IAAE,KAAK,sKAAsKA,IAAE,KAAK,s9BAAs9BA,IAAE,KAAK,ukCAAukCA,IAAE,KAAK,uWAAuWA,IAAE,KAAK,6iBAA6iBA,IAAE,KAAK,q2BAAq2BA,IAAE,KAAK,qYAAqYA,IAAE,KAAK,gTAAgTA,IAAE,KAAK,82BAA82BA,IAAE,KAAK,oYAAoYA,IAAE,KAAK,8sBAA8sBA,IAAE,KAAK,gBAAe;AAAp/6P,IAAu/6P,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,owBAAowBA,IAAE,KAAK,siBAAsiBA,IAAE,KAAK,u6BAAu6BA,IAAE,KAAK,ybAAybA,IAAE,KAAK,gdAAgdA,IAAE,KAAK,iiBAAiiBA,IAAE,KAAK,4UAA4UA,IAAE,KAAK,m4BAAm4BA,IAAE,KAAK,8fAA8fA,IAAE,KAAK,0wBAA0wBA,IAAE,KAAK,4TAA4TA,IAAE,KAAK,wyBAAwyBA,IAAE,KAAK,oiBAAoiBA,IAAE,KAAK,+uBAA+uBA,IAAE,KAAK,s5GAAs5GA,IAAE,KAAK,gRAAgRA,IAAE,KAAK,gRAAgRA,IAAE,KAAK,2QAA2QA,IAAE,KAAK,4QAA4QA,IAAE,KAAK,gRAAgRA,IAAE,KAAK,8QAA8QA,IAAE,KAAK,8QAA8QA,IAAE,KAAK,gHAAgHA,IAAE,KAAK,8IAA8IA,IAAE,KAAK,+IAA+IA,IAAE,KAAK,gJAAgJA,IAAE,KAAK,+IAA+IA,IAAE,KAAK,+IAA+IA,IAAE,KAAK,6IAA6IA,IAAE,KAAK,gBAAe;AAAjl5Q,IAAol5Q,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,gXAAgXA,IAAE,KAAK,gKAAgKA,IAAE,KAAK,wSAAwSA,IAAE,KAAK,kjBAAkjBA,IAAE,KAAK,uWAAuWA,IAAE,KAAK,o2BAAo2BA,IAAE,KAAK,2UAA2UA,IAAE,KAAK,mNAAmNA,IAAE,KAAK,gmBAAgmBA,IAAE,KAAK,4hBAA4hBA,IAAE,KAAK,iKAAiKA,IAAE,KAAK,yUAAyUA,IAAE,KAAK,kxBAAkxBA,IAAE,KAAK,ksBAAksBA,IAAE,KAAK,8GAA8GA,IAAE,KAAK,+2BAA+2BA,IAAE,KAAK,2UAA2UA,IAAE,KAAK,scAAscA,IAAE,KAAK,qjBAAqjBA,IAAE,KAAK,gxBAAgxBA,IAAE,KAAK,iKAAiKA,IAAE,KAAK,6fAA6fA,IAAE,KAAK,8UAA8UA,IAAE,KAAK,gBAAe;AAAtquR,IAAyquR,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,OAAM,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,8yCAA8yCA,IAAE,KAAK,y9BAAy9BA,IAAE,KAAK,siBAAsiBA,IAAE,KAAK,4fAA4fA,IAAE,KAAK,wyBAAwyBA,IAAE,KAAK,yjCAAyjCA,IAAE,KAAK,68BAA68BA,IAAE,KAAK,mwCAAmwCA,IAAE,KAAK,qwCAAqwCA,IAAE,KAAK,gnCAAgnCA,IAAE,KAAK,0gCAA0gCA,IAAE,KAAK,slBAAslBA,IAAE,KAAK,wgCAAwgCA,IAAE,KAAK,+/CAA+/CA,IAAE,KAAK,moEAAmoEA,IAAE,KAAK,gBAAe;AAAj9uS,IAAo9uS,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,q9EAAq9EA,IAAE,KAAK,wJAAwJA,IAAE,KAAK,wtFAAwtFA,IAAE,KAAK,2pDAA2pDA,IAAE,KAAK,uiDAAuiDA,IAAE,KAAK,0mBAA0mBA,IAAE,KAAK,yvEAAyvEA,IAAE,KAAK,qNAAqNA,IAAE,KAAK,+7CAA+7CA,IAAE,KAAK,idAAidA,IAAE,KAAK,wmBAAwmBA,IAAE,KAAK,2cAA2cA,IAAE,KAAK,04EAA04EA,IAAE,KAAK,4yFAA4yFA,IAAE,KAAK,gwDAAgwDA,IAAE,KAAK,ovEAAovEA,IAAE,KAAK,6vEAA6vEA,IAAE,KAAK,kOAAkOA,IAAE,KAAK,+lDAA+lDA,IAAE,KAAK,0OAA0OA,IAAE,KAAK,gyNAAgyNA,IAAE,KAAK,gBAAe;AAAhm1U,IAAmm1U,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,ijxCAAijxCA,IAAE,KAAK,8uhDAA8uhDA,IAAE,KAAK,8bAA8bA,IAAE,KAAK,wEAAwEA,IAAE,KAAK,kYAAkYA,IAAE,KAAK,ylBAAylBA,IAAE,KAAK,2yBAA2yBA,IAAE,KAAK,u1BAAu1BA,IAAE,KAAK,oVAAoVA,IAAE,KAAK,uIAAuIA,IAAE,KAAK,8tBAA8tBA,IAAE,KAAK,wLAAwLA,IAAE,KAAK,uLAAuLA,IAAE,KAAK,8tBAA8tBA,IAAE,KAAK,qVAAqVA,IAAE,KAAK,4lBAA4lBA,IAAE,KAAK,YAAW;AAA7g1a,IAAgh1a,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,0RAA0RA,IAAE,KAAK,6MAA6MA,IAAE,KAAK,wUAAwUA,IAAE,KAAK,+MAA+MA,IAAE,KAAK,skBAAskBA,IAAE,KAAK,g1BAAg1BA,IAAE,KAAK,kNAAkNA,IAAE,KAAK,gLAAgLA,IAAE,KAAK,0bAA0bA,IAAE,KAAK,4dAA4dA,IAAE,KAAK,gLAAgLA,IAAE,KAAK,0fAA0fA,IAAE,KAAK,uWAAuWA,IAAE,KAAK,wdAAwdA,IAAE,KAAK,8KAA8KA,IAAE,KAAK,uOAAuOA,IAAE,KAAK,gBAAe;AAA/6gb,IAAk7gb,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,kDAAkDA,IAAE,KAAK,+IAA+IA,IAAE,KAAK,w6PAAw6PA,IAAE,KAAK,mwBAAmwBA,IAAE,KAAK,4ZAA4ZA,IAAE,KAAK,0nBAA0nBA,IAAE,KAAK,23BAA23BA,IAAE,KAAK,2dAA2dA,IAAE,KAAK,uEAAuEA,IAAE,KAAK,sOAAsOA,IAAE,KAAK,+6BAA+6BA,IAAE,KAAK,+XAA+XA,IAAE,KAAK,2XAA2XA,IAAE,KAAK,iwBAAiwBA,IAAE,KAAK,wmBAAwmBA,IAAE,KAAK,yrBAAyrBA,IAAE,KAAK,62BAA62BA,IAAE,KAAK,8bAA8bA,IAAE,KAAK,wEAAwEA,IAAE,KAAK,8TAA8TA,IAAE,KAAK,0dAA0dA,IAAE,KAAK,qOAAqOA,IAAE,KAAK,qOAAqOA,IAAE,KAAK,keAAkeA,IAAE,KAAK,wOAAwOA,IAAE,KAAK,kOAAiO;AAAvinc,IAA0inc,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,yuBAAyuBA,IAAE,KAAK,kdAAkdA,IAAE,KAAK,ogBAAogBA,IAAE,KAAK,wcAAwcA,IAAE,KAAK,4sCAA4sCA,IAAE,KAAK,2jBAA2jBA,IAAE,KAAK,iyBAAiyBA,IAAE,KAAK,gmPAAgmPA,IAAE,KAAK,owBAAowBA,IAAE,KAAK,ktBAAktBA,IAAE,KAAK,4UAA4UA,IAAE,KAAK,ydAAydA,IAAE,KAAK,8jBAA8jBA,IAAE,KAAK,01DAA01DA,IAAE,KAAK,YAAW;AAA/ypd,IAAkzpd,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,iDAAiDA,IAAE,KAAK,82IAA82IA,IAAE,KAAK,6bAA6bA,IAAE,KAAK,wjCAAwjCA,IAAE,KAAK,yeAAyeA,IAAE,KAAK,ggBAA+f;AAAv83d,IAA083d,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,OAAM,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,2jBAA2jBA,IAAE,KAAK,ygBAAygBA,IAAE,KAAK,8pBAA8pBA,IAAE,KAAK,4eAA4eA,IAAE,KAAK,4pBAA4pBA,IAAE,KAAK,8KAA8KA,IAAE,KAAK,isCAAisCA,IAAE,KAAK,gXAAgXA,IAAE,KAAK,+3CAA+3CA,IAAE,KAAK,6cAA6cA,IAAE,KAAK,0cAA0cA,IAAE,KAAK,64CAA64CA,IAAE,KAAK,0pBAA0pBA,IAAE,KAAK,spBAAspBA,IAAE,KAAK,0vCAA0vCA,IAAE,KAAK,w4CAAw4CA,IAAE,KAAK,+IAA+IA,IAAE,KAAK,gJAAgJA,IAAE,KAAK,8KAA8KA,IAAE,KAAK,4cAA4cA,IAAE,KAAK,gBAAe;AAAn5ye,IAAs5ye,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,wrBAAwrBA,IAAE,KAAK,4kBAA4kBA,IAAE,KAAK,ynBAAynBA,IAAE,KAAK,sWAAsWA,IAAE,KAAK,6dAA6dA,IAAE,KAAK,glBAAglBA,IAAE,KAAK,4TAA4TA,IAAE,KAAK,8TAA8TA,IAAE,KAAK,+TAA+TA,IAAE,KAAK,0TAA0TA,IAAE,KAAK,gHAAgHA,IAAE,KAAK,6TAA6TA,IAAE,KAAK,gOAAgOA,IAAE,KAAK,mdAAmdA,IAAE,KAAK,kyCAAkyCA,IAAE,KAAK,gBAAe;AAAzohf,IAA4ohf,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,OAAM,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,gPAAgPA,IAAE,KAAK,+EAA+EA,IAAE,KAAK,+HAA+HA,IAAE,KAAK,oFAAoFA,IAAE,KAAK,wFAAwFA,IAAE,KAAK,wFAAwFA,IAAE,KAAK,uKAAuKA,IAAE,KAAK,wFAAwFA,IAAE,KAAK,wFAAwFA,IAAE,KAAK,gFAAgFA,IAAE,KAAK,sFAAsFA,IAAE,KAAK,wFAAwFA,IAAE,KAAK,keAAkeA,IAAE,KAAK,+dAA+dA,IAAE,KAAK,2YAA2YA,IAAE,KAAK,yIAAyIA,IAAE,KAAK,yEAAyEA,IAAE,KAAK,wUAAwUA,IAAE,KAAK,6QAA6QA,IAAE,KAAK,qOAAqOA,IAAE,KAAK,sOAAsOA,IAAE,KAAK,sXAAsXA,IAAE,KAAK,4hBAA4hBA,IAAE,KAAK,qGAAqGA,IAAE,KAAK,wFAAwFA,IAAE,KAAK,sXAAsXA,IAAE,KAAK,uUAAuUA,IAAE,KAAK,+UAA+UA,IAAE,KAAK,oIAAoIA,IAAE,KAAK,qOAAqOA,IAAE,KAAK,wOAAwOA,IAAE,KAAK,gVAAgVA,IAAE,KAAK,+XAA+XA,IAAE,KAAK,8QAA8QA,IAAE,KAAK,oIAAoIA,IAAE,KAAK,sUAAsUA,IAAE,KAAK,kYAAkYA,IAAE,KAAK,sFAAsFA,IAAE,KAAK,sIAAsIA,IAAE,KAAK,qUAAqUA,IAAE,KAAK,YAAW;AAAj/zf,IAAo/zf,KAAG,OAAK,EAAC,qBAAoB,OAAK,EAAC,OAAM,MAAK,QAAO,MAAK,OAAM,qBAAoB,QAAO,sBAAqB,eAAc,6BAA4B,IAAG,QAAO,CAAAA,QAAG,sDAAmDA,IAAE,KAAK,aAAaA,IAAE,MAAM,oqBAAoqBA,IAAE,KAAK,o4BAAo4BA,IAAE,KAAK,yZAAyZA,IAAE,KAAK,4lBAA4lBA,IAAE,KAAK,ghBAAghBA,IAAE,KAAK,ghBAAghBA,IAAE,KAAK,qyBAAqyBA,IAAE,KAAK,4cAA4cA,IAAE,KAAK,waAAwaA,IAAE,KAAK,4kBAA4kBA,IAAE,KAAK,krBAAkrBA,IAAE,KAAK,kQAAkQA,IAAE,KAAK,uRAAuRA,IAAE,KAAK,mhBAAmhBA,IAAE,KAAK,inBAAinBA,IAAE,KAAK,2cAA2cA,IAAE,KAAK,uZAAuZA,IAAE,KAAK,kxBAAkxBA,IAAE,KAAK,+RAA+RA,IAAE,KAAK,wPAAwPA,IAAE,KAAK,2PAA2PA,IAAE,KAAK,2PAA2PA,IAAE,KAAK,YAAW;;;ACAloqgB,IAAIa,KAAE;;;ACA+O,IAAMC,KAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,OAAK,IAAG,KAAK,QAAM,IAAG,KAAK,cAAY,IAAG,KAAK,QAAM,IAAG,KAAK,SAAO,IAAG,KAAK,OAAK,KAAI,KAAK,QAAM,IAAG,KAAK,SAAO,IAAG,KAAK,SAAO,IAAG,KAAK,SAAO,OAAG,KAAK,aAAW,OAAG,KAAK,SAAO,EAAC,QAAO,MAAK,OAAM,KAAI,GAAE,KAAK,QAAM,EAAC,QAAO,MAAK,OAAM,KAAI,GAAE,KAAK,SAAO,EAAC,QAAO,MAAK,OAAM,KAAI;AAAA,EAAC;AAAA,EAAC,IAAI,UAAS;AAAtmB,QAAAC;AAAumB,YAAOA,MAAA,KAAK,eAAL,gBAAAA,IAAiB,cAAc;AAAA,EAAM;AAAA,EAAC,oBAAmB;AAAC,UAAM,kBAAkB,GAAE,KAAK,UAAU,IAAI,UAAU;AAAA,EAAC;AAAA,EAAC,aAAaC,KAAE;AAAhvB,QAAAD,KAAAE;AAAivB,UAAM,aAAaD,GAAC;AAAE,QAAG;AAAC,WAAK,QAAM,KAAK,SAAS,KAAEC,OAAAF,MAAA,KAAK,eAAL,gBAAAA,IAAiB,cAAc,WAA/B,gBAAAE,IAAuC,aAAa,eAAc;AAAA,IAAO,SAAOD,KAAE;AAAA,IAAC;AAAC,SAAK,cAAc;AAAA,EAAC;AAAA,EAAC,QAAQA,KAAE;AAAC,UAAM,QAAQA,GAAC,GAAE,KAAK,cAAc;AAAA,EAAC;AAAA,EAAC,gBAAe;AAAC,SAAK,YAAU,KAAK,QAAQ,MAAM,YAAU,UAAU,KAAK,MAAM;AAAA,EAAO;AAAA,EAAC,WAAU;AAAniC,QAAAD,KAAAE,KAAAC,KAAAC,KAAAC,KAAA;AAAoiC,UAAMJ,MAAE,EAAE,GAAEK,MAAE,SAAS,cAAc,OAAO;AAAE,IAAAA,IAAE,aAAa,MAAKL,GAAC,GAAEK,IAAE,YAAU,KAAK,QAAMJ,OAAAF,MAAA,KAAK,eAAL,gBAAAA,IAAiB,cAAc,WAA/B,gBAAAE,IAAuC,aAAa,QAAO,SAAOE,OAAAD,MAAA,KAAK,eAAL,gBAAAA,IAAiB,cAAc,WAA/B,gBAAAC,IAAuC,QAAQE,OAAG,MAAAD,MAAA,KAAK,eAAL,gBAAAA,IAAiB,cAAc,WAA/B,mBAAuC,aAAa,mBAAkBJ;AAAA,EAAE;AAAA,EAAC,gBAAe;AAAC,QAAG,KAAK,SAAO,KAAK;AAAO,aAAM,EAAC,OAAM,KAAK,OAAM,QAAO,KAAK,OAAM;AAAE,YAAO,KAAK,MAAK;AAAA,MAAC,KAAI;AAAK,eAAO,KAAK;AAAA,MAAO,KAAI;AAAA,MAAI;AAAQ,eAAO,KAAK;AAAA,MAAM,KAAI;AAAI,eAAO,KAAK;AAAA,IAAM;AAAA,EAAC;AAAA,EAAC,cAAcA,KAAE;AAAC,QAAG,KAAK;AAAW,aAAM,EAAC,OAAM,mCAAkC,QAAO,kCAAiC;AAAE,UAAMK,MAAE,EAAC,OAAML,IAAE,OAAM,QAAOA,IAAE,OAAM;AAAE,WAAOK,IAAE,QAAM,KAAK,QAAM,KAAK,QAAML,IAAE,OAAMK,IAAE,SAAO,KAAK,SAAO,KAAK,SAAOL,IAAE,QAAO,CAAC,MAAM,KAAK,WAAW,KAAG,KAAK,cAAY,MAAIK,IAAE,QAAM,0BAA0B,KAAK,WAAW,KAAIA,IAAE,SAAO,2BAA2B,KAAK,WAAW,MAAKA;AAAA,EAAC;AAAA,EAAC,UAAS;AAAr6D,QAAAN;AAAs6D,UAAMC,OAAED,MAAA,KAAK,SAAL,gBAAAA,IAAW,WAAW,KAAI;AAAI,QAAGC,OAAK,eAAE;AAAC,YAAMK,MAAE,cAAEL,GAAC,EAAE,GAAEM,MAAED,IAAE,oBAAoB,GAAE,EAAC,OAAME,KAAE,QAAOC,IAAC,IAAE,KAAK,cAAc;AAAE,MAAAF,IAAE,QAAMC,OAAGD,IAAE,OAAMA,IAAE,SAAOE,OAAGF,IAAE;AAAO,YAAK,EAAC,OAAMG,IAAE,QAAOC,IAAC,IAAE,KAAK,cAAcJ,GAAC;AAAE,aAAOA,IAAE,QAAM,KAAK,OAAMA,IAAE,QAAMG,IAAEH,IAAE,SAAOI,KAAEL,IAAE,OAAOC,GAAC;AAAA,IAAC;AAAC,MAAE,MAAK,KAAK,OAAK,4BAA4B;AAAA,EAAC;AAAA,EAAC,SAAQ;AAAC,WAAO,OAAI,KAAK,QAAQ,CAAC;AAAA,EAAE;AAAC;AAACR,GAAE,SAAO,CAACY,EAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEZ,GAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,eAAc,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,UAAS,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,UAAS,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,UAAS,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,GAAE,WAAU,UAAS,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,GAAE,WAAU,cAAa,MAAM;;;ACA5sF,EAAE,YAAWa,EAAC;;;AJKvH,IAAM,UAAU,gBAAgB;AAAA,EAC5B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AKTD,IAAAC,UAAuB;;;ACchB,IAAM,YAAY,CAAI,UAAa,UAAK,QAAL,UAAK,SAAL,QAAS;;;ACdzB,IAAIC,KAAE;;;ACEhC,IAAI,WAAW;AAEf,IAAI,YAAY,MAAM,UAAU,QAAQ,CAAC;;;ACJsP,IAAMC,KAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,SAAO,OAAG,KAAK,QAAM,OAAG,KAAK,WAAS,OAAG,KAAK,MAAI,OAAG,KAAK,OAAK,OAAG,KAAK,SAAO,OAAG,KAAK,SAAO,OAAG,KAAK,WAAS,OAAG,KAAK,SAAO,OAAG,KAAK,YAAU,OAAG,KAAK,OAAK,KAAI,KAAK,SAAO,OAAG,KAAK,SAAO,OAAG,KAAK,OAAK,IAAG,KAAK,QAAM,IAAG,KAAK,cAAY,IAAG,KAAK,gBAAc,IAAG,KAAK,aAAW,IAAG,KAAK,kBAAgB,IAAG,KAAK,wBAAsB,IAAG,KAAK,0BAAwB,IAAG,KAAK,uBAAqB,IAAG,KAAK,oBAAkB,IAAG,KAAK,sBAAoB,IAAG,KAAK,mBAAiB,IAAG,KAAK,cAAY,IAAG,KAAK,YAAU,OAAG,KAAK,iBAAe,CAAAC,QAAG;AAAC,cAAOA,IAAE,MAAK;AAAA,QAAC,KAAI;AAAA,QAAQ,KAAI;AAAA,QAAc,KAAI;AAAQ,eAAK,MAAM;AAAA,MAAC;AAAA,IAAC,GAAE,KAAK,UAAQ,MAAI;AAAC,UAAIA,MAAE,IAAI,YAAY,SAAS;AAAE,WAAK,cAAcA,GAAC,GAAE,aAAW,KAAK,QAAM,KAAK,WAAW;AAAA,IAAC,GAAE,KAAK,aAAW,MAAI;AAAC,UAAIA,MAAE,KAAK,QAAQ,MAAM;AAAE,MAAAA,OAAGA,IAAE,cAAc,KAAGA,IAAE,OAAO;AAAA,IAAC,GAAE,KAAK,oBAAkB,MAAI;AAAC,UAAG,KAAK,iBAAe,CAAC,KAAK,KAAI;AAAC,aAAK,cAAc,aAAW,KAAK;AAAS,YAAIA,MAAE,yBAAwBC,MAAE;AAAyB,SAAC,KAAK,aAAW,KAAK,cAAYD,MAAE,mCAAkCC,MAAE,qCAAoC,KAAK,cAAcD,KAAEC,GAAC;AAAA,MAAC;AAAA,IAAC,GAAE,KAAK,2BAAyB,MAAI;AAAC,UAAG,KAAK,iBAAe,CAAC,KAAK,KAAI;AAAC,YAAID,MAAE,gCAA+BC,MAAE;AAA+B,aAAK,YAAU,KAAK,QAAMD,MAAE,+CAA8CC,MAAE,mDAAiDD,MAAE,0CAAyCC,MAAE,6CAA2C,KAAK,aAAWD,MAAE,yCAAwCC,MAAE,2CAA0C,KAAK,cAAcD,KAAEC,GAAC;AAAA,MAAC;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,IAAI,gBAAe;AAAC,WAAO,KAAK,cAAc,WAAW;AAAA,EAAC;AAAA,EAAC,aAAaD,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,aAAa,QAAO,QAAQ,GAAE,KAAK,aAAa,UAAU,KAAG,KAAK,aAAa,YAAW,KAAK,WAAS,OAAK,GAAG,GAAE,KAAK,iBAAiB,YAAW,KAAK,cAAc,GAAE,KAAK,iBAAiB,SAAQ,KAAK,YAAY,GAAE,KAAK,iBAAiB,QAAO,KAAK,aAAa,GAAE,KAAK,iBAAiB,SAAQ,KAAK,OAAO,GAAE,KAAK,UAAU;AAAA,EAAC;AAAA,EAAC,YAAW;AAAC,SAAK,kBAAgB,KAAK,cAAc,aAAa,QAAO,MAAM,GAAE,KAAK,cAAc,aAAa,MAAM,KAAG,KAAK,cAAc,aAAa,QAAO,GAAG,GAAE,KAAK,OAAK,KAAK,kBAAkB;AAAA,EAAE;AAAA,EAAC,QAAQA,KAAE;AAAC,UAAM,QAAQA,GAAC,GAAE,KAAK,WAAS,KAAK,aAAa,iBAAgB,MAAM,IAAE,KAAK,gBAAgB,eAAe,GAAE,KAAK,aAAa,YAAW,KAAK,WAAS,OAAK,GAAG,GAAE,KAAK,UAAQ,KAAK,aAAa,gBAAe,KAAG,KAAK,MAAM;AAAA,EAAC;AAAA,EAAC,cAAcA,KAAEC,KAAE;AAAC,SAAK,cAAc,aAAa,SAAQD,GAAC,GAAE,KAAK,cAAc,aAAa,UAASC,GAAC;AAAA,EAAC;AAAA,EAAC,2BAA0B;AAAC,WAAO,KAAK,YAAU,KAAK,0BAAwB,qBAAqB,KAAK,uBAAuB,MAAI,KAAK,UAAQ,KAAK,wBAAsB,qBAAqB,KAAK,qBAAqB,MAAI,KAAK,cAAY,KAAK,yBAAuB,KAAK,wBAAsB,qBAAqB,KAAK,wBAAsB,KAAK,qBAAqB,MAAI,KAAK,kBAAgB,qBAAqB,KAAK,eAAe,MAAI;AAAA,EAAM;AAAA,EAAC,iBAAgB;AAAC,WAAO,KAAK,YAAU,KAAK,iBAAe,KAAK,UAAQ,KAAK,cAAY,UAAU,KAAK,aAAa,MAAI,KAAK,cAAY,KAAK,eAAa,KAAK,cAAY,UAAU,KAAK,cAAY,KAAK,WAAW,MAAI,KAAK,QAAM,UAAU,KAAK,KAAK,MAAI;AAAA,EAAM;AAAA,EAAC,uBAAsB;AAAC,WAAO,KAAK,YAAU,KAAK,uBAAqB,KAAK,UAAQ,KAAK,oBAAkB,qBAAqB,KAAK,mBAAmB,MAAI,KAAK,cAAY,KAAK,qBAAmB,KAAK,oBAAkB,qBAAqB,KAAK,oBAAkB,KAAK,iBAAiB,MAAI,KAAK,cAAY,qBAAqB,KAAK,WAAW,MAAI;AAAA,EAAM;AAAA,EAAC,YAAW;AAAC,UAAMD,MAAE,KAAK,eAAe,GAAEC,MAAE,KAAK,yBAAyB,GAAEC,MAAE,KAAK,qBAAqB;AAAE,QAAIC,MAAE;AAAG,WAAOH,QAAIG,OAAGH,MAAGC,QAAIE,OAAGF,MAAGC,QAAIC,OAAGD,MAAGC,OAAG;AAAA,EAAM;AAAA,EAAC,eAAc;AAAC,SAAK,YAAU,MAAG,KAAK,yBAAyB;AAAA,EAAC;AAAA,EAAC,eAAc;AAAC,SAAK,YAAU,OAAG,KAAK,UAAQ,KAAK,kBAAkB;AAAA,EAAC;AAAA,EAAC,eAAc;AAAC,SAAK,SAAO,MAAG,KAAK,yBAAyB;AAAA,EAAC;AAAA,EAAC,gBAAe;AAAC,SAAK,SAAO,OAAG,KAAK,kBAAkB;AAAA,EAAC;AAAA,EAAC,mBAAkB;AAAC,QAAIH,MAAE,eAAe,KAAK,IAAI;AAAG,WAAOA,OAAG,KAAK,SAAO,wBAAsB,IAAGA,OAAG,KAAK,MAAI,qBAAmB,IAAGA,OAAG,KAAK,OAAK,sBAAoB,IAAGA,OAAG,KAAK,YAAU,2BAAyB,IAAGA,OAAG,KAAK,WAAS,0BAAwB,IAAGA,OAAG,KAAK,WAAS,0BAAwB,IAAGA,OAAG,KAAK,QAAM,uBAAqB,IAAGA,OAAG,KAAK,SAAO,wBAAsB,IAAGA,OAAG,KAAK,SAAO,yBAAuB,IAAGA,OAAG,KAAK,SAAO,yBAAuB,IAAGA,OAAG,KAAK,SAAO,wBAAsB,IAAGA;AAAA,EAAC;AAAA,EAAC,SAAQ;AAAC,WAAO,8BAA2B,KAAK,iBAAiB,CAAC,kBAAkB,KAAK,YAAY,kBAAkB,KAAK,YAAY,YAAY,UAAE,KAAK,UAAU,CAAC,CAAC;AAAA,EAAgD;AAAC;AAACD,GAAE,SAAO,CAACK,IAAE,SAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEL,GAAE,WAAU,UAAS,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,OAAM,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,UAAS,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,UAAS,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,UAAS,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,aAAY,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,UAAS,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,UAAS,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,eAAc,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,iBAAgB,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,cAAa,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,mBAAkB,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,yBAAwB,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,2BAA0B,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,wBAAuB,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,qBAAoB,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,uBAAsB,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,oBAAmB,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,eAAc,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,GAAE,WAAU,aAAY,MAAM;;;ACAp9M,EAAE,cAAaM,EAAC;;;ALK7H,IAAM,YAAY,gBAAgB;AAAA,EAC9B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AAAA,EACP,QAAQ;AAAA,IACJ,WAAW;AAAA,EACf;AACJ,CAAC;;;AMZD,IAAAC,UAAuB;;;ACEvB,IAAIC,YAAW;AAEf,IAAI,iBAAiB,MAAM,UAAUA,SAAQ,CAAC;;;ACJuJ,IAAMC,KAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,MAAI,OAAG,KAAK,eAAa;AAAA,EAAE;AAAA,EAAC,QAAQC,KAAE;AAAC,UAAM,QAAQA,GAAC;AAAA,EAAC;AAAA,EAAC,SAAQ;AAAC,WAAO,oCAAiC,KAAK,MAAI,0BAAwB,EAAE,IAAI,KAAK,eAAa,mCAAiC,EAAE;AAAA,EAAuB;AAAC;AAACD,GAAE,SAAO,CAAC,cAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,GAAE,WAAU,OAAM,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,gBAAe,MAAM;;;ACAne,EAAE,oBAAmBE,EAAC;;;AHK9I,IAAM,iBAAiB,gBAAgB;AAAA,EACnC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AITD,IAAAC,UAAuB;;;ACAG,IAAIC,MAAE;;;ACA6H,IAAMC,KAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,IAAE,QAAO,KAAK,IAAE,QAAO,KAAK,OAAK,QAAO,KAAK,SAAO,QAAO,KAAK,UAAQ,QAAO,KAAK,UAAQ,QAAO,KAAK,YAAU;AAAA,EAAM;AAAA,EAAC,SAAQ;AAAC,WAAO;AAAA,EAAgB;AAAC;AAACA,GAAE,SAAO,CAACC,GAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAED,GAAE,WAAU,KAAI,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,KAAI,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,UAAS,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,WAAU,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,WAAU,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,aAAY,MAAM;;;ACAhrB,EAAE,WAAUE,EAAC;;;ACAnG,IAAIC,KAAE;;;ACA0H,IAAMC,KAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,QAAM,QAAO,KAAK,UAAQ,QAAO,KAAK,MAAI;AAAA,EAAM;AAAA,EAAC,QAAQC,KAAE;AAAC,UAAM,QAAQA,GAAC,GAAEA,IAAE,IAAI,KAAK,IAAE,KAAK,MAAM,MAAI,KAAK,MAAI,KAAK,MAAM,MAAI;AAAA,EAAM;AAAA,EAAC,SAAQ;AAAC,WAAO;AAAA,EAAgB;AAAC;AAACD,GAAE,SAAO,CAACA,EAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,WAAU,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,OAAM,MAAM;;;ACAld,EAAE,WAAUE,EAAC;;;ACA7F,IAAIC,KAAE;;;ACAgI,IAAMC,MAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,QAAM,OAAG,KAAK,QAAM,IAAG,KAAK,aAAW;AAAA,EAAE;AAAA,EAAC,aAAaC,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,CAAC,KAAK,SAAO,KAAK,UAAQ,KAAK,MAAM,WAAS,GAAG,KAAK,KAAK;AAAA,EAAK;AAAA,EAAC,SAAQ;AAAC,WAAO;AAAA,EAAgB;AAAC;AAACD,IAAE,SAAO,CAACE,EAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEF,IAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,cAAa,MAAM;;;ACAjd,EAAE,iBAAgBG,GAAC;;;ATSzI,IAAM,SAAS,gBAAgB;AAAA,EAC3B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;AACD,IAAM,SAAS,gBAAgB;AAAA,EAC3B,SAAS;AAAA,EACT,cAAcD;AAAA,EACd,OAAOC;AACX,CAAC;AACD,IAAM,eAAe,gBAAgB;AAAA,EACjC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOD;AACX,CAAC;;;AUvBD,IAAAE,iBAA2B;;;ACE3B,IAAIC,YAAW;AAEf,IAAI,WAAW,MAAM,UAAUA,SAAQ,CAAC;;;ACJmK,IAAMC,KAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,cAAY,OAAG,KAAK,YAAU,OAAG,KAAK,cAAY,OAAG,KAAK,WAAS,IAAG,KAAK,UAAQ,OAAG,KAAK,OAAK,QAAO,KAAK,cAAY,eAAc,KAAK,iBAAe,4BAA2B,KAAK,eAAa,6BAA4B,KAAK,cAAY,IAAG,KAAK,cAAY;AAAA,EAAE;AAAA,EAAC,oBAAmB;AAAC,UAAM,kBAAkB,GAAE,KAAK,aAAa,MAAM,KAAG,KAAK,aAAa,QAAO,OAAO;AAAA,EAAC;AAAA,EAAC,aAAaC,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,gBAAc,KAAK,cAAY,KAAK,YAAW,KAAK,UAAQ,OAAK,KAAK;AAAA,EAAQ;AAAA,EAAC,QAAO;AAAC,QAAIA,MAAE,IAAI,YAAY,QAAQ;AAAE,SAAK,cAAcA,GAAC;AAAA,EAAC;AAAA,EAAC,iBAAgB;AAAC,SAAK,cAAY,CAAC,KAAK,aAAY,KAAK,YAAU,KAAK;AAAY,QAAIA,MAAE,IAAI,YAAY,aAAY,EAAC,QAAO,EAAC,aAAY,KAAK,YAAW,EAAC,CAAC;AAAE,SAAK,cAAcA,GAAC;AAAA,EAAC;AAAA,EAAC,eAAc;AAAC,YAAO,KAAK,MAAK;AAAA,MAAC,KAAI;AAAY,eAAM,EAAC,OAAM,8CAA6C,QAAO,6CAA4C;AAAA,MAAE,KAAI;AAAU,eAAM,EAAC,OAAM,4CAA2C,QAAO,2CAA0C;AAAA,MAAE,KAAI;AAAQ,eAAM,EAAC,OAAM,0CAAyC,QAAO,yCAAwC;AAAA,MAAE;AAAQ,eAAM,EAAC,OAAM,yCAAwC,QAAO,wCAAuC;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,eAAc;AAAC,WAAO,KAAK,cAAY,+EAA4E,KAAK,KAAK,iBAAiB,KAAK,WAAW,wIAAsI,KAAK,cAAY,gFAA6E,KAAK,cAAc,oBAAoB,CAAC,KAAK,WAAW,+CAA+C,KAAK,cAAY,KAAK,eAAa,KAAK,cAAc,2GAA2G,KAAK,cAAY,OAAK,KAAK,8CAA4C;AAAA,EAAG;AAAA,EAAC,aAAY;AAAC,UAAMA,MAAE,KAAK,WAAS,KAAG,yBAAwB,EAAC,OAAMC,KAAE,QAAOC,IAAC,IAAE,KAAK,aAAa;AAAE,WAAM,gBAAc,KAAK,OAAK,kCAA+B,KAAK,WAAW,YAAYD,GAAC,aAAaC,GAAC,uCAAuCF,GAAC,4BAA0B,cAAY,KAAK,OAAK,gCAA6B,KAAK,WAAW,YAAYC,GAAC,aAAaC,GAAC,uCAAuCF,GAAC,0BAAwB,YAAU,KAAK,OAAK,gCAA6B,KAAK,WAAW,YAAYC,GAAC,aAAaC,GAAC,uCAAuCF,GAAC,0BAAwB,oCAAiC,KAAK,WAAW,oIAAoIA,GAAC;AAAA,EAA2B;AAAA,EAAC,qBAAoB;AAAC,WAAO,OAAI,KAAK,WAAW,CAAC,wCAAwC,KAAK,QAAQ,cAAc,KAAK,aAAa,CAAC,mCAAmC,KAAK,cAAc,CAAC;AAAA,EAAQ;AAAA,EAAC,gBAAe;AAAC,WAAO,KAAK,cAAY,SAAI;AAAA,EAAgB;AAAA,EAAC,wBAAuB;AAAC,WAAO,6EAA0E,KAAK,WAAW,CAAC,+CAA+C,KAAK,cAAc,CAAC,eAAe,KAAK,aAAa,CAAC;AAAA,EAAE;AAAA,EAAC,cAAa;AAAC,WAAO,KAAK,WAAS,KAAK,mBAAmB,IAAE,KAAK,sBAAsB;AAAA,EAAC;AAAA,EAAC,uBAAsB;AAAC,WAAM,cAAc,KAAK,KAAK,YAAY,CAAC;AAAA,MAAU,KAAK,cAAY,0BAAwB,EAAE;AAAA,MAAS,KAAK,UAAQ,wBAAsB,EAAE;AAAA,EAAE;AAAA,EAAC,SAAQ;AAAC,WAAO,6BAA0B,KAAK,qBAAqB,CAAC,KAAK,KAAK,YAAY,CAAC;AAAA,EAAQ;AAAC;AAACD,GAAE,SAAO,CAAC,2BAAwB,QAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,GAAE,WAAU,eAAc,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,aAAY,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,GAAE,WAAU,eAAc,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,WAAU,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,eAAc,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,kBAAiB,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,gBAAe,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,eAAc,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,GAAE,WAAU,eAAc,MAAM;;;ACAh1I,IAAMI,KAAN,cAAgBA,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,wYAAwY,KAAK,OAAO,KAAK;AAAA,EAA4yB;AAAC;;;ACAtxC,EAAE,sBAAqBC,EAAC;;;ACAvE,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,yYAAyY,KAAK,OAAO,KAAK;AAAA,EAAmZ;AAAC;;;ACAl4B,EAAE,oBAAmBC,GAAC;;;ACAjE,IAAMC,KAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,mSAAmS,KAAK,OAAO,KAAK,oYAAoY,KAAK,OAAO,KAAK;AAAA,EAA6vB;AAAC;;;ACAnhD,EAAE,wBAAuBC,EAAC;;;ACA6P,EAAE,aAAYC,EAAC;;;ATKza,IAAM,WAAW,gBAAgB;AAAA,EAC7B,aAAa;AAAA,EACb,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAO,eAAAC;AAAA,EACP,QAAQ;AAAA,IACJ,UAAU;AAAA,IACV,aAAa;AAAA,EACjB;AACJ,CAAC;;;AUdD,IAAAC,iBAA2B;;;ACE3B,IAAIC,YAAW;AAEf,IAAI,iBAAiB,MAAM,UAAUA,SAAQ,CAAC;;;ACJ6M,IAAMC,KAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,WAAS,IAAG,KAAK,cAAY,OAAG,KAAK,iBAAe,OAAG,KAAK,WAAS,mBAAkB,KAAK,WAAS,mBAAkB,KAAK,WAAS,MAAG,KAAK,QAAM,OAAG,KAAK,YAAU,EAAE;AAAA,EAAC;AAAA,EAAC,IAAI,OAAM;AAAC,WAAO,KAAK,cAAc,WAAW;AAAA,EAAC;AAAA,EAAC,IAAI,oBAAmB;AAAC,WAAO,KAAK,cAAc,IAAI;AAAA,EAAC;AAAA,EAAC,oBAAmB;AAAC,UAAM,kBAAkB,GAAE,KAAK,aAAa,MAAM,KAAG,KAAK,aAAa,QAAO,OAAO,GAAE,KAAK,qBAAmB,KAAK,kBAAkB,aAAa,QAAO,gBAAgB;AAAA,EAAC;AAAA,EAAC,aAAaC,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,SAAO,KAAK,KAAK,aAAa,QAAO,MAAM,GAAE,KAAK,KAAK,aAAa,OAAO,KAAG,KAAK,KAAK,aAAa,SAAQ,IAAI,GAAE,KAAK,KAAK,aAAa,QAAQ,KAAG,KAAK,KAAK,aAAa,UAAS,IAAI,GAAE,KAAK,KAAK,aAAa,SAAQ,wCAAwC,GAAE,KAAK,KAAK,aAAa,UAAS,wCAAwC;AAAA,EAAE;AAAA,EAAC,gBAAe;AAAC,WAAO,KAAK,WAAS,KAAK,WAAS,KAAK;AAAA,EAAQ;AAAA,EAAC,iBAAgB;AAAC,SAAK,WAAS,CAAC,KAAK;AAAS,QAAIA,MAAE,IAAI,YAAY,sBAAqB,EAAC,QAAO,EAAC,YAAW,KAAK,SAAQ,EAAC,CAAC;AAAE,SAAK,cAAcA,GAAC;AAAA,EAAC;AAAA,EAAC,gBAAe;AAAC,WAAO,KAAK,cAAc,gBAAgB;AAAA,EAAC;AAAA,EAAC,oBAAmB;AAAC,WAAO,sJAAmJ,KAAK,QAAQ,6DAA6D,KAAK,cAAc,CAAC,oBAAoB,KAAK,SAAS,oBAAoB,KAAK,QAAQ,iDAAiD,KAAK,cAAc,iDAAiD,KAAK,cAAc,CAAC,oCAAoC,KAAK,WAAS,QAAM,IAAI,sHAAsH,KAAK,SAAS;AAAA,EAA4I;AAAA,EAAC,SAAQ;AAAC,WAAO,oCAAiC,KAAK,WAAS,KAAG,6BAA6B,IAAI,KAAK,QAAM,6BAA2B,EAAE,IAAI,KAAK,iBAAe,qCAAmC,EAAE,KAAK,KAAK,kBAAkB,CAAC;AAAA,EAAQ;AAAC;AAACD,GAAE,SAAO,CAAC,cAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,GAAE,WAAU,eAAc,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,GAAE,WAAU,kBAAiB,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,SAAQ,MAAM;;;ACAljF,EAAE,oBAAmBE,EAAC;;;AHKjS,IAAM,iBAAiB,gBAAgB;AAAA,EACnC,aAAa;AAAA,EACb,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAO,eAAAC;AAAA,EACP,QAAQ;AAAA,IACJ,sBAAsB;AAAA,EAC1B;AACJ,CAAC;;;AIbD,IAAAC,UAAuB;;;ACAG;AAAI,IAAMC,KAAE;AAAR,IAAozDC,MAAE;AAAtzD,IAA65HC,KAAE;AAA/5H,IAAunMC,KAAE;AAAznM,IAAgxOC,KAAE;AAAlxO,IAAopUC,KAAE;AAAtpU,IAAo5WC,KAAE;;;ACAjiW,IAAMC,KAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,OAAK,IAAG,KAAK,YAAU,IAAG,KAAK,eAAa,IAAG,KAAK,kBAAgB,IAAG,KAAK,iBAAe,eAAc,KAAK,YAAU,OAAG,KAAK,QAAM,OAAG,KAAK,mBAAiB,OAAG,KAAK,cAAY,WAAU,KAAK,eAAa,OAAG,KAAK,WAAS,qBAAoB,KAAK,mBAAiB,OAAG,KAAK,yBAAuB,OAAG,KAAK,oBAAkB,IAAG,KAAK,iBAAe,MAAI;AAAC,WAAK,eAAa,eAAe,QAAM,QAAM,KAAK,aAAW,KAAK,WAAW,aAAa,QAAO,QAAQ,IAAE,KAAK,WAAW,aAAa,QAAO,eAAe;AAAA,IAAE;AAAA,EAAC;AAAA,EAAC,aAAaC,KAAE;AAAC,eAAS,KAAK,QAAM,KAAK,gBAAc,KAAK,oBAAoB;AAAA,EAAC;AAAA,EAAC,QAAQA,KAAE;AAAC,UAAM,QAAQA,GAAC,GAAE,WAAS,KAAK,SAAO,KAAK,0BAAwB,KAAK,oBAAoB,GAAE,KAAK,aAAW,KAAK,cAAc,eAAe,KAAG,KAAK,cAAc,sBAAsB,GAAE,KAAK,cAAY,KAAK,WAAW,aAAa,IAAI,MAAI,KAAK,qBAAmB,KAAK,wBAAwB;AAAA,EAAE;AAAA,EAAC,0BAAyB;AAAC,SAAK,oBAAkB,KAAK,WAAW,aAAa,IAAI,KAAG,EAAE,GAAE,KAAK,WAAW,aAAa,MAAK,KAAK,iBAAiB,GAAE,KAAK,WAAW,aAAa,eAAc,GAAG,GAAE,KAAK,WAAW,aAAa,SAAQ,MAAM,GAAE,KAAK,WAAW,aAAa,UAAS,MAAM;AAAA,EAAC;AAAA,EAAC,sBAAqB;AAAC,SAAK,aAAW,KAAK,cAAc,eAAe,KAAG,KAAK,cAAc,sBAAsB,GAAE,KAAK,8BAA8B;AAAA,EAAC;AAAA,EAAC,gCAA+B;AAAC,mBAAe,iBAAiB,UAAS,KAAK,cAAc,GAAE,KAAK,yBAAuB,MAAG,KAAK,eAAe;AAAA,EAAC;AAAA,EAAC,aAAY;AAAC,WAAM,WAAS,KAAK,QAAM,KAAK,aAAW,6GAA0G,KAAK,eAAe,CAAC,mKAAiK,+DAA4D,KAAK,mBAAiB,cAAY,EAAE,KAAK,KAAK,eAAe,CAAC;AAAA,EAAY;AAAA,EAAC,iBAAgB;AAAC,WAAO,+BAA4B,KAAK,cAAY,WAAS,KAAK,OAAK,KAAG,iBAAiB,KAAK,KAAK,cAAc,eAAe,IAAE,kCAA6B,gBAAa,KAAK,QAAQ,iBAAiB,KAAK,WAAW,oCAAoC,KAAK,eAAe,CAAC,MAAM;AAAA,EAAQ;AAAA,EAAC,iBAAgB;AAAC,QAAG,CAAC,KAAK;AAAU,cAAO,KAAK,MAAK;AAAA,QAAC,KAAI;AAAO,iBAAO;AAAA,QAA8E,KAAI;AAAW,iBAAO;AAAA,QAA8E,KAAI;AAAQ,iBAAO;AAAA,QAAoG,KAAI;AAAe,iBAAO;AAAA,MAA6E;AAAC,WAAO;AAAA,EAAG;AAAA,EAAC,2BAA0B;AAAC,WAAO,KAAK,eAAa,OAAK,2FAAwF,KAAK,YAAY,uEAAuE,KAAK,aAAW,2CAAsC,OAAI,KAAK,cAAc,EAAE,qJAAqJ,KAAK,mBAAiB,aAAW,EAAE;AAAA,EAA6F;AAAA,EAAC,qBAAoB;AAAC,WAAO,KAAK,mBAAiB,qGAAgG,OAAI,KAAK,yBAAyB,CAAC,IAAI,KAAK,0BAA0B,CAAC;AAAA,EAAE;AAAA,EAAC,4BAA2B;AAAC,WAAO,+DAA4D,KAAK,eAAa,KAAG,gBAAgB,qBAAqB,KAAK,YAAY,sFAAsF,KAAK,cAAc,yGAAyG,KAAK,mBAAiB,aAAW,EAAE;AAAA,EAA+F;AAAA,EAAC,aAAaA,KAAE;AAAC,QAAG,KAAK,WAAWA,GAAC,GAAE;AAAC,WAAK,mBAAiB,CAAC,KAAK;AAAiB,UAAIA,MAAE,IAAI,YAAY,mBAAkB,EAAC,QAAO,EAAC,YAAW,KAAK,iBAAgB,EAAC,CAAC;AAAE,WAAK,cAAcA,GAAC;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,WAAWA,KAAE;AAAC,WAAM,YAAUA,IAAE,QAAM,YAAUA,IAAE,QAAM,cAAYA,IAAE,QAAM,YAAUA,IAAE;AAAA,EAAI;AAAA,EAAC,cAAa;AAAC,YAAO,KAAK,MAAK;AAAA,MAAC,KAAI;AAAA,MAAO,KAAI;AAAA,MAAW,KAAI;AAAA,MAAQ,KAAI;AAAA,MAAc,KAAI;AAAqB,eAAO;AAAA,MAAoI,KAAI;AAAe,eAAO;AAAA,MAAqO;AAAQ,eAAO;AAAA,IAAG;AAAA,EAAC;AAAA,EAAC,oBAAmB;AAAC,WAAM,kBAAgB,KAAK,OAAK,gBAAa,KAAK,gBAAgB,CAAC,8EAA4E,yCAAsC,KAAK,eAAa,uCAAoC,KAAK,YAAY,SAAO,EAAE,IAAI,KAAK,gBAAgB,CAAC,IAAI,KAAK,kBAAgB,0CAAuC,KAAK,eAAe,SAAO,EAAE;AAAA,EAAY;AAAA,EAAC,kBAAiB;AAAC,WAAO,KAAK,YAAU,sCAAmC,KAAK,gBAAc,KAAK,kBAAgB,oBAAkB,EAAE,KAAK,KAAK,SAAS,UAAQ,KAAK,cAAc,qBAAqB,IAAE,oBAAiB,KAAK,gBAAc,KAAK,kBAAgB,oBAAkB,EAAE,6CAA2C;AAAA,EAAG;AAAA,EAAC,eAAc;AAAC,YAAO,KAAK,MAAK;AAAA,MAAC,KAAI;AAAO,eAAO,OAAI,KAAK,WAAW,CAAC,IAAI,KAAK,mBAAmB,CAAC,eAAe,KAAK,eAAa,gBAAc,qBAAqB,WAAW,KAAK,YAAY,CAAC;AAAA,MAAG,KAAI;AAAW,eAAO,OAAI,KAAK,WAAW,CAAC,IAAI,KAAK,kBAAkB,CAAC,IAAI,KAAK,YAAY,CAAC;AAAA,MAAG,KAAI;AAAA,MAAQ,KAAI;AAAe,eAAO,OAAI,KAAK,WAAW,CAAC,kCAAkC,KAAK,YAAY,CAAC;AAAA,MAAG,KAAI;AAAA,MAAc,KAAI;AAAqB,eAAO,OAAI,KAAK,kBAAkB,CAAC,IAAI,KAAK,YAAY,CAAC;AAAA,MAAG;AAAQ,eAAO;AAAA,IAAG;AAAA,EAAC;AAAA,EAAC,SAAQ;AAAC,WAAO,0EAAuE,KAAK,KAAK,mCAAmC,KAAK,aAAa,CAAC,mCAAmC,mBAAiB,KAAK,OAAK,SAAI,qCAAkC;AAAA,EAAW;AAAC;AAACD,GAAE,SAAO,CAACE,IAAEC,IAAED,KAAEE,IAAEC,IAAEC,IAAEC,IAAEC,EAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAER,GAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,aAAY,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,gBAAe,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,mBAAkB,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,kBAAiB,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,GAAE,WAAU,aAAY,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,GAAE,WAAU,oBAAmB,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,eAAc,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,gBAAe,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,GAAE,WAAU,oBAAmB,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,GAAE,WAAU,cAAa,MAAM;;;ACAp8O,IAAMS,KAAE;AAAR,IAA6PC,KAAE;AAA/P,IAAsvCC,KAAE;AAAxvC,IAA4oDC,KAAE;AAA9oD,IAAsyEC,MAAE;;;ACAngE,IAAMC,KAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,WAAS,IAAG,KAAK,WAAS,IAAG,KAAK,OAAK,IAAG,KAAK,OAAK,QAAO,KAAK,WAAS,OAAG,KAAK,eAAa,OAAG,KAAK,qBAAmB,CAAAC,QAAG;AAAC,OAAC,KAAK,SAASA,IAAE,MAAM,KAAG,KAAK,YAAU,KAAK,cAAc;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,gBAAe;AAAC,SAAK,WAAS,CAAC,KAAK;AAAA,EAAQ;AAAA,EAAC,aAAaA,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,SAAS,iBAAiB,SAAQ,KAAK,kBAAkB;AAAE,UAAMC,MAAE,KAAK,QAAQ,YAAY;AAAE,SAAK,aAAa,QAAOA,IAAE,aAAa,MAAM,CAAC,GAAE,SAAOA,IAAE,aAAa,cAAc,MAAI,KAAK,eAAa;AAAA,EAAG;AAAA,EAAC,uBAAsB;AAAC,UAAM,qBAAqB,GAAE,SAAS,oBAAoB,SAAQ,KAAK,kBAAkB;AAAA,EAAC;AAAA,EAAC,kBAAiB;AAAC,YAAO,KAAK,MAAK;AAAA,MAAC,KAAI;AAAA,MAAO,KAAI;AAAA,MAAQ,KAAI;AAAe,eAAO,mCAAgC,KAAK,WAAW,CAAC,2CAA2C,KAAK,WAAS,cAAc,KAAK,QAAQ,KAAG,EAAE,6BAA6B,KAAK,QAAQ;AAAA,MAAgR,KAAI;AAAA,MAAW,KAAI;AAAA,MAAc,KAAI;AAAqB,eAAO,0DAAuD,KAAK,QAAQ,aAAa,KAAK,aAAa,2BAA2B,KAAK,WAAW,CAAC,uEAAuE,KAAK,WAAS,cAAc,KAAK,QAAQ,KAAG,EAAE,sBAAsB,KAAK,QAAQ,yFAAyF,KAAK,WAAS,aAAW,EAAE,yKAAyK,KAAK,WAAS,cAAc,KAAK,QAAQ,KAAG,EAAE,kBAAkB,KAAK,IAAI,2CAA2C,KAAK,eAAe,CAAC;AAAA,IAAY;AAAA,EAAC;AAAA,EAAC,aAAY;AAAC,WAAM,yBAAuB,KAAK,QAAM,kBAAgB,KAAK,OAAK,SAAI;AAAA,EAAmJ;AAAA,EAAC,iBAAgB;AAAC,WAAO,KAAK,WAAS,kEAA6D;AAAA,EAAG;AAAA,EAAC,SAAQ;AAAC,WAAO,KAAK,gBAAgB;AAAA,EAAC;AAAC;AAACF,GAAE,SAAO,CAACG,IAAEF,IAAEG,IAAEC,IAAEC,IAAEH,GAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEH,GAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,GAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,gBAAe,MAAM;;;ACA16F,IAAMO,KAAE;AAAR,IAAiaC,KAAE;AAAna,IAA23BC,KAAE;AAA73B,IAAu6CC,MAAE;AAAz6C,IAAojEC,MAAE;AAAtjE,IAAk1EC,KAAE;AAAp1E,IAAmsGC,KAAE;;;ACA3zF,IAAMC,KAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,SAAO,OAAG,KAAK,gBAAc,OAAG,KAAK,OAAK,QAAO,KAAK,eAAa,OAAG,KAAK,SAAO;AAAA,EAAE;AAAA,EAAC,IAAI,OAAM;AAAC,WAAO,KAAK,cAAc,GAAG;AAAA,EAAC;AAAA,EAAC,IAAI,OAAM;AAAC,WAAO,KAAK,cAAc,WAAW;AAAA,EAAC;AAAA,EAAC,aAAaC,KAAE;AAAC,UAAM,aAAaA,GAAC;AAAE,UAAMC,MAAE,KAAK,QAAQ,YAAY;AAAE,SAAK,aAAa,QAAOA,IAAE,aAAa,MAAM,CAAC,GAAE,SAAOA,IAAE,aAAa,cAAc,MAAI,KAAK,eAAa,OAAI,EAAE,MAAK,iBAAgB,CAAC,KAAK,UAAQ,CAAC,KAAK,YAAY,GAAE,KAAK,UAAU;AAAA,EAAC;AAAA,EAAC,YAAW;AAAC,SAAK,SAAO,KAAK,KAAK,aAAa,QAAO,MAAM,GAAE,KAAK,KAAK,aAAa,SAAQ,MAAM,GAAE,KAAK,KAAK,aAAa,UAAS,MAAM,GAAE,WAAS,KAAK,QAAM,eAAa,KAAK,OAAK,KAAK,KAAK,aAAa,eAAc,GAAG,KAAG,KAAK,KAAK,aAAa,SAAQ,+BAA+B,GAAE,KAAK,KAAK,aAAa,UAAS,gCAAgC;AAAA,EAAG;AAAA,EAAC,SAAQ;AAA/vC,QAAAC;AAAgwC,WAAO,4OAAyO,KAAK,eAAa,KAAG,WAAW,kBAAiBA,MAAA,KAAK,SAAL,gBAAAA,IAAW,SAAS;AAAA,EAAgC;AAAC;AAACH,GAAE,SAAO,CAACI,IAAEH,IAAEI,IAAEC,IAAEF,KAAEG,KAAEC,IAAEC,EAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAET,GAAE,WAAU,UAAS,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,GAAE,WAAU,iBAAgB,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,gBAAe,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,GAAE,WAAU,UAAS,MAAM;;;ACAv2D,IAAMU,MAAE;;;ACA8P,IAAMC,KAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,OAAK,IAAG,KAAK,SAAO,aAAY,KAAK,eAAa,OAAG,KAAK,QAAM,OAAG,KAAK,OAAK;AAAA,EAAM;AAAA,EAAC,aAAaC,KAAE;AAA5b,QAAAC;AAA6b,UAAM,aAAaD,GAAC;AAAE,UAAME,MAAE,KAAK,QAAQ,YAAY;AAAE,SAAK,aAAa,QAAO,YAAY,GAAE,KAAK,aAAa,QAAOA,IAAE,aAAa,MAAM,CAAC,GAAE,SAAOA,IAAE,aAAa,cAAc,MAAI,KAAK,eAAa,OAAI,SAAOA,IAAE,aAAa,OAAO,MAAI,KAAK,QAAM,QAAID,MAAA,KAAK,iBAAiB,qBAAqB,MAA3C,gBAAAA,IAA8C,QAAS,CAAAD,QAAG;AAAC,QAAEA,KAAE,QAAO,KAAK,IAAI,GAAE,EAAEA,KAAE,gBAAe,KAAK,YAAY,GAAE,EAAEA,KAAE,SAAQ,KAAK,KAAK;AAAA,IAAC;AAAA,EAAG;AAAA,EAAC,SAAQ;AAAC,WAAO,mCAAgC,KAAK,IAAI,iBAAiB,KAAK,MAAM,4BAA4B,KAAK,KAAK;AAAA,EAAqF;AAAC;AAACD,GAAE,SAAO,CAACI,IAAEC,GAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEL,GAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,UAAS,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,gBAAe,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,QAAO,MAAM;;;ACAjzC,IAAMM,MAAE;AAAR,IAAuxEC,KAAE;AAAzxE,IAAy+EC,KAAE;AAA3+E,IAA0vFC,MAAE;AAA5vF,IAAkrIC,MAAE;AAAprI,IAA+oJC,MAAE;;;ACAnxI,IAAMC,KAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,QAAM,IAAG,KAAK,OAAK,QAAO,KAAK,OAAK,OAAG,KAAK,QAAM,OAAG,KAAK,SAAO,OAAG,KAAK,WAAS,OAAG,KAAK,eAAa,OAAG,KAAK,aAAW,OAAG,KAAK,YAAU,EAAE,GAAE,KAAK,qBAAmB,CAAAC,QAAG;AAAC,WAAK,SAASA,IAAE,MAAM,MAAI,KAAK,aAAW;AAAA,IAAG;AAAA,EAAC;AAAA,EAAC,IAAI,WAAU;AAA1rB,QAAAC;AAA2rB,YAAOA,MAAA,KAAK,cAAc,GAAG,MAAtB,gBAAAA,IAAyB;AAAA,EAAS;AAAA,EAAC,uBAAsB;AAAC,aAAS,oBAAoB,SAAQ,KAAK,kBAAkB,GAAE,MAAM,qBAAqB;AAAA,EAAC;AAAA,EAAC,aAAaD,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,iBAAiB,UAAU,EAAE,QAAS,CAAAA,QAAG;AAAC,MAAAA,IAAE,aAAa,cAAa,MAAM,GAAEA,IAAE,aAAa,eAAc,GAAG;AAAE,YAAME,MAAEF,IAAE,cAAc,WAAW;AAAE,MAAAE,OAAA,gBAAAA,IAAG,aAAa,SAAQ,SAAQA,OAAA,gBAAAA,IAAG,aAAa,UAAS;AAAA,IAAO,CAAE,GAAE,KAAK,aAAW,KAAK,UAAS,SAAS,iBAAiB,SAAQ,KAAK,kBAAkB;AAAA,EAAC;AAAA,EAAC,eAAc;AAAC,SAAK,aAAW,CAAC,KAAK;AAAA,EAAU;AAAA,EAAC,gBAAe;AAAC,WAAO,KAAK,aAAW,gBAAa,KAAK,SAAS,4DAA4D,KAAK,KAAK,6UAA2U;AAAA,EAAG;AAAA,EAAC,YAAW;AAAtsD,QAAAD;AAAusD,KAAAA,MAAA,KAAK,cAAc,GAAG,MAAtB,gBAAAA,IAAyB;AAAA,EAAO;AAAA,EAAC,gBAAe;AAAC,WAAO,KAAK,OAAK,6BAA0B,KAAK,SAAO,WAAS,EAAE,KAAK,KAAK,QAAQ,yBAAuB,8BAA2B,KAAK,SAAS,oBAAoB,KAAK,UAAU,mCAAmC,KAAK,aAAW,aAAW,EAAE,IAAI,KAAK,SAAO,WAAS,EAAE,aAAa,KAAK,YAAY,KAAK,KAAK,KAAK;AAAA,EAAW;AAAA,EAAC,SAAQ;AAAC,WAAO,OAAI,KAAK,cAAc,CAAC,IAAI,KAAK,cAAc,CAAC;AAAA,EAAE;AAAC;AAACF,GAAE,SAAO,CAACI,IAAEH,KAAEI,IAAEC,IAAEC,KAAEH,KAAEI,GAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAER,GAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,GAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,GAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,GAAE,WAAU,UAAS,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,GAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,gBAAe,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,GAAE,WAAU,cAAa,MAAM;;;ACAnjF,IAAIS,MAAE;;;ACAkL,IAAMC,KAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,eAAa;AAAA,EAAE;AAAA,EAAC,IAAI,OAAM;AAAC,WAAO,KAAK,cAAc,GAAG;AAAA,EAAC;AAAA,EAAC,IAAI,OAAM;AAAC,WAAO,KAAK,cAAc,WAAW;AAAA,EAAC;AAAA,EAAC,aAAaC,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,UAAU;AAAA,EAAC;AAAA,EAAC,YAAW;AAAC,SAAK,SAAO,KAAK,KAAK,aAAa,QAAO,MAAM,GAAE,KAAK,KAAK,aAAa,SAAQ,IAAI,GAAE,KAAK,KAAK,aAAa,UAAS,IAAI,GAAE,KAAK,KAAK,aAAa,eAAc,GAAG;AAAA,EAAE;AAAA,EAAC,QAAO;AAAzmB,QAAAC;AAA0mB,KAAAA,MAAA,KAAK,SAAL,gBAAAA,IAAW;AAAA,EAAO;AAAA,EAAC,SAAQ;AAAroB,QAAAA,KAAAC;AAAsoB,WAAO,uBAAoB,KAAK,KAAK,mBAAiBD,MAAA,KAAK,SAAL,gBAAAA,IAAW,cAAW,EAAE,mJAAkJC,MAAA,KAAK,SAAL,gBAAAA,IAAW,SAAS;AAAA,EAA6D;AAAC;AAACH,GAAE,SAAO,CAACI,IAAEC,GAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEL,GAAE,WAAU,gBAAe,MAAM;;;ACAh/B,IAAMM,MAAE;AAAR,IAAopDC,MAAE;AAAtpD,IAA+1DC,MAAE;AAAj2D,IAA6/DC,MAAE;;;ACAlvD,IAAMC,KAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,WAAS,OAAG,KAAK,aAAW,OAAG,KAAK,eAAa,OAAG,KAAK,QAAM,OAAG,KAAK,OAAK,QAAO,KAAK,aAAW,OAAG,KAAK,QAAM,QAAO,KAAK,YAAU,MAAI;AAAC,WAAK,cAAY,KAAK,eAAe;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,aAAaC,KAAE;AAAniB,QAAAC,KAAAC;AAAoiB,UAAM,aAAaF,GAAC,IAAEC,MAAA,KAAK,cAAc,wBAAwB,MAA3C,gBAAAA,IAA8C,aAAa,QAAO,eAAaC,MAAA,KAAK,iBAAiB,sBAAsB,MAA5C,gBAAAA,IAA+C,QAAS,CAAAF,QAAG;AAAC,MAAAA,IAAE,aAAa,QAAO,WAAW;AAAA,IAAC,IAAI,KAAK,aAAW,KAAK,UAAS,KAAK,cAAY,KAAK,gBAAgB,GAAE,KAAK,gBAAgB;AAAA,EAAC;AAAA,EAAC,kBAAiB;AAAC,UAAMA,MAAE,KAAK,QAAQ,YAAY;AAAE,SAAK,aAAa,QAAOA,IAAE,aAAa,MAAM,CAAC,GAAE,SAAOA,IAAE,aAAa,cAAc,MAAI,KAAK,eAAa,OAAI,SAAOA,IAAE,aAAa,OAAO,MAAI,KAAK,QAAM;AAAA,EAAG;AAAA,EAAC,kBAAiB;AAA7iC,QAAAC;AAA8iC,KAAAA,MAAA,KAAK,iBAAiB,GAAG,MAAzB,gBAAAA,IAA4B,QAAS,CAAAD,QAAGA,IAAE,iBAAiB,SAAQ,KAAK,SAAS;AAAA,EAAG;AAAA,EAAC,iBAAgB;AAAC,SAAK,aAAW,CAAC,KAAK;AAAW,QAAIA,MAAE,IAAI,YAAY,sBAAqB,EAAC,QAAO,EAAC,YAAW,KAAK,SAAQ,EAAC,CAAC;AAAE,SAAK,cAAcA,GAAC;AAAA,EAAC;AAAA,EAAC,cAAa;AAAC,WAAO,KAAK,aAAW,oFAA+E;AAAA,EAAG;AAAA,EAAC,SAAQ;AAAC,WAAO,2BAAwB,KAAK,KAAK,oBAAoB,KAAK,UAAU,aAAa,KAAK,cAAc,8HAA8H,KAAK,aAAW,UAAQ,EAAE,uHAAuH,KAAK,YAAY,CAAC;AAAA,EAAE;AAAC;AAACD,GAAE,SAAO,CAACI,IAAEC,KAAED,KAAEE,KAAEC,GAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEP,GAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,GAAE,WAAU,cAAa,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,gBAAe,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,GAAE,WAAU,cAAa,MAAM,GAAE,WAAE,CAAC,SAAE,CAAC,GAAEA,GAAE,WAAU,SAAQ,MAAM;;;ACA3pE,IAAIQ,MAAE;;;ACAyI,IAAMC,MAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,WAAS,IAAG,KAAK,OAAK,IAAG,KAAK,OAAK;AAAA,EAAE;AAAA,EAAC,aAAaC,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,aAAa,QAAO,KAAK,QAAQ,YAAY,EAAE,aAAa,MAAM,CAAC;AAAA,EAAC;AAAA,EAAC,eAAc;AAAC,YAAO,KAAK,MAAK;AAAA,MAAC,KAAI;AAAW,eAAO,8LAA2L,KAAK,QAAQ;AAAA,MAA+E,KAAI;AAAA,MAAc,KAAI;AAAqB,eAAO,wDAAqD,KAAK,QAAQ,OAAO,KAAK,IAAI;AAAA,MAA2D;AAAQ,eAAO;AAAA,IAAG;AAAA,EAAC;AAAA,EAAC,SAAQ;AAAC,WAAO,OAAI,KAAK,aAAa,CAAC;AAAA,EAAE;AAAC;AAACD,IAAE,SAAO,CAACE,GAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEF,IAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,QAAO,MAAM;;;ACA9hC,IAAMG,MAAN,cAAgBA,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,oaAAoa,KAAK,OAAO,MAAM,0mBAA0mB,KAAK,OAAO,MAAM;AAAA,EAA8wC;AAAC;;;ACA15E,EAAE,iBAAgBC,GAAC;;;ACAxD,IAAMC,MAAN,cAAgBA,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAG;AAAA,EAAC,aAAY;AAAC,WAAO,qBAAmB,KAAK,OAAO,KAAK,oMAAoM,KAAK,OAAO,KAAK,4MAA4M,KAAK,OAAO,KAAK,iIAAiI,KAAK,OAAO,KAAK,iLAAiL,KAAK,OAAO,KAAK,+HAA+H,KAAK,OAAO,KAAK;AAAA,EAA6K;AAAC;;;ACAjqC,EAAE,iBAAgBC,GAAC;;;ACAxD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAG;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,6hCAA6hC,KAAK,OAAO,KAAK,k9BAAk9B,KAAK,OAAO,KAAK,2gBAA2gB,KAAK,OAAO,KAAK,8QAA8Q,KAAK,OAAO,KAAK,u3CAAu3C,KAAK,OAAO,KAAK,y4DAAy4D,KAAK,OAAO,KAAK,uzCAAuzC,KAAK,OAAO,KAAK;AAAA,EAAmmD;AAAC;;;ACAlnS,EAAE,kBAAiBC,GAAC;;;ACA3D,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAG;AAAA,EAAC,aAAY;AAAC,WAAO;AAAA,EAAk8G;AAAC;;;ACA7+G,EAAE,yBAAwBC,GAAC;;;ACE/J,IAAIC,YAAW;AAEf,IAAI,gBAAgB,MAAM,UAAUA,SAAQ,CAAC;;;ACJsJ,IAAMC,KAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,YAAU;AAAA,EAAC;AAAA,EAAC,aAAaC,KAAE;AAAvR,QAAAC;AAAwR,UAAM,aAAaD,GAAC,IAAEC,MAAA,KAAK,iBAAiB,sBAAsB,MAA5C,gBAAAA,IAA+C,QAAS,CAAAD,QAAG;AAAC,MAAAA,IAAE,aAAa,aAAY,KAAG,KAAK,SAAS;AAAA,IAAC;AAAA,EAAG;AAAA,EAAC,SAAQ;AAAC,WAAO;AAAA,EAAmC;AAAC;AAACD,GAAE,SAAO,CAAC,aAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,aAAY,MAAM;;;ACAtf,IAAIG,MAAE;;;ACAsR,IAAMC,MAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,QAAM,GAAE,KAAK,YAAU,OAAG,KAAK,WAAS,OAAG,KAAK,YAAU,GAAE,KAAK,WAAS,IAAG,KAAK,SAAO,OAAG,KAAK,aAAW,OAAG,KAAK,cAAY,OAAG,KAAK,WAAS,mBAAkB,KAAK,WAAS,mBAAkB,KAAK,YAAU,EAAE;AAAA,EAAC;AAAA,EAAC,IAAI,gBAAe;AAAC,WAAO,KAAK,iBAAiB,sBAAsB;AAAA,EAAC;AAAA,EAAC,IAAI,OAAM;AAAC,WAAO,KAAK,cAAc,GAAG;AAAA,EAAC;AAAA,EAAC,aAAaC,KAAE;AAAvsB,QAAAC;AAAwsB,UAAM,aAAaD,GAAC,GAAE,KAAK,aAAW,KAAK,WAASC,MAAA,KAAK,SAAL,gBAAAA,IAAW,aAAa,QAAO,SAAQ,KAAK,cAAc;AAAA,EAAC;AAAA,EAAC,gBAAe;AAAv0B,QAAAA,KAAAC;AAAw0B,SAAK,gBAAYD,MAAA,KAAK,kBAAL,gBAAAA,IAAoB,UAAO,IAAEC,MAAA,KAAK,kBAAL,gBAAAA,IAAoB,QAAS,CAAAF,QAAG;AAAC,MAAAA,IAAE,aAAa,SAAQ,KAAK,QAAM,IAAE,EAAE,GAAEA,IAAE,aAAa,QAAO,UAAU;AAAA,IAAC;AAAA,EAAG;AAAA,EAAC,iBAAgB;AAAC,QAAG,KAAK,eAAa,KAAK,UAAS;AAAC,WAAK,aAAW,CAAC,KAAK,YAAW,KAAK,WAAS,KAAK;AAAW,UAAIA,MAAE,IAAI,YAAY,sBAAqB,EAAC,QAAO,EAAC,YAAW,KAAK,SAAQ,EAAC,CAAC;AAAE,WAAK,cAAcA,GAAC;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,gBAAe;AAAC,WAAO,KAAK,QAAM,IAAE,KAAK,KAAK,KAAK,KAAG;AAAA,EAAE;AAAA,EAAC,oBAAmB;AAAC,WAAO,MAAI,KAAK,YAAU,QAAM;AAAA,EAAE;AAAA,EAAC,gBAAe;AAAC,WAAO,KAAK,WAAS,KAAK,WAAS,KAAK;AAAA,EAAQ;AAAA,EAAC,aAAY;AAAC,WAAO,KAAK,WAAS,uBAAoB,KAAK,cAAc,oBAAoB,KAAK,UAAU,oBAAoB,KAAK,SAAS,8CAA8C,KAAK,QAAQ,8GAA8G,KAAK,kBAAkB,CAAC,QAAQ,KAAK,cAAc,CAAC,+DAA6D,KAAK,QAAM,KAAK,cAAY,oDAAiD,KAAK,cAAc,CAAC,aAAa,KAAK,cAAc,oBAAoB,KAAK,UAAU,oBAAoB,KAAK,SAAS,yJAAyJ,KAAK,kBAAkB,CAAC,QAAQ,KAAK,cAAc,CAAC,+DAA6D;AAAA,EAA4B;AAAA,EAAC,oBAAmB;AAAC,YAAO,KAAK,OAAM;AAAA,MAAC,KAAK;AAAA,MAAE;AAAQ,eAAM;AAAA,MAAuB,KAAK;AAAE,eAAM;AAAA,MAA0B,KAAK;AAAE,eAAM;AAAA,IAAyB;AAAA,EAAC;AAAA,EAAC,SAAQ;AAAC,WAAO,mCAAgC,MAAI,KAAK,YAAU,iCAA+B,EAAE,iBAAiB,KAAK,kBAAkB,CAAC,IAAI,KAAK,aAAW,mCAAiC,EAAE,IAAI,KAAK,SAAO,iCAA+B,EAAE,IAAI,KAAK,YAAU,oCAAkC,EAAE,8CAA8C,KAAK,WAAW,CAAC,kBAAkB,KAAK,SAAS;AAAA,EAA2F;AAAC;AAACD,IAAE,SAAO,CAAC,eAAEI,GAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEJ,IAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,IAAE,WAAU,aAAY,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,aAAY,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,UAAS,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,IAAE,WAAU,cAAa,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,IAAE,WAAU,eAAc,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,YAAW,MAAM;;;ACAtkG,EAAE,mBAAkBK,EAAC,GAAE,EAAE,wBAAuBC,GAAC,GAAE,EAAE,0BAAyBC,GAAC;;;ACA4hB,EAAE,cAAaC,EAAC,GAAE,EAAE,qBAAoBC,EAAC,GAAE,EAAE,mBAAkBC,EAAC,GAAE,EAAE,kBAAiBC,EAAC,GAAE,EAAE,uBAAsBH,EAAC,GAAE,EAAE,0BAAyBI,EAAC,GAAE,EAAE,0BAAyBC,EAAC,GAAE,EAAE,0BAAyBC,GAAC;;;A9BKrpC,IAAM,YAAY,gBAAgB;AAAA,EAC9B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AAAA,EACP,QAAQ;AAAA,IACJ,mBAAmB;AAAA,EACvB;AACJ,CAAC;;;A+BZD,IAAAC,UAAuB;AAKvB,IAAM,gBAAgB,gBAAgB;AAAA,EAClC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,UAAuB;AAIvB,IAAM,kBAAkB,gBAAgB;AAAA,EACpC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACRD,IAAAC,UAAuB;AAIvB,IAAM,eAAe,gBAAgB;AAAA,EACjC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACRD,IAAAC,UAAuB;AAIvB,IAAM,mBAAmB,gBAAgB;AAAA,EACrC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACRD,IAAAC,UAAuB;AAIvB,IAAM,sBAAsB,gBAAgB;AAAA,EACxC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACRD,IAAAC,UAAuB;AAIvB,IAAM,sBAAsB,gBAAgB;AAAA,EACxC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AAAA,EACP,QAAQ;AAAA,IACJ,sBAAsB;AAAA,EAC1B;AACJ,CAAC;;;ACXD,IAAAC,UAAuB;AAIvB,IAAM,sBAAsB,gBAAgB;AAAA,EACxC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACRD,IAAAC,UAAuB;AAIvB,IAAM,oBAAoB,gBAAgB;AAAA,EACtC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AAAA,EACP,QAAQ;AAAA,IACJ,sBAAsB;AAAA,EAC1B;AACJ,CAAC;;;ACXD,IAAAC,UAAuB;AAKvB,IAAM,gBAAgB,gBAAgB;AAAA,EAClC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,UAAuB;;;ACAG,IAAIC,MAAE;;;ACEhC,IAAIC,YAAW;AAEf,IAAI,UAAU,MAAM,UAAUA,SAAQ,CAAC;;;ACJmO,IAAMC,MAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,UAAQ,IAAG,KAAK,QAAM,IAAG,KAAK,aAAW,IAAG,KAAK,cAAY,GAAE,KAAK,QAAM,OAAG,KAAK,UAAQ,IAAG,KAAK,SAAO,OAAG,KAAK,aAAW,OAAG,KAAK,QAAM,OAAG,KAAK,OAAK,IAAG,KAAK,OAAK,OAAG,KAAK,aAAW,OAAG,KAAK,YAAU,OAAG,KAAK,YAAU,OAAG,KAAK,4BAA0B;AAAA,EAAE;AAAA,EAAC,IAAI,oBAAmB;AAAC,WAAO,KAAK,cAAc,wBAAwB;AAAA,EAAC;AAAA,EAAC,IAAI,OAAM;AAAC,WAAO,KAAK,cAAc,GAAG;AAAA,EAAC;AAAA,EAAC,IAAI,WAAU;AAAvsB,QAAAC;AAAwsB,YAAOA,MAAA,KAAK,cAAc,GAAG,MAAtB,gBAAAA,IAAyB;AAAA,EAAS;AAAA,EAAC,IAAI,cAAa;AAAC,WAAO,KAAK,cAAc,qCAAqC;AAAA,EAAC;AAAA,EAAC,IAAI,aAAY;AAAC,WAAO,KAAK,cAAc,+BAA+B;AAAA,EAAC;AAAA,EAAC,aAAaC,KAAE;AAAh6B,QAAAD;AAAi6B,UAAM,aAAaC,GAAC,GAAE,KAAK,YAAY,GAAE,KAAK,WAAW,IAAED,MAAA,KAAK,sBAAL,gBAAAA,IAAwB,aAAa,QAAO,UAAS,KAAK,kBAAkB;AAAA,EAAC;AAAA,EAAC,cAAa;AAAC,QAAG,CAAC,KAAK,SAAO,CAAC,KAAK,YAAW;AAAC,UAAG,KAAK;AAAM,eAAO,KAAK,QAAM,SAAQ,KAAK,aAAW,SAAQ,MAAK,KAAK,UAAQ;AAAS,cAAO,KAAK,aAAY;AAAA,QAAC,KAAK;AAAA,QAAE;AAAQ,eAAK,QAAM,mCAAkC,KAAK,aAAW;AAAwC;AAAA,QAAM,KAAK;AAAE,eAAK,QAAM,mCAAkC,KAAK,aAAW;AAAA,MAAuC;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,QAAQC,KAAE;AAAC,UAAM,QAAQA,GAAC,GAAE,KAAK,UAAQ,KAAK,aAAa;AAAA,EAAC;AAAA,EAAC,uBAAsB;AAAC,SAAK,oBAAoB,cAAa,KAAK,YAAY,GAAE,KAAK,oBAAoB,cAAa,KAAK,aAAa,GAAE,MAAM,qBAAqB;AAAA,EAAC;AAAA,EAAC,oBAAmB;AAAC,SAAK,iBAAiB,cAAa,KAAK,YAAY,GAAE,KAAK,iBAAiB,cAAa,KAAK,aAAa;AAAA,EAAC;AAAA,EAAC,aAAY;AAAvyD,QAAAD;AAAwyD,QAAG,KAAK,aAAY;AAAC,WAAK,YAAY,KAAK,aAAY,cAAc,GAAE,KAAK,aAAa,KAAK,WAAW;AAAE,WAAK,YAAY,QAAQ,YAAY,EAAE,SAAS,SAAS,OAAGA,MAAA,KAAK,YAAY,aAAa,MAAM,MAApC,gBAAAA,IAAuC,cAAc,SAAS,cAAW,KAAK,sBAAsB,KAAK,aAAY,YAAW,UAAU,IAAE,KAAK,sBAAsB,KAAK,aAAY,QAAO,MAAM;AAAA,IAAC;AAAC,SAAK,eAAa,KAAK,YAAY,KAAK,YAAW,aAAa,GAAE,KAAK,sBAAsB,KAAK,YAAW,QAAO,MAAM,GAAE,KAAK,aAAa,KAAK,UAAU;AAAA,EAAE;AAAA,EAAC,YAAYC,KAAEC,KAAE;AAAC,IAAAD,IAAE,aAAa,MAAM,KAAGA,IAAE,aAAa,QAAOC,GAAC;AAAA,EAAC;AAAA,EAAC,sBAAsBD,KAAEC,KAAEC,KAAE;AAAC,IAAAF,IAAE,aAAa,MAAM,KAAGA,IAAE,aAAa,OAAO,KAAGA,IAAE,aAAa,QAAQ,MAAIA,IAAE,aAAa,SAAQC,GAAC,GAAED,IAAE,aAAa,UAASE,GAAC;AAAA,EAAE;AAAA,EAAC,aAAaF,KAAE;AAAC,IAAAA,IAAE,aAAa,OAAO,KAAGA,IAAE,aAAa,SAAQ,KAAK,KAAK,GAAEA,IAAE,aAAa,QAAQ,KAAGA,IAAE,aAAa,UAAS,KAAK,KAAK;AAAA,EAAC;AAAA,EAAC,0BAAyB;AAAC,WAAO,KAAK,oBAAkB,iFAA4E;AAAA,EAAG;AAAA,EAAC,eAAc;AAAC,SAAK,YAAU,MAAG,KAAK,aAAa;AAAA,EAAC;AAAA,EAAC,eAAc;AAA52F,QAAAD,KAAAI;AAA62F,SAAK,gBAAc,KAAK,cAAY,KAAK,UAAQ,KAAK,cAAY,KAAK,YAAY,aAAa,SAAQ,OAAO,GAAE,KAAK,YAAY,aAAa,UAAS,OAAO,KAAG,KAAK,aAAW,KAAK,aAAW,KAAK,YAAY,aAAa,SAAQ,KAAK,UAAU,GAAE,KAAK,YAAY,aAAa,UAAS,KAAK,UAAU,MAAI,KAAK,YAAY,aAAa,SAAQ,KAAK,KAAK,GAAE,KAAK,YAAY,aAAa,UAAS,KAAK,KAAK,KAAI,KAAK,eAAa,KAAK,aAAW,KAAK,gBAAaJ,MAAA,KAAK,eAAL,gBAAAA,IAAiB,aAAa,SAAQ,KAAK,cAAYI,MAAA,KAAK,eAAL,gBAAAA,IAAiB,aAAa,UAAS,KAAK;AAAA,EAAY;AAAA,EAAC,gBAAe;AAAC,SAAK,YAAU,OAAG,KAAK,eAAa,CAAC,KAAK,cAAY,KAAK,YAAY,aAAa,SAAQ,KAAK,KAAK,GAAE,KAAK,YAAY,aAAa,UAAS,KAAK,KAAK,IAAG,KAAK,cAAY,CAAC,KAAK,cAAY,KAAK,WAAW,aAAa,SAAQ,KAAK,KAAK,GAAE,KAAK,WAAW,aAAa,UAAS,KAAK,KAAK;AAAA,EAAE;AAAA,EAAC,eAAc;AAAC,SAAK,YAAU,MAAG,KAAK,aAAa;AAAA,EAAC;AAAA,EAAC,gBAAe;AAAC,SAAK,YAAU,OAAG,KAAK,cAAc;AAAA,EAAC;AAAA,EAAC,oBAAmB;AAAC,WAAO,KAAK,cAAY,8EAAyE;AAAA,EAAG;AAAA,EAAC,mBAAkB;AAAC,WAAO,KAAK,aAAW,6EAAwE;AAAA,EAAG;AAAA,EAAC,SAAQ;AAAC,WAAO,6BAA0B,KAAK,QAAM,oBAAkB,EAAE,IAAI,KAAK,SAAO,qBAAmB,EAAE,IAAI,KAAK,aAAW,yBAAuB,EAAE,IAAI,KAAK,QAAM,oBAAkB,EAAE,IAAI,KAAK,cAAY,IAAE,mBAAmB,KAAK,WAAW,KAAG,EAAE,IAAI,KAAK,aAAW,0BAAwB,EAAE,YAAY,KAAK,UAAQ,iBAAiB,KAAK,OAAO,MAAI,EAAE,GAAG,KAAK,UAAQ,WAAW,KAAK,OAAO,MAAI,EAAE,GAAG,KAAK,QAAM,SAAS,KAAK,KAAK,4BAA4B,KAAK,KAAK,MAAI,EAAE,GAAG,KAAK,aAAW,KAAK,YAAU,SAAS,KAAK,UAAU,4BAA4B,KAAK,UAAU,MAAI,EAAE,GAAG,KAAK,aAAW,gCAA8B,EAAE,GAAG,KAAK,OAAK,cAAc,KAAK,IAAI,4BAA0B,EAAE,GAAG,KAAK,OAAK,sBAAoB,EAAE,KAAK,KAAK,kBAAkB,CAAC,iCAAiC,KAAK,QAAQ,uBAAuB,KAAK,iBAAiB,CAAC,IAAI,KAAK,wBAAwB,CAAC;AAAA,EAAS;AAAC;AAACL,IAAE,SAAO,CAACI,IAAE,SAAEA,GAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEJ,IAAE,WAAU,WAAU,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,cAAa,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,eAAc,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,WAAU,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,UAAS,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,cAAa,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,cAAa,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,IAAE,WAAU,aAAY,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,IAAE,WAAU,aAAY,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,IAAE,WAAU,6BAA4B,MAAM;;;ACA9mL,EAAE,YAAWM,GAAC;;;AJK1L,IAAM,UAAU,gBAAgB;AAAA,EAC5B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AKTD,IAAAC,UAAuB;;;ACAG,IAAIC,MAAE;;;ACEhC,IAAIC,YAAW;AAEf,IAAI,YAAY,MAAM,UAAUA,SAAQ,CAAC;;;ACJ4N,IAAMC,MAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,WAAS,IAAG,KAAK,cAAY,IAAG,KAAK,OAAK,GAAE,KAAK,WAAS,KAAI,KAAK,WAAS,KAAI,KAAK,WAAS,KAAI,KAAK,cAAY,IAAG,KAAK,OAAK;AAAA,EAAM;AAAA,EAAC,IAAI,aAAY;AAAC,WAAO,KAAK,cAAc,iBAAiB;AAAA,EAAC;AAAA,EAAC,aAAaC,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,aAAa,GAAE,KAAK,UAAU,IAAI,YAAY,KAAK,IAAI,EAAE,GAAE,KAAK,gBAAgB,GAAE,KAAK,WAAW,GAAE,KAAK,cAAc,GAAE,KAAK,cAAc,GAAE,KAAK,mBAAmB;AAAA,EAAC;AAAA,EAAC,eAAc;AAAC,UAAI,KAAK,QAAM,KAAK,WAAS,KAAI,KAAK,WAAS,KAAI,KAAK,WAAS,OAAK,MAAI,KAAK,SAAO,KAAK,WAAS,KAAI,KAAK,WAAS,KAAI,KAAK,WAAS;AAAA,EAAI;AAAA,EAAC,gBAAe;AAAC,SAAK,iBAAiB,6BAA6B,EAAE,QAAS,CAAAA,QAAG;AAAC,MAAAA,IAAE,aAAa,SAAQ,MAAM;AAAA,IAAC,CAAE;AAAA,EAAC;AAAA,EAAC,kBAAiB;AAAv/B,QAAAC,KAAAC;AAAw/B,KAAAD,MAAA,KAAK,eAAL,gBAAAA,IAAiB,aAAa,QAAO,iBAAeC,MAAA,KAAK,eAAL,gBAAAA,IAAiB,aAAa,aAAY;AAAA,EAAI;AAAA,EAAC,aAAY;AAAC,SAAK,iBAAiB,UAAU,EAAE,QAAS,CAAAF,QAAG;AAAC,WAAK,KAAK,SAAS,MAAM,KAAG,KAAK,KAAK,SAAS,aAAa,KAAG,KAAK,KAAK,SAAS,cAAc,KAAG,KAAK,KAAK,SAAS,cAAc,IAAEA,IAAE,aAAa,eAAc,GAAG,IAAEA,IAAE,aAAa,SAAQ,MAAM;AAAA,IAAC,CAAE;AAAA,EAAC;AAAA,EAAC,gBAAe;AAAC,SAAK,iBAAiB,mCAAmC,EAAE,QAAS,CAAAA,QAAG;AAAC,MAAAA,IAAE,aAAa,SAAQ,MAAM,GAAE,UAAQ,KAAK,QAAM,cAAY,KAAK,QAAMA,IAAE,aAAa,WAAU,mCAAmC,GAAEA,IAAE,aAAa,QAAO,UAAU;AAAA,IAAC,CAAE;AAAA,EAAC;AAAA,EAAC,qBAAoB;AAAC,SAAK,iBAAiB,mCAAmC,EAAE,QAAS,CAAAA,QAAG;AAAC,oBAAY,KAAK,OAAKA,IAAE,aAAa,eAAc,GAAG,IAAEA,IAAE,aAAa,SAAQ,MAAM,GAAEA,IAAE,aAAa,cAAa,MAAM,GAAEA,IAAE,aAAa,SAAQ,MAAM,GAAEA,IAAE,aAAa,QAAO,UAAU,GAAEA,IAAE,aAAa,WAAU,UAAU;AAAA,IAAC,CAAE;AAAA,EAAC;AAAA,EAAC,aAAY;AAAC,YAAO,KAAK,MAAK;AAAA,MAAC,KAAI;AAAO,eAAO;AAAA,MAAoK,KAAI;AAAW,eAAO,gSAA6R,KAAK,WAAW;AAAA,MAA+G,KAAI;AAAc,eAAO;AAAA,MAA0C,KAAI;AAAqB,eAAO,6FAA0F,KAAK,cAAY,iEAA8D,KAAK,WAAW,yDAAuD,MAAG;AAAA,MAAuC,KAAI;AAAQ,eAAO;AAAA,MAA+F;AAAQ,eAAO;AAAA,IAAG;AAAA,EAAC;AAAA,EAAC,iBAAgB;AAAC,YAAO,KAAK,MAAK;AAAA,MAAC,KAAI;AAAA,MAAO,KAAI;AAAA,MAAQ,KAAI;AAAA,MAAc,KAAI;AAAA,MAAe,KAAI;AAAqB,eAAO,wCAAqC,KAAK,QAAQ,4CAA4C,KAAK,WAAW;AAAA,MAAe,KAAI;AAAW,eAAO,wCAAqC,KAAK,WAAW;AAAA,IAAO;AAAA,EAAC;AAAA,EAAC,aAAY;AAAC,WAAO,MAAI,KAAK,OAAK,gFAA2E,MAAI,KAAK,OAAK,sHAAmH,KAAK,QAAQ,4CAA0C;AAAA,EAAwN;AAAA,EAAC,SAAQ;AAAC,WAAO,6CAA0C,KAAK,IAAI,iHAAiH,KAAK,eAAe,CAAC,2FAA2F,KAAK,WAAW,CAAC,ohBAAohB,KAAK,WAAW,CAAC;AAAA,EAAuB;AAAC;AAACD,IAAE,SAAO,CAACI,IAAE,WAAEA,GAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEJ,IAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,eAAc,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,eAAc,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,QAAO,MAAM;;;ACA79J,EAAE,cAAaK,GAAC;;;AJKxQ,IAAM,YAAY,gBAAgB;AAAA,EAC9B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AKTD,IAAAC,UAAuB;;;ACAG,IAAIC,MAAE;;;ACAyI,IAAMC,MAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,WAAS;AAAA,EAAE;AAAA,EAAC,SAAQ;AAAC,WAAO;AAAA,EAAsD;AAAC;AAACA,IAAE,SAAO,CAACC,GAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAED,IAAE,WAAU,YAAW,MAAM;;;ACA1P,EAAE,0BAAyBE,GAAC;;;AHKnK,IAAM,uBAAuB,gBAAgB;AAAA,EACzC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AITD,IAAAC,UAAuB;;;ACAG,IAAIC,MAAE;;;ACA4L,IAAMC,MAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,eAAa,OAAG,KAAK,aAAW,KAAI,KAAK,cAAY,IAAG,KAAK,YAAU,GAAE,KAAK,WAAS,OAAG,KAAK,aAAW,MAAI;AAAC,WAAK,WAAS;AAAA,IAAE,GAAE,KAAK,gBAAc,CAAAC,QAAG;AAA5a,UAAAC;AAA6a,YAAMC,MAAE,OAAKF,IAAE,SAAQG,MAAE,MAAIH,IAAE,SAAQI,MAAE,MAAIJ,IAAE,SAAQK,MAAE,MAAIL,IAAE;AAAQ,OAACE,OAAGC,SAAKH,IAAE,eAAe,GAAEA,IAAE,OAAO,MAAM;AAAG,YAAMM,MAAE,WAASL,MAAA,SAAS,kBAAT,gBAAAA,IAAwB,aAAa,aAAU,GAAG;AAAE,MAAAG,OAAGE,MAAE,KAAGN,IAAE,eAAe,GAAE,KAAK,cAAc,kBAAkBM,MAAE,CAAC,IAAI,EAAE,MAAM,KAAGD,OAAGC,MAAE,KAAK,KAAK,SAAO,MAAIN,IAAE,eAAe,GAAE,KAAK,cAAc,kBAAkBM,MAAE,CAAC,IAAI,EAAE,MAAM;AAAA,IAAE,GAAE,KAAK,uBAAqB,MAAI;AAAC,YAAMN,MAAE,KAAK,OAAO;AAAM,WAAK,YAAU,OAAOA,GAAC,GAAE,KAAK,cAAcA,GAAC,GAAE,KAAK,gBAAgB;AAAA,IAAC,GAAE,KAAK,cAAY,CAAAA,QAAG;AAAC,WAAK,cAAcA,IAAE,OAAO,KAAK,GAAE,KAAK,YAAUA,IAAE,OAAO,OAAM,KAAK,OAAO,QAAMA,IAAE,OAAO,OAAM,KAAK,gBAAgB;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,IAAI,OAAM;AAAC,WAAO,KAAK,iBAAiB,SAAS;AAAA,EAAC;AAAA,EAAC,IAAI,YAAW;AAAC,WAAO,KAAK,iBAAiB,eAAe;AAAA,EAAC;AAAA,EAAC,IAAI,SAAQ;AAAC,WAAO,KAAK,WAAW,cAAc,oBAAoB;AAAA,EAAC;AAAA,EAAC,IAAI,gBAAe;AAAC,WAAM,QAAM,KAAK,cAAY,CAAC,KAAK;AAAA,EAAY;AAAA,EAAC,IAAI,gBAAe;AAAC,WAAM,QAAM,KAAK,cAAY,CAAC,KAAK;AAAA,EAAY;AAAA,EAAC,aAAaA,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,aAAa,QAAO,SAAS,GAAE,KAAK,UAAU,GAAE,KAAK,YAAY,GAAE,KAAK,eAAe,GAAE,KAAK,gBAAgB;AAAA,EAAC;AAAA,EAAC,cAAa;AAAC,SAAK,iBAAiB,SAAS,EAAE,QAAS,CAACA,KAAEE,QAAI;AAAC,YAAMC,MAAE,SAAS,cAAc,QAAQ;AAAE,MAAAA,IAAE,YAAUH,IAAE,OAAMG,IAAE,QAAMH,IAAE,OAAMG,IAAE,WAASH,IAAE,UAASA,IAAE,aAAW,KAAK,YAAUE,MAAG,KAAK,OAAO,YAAYC,GAAC;AAAA,IAAC,CAAE;AAAA,EAAC;AAAA,EAAC,uBAAsB;AAAC,SAAK,KAAK,QAAS,CAAAH,QAAG;AAAC,MAAAA,IAAE,oBAAoB,UAAS,KAAK,WAAW,GAAEA,IAAE,oBAAoB,WAAU,KAAK,aAAa,GAAEA,IAAE,oBAAoB,WAAU,KAAK,UAAU;AAAA,IAAC,CAAE,GAAE,MAAM,qBAAqB;AAAA,EAAC;AAAA,EAAC,YAAW;AAAC,SAAK,KAAK,QAAS,CAACA,KAAEE,QAAI;AAAC,MAAAF,IAAE,aAAa,IAAI,KAAGA,IAAE,aAAa,MAAK,EAAE,CAAC,GAAEA,IAAE,aAAa,SAAQ,KAAGE,GAAC,GAAEF,IAAE,aAAa,QAAO,KAAK,GAAEA,IAAE,iBAAiB,UAAS,KAAK,WAAW,GAAEA,IAAE,iBAAiB,WAAU,KAAK,aAAa,GAAEA,IAAE,iBAAiB,WAAU,KAAK,UAAU,GAAEA,IAAE,aAAa,YAAW,GAAG;AAAA,IAAC,CAAE;AAAA,EAAC;AAAA,EAAC,cAAcA,KAAE;AAAC,QAAIE,MAAE,IAAI,YAAY,aAAY,EAAC,QAAO,EAAC,OAAMF,IAAC,EAAC,CAAC;AAAE,SAAK,cAAcE,GAAC;AAAA,EAAC;AAAA,EAAC,iBAAgB;AAAC,SAAK,UAAU,QAAS,CAACF,KAAEE,QAAI;AAAz5E,UAAAD;AAA05E,MAAAD,IAAE,aAAa,OAAM,KAAGE,GAAC;AAAE,YAAMC,MAAE,KAAK,KAAKD,GAAC,GAAEE,MAAED,IAAE,aAAa,IAAI;AAAE,UAAGA,OAAGC,OAAGJ,IAAE,aAAa,mBAAkBI,GAAC,GAAE,CAACJ,IAAE,aAAa,IAAI,GAAE;AAAC,cAAMG,MAAE,EAAE;AAAE,QAAAH,IAAE,aAAa,MAAKG,GAAC,IAAEF,MAAA,KAAK,KAAKC,GAAC,MAAX,gBAAAD,IAAc,aAAa,iBAAgBE;AAAA,MAAE;AAAA,IAAC,CAAE;AAAA,EAAC;AAAA,EAAC,kBAAiB;AAAC,SAAK,KAAK,QAAS,CAACH,KAAEE,QAAI;AAAC,WAAK,aAAWA,OAAGF,IAAE,gBAAgB,UAAU,GAAEA,IAAE,aAAa,YAAW,IAAI,GAAEA,IAAE,aAAa,iBAAgB,OAAO,MAAIA,IAAE,aAAa,YAAW,MAAM,GAAEA,IAAE,aAAa,YAAW,GAAG,GAAEA,IAAE,aAAa,iBAAgB,MAAM;AAAA,IAAE,CAAE,GAAE,KAAK,UAAU,QAAS,CAACA,KAAEE,QAAI;AAAC,WAAK,aAAWA,OAAGF,IAAE,aAAa,eAAc,MAAM,GAAEA,IAAE,aAAa,UAAS,MAAM,MAAIA,IAAE,gBAAgB,aAAa,GAAEA,IAAE,gBAAgB,QAAQ;AAAA,IAAE,CAAE;AAAA,EAAC;AAAA,EAAC,SAAQ;AAAC,WAAO,6CAA0C,KAAK,eAAa,iBAAe,EAAE,IAAI,KAAK,gBAAc,cAAY,EAAE,IAAI,KAAK,gBAAc,cAAY,EAAE,YAAY,KAAK,WAAW,6BAA6B,KAAK,oBAAoB,mEAAmE,KAAK,WAAS,yBAAuB,EAAE,IAAI,KAAK,eAAa,iBAAe,EAAE,IAAI,KAAK,gBAAc,cAAY,EAAE,IAAI,KAAK,gBAAc,cAAY,EAAE;AAAA,EAA0F;AAAC;AAACD,IAAE,SAAO,CAACA,GAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,IAAE,WAAU,gBAAe,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,cAAa,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,eAAc,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,IAAE,WAAU,aAAY,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,IAAE,WAAU,YAAW,MAAM;;;ACA/1H,IAAIQ,MAAE;;;ACA0H,IAAMC,MAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,gBAAc,GAAE,KAAK,UAAQ,GAAE,KAAK,QAAM,IAAG,KAAK,QAAM,IAAG,KAAK,WAAS,OAAG,KAAK,SAAO,MAAI;AAAC,WAAK,WAAS;AAAG,UAAIC,MAAE,IAAI,YAAY,UAAS,EAAC,QAAO,EAAC,OAAM,KAAK,MAAK,EAAC,CAAC;AAAE,WAAK,cAAcA,GAAC,GAAE,KAAK,QAAM,KAAK,cAAc;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,IAAI,OAAM;AAAC,WAAO,KAAK,cAAc,WAAW,KAAG,KAAK,cAAc,eAAe;AAAA,EAAC;AAAA,EAAC,aAAaA,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,aAAa,QAAO,KAAK,GAAE,KAAK,iBAAiB,SAAQ,KAAK,MAAM,GAAE,KAAK,SAAO,KAAK,UAAU,GAAE,KAAK,YAAY;AAAA,EAAE;AAAA,EAAC,YAAW;AAAC,SAAK,UAAU,IAAI,cAAc,GAAE,KAAK,KAAK,aAAa,UAAS,IAAI,GAAE,KAAK,KAAK,aAAa,SAAQ,IAAI,GAAE,KAAK,KAAK,aAAa,QAAO,MAAM,GAAE,KAAK,cAAc;AAAA,EAAC;AAAA,EAAC,cAAa;AAAC,QAAIA,MAAE,IAAI,YAAY,WAAU,EAAC,QAAO,EAAC,SAAQ,KAAE,EAAC,CAAC;AAAE,SAAK,cAAcA,GAAC;AAAA,EAAC;AAAA,EAAC,gBAAe;AAAC,SAAK,KAAK,aAAa,SAAQ,KAAK,WAAS,mCAAiC,mBAAmB,GAAE,KAAK,KAAK,aAAa,UAAS,KAAK,WAAS,oCAAkC,oBAAoB;AAAA,EAAC;AAAA,EAAC,gBAAe;AAAC,WAAO,KAAK,UAAQ,IAAE,wCAAqC,KAAK,OAAO,8BAA4B;AAAA,EAAG;AAAA,EAAC,sBAAqB;AAAC,WAAO,KAAK,gBAAc,IAAE,+BAA4B,KAAK,aAAa,8BAA4B;AAAA,EAAG;AAAA,EAAC,SAAQ;AAAC,WAAO,uDAAoD,KAAK,KAAK,IAAI,KAAK,cAAc,CAAC,IAAI,KAAK,oBAAoB,CAAC;AAAA,EAAQ;AAAC;AAACD,IAAE,SAAO,CAACC,GAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAED,IAAE,WAAU,iBAAgB,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,WAAU,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,YAAW,MAAM;;;ACAhzD,IAAIE,MAAE;;;ACAgI,IAAMC,MAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAaC,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,aAAa,QAAO,WAAW,GAAE,KAAK,aAAa,QAAO,UAAU,GAAE,KAAK,WAAS,KAAK,aAAa,YAAW,GAAG;AAAA,EAAC;AAAA,EAAC,SAAQ;AAAC,WAAO;AAAA,EAAgB;AAAC;AAACD,IAAE,SAAO,CAACC,GAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAED,IAAE,WAAU,WAAU,MAAM;;;ACAvM,EAAE,YAAWE,GAAC,GAAE,EAAE,WAAUC,GAAC,GAAE,EAAE,iBAAgBC,GAAC;;;APOjV,IAAM,UAAU,gBAAgB;AAAA,EAC5B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AAAA,EACP,QAAQ;AAAA,IACJ,aAAa;AAAA,EACjB;AACJ,CAAC;AACD,IAAM,SAAS,gBAAgB;AAAA,EAC3B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOD;AACX,CAAC;AACD,IAAM,cAAc,gBAAgB;AAAA,EAChC,SAAS;AAAA,EACT,cAAcE;AAAA,EACd,OAAOF;AACX,CAAC;;;AQxBD,IAAAG,UAAuB;;;ACAG,IAAIC,MAAE;;;ACA2C,IAAMC,MAAN,cAAgB,WAAC;AAAA,EAAC,SAAQ;AAAC,WAAO;AAAA,EAAgB;AAAC;AAACA,IAAE,SAAO,CAACC,GAAC;;;ACAhH,IAAIC,MAAE;;;ACA0N,IAAMC,MAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,WAAS,IAAG,KAAK,cAAY,OAAG,KAAK,OAAK,MAAK,KAAK,OAAK,IAAG,KAAK,QAAM,IAAG,KAAK,aAAW,IAAG,KAAK,MAAI,IAAG,KAAK,gBAAc,OAAG,KAAK,gBAAc;AAAA,EAAI;AAAA,EAAC,IAAI,YAAW;AAAC,WAAO,KAAK,cAAc,gBAAgB;AAAA,EAAC;AAAA,EAAC,IAAI,OAAM;AAAC,WAAO,KAAK,cAAc,oBAAoB;AAAA,EAAC;AAAA,EAAC,UAAS;AAAC,WAAO,KAAK,QAAM,KAAK,QAAM,KAAK,SAAO,KAAK;AAAA,EAAG;AAAA,EAAC,UAAS;AAAtoB,QAAAC;AAAuoB,aAAOA,MAAA,KAAK,kBAAL,gBAAAA,IAAoB,kBAAe,KAAK;AAAA,EAAI;AAAA,EAAC,WAAU;AAAC,WAAO,KAAK,gBAAc,KAAK,cAAc,SAAS,IAAE,IAAE,KAAK;AAAA,EAAK;AAAA,EAAC,eAAc;AAAC,WAAO,KAAK,aAAW,KAAK,aAAW,EAAE,KAAK,SAAS,IAAE,GAAE,CAAC;AAAA,EAAC;AAAA,EAAC,SAAQ;AAAh2B,QAAAA;AAAi2B,QAAIC,QAAED,MAAA,KAAK,kBAAL,gBAAAA,IAAoB,cAAW,KAAK;AAAI,WAAO,EAAEC,GAAC;AAAA,EAAC;AAAA,EAAC,aAAaA,KAAE;AAA16B,QAAAD,KAAAE;AAA26B,QAAG,MAAM,aAAaD,GAAC,IAAED,MAAA,KAAK,cAAL,gBAAAA,IAAgB,aAAa,QAAO,eAAc,KAAK,SAAO,KAAK,gBAAc,IAAI,KAAK,KAAK,IAAI,IAAG,KAAK,QAAM,KAAK,KAAK,aAAa,QAAO,WAAW,GAAE,KAAK,aAAY;AAAC,YAAMC,OAAEC,MAAA,KAAK,cAAc,sBAAsB,MAAzC,gBAAAA,IAA4C;AAAU,WAAK,WAASD,OAAG,KAAK;AAAA,IAAQ;AAAA,EAAC;AAAA,EAAC,iBAAgB;AAAhuC,QAAAD;AAAiuC,WAAO,KAAK,cAAY,2HAAwH,KAAK,QAAQ,IAAI,KAAK,WAAW,CAAC,kBAAcA,MAAA,KAAK,aAAL,gBAAAA,IAAe,UAAO,IAAE,wCAAqC,KAAK,QAAQ,gBAAc;AAAA,EAAG;AAAA,EAAC,iBAAgB;AAAC,WAAO,KAAK,QAAQ,IAAE,gBAAa,KAAK,gBAAc,yEAAsE,KAAK,QAAQ,CAAC,YAAY,KAAK,SAAS,CAAC,UAAU,KAAK,OAAO,CAAC,iBAAiB,KAAK,UAAU,kCAAgC,EAAE,6DAA6D,GAAG,KAAK,OAAO,CAAC,IAAI,KAAK,aAAa,CAAC,IAAI,KAAK,QAAQ,CAAC,EAAE,SAAS,KAAK,eAAe,CAAC,yGAAuG,yBAAsB,KAAK,eAAe,CAAC;AAAA,EAAsG;AAAA,EAAC,UAAS;AAAC,SAAK,aAAa,IAAE;AAAA,EAAC;AAAA,EAAC,SAAQ;AAAC,SAAK,aAAa,KAAE;AAAA,EAAC;AAAA,EAAC,aAAaC,KAAE;AAAC,UAAME,MAAEF,MAAE,0CAAwC;AAAkC,QAAG,KAAK,aAAY;AAAC,YAAMA,MAAE,KAAK,WAAW,cAAc,kBAAkB;AAAE,MAAAA,IAAE,aAAa,SAAQE,GAAC,GAAEF,IAAE,aAAa,UAASE,GAAC;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,aAAY;AAAC,WAAO;AAAA,EAAmC;AAAA,EAAC,SAAQ;AAAC,WAAO,yBAAsB,KAAK,OAAO,kBAAkB,KAAK,MAAM,2BAA2B,KAAK,eAAe,CAAC;AAAA,EAAQ;AAAC;AAACJ,IAAE,SAAO,CAACK,GAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEL,IAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,eAAc,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,KAAI,CAAC,CAAC,GAAEA,IAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,cAAa,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,OAAM,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,IAAE,WAAU,iBAAgB,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,IAAE,WAAU,iBAAgB,MAAM;;;ACAjlG,IAAIM,MAAE;;;ACAqD,IAAMC,MAAN,cAAgB,WAAC;AAAA,EAAC,SAAQ;AAAC,WAAO;AAAA,EAAgB;AAAC;AAACA,IAAE,SAAO,CAACC,GAAC;;;ACEpJ,IAAIC,YAAW;AAEf,IAAI,eAAe,MAAM,UAAUA,SAAQ,CAAC;;;ACJ4O,IAAMC,KAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,OAAK,MAAK,KAAK,OAAK,IAAG,KAAK,QAAM,GAAE,KAAK,aAAW,IAAG,KAAK,MAAI,GAAE,KAAK,gBAAc;AAAA,EAAI;AAAA,EAAC,aAAaC,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,SAAO,KAAK,gBAAc,IAAI,KAAK,KAAK,IAAI;AAAA,EAAE;AAAA,EAAC,UAAS;AAAC,WAAO,KAAK,gBAAc,KAAK,cAAc,YAAY,IAAE,KAAK;AAAA,EAAI;AAAA,EAAC,WAAU;AAAC,WAAO,KAAK,gBAAc,KAAK,cAAc,SAAS,IAAE,IAAE,KAAK;AAAA,EAAK;AAAA,EAAC,SAAQ;AAAC,QAAIA;AAAE,WAAOA,MAAE,KAAK,gBAAc,KAAK,cAAc,QAAQ,IAAE,KAAK,KAAI,EAAEA,GAAC;AAAA,EAAC;AAAA,EAAC,eAAc;AAAC,WAAO,KAAK,aAAW,KAAK,aAAW,EAAE,KAAK,SAAS,IAAE,GAAE,CAAC;AAAA,EAAC;AAAA,EAAC,SAAQ;AAAC,WAAO,wCAAqC,GAAG,KAAK,OAAO,CAAC,IAAI,KAAK,SAAS,IAAE,KAAG,MAAI,KAAK,SAAS,IAAE,KAAK,SAAS,CAAC,IAAI,KAAK,QAAQ,CAAC,EAAE,iCAAiC,KAAK,OAAO,CAAC,yCAAyC,KAAK,aAAa,CAAC,wCAAwC,KAAK,QAAQ,CAAC;AAAA,EAAgB;AAAC;AAACD,GAAE,SAAO,CAAC,YAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,KAAI,CAAC,CAAC,GAAEA,GAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,cAAa,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,OAAM,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,GAAE,WAAU,iBAAgB,MAAM;;;ACAn0C,EAAE,kBAAiBE,EAAC;;;ACAqI,EAAE,YAAWC,GAAC,GAAE,EAAE,iBAAgBC,GAAC,GAAE,EAAE,sBAAqBC,GAAC;;;AVK1U,IAAM,UAAU,gBAAgB;AAAA,EAC5B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AWTD,IAAAC,UAAuB;AAKvB,IAAM,cAAc,gBAAgB;AAAA,EAChC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,UAAuB;AAKvB,IAAM,kBAAkB,gBAAgB;AAAA,EACpC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,UAAuB;AAKvB,IAAM,eAAe,gBAAgB;AAAA,EACjC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,UAAuB;;;ACEvB,IAAIC,YAAW;AAEf,IAAI,iBAAiB,MAAM,UAAUA,SAAQ,CAAC;;;ACJqJ,IAAMC,MAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,OAAK,cAAa,KAAK,UAAQ,IAAG,KAAK,UAAQ;AAAA,EAAW;AAAA,EAAC,SAAQ;AAAC,WAAO,gDAA6C,KAAK,OAAO,4EAA4E,KAAK,IAAI,iEAAiE,KAAK,OAAO;AAAA,EAAiO;AAAC;AAACA,IAAE,SAAO,CAAC,cAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,WAAU,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,WAAU,MAAM;;;ACA1tB,IAAMC,KAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,SAAO;AAAA,EAAE;AAAA,EAAC,aAAaC,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,UAAQ,KAAK,aAAa,QAAO,QAAQ;AAAA,EAAC;AAAA,EAAC,SAAQ;AAAC,WAAO,wDAAqD,KAAK,SAAO,OAAK,iFAA8E;AAAA,EAAQ;AAAC;AAACD,GAAE,SAAO,CAAC,2EAAwE,cAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,GAAE,WAAU,UAAS,MAAM;;;ACApc,EAAE,mBAAkBE,GAAC,GAAE,EAAE,aAAYC,EAAC;;;AJM3P,IAAM,iBAAiB,gBAAgB;AAAA,EACnC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;AACD,IAAM,WAAW,gBAAgB;AAAA,EAC7B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOD;AACX,CAAC;;;AKfD,IAAAE,UAAuB;;;ACAvB,IAAMC,MAAN,MAAO;AAAA,EAAC,YAAYA,KAAE;AAAC,SAAK,sBAAoB,OAAG,KAAK,iBAAe,MAAI;AAAC,WAAK,qBAAqB,EAAE,SAAO,KAAG,CAAC,KAAK,wBAAsB,KAAK,yBAAyB,EAAE,iBAAiB,WAAU,KAAK,YAAY,GAAE,KAAK,wBAAwB,EAAE,iBAAiB,WAAU,KAAK,QAAQ,GAAE,KAAK,sBAAoB,OAAI,SAAO,KAAK,KAAK,aAAa,WAAW,MAAI,KAAK,YAAU,WAAY,MAAI;AAA9Y,YAAAC,KAAAC;AAA+Y,cAAMF,MAAE,KAAK,KAAK,cAAc,mBAAmB,OAAGC,MAAA,KAAK,KAAK,eAAV,gBAAAA,IAAsB,cAAc;AAAmB,SAAAC,MAAA,KAAK,gBAAgBF,GAAC,MAAtB,gBAAAE,IAAyB;AAAA,MAAO,GAAG,CAAC,IAAE,WAAY,MAAI;AAAljB,YAAAD;AAAmjB,cAAMD,MAAE,KAAK,KAAK,cAAc,mBAAmB,KAAG,KAAK,yBAAyB;AAAE,SAAAC,MAAA,KAAK,gBAAgBD,GAAC,MAAtB,gBAAAC,IAAyB;AAAA,MAAO,GAAG,CAAC;AAAA,IAAE,GAAE,KAAK,eAAa,CAAAD,QAAG;AAAC,WAAGA,IAAE,WAASA,IAAE,aAAWA,IAAE,eAAe,GAAE,KAAK,wBAAwB,EAAE,MAAM;AAAA,IAAE,GAAE,KAAK,WAAS,CAAAA,QAAG;AAAC,WAAGA,IAAE,WAASA,IAAE,aAAWA,IAAE,eAAe,GAAE,KAAK,yBAAyB,EAAE,MAAM;AAAA,IAAE,GAAE,KAAK,OAAKA,KAAE,KAAK,KAAK,cAAc,IAAI;AAAA,EAAC;AAAA,EAAC,IAAI,YAAW;AAAC,WAAM,0BAAwB,KAAK,KAAK,QAAQ,kBAAkB;AAAA,EAAC;AAAA,EAAC,gBAAe;AAArhC,QAAAC;AAAshC,SAAK,aAAUA,MAAA,KAAK,KAAK,kBAAV,gBAAAA,IAAyB,iBAAiB,qBAAoB,KAAK,kBAAgB,KAAK,KAAK,iBAAiB,qBAAoB,KAAK,cAAc;AAAA,EAAC;AAAA,EAAC,mBAAkB;AAA9sC,QAAAA,KAAAC,KAAAC;AAA+sC,SAAK,aAAUF,MAAA,KAAK,KAAK,kBAAV,gBAAAA,IAAyB,oBAAoB,qBAAoB,KAAK,kBAAgB,KAAK,KAAK,oBAAoB,qBAAoB,KAAK,cAAc,GAAE,KAAK,yBAAsBC,MAAA,KAAK,yBAAyB,MAA9B,gBAAAA,IAAiC,oBAAoB,WAAU,KAAK,gBAAcC,MAAA,KAAK,wBAAwB,MAA7B,gBAAAA,IAAgC,oBAAoB,WAAU,KAAK;AAAA,EAAU;AAAA,EAAC,uBAAsB;AAA5kD,QAAAF;AAA6kD,QAAID,MAAE,CAAC;AAAE,SAAK,aAAWA,IAAE,MAAKC,MAAA,KAAK,KAAK,eAAV,gBAAAA,IAAsB,cAAc,kBAAkB;AAAE,QAAIG,MAAE,MAAM,KAAK,KAAK,KAAK,iBAAiB,qQAAqQ,CAAC;AAAE,WAAOA,MAAEA,IAAE,IAAK,CAAAJ,QAAG,KAAK,gBAAgBA,GAAC,CAAE,GAAEA,IAAE,KAAK,GAAGI,GAAC,GAAEJ;AAAA,EAAC;AAAA,EAAC,2BAA0B;AAA/iE,QAAAC;AAAgjE,aAAOA,MAAA,KAAK,KAAK,eAAV,gBAAAA,IAAsB,cAAc,mCAAgC,KAAK,qBAAqB,EAAE,CAAC;AAAA,EAAC;AAAA,EAAC,0BAAyB;AAAC,UAAMD,MAAE,KAAK,qBAAqB;AAAE,WAAO,KAAK,gBAAgBA,IAAEA,IAAE,SAAO,CAAC,CAAC;AAAA,EAAC;AAAA,EAAC,gBAAgBA,KAAE;AAAC,YAAOA,OAAA,gBAAAA,IAAG,UAAU,SAAS,6BAA0BA,IAAE,SAAS,CAAC,IAAEA;AAAA,EAAC;AAAC;;;ACE71E,IAAIK,aAAW;AAEf,IAAI,YAAY,MAAM,UAAUA,UAAQ,CAAC;;;ACJgS,IAAMC,KAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,sBAAoB,MAAK,KAAK,OAAK,SAAQ,KAAK,cAAY,SAAQ,KAAK,cAAY,OAAG,KAAK,YAAU,OAAG,KAAK,YAAU,OAAG,KAAK,cAAY,OAAG,KAAK,gBAAc,OAAG,KAAK,aAAW,OAAG,KAAK,QAAM,IAAG,KAAK,SAAO,IAAG,KAAK,eAAa,OAAG,KAAK,YAAU,EAAE,GAAE,KAAK,YAAU,EAAE,GAAE,KAAK,YAAU,CAAAC,QAAG;AAAC,aAAKA,IAAE,WAAS,WAAS,KAAK,QAAM,KAAK,cAAY,KAAK,aAAa;AAAA,IAAC,GAAE,KAAK,oBAAkB,MAAI;AAAC,UAAIA,MAAE,IAAI,YAAY,qBAAoB,EAAC,QAAO,EAAC,WAAU,KAAK,KAAI,EAAC,CAAC;AAAE,WAAK,cAAcA,GAAC;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,aAAaA,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,aAAa,GAAE,KAAK,iBAAiB,WAAU,KAAK,SAAS,GAAE,KAAK,iBAAiB,GAAE,KAAK,kBAAkB;AAAA,EAAC;AAAA,EAAC,eAAc;AAAC,UAAMA,MAAE,KAAK,cAAc,WAAW,KAAG,KAAK,cAAc,kBAAkB;AAAE,IAAAA,OAAA,gBAAAA,IAAG,aAAa,QAAO,YAAWA,OAAA,gBAAAA,IAAG,UAAU,IAAI;AAAA,EAAqB;AAAA,EAAC,yBAAyBA,KAAEC,KAAEC,KAAE;AAAC,eAASF,QAAI,WAAS,KAAK,OAAK,KAAK,WAAW,IAAE,WAASC,OAAG,YAAU,KAAK,QAAM,KAAK,WAAW,IAAG,MAAM,yBAAyBD,KAAEC,KAAEC,GAAC;AAAA,EAAC;AAAA,EAAC,mBAAkB;AAAC,SAAK,UAAQ,KAAK,WAAW,cAAc,aAAa,EAAE,MAAM,QAAM,KAAK,OAAM,KAAK,WAAW,cAAc,aAAa,EAAE,MAAM,WAAS,KAAK;AAAA,EAAM;AAAA,EAAC,oBAAmB;AAAC,SAAK,WAAS,KAAK,WAAW,cAAc,aAAa,EAAE,MAAM,SAAO,KAAK,QAAO,KAAK,WAAW,cAAc,aAAa,EAAE,MAAM,YAAU,KAAK;AAAA,EAAO;AAAA,EAAC,uBAAsB;AAAC,UAAM,qBAAqB,GAAE,KAAK,oBAAoB,WAAU,KAAK,SAAS;AAAA,EAAC;AAAA,EAAC,aAAY;AAA7yD,QAAAC;AAA8yD,SAAK,iBAAcA,MAAA,KAAK,wBAAL,gBAAAA,IAA0B,oBAAmB,KAAK,sBAAoB,OAAM,KAAK,kBAAkB;AAAE,QAAIH,MAAE,IAAI,YAAY,QAAQ;AAAE,SAAK,cAAcA,GAAC,GAAE,KAAK,kBAAkB;AAAA,EAAC;AAAA,EAAC,iBAAgB;AAAC,SAAK,gBAAc,KAAK,sBAAoB,IAAIA,IAAE,IAAI;AAAA,EAAE;AAAA,EAAC,MAAM,aAAY;AAAC,SAAK,kBAAkB,GAAE,KAAK,eAAe,GAAE,MAAM,KAAK,gBAAe,KAAK,kBAAkB,GAAE,KAAK,kBAAkB;AAAA,EAAC;AAAA,EAAC,oBAAmB;AAAC,SAAK,kBAAgB,SAAS,KAAK,MAAM,WAAS;AAAA,EAAS;AAAA,EAAC,oBAAmB;AAAC,SAAK,kBAAgB,SAAS,KAAK,MAAM,WAAS;AAAA,EAAG;AAAA,EAAC,oBAAmB;AAAC,UAAMA,MAAE,KAAK,WAAW,cAAc,mBAAmB;AAAE,SAAK,eAAaA,IAAE,eAAaA,IAAE;AAAA,EAAY;AAAA,EAAC,oBAAmB;AAAC,WAAO,KAAK,cAAY,2DAAwD,KAAK,WAAW,gDAAgD,KAAK,YAAY,8EAA4E;AAAA,EAAI;AAAA,EAAC,eAAc;AAAC,SAAK,cAAY,KAAK,aAAa;AAAA,EAAC;AAAA,EAAC,cAAa;AAAC,gBAAU,KAAK,SAAO,KAAK,OAAK;AAAA,EAAO;AAAA,EAAC,eAAc;AAAp2F,QAAAG;AAAq2F,eAAS,KAAK,SAAO,KAAK,OAAK,UAAQA,MAAA,KAAK,cAAc,WAAW,MAA9B,gBAAAA,IAAiC;AAAA,EAAQ;AAAA,EAAC,SAAQ;AAAC,WAAO,qBAAkB,KAAK,WAAW,qDAAqD,KAAK,YAAY,+BAA+B,YAAU,KAAK,OAAK,+BAA6B,EAAE,IAAI,KAAK,YAAU,+BAA6B,EAAE,kCAAkC,YAAU,KAAK,OAAK,uBAAqB,EAAE,oCAAoC,KAAK,SAAS,uBAAuB,KAAK,SAAS,KAAK,KAAK,kBAAkB,CAAC,gCAAgC,KAAK,eAAa,qCAAmC,EAAE,cAAc,KAAK,SAAS,oFAAoF,KAAK,SAAS;AAAA,EAAsI;AAAC;AAACJ,GAAE,SAAO,CAAC,SAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,eAAc,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,GAAE,WAAU,eAAc,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,aAAY,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,GAAE,WAAU,aAAY,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,GAAE,WAAU,eAAc,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,GAAE,WAAU,iBAAgB,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,GAAE,WAAU,cAAa,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,UAAS,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,GAAE,WAAU,gBAAe,MAAM;;;ACA9uI,IAAMK,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK;AAAA,EAAsmB;AAAC;;;ACA9rB,EAAE,kBAAiBC,GAAC;;;ACAK,EAAE,cAAaC,EAAC;;;ANKhK,IAAM,YAAY,gBAAgB;AAAA,EAC9B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AAAA,EACP,QAAQ;AAAA,IACJ,UAAU;AAAA,EACd;AACJ,CAAC;;;AOZD,IAAAC,UAAuB;;;ACEvB,IAAIC,aAAW;AAEf,IAAI,UAAU,MAAM,UAAUA,UAAQ,CAAC;;;ACJ8I,IAAMC,MAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,OAAK,OAAG,KAAK,QAAM,OAAG,KAAK,OAAK,OAAG,KAAK,cAAY;AAAA,EAAE;AAAA,EAAC,aAAaC,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,eAAa,KAAK,aAAa,YAAW,GAAG;AAAA,EAAC;AAAA,EAAC,SAAQ;AAAC,WAAO,4BAAyB,KAAK,OAAK,mBAAiB,IAAI,IAAI,KAAK,QAAM,qBAAmB,IAAI,IAAI,KAAK,OAAK,mBAAiB,IAAI,IAAI,KAAK,cAAY,0BAAwB,IAAI;AAAA,EAA0D;AAAC;AAACD,IAAE,SAAO,CAAC,OAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,IAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,IAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,eAAc,MAAM;;;ACAjwB,EAAE,YAAWE,GAAC;;;AHKvH,IAAM,UAAU,gBAAgB;AAAA,EAC5B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AITD,IAAAC,iBAA2B;;;ACAD,IAAIC,MAAE;;;ACA4H,IAAMC,MAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,WAAS,IAAG,KAAK,WAAS,mBAAkB,KAAK,WAAS,mBAAkB,KAAK,WAAS;AAAA,EAAE;AAAA,EAAC,aAAaC,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,WAAW,cAAc,kBAAkB,EAAE,gBAAgB,MAAM,GAAE,KAAK,aAAa,QAAO,OAAO;AAAA,EAAC;AAAA,EAAC,eAAeA,KAAE;AAAC,SAAK,WAASA,IAAE,OAAO;AAAW,QAAIC,MAAE,IAAI,YAAY,sBAAqB,EAAC,QAAO,EAAC,YAAW,KAAK,SAAQ,EAAC,CAAC;AAAE,SAAK,cAAcA,GAAC;AAAA,EAAC;AAAA,EAAC,SAAQ;AAAC,WAAO,gDAA6C,KAAK,QAAQ,gDAAgD,KAAK,cAAc,eAAe,KAAK,QAAQ,eAAe,KAAK,QAAQ,gBAAgB,KAAK,QAAQ;AAAA,EAAmJ;AAAC;AAACF,IAAE,SAAO,CAACC,GAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAED,IAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,YAAW,MAAM;;;ACA5mC,IAAMG,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,saAAsa,KAAK,OAAO,MAAM,ypBAAypB,KAAK,OAAO,MAAM,64BAA64B,KAAK,OAAO,KAAK,gaAAga,KAAK,OAAO,MAAM,krBAAkrB,KAAK,OAAO,MAAM;AAAA,EAA6rC;AAAC;;;ACA54I,EAAE,kBAAiBC,GAAC;;;ACAuC,EAAE,aAAYC,GAAC;;;ALKjM,IAAM,WAAW,gBAAgB;AAAA,EAC7B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAO,eAAAC;AAAA,EACP,QAAQ;AAAA,IACJ,sBAAsB;AAAA,EAC1B;AACJ,CAAC;;;AMZD,IAAAC,UAAuB;;;ACEvB,IAAIC,aAAW;AAEf,IAAI,gBAAgB,MAAM,UAAUA,UAAQ,CAAC;;;ACJ+P,IAAMC,MAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,WAAS,IAAG,KAAK,QAAM,GAAE,KAAK,YAAU,GAAE,KAAK,aAAW,OAAG,KAAK,WAAS,OAAG,KAAK,aAAW,OAAG,KAAK,WAAS,IAAG,KAAK,eAAa,OAAG,KAAK,cAAY,OAAG,KAAK,YAAU,EAAE,GAAE,KAAK,aAAW,CAAAC,QAAG;AAAC,YAAIA,IAAE,YAAUA,IAAE,eAAe,GAAE,KAAK,gBAAgB;AAAA,IAAE;AAAA,EAAC;AAAA,EAAC,aAAaA,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,aAAW,KAAK,UAAS,KAAK,eAAe,GAAE,KAAK,eAAa,QAAQ,KAAK,QAAQ,UAAU,CAAC;AAAA,EAAC;AAAA,EAAC,iBAAgB;AAAC,SAAK,iBAAiB,gBAAgB,EAAE,SAAO,MAAI,KAAK,cAAY,MAAG,KAAK,iBAAiB,gBAAgB,EAAE,QAAS,CAAAA,QAAG;AAAC,MAAAA,IAAE,aAAa,SAAQ,GAAG;AAAA,IAAC,CAAE;AAAA,EAAE;AAAA,EAAC,kBAAiB;AAAC,SAAK,aAAW,CAAC,KAAK,YAAW,KAAK,YAAY;AAAA,EAAC;AAAA,EAAC,cAAa;AAAC,SAAK,WAAS,KAAK,aAAW,MAAI;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,MAAI,KAAK,QAAM,6DAA0D,KAAK,QAAQ,+BAA6B,MAAI,KAAK,QAAM,yCAAsC,KAAK,aAAW,+EAA0E,0EAAuE,WAAS;AAAA,EAAG;AAAA,EAAC,SAAQ;AAAC,WAAO,kCAA+B,KAAK,aAAW,6BAA2B,EAAE,IAAI,KAAK,eAAa,gCAA8B,EAAE,IAAI,KAAK,cAAY,iCAA+B,EAAE,IAAI,MAAI,KAAK,QAAM,0BAAwB,EAAE,IAAI,MAAI,KAAK,YAAU,gCAA8B,EAAE,4EAA4E,KAAK,eAAe,eAAe,KAAK,UAAU,oBAAoB,KAAK,UAAU,oBAAoB,KAAK,SAAS,uCAAuC,KAAK,aAAW,eAAa,EAAE,0CAA0C,KAAK,QAAQ,QAAQ,KAAK,WAAW,CAAC,iCAAiC,CAAC,KAAK,UAAU,SAAS,KAAK,SAAS;AAAA,EAA6D;AAAC;AAACD,IAAE,SAAO,CAACE,IAAE,aAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEF,IAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,aAAY,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,IAAE,WAAU,cAAa,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,IAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,IAAE,WAAU,cAAa,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,IAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,IAAE,WAAU,gBAAe,MAAM;;;ACA38E,IAAMG,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK;AAAA,EAA6c;AAAC;;;ACAviB,EAAE,iBAAgBC,GAAC;;;ACAxD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,GAAE,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK;AAAA,EAAiO;AAAC;;;ACAxT,EAAE,kBAAiBC,GAAC;;;ACA4J,EAAE,kBAAiBC,GAAC;;;APK3T,IAAM,gBAAgB,gBAAgB;AAAA,EAClC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AQTD,IAAAC,UAAuB;;;ACAG,IAAIC,MAAE;;;ACAmL,IAAMC,MAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,WAAS,UAAS,KAAK,YAAU,IAAG,KAAK,cAAY,IAAG,KAAK,YAAU,OAAG,KAAK,oBAAkB,MAAI;AAAC,UAAIC,MAAE,IAAI,YAAY,qBAAoB,EAAC,QAAO,EAAC,WAAU,KAAK,UAAS,EAAC,CAAC;AAAE,WAAK,cAAcA,GAAC;AAAA,IAAC,GAAE,KAAK,eAAa,MAAI;AAA9e,UAAAC;AAA+e,WAAK,YAAY,IAAEA,MAAA,KAAK,eAAL,gBAAAA,IAAiB,cAAc,YAAY;AAAA,IAAO;AAAA,EAAC;AAAA,EAAC,IAAI,UAAS;AAAnkB,QAAAA;AAAokB,YAAOA,MAAA,KAAK,eAAL,gBAAAA,IAAiB,cAAc;AAAA,EAAW;AAAA,EAAC,IAAI,iBAAgB;AAAC,WAAO,KAAK,cAAc,qBAAqB;AAAA,EAAC;AAAA,EAAC,aAAaD,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,mBAAiB,KAAK,eAAe,aAAa,YAAW,KAAK,QAAQ,GAAE,KAAK,eAAe,iBAAiB,UAAS,KAAK,YAAY;AAAA,EAAE;AAAA,EAAC,uBAAsB;AAA34B,QAAAC;AAA44B,UAAM,qBAAqB,IAAEA,MAAA,KAAK,mBAAL,gBAAAA,IAAqB,oBAAoB,UAAS,KAAK;AAAA,EAAa;AAAA,EAAC,cAAa;AAA3/B,QAAAA;AAA4/B,SAAK,YAAU,QAAGA,MAAA,KAAK,mBAAL,gBAAAA,IAAqB,gBAAgB,YAAW,KAAK,kBAAkB;AAAA,EAAC;AAAA,EAAC,iBAAgB;AAAC,QAAG,KAAK,WAAU;AAAC,eAAS,iBAAiB,0BAA0B,KAAK,SAAS,IAAI,EAAE,QAAS,CAAAD,QAAG;AAAC,QAAAA,IAAE,YAAY;AAAA,MAAC,CAAE;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,cAAa;AAAjvC,QAAAC;AAAkvC,SAAK,eAAe,GAAE,KAAK,YAAU,OAAGA,MAAA,KAAK,mBAAL,gBAAAA,IAAqB,aAAa,WAAU,SAAQ,KAAK,kBAAkB;AAAA,EAAC;AAAA,EAAC,eAAeD,KAAE;AAAC,IAAAA,IAAE,eAAe,GAAE,KAAK,YAAU,KAAK,aAAa,IAAE,KAAK,YAAY;AAAA,EAAC;AAAA,EAAC,SAAQ;AAAC,WAAO,2EAAwE,KAAK,WAAW,6DAA6D,KAAK,cAAc,uDAAuD,KAAK,QAAQ,IAAI,KAAK,YAAU,KAAG,MAAM,+CAA+C,KAAK,QAAQ,IAAI,KAAK,YAAU,KAAG,MAAM,+CAA+C,KAAK,QAAQ,IAAI,KAAK,YAAU,KAAG,MAAM;AAAA,EAAsD;AAAC;AAACD,IAAE,SAAO,CAACG,IAAEC,GAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEJ,IAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,aAAY,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,eAAc,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,IAAE,WAAU,aAAY,MAAM;;;ACAxoE,IAAIK,MAAE;;;ACAqQ,IAAMC,KAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,sBAAoB,MAAK,KAAK,cAAY,OAAG,KAAK,WAAS,SAAQ,KAAK,YAAU,SAAQ,KAAK,YAAU,OAAG,KAAK,WAAS,UAAS,KAAK,UAAQ,OAAG,KAAK,cAAY,SAAQ,KAAK,YAAU,CAAAC,QAAG;AAAC,aAAKA,IAAE,WAAS,KAAK,WAAS,KAAK,aAAa;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,IAAI,UAAS;AAAC,WAAO,KAAK,QAAQ,aAAa;AAAA,EAAC;AAAA,EAAC,aAAaA,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,aAAa,QAAO,iBAAiB,GAAE,KAAK,iBAAiB,WAAU,KAAK,SAAS,GAAE,KAAK,gBAAc,KAAK,sBAAoB,IAAIA,IAAE,IAAI;AAAA,EAAE;AAAA,EAAC,uBAAsB;AAAC,UAAM,qBAAqB,GAAE,KAAK,oBAAoB,WAAU,KAAK,SAAS;AAAA,EAAC;AAAA,EAAC,QAAQA,KAAE;AAAC,IAAAA,IAAE,IAAI,SAAS,MAAI,KAAK,QAAQ,GAAE,KAAK,UAAU;AAAA,EAAE;AAAA,EAAC,eAAc;AAAC,SAAK,UAAQ,OAAG,KAAK,cAAc,IAAI,YAAY,QAAQ,CAAC;AAAA,EAAC;AAAA,EAAC,MAAM,UAAS;AAAC,SAAK,MAAM,WAAS,KAAK,UAAS,KAAK,MAAM,YAAU,KAAK;AAAA,EAAS;AAAA,EAAC,YAAW;AAAC,UAAMA,MAAE,KAAK,aAAYC,MAAE,KAAK,cAAc,aAAYC,MAAE,KAAK,cAAaC,MAAE,KAAK,cAAc;AAAa,cAAQ,KAAK,aAAW,KAAK,MAAM,OAAK,IAAIH,MAAE,IAAEC,MAAE,CAAC,MAAK,KAAK,MAAM,SAAO,sBAAqB,gBAAc,KAAK,aAAW,KAAK,MAAM,QAAM,OAAM,KAAK,MAAM,SAAO,sBAAqB,eAAa,KAAK,aAAW,KAAK,MAAM,OAAK,OAAM,KAAK,MAAM,SAAO,sBAAqB,YAAU,KAAK,aAAW,KAAK,MAAM,OAAK,qBAAoB,KAAK,MAAM,MAAI,IAAIC,MAAE,IAAEC,MAAE,CAAC,OAAM,gBAAc,KAAK,aAAW,KAAK,MAAM,OAAK,qBAAoB,KAAK,MAAM,MAAI,QAAO,mBAAiB,KAAK,aAAW,KAAK,MAAM,OAAK,qBAAoB,KAAK,MAAM,SAAO,QAAO,aAAW,KAAK,aAAW,KAAK,MAAM,OAAK,IAAIH,MAAE,IAAEC,MAAE,CAAC,MAAK,KAAK,MAAM,MAAI,sBAAqB,mBAAiB,KAAK,aAAW,KAAK,MAAM,QAAM,OAAM,KAAK,MAAM,MAAI,sBAAqB,kBAAgB,KAAK,aAAW,KAAK,MAAM,OAAK,OAAM,KAAK,MAAM,MAAI,sBAAqB,WAAS,KAAK,aAAW,KAAK,MAAM,QAAM,qBAAoB,KAAK,MAAM,MAAI,IAAIC,MAAE,IAAEC,MAAE,CAAC,OAAM,eAAa,KAAK,aAAW,KAAK,MAAM,QAAM,qBAAoB,KAAK,MAAM,MAAI,QAAO,kBAAgB,KAAK,aAAW,KAAK,MAAM,QAAM,qBAAoB,KAAK,MAAM,SAAO;AAAA,EAAM;AAAA,EAAC,SAAQ;AAAC,WAAO,4DAAyD,KAAK,QAAQ,mFAAmF,KAAK,WAAW,0BAA0B,KAAK,YAAY,sPAAsP,KAAK,QAAQ,eAAe,KAAK,SAAS;AAAA,EAA2C;AAAC;AAACJ,GAAE,SAAO,CAACG,IAAEE,GAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEL,GAAE,WAAU,eAAc,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,aAAY,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,aAAY,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,WAAU,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,eAAc,MAAM;;;ACAhnG,EAAE,eAAcM,GAAC,GAAE,EAAE,uBAAsBC,EAAC;;;ALMpO,IAAM,aAAa,gBAAgB;AAAA,EAC/B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;AACD,IAAM,oBAAoB,gBAAgB;AAAA,EACtC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOD;AACX,CAAC;;;AMfD,IAAAE,UAAuB;;;ACEvB,IAAIC,aAAW;AAEf,IAAI,iBAAiB,MAAM,UAAUA,UAAQ,CAAC;;;ACJqJ,IAAMC,MAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,QAAM,GAAE,KAAK,YAAU;AAAA,EAAE;AAAA,EAAC,cAAa;AAAC,WAAO,KAAK,YAAU,OAAK,2CAAwC,KAAK,KAAK;AAAA,EAAS;AAAA,EAAC,SAAQ;AAAC,WAAO,4GAAyG,KAAK,KAAK,iBAAiB,KAAG,KAAK,QAAM,oCAAkC,2BAA2B,uBAAuB,KAAK,KAAK,mBAAmB,KAAK,YAAY,CAAC;AAAA,EAAQ;AAAC;AAACA,IAAE,SAAO,CAAC,cAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,IAAE,WAAU,aAAY,MAAM;;;ACAlmB,EAAE,mBAAkBC,GAAC;;;AHK/M,IAAM,iBAAiB,gBAAgB;AAAA,EACnC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AITD,IAAAC,UAAuB;;;ACEvB,IAAIC,aAAW;AAEf,IAAI,WAAW,MAAM,UAAUA,UAAQ,CAAC;;;ACJ+I,IAAMC,MAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,OAAK;AAAA,EAAS;AAAA,EAAC,SAAQ;AAAC,WAAO,wCAAqC,KAAK,IAAI;AAAA,EAAuB;AAAC;AAACA,IAAE,SAAO,CAAC,QAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,QAAO,MAAM;;;ACAjT,EAAE,aAAYC,GAAC;;;AHK1H,IAAM,WAAW,gBAAgB;AAAA,EAC7B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AITD,IAAAC,UAAuB;;;ACAG,IAAIC,KAAE;;;ACA8I,IAAMC,MAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,aAAW,IAAG,KAAK,aAAW,IAAG,KAAK,iBAAe,YAAS;AAAC,UAAG,KAAK,WAAS,KAAK,gBAAe;AAAC,aAAK,cAAc;AAAE,YAAG,EAAC,OAAMC,IAAC,IAAE,KAAK;AAAe,aAAK,cAAc,GAAE,MAAM,KAAK;AAAe,YAAIC,MAAE,KAAK,eAAe,sBAAsB;AAAE,YAAIC,MAAE;AAAG,YAAGD,IAAE,QAAM,SAAS,gBAAgB,aAAY;AAAC,cAAIA,MAAE,KAAK,QAAQ,sBAAsB,EAAE,IAAE,KAAG,KAAG,KAAG,KAAK,QAAQ,sBAAsB,EAAE;AAAE,UAAAD,IAAE,OAAKC,MAAE,MAAKD,IAAE,QAAM,SAAS,gBAAgB,cAAY,KAAG,MAAK,KAAK,aAAW,qBAAoBE,MAAE;AAAA,QAAE;AAAC,QAAAD,IAAE,QAAM,KAAG,SAAS,cAAc,MAAM,EAAE,eAAa,CAACC,QAAIF,IAAE,QAAM,eAAcA,IAAE,OAAK,QAAOA,IAAE,QAAM,OAAM,KAAK,aAAW;AAAkB,YAAG,KAAK,eAAe,sBAAsB,EAAE,IAAE,KAAG,CAACE,KAAE;AAAC,UAAAF,IAAE,QAAM,eAAcA,IAAE,OAAK,OAAMA,IAAE,QAAM,QAAO,KAAK,aAAW;AAAiB,eAAK,QAAQ,sBAAsB,EAAE,IAAEC,IAAE,QAAM,SAAS,gBAAgB,gBAAcD,IAAE,QAAM,SAAS,gBAAgB,cAAY,KAAK,QAAQ,sBAAsB,EAAE,OAAK,KAAG;AAAA,QAAK;AAAC,QAAAC,IAAE,MAAI,MAAID,IAAE,MAAI,IAAG,KAAK,aAAW,oBAAmBA,IAAE,SAAO,UAASA,IAAE,YAAU,GAAG,KAAK,UAAU,IAAI,KAAK,UAAU;AAAA,MAAE;AAAA,IAAC,GAAE,KAAK,WAAS,CAAAA,QAAG;AAAt0C,UAAAG;AAAu0C,aAAKH,IAAE,aAASG,MAAA,SAAS,kBAAT,gBAAAA,IAAwB;AAAA,IAAM;AAAA,EAAC;AAAA,EAAC,IAAI,UAAS;AAAC,WAAO,KAAK,cAAc,gBAAgB;AAAA,EAAC;AAAA,EAAC,IAAI,UAAS;AAAC,WAAO,KAAK,cAAc,gBAAgB;AAAA,EAAC;AAAA,EAAC,IAAI,iBAAgB;AAA//C,QAAAA;AAAggD,YAAOA,MAAA,KAAK,eAAL,gBAAAA,IAAiB,cAAc;AAAA,EAAmB;AAAA,EAAC,2BAA0B;AAAplD,QAAAA;AAAqlD,aAAOA,MAAA,KAAK,YAAL,gBAAAA,IAAc,iBAAc,KAAK,QAAQ,cAAc,cAAc,sFAAsF,IAAE;AAAA,EAAI;AAAA,EAAC,aAAaH,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,aAAa,GAAE,KAAK,aAAa,GAAE,KAAK,oBAAoB;AAAA,EAAC;AAAA,EAAC,sBAAqB;AAAC,SAAK,iBAAiB,WAAU,KAAK,cAAc,GAAE,KAAK,iBAAiB,cAAa,KAAK,cAAc;AAAA,EAAC;AAAA,EAAC,gBAAe;AAAC,QAAG,KAAK,gBAAe;AAAC,UAAG,EAAC,OAAMA,IAAC,IAAE,KAAK;AAAe,MAAAA,IAAE,QAAM,eAAcA,IAAE,OAAK,OAAM,KAAK,aAAW,oBAAmB,KAAK,aAAW,qBAAoBA,IAAE,YAAU,GAAG,KAAK,UAAU,IAAI,KAAK,UAAU,IAAGA,IAAE,MAAI,SAAQA,IAAE,SAAO;AAAA,IAAE;AAAA,EAAC;AAAA,EAAC,uBAAsB;AAAC,UAAM,qBAAqB,GAAE,KAAK,oBAAoB,WAAU,KAAK,cAAc,GAAE,KAAK,oBAAoB,cAAa,KAAK,cAAc;AAAA,EAAC;AAAA,EAAC,eAAc;AAAj6E,QAAAG,KAAAC;AAAk6E,QAAG,KAAK,WAAS,KAAK,SAAQ;AAAC,UAAIJ,MAAE,KAAK,QAAQ,aAAa,IAAI,KAAG,EAAE;AAAE,WAAK,QAAQ,aAAa,MAAKA,GAAC,GAAE,eAAa,KAAK,QAAQ,QAAQ,kBAAkB,KAAEG,MAAA,KAAK,yBAAyB,MAA9B,gBAAAA,IAAiC,aAAa,mBAAkBH,QAAGI,MAAA,KAAK,yBAAyB,MAA9B,gBAAAA,IAAiC,aAAa,oBAAmBJ,MAAG,KAAK,iBAAiB,WAAU,KAAK,QAAQ;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,eAAc;AAAzwF,QAAAG;AAA0wF,KAAAA,MAAA,KAAK,YAAL,gBAAAA,IAAc,aAAa,QAAO;AAAA,EAAU;AAAA,EAAC,SAAQ;AAAC,WAAO;AAAA,EAA+L;AAAC;AAACJ,IAAE,SAAO,CAACA,IAAEM,EAAC;;;ACAt6F,EAAE,eAAcC,GAAC;;;AHKhI,IAAM,aAAa,gBAAgB;AAAA,EAC/B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AITD,IAAAC,UAAuB;;;ACAG,IAAIC,MAAE;;;ACAyI,IAAMC,MAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,WAAS;AAAA,EAAE;AAAA,EAAC,aAAaC,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,iBAAiB,UAAU,EAAE,QAAS,CAAAA,QAAG;AAAC,MAAAA,IAAE,aAAa,SAAQ,MAAM;AAAA,IAAC,CAAE;AAAA,EAAC;AAAA,EAAC,SAAQ;AAAC,WAAO,wPAAqP,KAAK,QAAQ;AAAA,EAAsC;AAAC;AAACD,IAAE,SAAO,CAACE,GAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEF,IAAE,WAAU,YAAW,MAAM;;;ACAvlB,EAAE,0BAAyBG,GAAC;;;AHKnK,IAAM,uBAAuB,gBAAgB;AAAA,EACzC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AITD,IAAAC,UAAuB;;;ACAG,IAAIC,MAAE;;;ACAgM,IAAMC,KAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,WAAS,OAAG,KAAK,cAAY,eAAc,KAAK,cAAY,oBAAmB,KAAK,gBAAc,KAAI,KAAK,mBAAiB,GAAE,KAAK,cAAY,OAAG,KAAK,kBAAgB,OAAG,KAAK,mBAAiB,OAAG,KAAK,gBAAc,kBAAiB,KAAK,cAAY,GAAE,KAAK,YAAU,GAAE,KAAK,YAAU,MAAI;AAAC,WAAK,gBAAc,KAAK,mBAAiB,MAAG,KAAK,YAAY,GAAE,KAAK,qBAAmB,KAAK,cAAY,IAAE,KAAK,mBAAiB,IAAE,KAAK,oBAAmB,KAAK,kBAAkB;AAAA,IAAE;AAAA,EAAC;AAAA,EAAC,IAAI,SAAQ;AAAC,WAAO,MAAM,KAAK,KAAK,QAAQ;AAAA,EAAC;AAAA,EAAC,IAAI,SAAQ;AAAC,WAAO,KAAK,iBAAiB,KAAK;AAAA,EAAC;AAAA,EAAC,IAAI,cAAa;AAAC,WAAO,KAAK,OAAO;AAAA,EAAM;AAAA,EAAC,aAAaC,KAAE;AAAv4B,QAAAC;AAAw4B,UAAM,aAAaD,GAAC,GAAE,KAAK,cAAY,KAAG,EAAE,MAAK,8CAA8C,GAAE,KAAK,YAAU,KAAK,cAAc,GAAE,KAAK,cAAc,GAAE,KAAK,sBAAsB,GAAE,KAAK,aAAa,IAAEC,MAAA,KAAK,OAAO,CAAC,MAAb,gBAAAA,IAAgB,iBAAiB,QAAQ,MAAI;AAAC,WAAK,kBAAkB,GAAE,KAAK,eAAe;AAAA,IAAC;AAAA,EAAG;AAAA,EAAC,QAAQD,KAAE;AAAC,UAAM,QAAQA,GAAC,GAAEA,IAAE,IAAI,UAAU,KAAG,KAAK,YAAU,KAAK,cAAc;AAAA,EAAC;AAAA,EAAC,eAAc;AAApxC,QAAAC;AAAqxC,QAAI,eAAgB,CAAAD,QAAG;AAAC,MAAAA,IAAE,QAAS,MAAI;AAAC,aAAK,kBAAkB;AAAA,MAAC,CAAE;AAAA,IAAC,CAAE,EAAE,SAAQC,MAAA,KAAK,eAAL,gBAAAA,IAAiB,cAAc,YAAY;AAAA,EAAC;AAAA,EAAC,oBAAmB;AAAp6C,QAAAA,KAAAC;AAAq6C,UAAMF,OAAEC,MAAA,KAAK,cAAc,gBAAgB,MAAnC,gBAAAA,IAAsC,cAAaE,MAAEH,MAAE;AAAE,KAAAE,MAAA,KAAK,eAAL,gBAAAA,IAAiB,iBAAiB,UAAU,QAAS,CAAAE,QAAG;AAAC,MAAAA,IAAE,MAAM,MAAI,GAAGD,GAAC,MAAKC,IAAE,MAAM,SAAO,GAAGJ,GAAC;AAAA,IAAI;AAAA,EAAG;AAAA,EAAC,iBAAgB;AAA/lD,QAAAC;AAAgmD,KAAAA,MAAA,KAAK,eAAL,gBAAAA,IAAiB,iBAAiB,UAAU,QAAS,CAAAD,QAAG;AAAC,iBAAY,MAAI;AAAC,QAAAA,IAAE,MAAM,UAAQ;AAAA,MAAG,GAAG,GAAG;AAAA,IAAC;AAAA,EAAG;AAAA,EAAC,gBAAe;AAAC,SAAK,aAAW,KAAK,gBAAc,QAAM,KAAK,gBAAc,MAAK,WAAY,MAAI;AAAC,WAAK,UAAU,GAAE,KAAK,cAAc;AAAA,IAAC,GAAG,KAAK,aAAa;AAAA,EAAE;AAAA,EAAC,gBAAe;AAAt3D,QAAAC,KAAAC,KAAAG,KAAAC;AAAu3D,SAAK,cAAY,MAAI,KAAK,OAAO,QAAS,CAAAN,QAAG;AAAC,MAAAA,IAAE,UAAU,IAAI,KAAK,aAAa,GAAEA,IAAE,aAAa,eAAc,MAAM;AAAA,IAAC,CAAE,IAAEC,MAAA,KAAK,OAAO,KAAK,cAAY,CAAC,MAA9B,gBAAAA,IAAiC,UAAU,IAAI,UAAQC,MAAA,KAAK,OAAO,CAAC,MAAb,gBAAAA,IAAgB,UAAU,IAAI,YAAUG,MAAA,KAAK,OAAO,CAAC,MAAb,gBAAAA,IAAgB,aAAa,eAAc,WAASC,MAAA,KAAK,OAAO,CAAC,MAAb,gBAAAA,IAAgB,UAAU,IAAI;AAAA,EAAQ;AAAA,EAAC,oBAAmB;AAAC,SAAK,cAAY;AAAG,QAAIN,MAAE,KAAK,mBAAiB,GAAEG,MAAE,KAAK,mBAAiB;AAAE,UAAI,KAAK,mBAAiBH,MAAE,KAAK,cAAY,IAAE,KAAK,qBAAmB,KAAK,cAAY,MAAIA,MAAE,KAAK,mBAAiB,GAAEG,MAAE,IAAG,KAAK,eAAa,MAAI,KAAK,OAAOH,GAAC,EAAE,YAAU,KAAK,gBAAc,SAAQ,KAAK,OAAO,KAAK,gBAAgB,EAAE,YAAU,KAAK,gBAAc,WAAU,KAAK,OAAO,KAAK,gBAAgB,EAAE,aAAa,eAAc,OAAO,GAAE,KAAK,OAAOG,GAAC,EAAE,YAAU,KAAK,gBAAc,UAAS,WAAY,MAAI;AAAC,WAAK,cAAY,OAAG,KAAK,kBAAgB,OAAG,KAAK,mBAAiB;AAAA,IAAE,GAAG,GAAG;AAAA,EAAC;AAAA,EAAC,wBAAuB;AAAC,SAAK,iBAAiB,cAAc,CAAAH,QAAG;AAAC,WAAK,cAAYA,IAAE,eAAe,CAAC,EAAE;AAAA,IAAO,CAAE,GAAE,KAAK,iBAAiB,YAAY,CAAAA,QAAG;AAAC,WAAK,YAAUA,IAAE,eAAe,CAAC,EAAE,SAAQ,KAAK,eAAe;AAAA,IAAC,CAAE;AAAA,EAAC;AAAA,EAAC,cAAa;AAAC,SAAK,OAAO,QAAS,CAAAA,QAAG;AAAC,MAAAA,IAAE,YAAU,KAAK,eAAcA,IAAE,aAAa,eAAc,MAAM;AAAA,IAAC,CAAE;AAAA,EAAC;AAAA,EAAC,gBAAe;AAAC,SAAK,gBAAc,KAAK,kBAAgB,MAAG,KAAK,YAAY,GAAE,MAAI,KAAK,mBAAiB,KAAK,mBAAiB,KAAK,cAAY,IAAE,KAAK,oBAAmB,KAAK,kBAAkB;AAAA,EAAE;AAAA,EAAC,iBAAgB;AAAC,SAAK,YAAU,KAAK,eAAa,KAAK,cAAY,KAAK,aAAW,OAAK,KAAK,UAAU,GAAE,KAAK,YAAU,KAAK,eAAa,KAAK,cAAY,KAAK,aAAW,QAAM,KAAK,cAAc;AAAA,EAAC;AAAA,EAAC,sBAAqB;AAAC,QAAG,KAAK,aAAY;AAAC,aAAM,GAAG,KAAK,kBAAgB,mBAAiB,EAAE,IAAI,KAAK,mBAAiB,oBAAkB,EAAE;AAAA,IAAE;AAAC,WAAM;AAAA,EAAE;AAAA,EAAC,SAAQ;AAAC,WAAO,yDAAsD,KAAK,WAAW,aAAa,KAAK,aAAa,uKAAuK,KAAK,WAAW,aAAa,KAAK,SAAS,0JAA0J,KAAK,WAAW,aAAa,KAAK,aAAa,+LAA+L,KAAK,WAAW,aAAa,KAAK,SAAS,kLAAkL,KAAK,oBAAoB,CAAC;AAAA,EAA2D;AAAC;AAACD,GAAE,SAAO,CAACC,GAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAED,GAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,eAAc,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,eAAc,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,iBAAgB,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,GAAE,WAAU,oBAAmB,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,GAAE,WAAU,eAAc,MAAM;;;ACA94J,IAAIQ,MAAE;;;ACAoI,IAAMC,MAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,WAAS,IAAG,KAAK,OAAK,IAAG,KAAK,cAAY;AAAA,EAAE;AAAA,EAAC,aAAaC,KAAE;AAAzR,QAAAC;AAA0R,UAAM,aAAaD,GAAC,IAAEC,MAAA,KAAK,cAAc,KAAK,MAAxB,gBAAAA,IAA2B,aAAa,QAAO;AAAA,EAAQ;AAAA,EAAC,oBAAmB;AAAC,WAAO,KAAK,cAAY,kEAA+D,KAAK,WAAW,sBAAoB;AAAA,EAAG;AAAA,EAAC,SAAQ;AAAC,WAAO,sIAAmI,KAAK,QAAQ,kIAAkI,KAAK,IAAI,oBAAoB,KAAK,kBAAkB,CAAC;AAAA,EAAwB;AAAC;AAACF,IAAE,SAAO,CAACG,GAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEH,IAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,eAAc,MAAM;;;ACAl8B,IAAMI,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAC;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK;AAAA,EAA4a;AAAC;;;ACA/f,EAAE,oBAAmBC,GAAC;;;ACAmJ,EAAE,gBAAeC,EAAC,GAAE,EAAE,qBAAoBC,GAAC;;;APM/U,IAAM,cAAc,gBAAgB;AAAA,EAChC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;AACD,IAAM,kBAAkB,gBAAgB;AAAA,EACpC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOD;AACX,CAAC;;;AQfD,IAAAE,UAAuB;;;ACEvB,IAAIC,aAAW;AAEf,IAAI,SAAS,MAAM,UAAUA,UAAQ,CAAC;;;ACJsJ,IAAMC,KAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,YAAU,OAAG,KAAK,YAAU,OAAG,KAAK,eAAa;AAAA,EAAE;AAAA,EAAC,aAAaC,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,aAAW,KAAK,aAAa,YAAW,GAAG,GAAE,KAAK,aAAW,KAAK,iBAAiB,SAAQ,KAAK,OAAO;AAAA,EAAC;AAAA,EAAC,UAAS;AAAC,QAAIA,MAAE,IAAI,YAAY,WAAU,EAAC,QAAO,EAAC,WAAU,KAAE,EAAC,CAAC;AAAE,SAAK,cAAcA,GAAC;AAAA,EAAC;AAAA,EAAC,MAAMA,KAAE;AAAC,IAAAA,IAAE,gBAAgB;AAAE,QAAIC,MAAE,IAAI,YAAY,UAAS,EAAC,QAAO,EAAC,UAAS,KAAE,EAAC,CAAC;AAAE,SAAK,cAAcA,GAAC;AAAA,EAAC;AAAA,EAAC,oBAAmB;AAAC,WAAO,KAAK,YAAU,uBAAoB,KAAK,KAAK,iBAAiB,KAAK,YAAY,iJAA+I;AAAA,EAAG;AAAA,EAAC,SAAQ;AAAC,WAAO,4BAAyB,KAAK,YAAU,yBAAuB,EAAE,kBAAkB,KAAK,kBAAkB,CAAC;AAAA,EAAS;AAAC;AAACF,GAAE,SAAO,CAAC,QAAE,4EAA0E,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,GAAE,WAAU,aAAY,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,CAAC,CAAC,GAAEA,GAAE,WAAU,aAAY,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,gBAAe,MAAM;;;ACA3iC,EAAE,WAAUG,EAAC;;;AHK/N,IAAM,SAAS,gBAAgB;AAAA,EAC3B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AAAA,EACP,QAAQ;AAAA,IACJ,UAAU;AAAA,IACV,WAAW;AAAA,EACf;AACJ,CAAC;;;AIbD,IAAAC,UAAuB;;;ACAoB,IAAMC,MAAN,cAAgB,WAAC;AAAA,EAAC,aAAaC,KAAE;AAAC,UAAM,aAAaA,GAAC;AAAE,UAAMC,MAAE,KAAK,iBAAiB,UAAU;AAAE,IAAAA,OAAA,gBAAAA,IAAG,QAAS,CAACD,KAAED,QAAI;AAAC,MAAAC,IAAE,aAAa,QAAOD,MAAE,IAAE,EAAE,GAAEA,QAAIE,IAAE,SAAO,KAAGD,IAAE,aAAa,QAAO,MAAM;AAAA,IAAC;AAAA,EAAG;AAAA,EAAC,SAAQ;AAAC,WAAO;AAAA,EAAgB;AAAC;;;ACAvP,IAAIE,MAAE;;;ACAwK,IAAMC,KAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,QAAM,IAAG,KAAK,WAAS,IAAG,KAAK,QAAM,IAAG,KAAK,OAAK,IAAG,KAAK,kBAAgB,IAAG,KAAK,WAAS,OAAG,KAAK,WAAS,OAAG,KAAK,aAAW,CAAAC,QAAG;AAAC,YAAIA,IAAE,YAAUA,IAAE,eAAe,GAAE,KAAK,gBAAgB;AAAA,IAAE;AAAA,EAAC;AAAA,EAAC,kBAAiB;AAAC,SAAK,aAAW,KAAK,WAAS,CAAC,KAAK;AAAA,EAAS;AAAA,EAAC,mBAAkB;AAAC,YAAO,KAAK,OAAM;AAAA,MAAC,KAAI;AAAA,MAAG,KAAI;AAAW,eAAO,KAAK;AAAA,MAAK,KAAI;AAAQ,eAAO;AAAA,MAAmH,KAAI;AAAU,eAAO;AAAA,IAAmH;AAAA,EAAC;AAAA,EAAC,wBAAuB;AAAC,WAAO,KAAK,WAAS,SAAI,kJAA+I,KAAK,WAAS,QAAM,IAAI;AAAA,EAAiC;AAAA,EAAC,cAAa;AAAC,WAAO,KAAK,QAAM,8BAA2B,KAAK,KAAK,eAAa;AAAA,EAAG;AAAA,EAAC,SAAQ;AAAC,WAAO,oEAAiE,KAAK,WAAS,OAAK,GAAG,sBAAsB,KAAK,WAAS,aAAW,EAAE,oBAAoB,KAAK,QAAQ,aAAa,KAAK,eAAe,gBAAgB,KAAK,UAAU,oEAAoE,KAAK,eAAe,sCAAsC,KAAK,KAAK,KAAK,KAAK,iBAAiB,CAAC,0EAA0E,KAAK,YAAY,CAAC,8DAA8D,KAAK,QAAQ,sCAAsC,KAAK,sBAAsB,CAAC,4CAA4C,KAAK,WAAS,KAAG,MAAM;AAAA,EAA6B;AAAC;AAACD,GAAE,SAAO,CAACE,IAAED,GAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAED,GAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,GAAE,WAAU,mBAAkB,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,YAAW,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,GAAE,WAAU,YAAW,MAAM;;;ACArjE,EAAE,eAAcG,GAAC,GAAE,EAAE,YAAWC,EAAC;;;AJMhT,IAAM,aAAa,gBAAgB;AAAA,EAC/B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;AACD,IAAM,UAAU,gBAAgB;AAAA,EAC5B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOD;AACX,CAAC;;;AKfD,IAAAE,UAAuB;;;ACAG,IAAIC,MAAE;;;ACAyK,IAAMC,KAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,YAAU,OAAG,KAAK,YAAU,OAAG,KAAK,cAAY,MAAI;AAAC,WAAK,YAAU;AAAA,IAAE,GAAE,KAAK,aAAW,MAAI;AAAC,WAAK,YAAU;AAAA,IAAE,GAAE,KAAK,kBAAgB,MAAI;AAA3Y,UAAAC;AAA4Y,WAAK,cAAUA,MAAA,KAAK,UAAL,gBAAAA,IAAY,YAAS;AAAA,IAAE,GAAE,KAAK,kBAAgB,MAAI;AAA7c,UAAAA,KAAAC;AAA8c,OAAAD,MAAA,KAAK,UAAL,gBAAAA,IAAY,UAAQC,MAAA,KAAK,UAAL,gBAAAA,IAAY,SAAQ,KAAK,gBAAgB;AAAA,IAAC;AAAA,EAAC;AAAA,EAAC,aAAaC,KAAE;AAA7hB,QAAAF,KAAAC;AAA8hB,UAAM,aAAaC,GAAC,GAAE,KAAK,gBAAgB,IAAEF,MAAA,KAAK,UAAL,gBAAAA,IAAY,iBAAiB,SAAQ,KAAK,eAAaC,MAAA,KAAK,UAAL,gBAAAA,IAAY,iBAAiB,QAAO,KAAK;AAAA,EAAW;AAAA,EAAC,uBAAsB;AAA7sB,QAAAD,KAAAC;AAA8sB,KAAAD,MAAA,KAAK,UAAL,gBAAAA,IAAY,oBAAoB,SAAQ,KAAK,eAAaC,MAAA,KAAK,UAAL,gBAAAA,IAAY,oBAAoB,QAAO,KAAK,aAAY,MAAM,qBAAqB;AAAA,EAAC;AAAA,EAAC,aAAY;AAAC,WAAO,KAAK,YAAU,8BAA2B,KAAK,aAAW,sCAAoC,iCAAiC,mDAAiD,mCAAgC,KAAK,aAAW,sCAAoC,0BAA0B;AAAA,EAAqD;AAAA,EAAC,SAAQ;AAAC,WAAO,oJAAiJ,KAAK,eAAe,mBAAmB,KAAK,aAAW,aAAW,EAAE,IAAI,KAAK,YAAU,eAAa,EAAE,IAAI,KAAK,YAAU,eAAa,EAAE,mDAAmD,KAAK,aAAW,aAAW,EAAE,sBAAsB,KAAK,aAAW,aAAW,EAAE,KAAK,KAAK,WAAW,CAAC;AAAA,EAA0C;AAAC;AAACH,GAAE,SAAO,CAAC,GAAGC,GAAE,QAAOI,GAAC,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEL,GAAE,WAAU,aAAY,MAAM,GAAE,WAAE,CAAC,MAAE,CAAC,GAAEA,GAAE,WAAU,aAAY,MAAM;;;ACAzlD,EAAE,cAAaM,EAAC;;;AHKjN,IAAM,YAAY,gBAAgB;AAAA,EAC9B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AITD,IAAAC,UAAuB;;;ACAG,IAAIC,MAAE;;;ACAkI,IAAMC,MAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,OAAK,IAAG,KAAK,QAAM,IAAG,KAAK,cAAY,IAAG,KAAK,QAAM,qBAAoB,KAAK,SAAO,sBAAqB,KAAK,OAAK,KAAI,KAAK,QAAM,IAAG,KAAK,SAAO,IAAG,KAAK,SAAO,IAAG,KAAK,SAAO;AAAA,EAAE;AAAA,EAAC,QAAQC,KAAE;AAAC,UAAM,QAAQA,GAAC;AAAE,UAAMC,MAAE,KAAK,WAAW,cAAc,WAAW;AAAE,SAAK,SAAOA,IAAE,aAAa,SAAQ,KAAK,KAAK,GAAE,KAAK,eAAaA,IAAE,aAAa,eAAc,KAAG,KAAK,WAAW,GAAE,KAAK,QAAMA,IAAE,aAAa,QAAO,KAAK,IAAI,GAAE,KAAK,SAAOA,IAAE,aAAa,SAAQ,KAAK,KAAK,GAAE,KAAK,UAAQA,IAAE,aAAa,UAAS,KAAK,MAAM,GAAE,KAAK,SAAOA,IAAE,aAAa,SAAQ,KAAK,KAAK,GAAE,KAAK,UAAQA,IAAE,aAAa,UAAS,KAAK,MAAM,GAAE,KAAK,UAAQA,IAAE,aAAa,UAAS,KAAK,MAAM,GAAE,KAAK,UAAQA,IAAE,aAAa,UAAS,KAAG,KAAK,MAAM;AAAA,EAAC;AAAA,EAAC,aAAY;AAAC,YAAO,KAAK,MAAK;AAAA,MAAC,KAAI;AAAW,eAAO;AAAA,MAA4D,KAAI;AAAU,eAAO;AAAA,MAA0D,KAAI;AAAU,eAAO;AAAA,MAA0D,KAAI;AAAY,eAAO;AAAA,MAA8D,KAAI;AAAU,eAAO;AAAA,MAA0D,KAAI;AAAkB,eAAO;AAAA,MAA0E,KAAI;AAAY,eAAO;AAAA,MAA8D,KAAI;AAAsB,eAAO;AAAA,MAAkF,KAAI;AAAS,eAAO;AAAA,MAAwD,KAAI;AAAY,eAAO;AAAA,MAA8D,KAAI;AAAa,eAAO;AAAA,MAAgE,KAAI;AAAS,eAAO;AAAA,MAAwD,KAAI;AAAe,eAAO;AAAA,MAAoE,KAAI;AAAQ,eAAO;AAAA,MAAsD,KAAI;AAAW,eAAO;AAAA,MAA4D,KAAI;AAAY,eAAO;AAAA,MAA8D,KAAI;AAAU,eAAO;AAAA,MAA0D,KAAI;AAAe,eAAO;AAAA,MAAoE,KAAI;AAAW,eAAO;AAAA,MAA4D,KAAI;AAAiB,eAAO;AAAA,MAAwE,KAAI;AAAc,eAAO;AAAA,IAAiE;AAAC,WAAO;AAAA,EAAG;AAAA,EAAC,SAAQ;AAAC,WAAO,OAAI,KAAK,WAAW,CAAC;AAAA,EAAE;AAAC;AAACF,IAAE,SAAO,CAACG,GAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEH,IAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,eAAc,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,UAAS,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,QAAO,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,QAAO,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,SAAQ,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,UAAS,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAEA,IAAE,WAAU,UAAS,MAAM,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,SAAQ,SAAQ,KAAE,CAAC,CAAC,GAAEA,IAAE,WAAU,UAAS,MAAM;;;ACAhtG,IAAMI,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,+pBAA+pB,KAAK,OAAO,KAAK,klBAAklB,KAAK,OAAO,KAAK,23BAA23B,KAAK,OAAO,KAAK,sHAAsH,KAAK,OAAO,KAAK,meAAme,KAAK,OAAO,KAAK,slBAAslB,KAAK,OAAO,KAAK,kUAAkU,KAAK,OAAO,KAAK,oUAAoU,KAAK,OAAO,KAAK,qUAAqU,KAAK,OAAO,KAAK,gUAAgU,KAAK,OAAO,KAAK,sHAAsH,KAAK,OAAO,KAAK,mUAAmU,KAAK,OAAO,KAAK,sOAAsO,KAAK,OAAO,KAAK,ydAAyd,KAAK,OAAO,KAAK;AAAA,EAA+xC;AAAC;;;ACA7vO,EAAE,qBAAoBC,GAAC;;;ACApE,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,gtBAAgtB,KAAK,OAAO,KAAK,wdAAwd,KAAK,OAAO,KAAK,0gBAA0gB,KAAK,OAAO,KAAK,+jBAA+jB,KAAK,OAAO,KAAK,sJAAsJ,KAAK,OAAO,KAAK,48BAA48B,KAAK,OAAO,KAAK,6jBAA6jB,KAAK,OAAO,KAAK,uyBAAuyB,KAAK,OAAO,KAAK,smPAAsmP,KAAK,OAAO,KAAK,0wBAA0wB,KAAK,OAAO,KAAK,wtBAAwtB,KAAK,OAAO,KAAK,kVAAkV,KAAK,OAAO,KAAK,+dAA+d,KAAK,OAAO,KAAK,okBAAokB,KAAK,OAAO,KAAK;AAAA,EAAm1D;AAAC;;;ACAzwiB,EAAE,oBAAmBC,GAAC;;;ACAjE,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,whxCAAwhxC,KAAK,OAAO,KAAK,sniDAAsniD,KAAK,OAAO,KAAK,8EAA8E,KAAK,OAAO,KAAK,8EAA8E,KAAK,OAAO,KAAK,wYAAwY,KAAK,OAAO,KAAK,+lBAA+lB,KAAK,OAAO,KAAK,izBAAizB,KAAK,OAAO,KAAK,61BAA61B,KAAK,OAAO,KAAK,0VAA0V,KAAK,OAAO,KAAK,6IAA6I,KAAK,OAAO,KAAK,ouBAAouB,KAAK,OAAO,KAAK,8LAA8L,KAAK,OAAO,KAAK,6LAA6L,KAAK,OAAO,KAAK,ouBAAouB,KAAK,OAAO,KAAK,2VAA2V,KAAK,OAAO,KAAK;AAAA,EAAqlB;AAAC;;;ACA58/F,EAAE,oBAAmBC,GAAC;;;ACAjE,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAG;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,yNAAyN,KAAK,OAAO,KAAK,8pBAA8pB,KAAK,OAAO,KAAK,kHAAkH,KAAK,OAAO,KAAK,sHAAsH,KAAK,OAAO,KAAK,ieAAie,KAAK,OAAO,KAAK,sMAAsM,KAAK,OAAO,KAAK,sVAAsV,KAAK,OAAO,KAAK,oPAAoP,KAAK,OAAO,KAAK,sIAAsI,KAAK,OAAO,KAAK,sPAAsP,KAAK,OAAO,KAAK,qYAAqY,KAAK,OAAO,KAAK,mMAAmM,KAAK,OAAO,KAAK,uPAAuP,KAAK,OAAO,KAAK,6mBAA6mB,KAAK,OAAO,KAAK;AAAA,EAA+X;AAAC;;;ACA1zJ,EAAE,oBAAmBC,GAAC;;;ACAjE,IAAM,IAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kIAAgI,KAAK,OAAO,KAAK,mJAAmJ,KAAK,OAAO,KAAK,igBAAigB,KAAK,OAAO,KAAK,iJAAiJ,KAAK,OAAO,KAAK,4oBAA4oB,KAAK,OAAO,KAAK,2ZAA2Z,KAAK,OAAO,KAAK,kmBAAkmB,KAAK,OAAO,KAAK,shBAAshB,KAAK,OAAO,KAAK,shBAAshB,KAAK,OAAO,KAAK,2yBAA2yB,KAAK,OAAO,KAAK,kdAAkd,KAAK,OAAO,KAAK,8aAA8a,KAAK,OAAO,KAAK,klBAAklB,KAAK,OAAO,KAAK,wrBAAwrB,KAAK,OAAO,KAAK,wQAAwQ,KAAK,OAAO,KAAK,6RAA6R,KAAK,OAAO,KAAK,yhBAAyhB,KAAK,OAAO,KAAK,unBAAunB,KAAK,OAAO,KAAK,idAAid,KAAK,OAAO,KAAK,6ZAA6Z,KAAK,OAAO,KAAK,wxBAAwxB,KAAK,OAAO,KAAK,qSAAqS,KAAK,OAAO,KAAK,8PAA8P,KAAK,OAAO,KAAK,iQAAiQ,KAAK,OAAO,KAAK;AAAA,EAAoP;AAAC;;;ACAzyW,EAAE,sBAAqB,CAAC;;;ACAvE,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAG;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,sNAAsN,KAAK,OAAO,KAAK,qFAAqF,KAAK,OAAO,KAAK,qIAAqI,KAAK,OAAO,KAAK,0FAA0F,KAAK,OAAO,KAAK,8FAA8F,KAAK,OAAO,KAAK,8FAA8F,KAAK,OAAO,KAAK,6KAA6K,KAAK,OAAO,KAAK,8FAA8F,KAAK,OAAO,KAAK,8FAA8F,KAAK,OAAO,KAAK,sFAAsF,KAAK,OAAO,KAAK,4FAA4F,KAAK,OAAO,KAAK,8FAA8F,KAAK,OAAO,KAAK,weAAwe,KAAK,OAAO,KAAK,qeAAqe,KAAK,OAAO,KAAK,iZAAiZ,KAAK,OAAO,KAAK,+IAA+I,KAAK,OAAO,KAAK,+EAA+E,KAAK,OAAO,KAAK,8UAA8U,KAAK,OAAO,KAAK,mRAAmR,KAAK,OAAO,KAAK,2OAA2O,KAAK,OAAO,KAAK,4OAA4O,KAAK,OAAO,KAAK,4XAA4X,KAAK,OAAO,KAAK,kiBAAkiB,KAAK,OAAO,KAAK,2GAA2G,KAAK,OAAO,KAAK,8FAA8F,KAAK,OAAO,KAAK,4XAA4X,KAAK,OAAO,KAAK,6UAA6U,KAAK,OAAO,KAAK,qVAAqV,KAAK,OAAO,KAAK,0IAA0I,KAAK,OAAO,KAAK,2OAA2O,KAAK,OAAO,KAAK,8OAA8O,KAAK,OAAO,KAAK,sVAAsV,KAAK,OAAO,KAAK,qYAAqY,KAAK,OAAO,KAAK,oRAAoR,KAAK,OAAO,KAAK,0IAA0I,KAAK,OAAO,KAAK,4UAA4U,KAAK,OAAO,KAAK,wYAAwY,KAAK,OAAO,KAAK,4FAA4F,KAAK,OAAO,KAAK,4IAA4I,KAAK,OAAO,KAAK;AAAA,EAA8T;AAAC;;;ACAnuT,EAAE,gCAA+BC,GAAC;;;ACApG,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,uVAAuV,KAAK,OAAO,KAAK,sKAAsK,KAAK,OAAO,KAAK,8SAA8S,KAAK,OAAO,KAAK,wjBAAwjB,KAAK,OAAO,KAAK,onBAAonB,KAAK,OAAO,KAAK,ymBAAymB,KAAK,OAAO,KAAK,iVAAiV,KAAK,OAAO,KAAK,yNAAyN,KAAK,OAAO,KAAK,smBAAsmB,KAAK,OAAO,KAAK,kiBAAkiB,KAAK,OAAO,KAAK,uKAAuK,KAAK,OAAO,KAAK,+UAA+U,KAAK,OAAO,KAAK,wxBAAwxB,KAAK,OAAO,KAAK,wsBAAwsB,KAAK,OAAO,KAAK,oHAAoH,KAAK,OAAO,KAAK,q3BAAq3B,KAAK,OAAO,KAAK,iVAAiV,KAAK,OAAO,KAAK,4cAA4c,KAAK,OAAO,KAAK,2jBAA2jB,KAAK,OAAO,KAAK,sxBAAsxB,KAAK,OAAO,KAAK,uKAAuK,KAAK,OAAO,KAAK,mgBAAmgB,KAAK,OAAO,KAAK;AAAA,EAA2U;AAAC;;;ACA1tV,EAAE,sBAAqBC,GAAC;;;ACAvE,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,qSAAmS,KAAK,OAAO,KAAK,2aAA2a,KAAK,OAAO,KAAK,kkBAAkkB,KAAK,OAAO,KAAK,sYAAsY,KAAK,OAAO,KAAK,4gBAA4gB,KAAK,OAAO,KAAK,o+BAAo+B,KAAK,OAAO,KAAK,uUAAuU,KAAK,OAAO,KAAK,ueAAue,KAAK,OAAO,KAAK,yVAAyV,KAAK,OAAO,KAAK,8NAA8N,KAAK,OAAO,KAAK,2uBAA2uB,KAAK,OAAO,KAAK,sHAAsH,KAAK,OAAO,KAAK,4iBAA4iB,KAAK,OAAO,KAAK,0uBAA0uB,KAAK,OAAO,KAAK,oVAAoV,KAAK,OAAO,KAAK,sHAAsH,KAAK,OAAO,KAAK,ooCAAooC,KAAK,OAAO,KAAK;AAAA,EAAmV;AAAC;;;ACAz1R,EAAE,mBAAkBC,GAAC;;;ACA9D,IAAMC,KAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,2nBAA2nB,KAAK,OAAO,KAAK,wiBAAwiB,KAAK,OAAO,KAAK,oyBAAoyB,KAAK,OAAO,KAAK,sTAAsT,KAAK,OAAO,KAAK,meAAme,KAAK,OAAO,KAAK,seAAse,KAAK,OAAO,KAAK,okBAAokB,KAAK,OAAO,KAAK,0nBAA0nB,KAAK,OAAO,KAAK,ueAAue,KAAK,OAAO,KAAK,qeAAqe,KAAK,OAAO,KAAK,keAAke,KAAK,OAAO,KAAK,6pBAA6pB,KAAK,OAAO,KAAK,8iBAA8iB,KAAK,OAAO,KAAK,wnBAAwnB,KAAK,OAAO,KAAK,qyBAAqyB,KAAK,OAAO,KAAK,smBAAsmB,KAAK,OAAO,KAAK,4HAA4H,KAAK,OAAO,KAAK,+mBAA+mB,KAAK,OAAO,KAAK,0HAA0H,KAAK,OAAO,KAAK,g/BAAg/B,KAAK,OAAO,KAAK;AAAA,EAAmH;AAAC;;;ACA52W,EAAE,sBAAqBC,EAAC;;;ACAvE,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAG;AAAA,EAAC,aAAY;AAAC,WAAO,kSAAgS,KAAK,OAAO,KAAK,+hBAA+hB,KAAK,OAAO,KAAK,iRAAiR,KAAK,OAAO,KAAK,gqBAAgqB,KAAK,OAAO,KAAK,kfAAkf,KAAK,OAAO,KAAK,kqBAAkqB,KAAK,OAAO,KAAK,oLAAoL,KAAK,OAAO,KAAK,68CAA68C,KAAK,OAAO,KAAK,sHAAsH,KAAK,OAAO,KAAK,q4CAAq4C,KAAK,OAAO,KAAK,mdAAmd,KAAK,OAAO,KAAK,gdAAgd,KAAK,OAAO,KAAK,m5CAAm5C,KAAK,OAAO,KAAK,gqBAAgqB,KAAK,OAAO,KAAK,4pBAA4pB,KAAK,OAAO,KAAK,gwCAAgwC,KAAK,OAAO,KAAK,84CAA84C,KAAK,OAAO,KAAK,qJAAqJ,KAAK,OAAO,KAAK,sJAAsJ,KAAK,OAAO,KAAK,oLAAoL,KAAK,OAAO,KAAK;AAAA,EAAyc;AAAC;;;ACA1ib,EAAE,uBAAsBC,GAAC;;;ACA1E,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,QAAO,KAAK,UAAQ;AAAA,EAAM;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,o3IAAo3I,KAAK,OAAO,KAAK,mcAAmc,KAAK,OAAO,KAAK,8jCAA8jC,KAAK,OAAO,KAAK,+eAA+e,KAAK,OAAO,KAAK;AAAA,EAA+f;AAAC;;;ACArgO,EAAE,mBAAkBC,GAAC;;;ACA9D,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAG;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,8IAA8I,KAAK,OAAO,KAAK,u6PAAu6P,KAAK,OAAO,KAAK,kwBAAkwB,KAAK,OAAO,KAAK,2ZAA2Z,KAAK,OAAO,KAAK,ynBAAynB,KAAK,OAAO,KAAK,03BAA03B,KAAK,OAAO,KAAK,0dAA0d,KAAK,OAAO,KAAK,sEAAsE,KAAK,OAAO,KAAK,qOAAqO,KAAK,OAAO,KAAK,86BAA86B,KAAK,OAAO,KAAK,8XAA8X,KAAK,OAAO,KAAK,0XAA0X,KAAK,OAAO,KAAK,gwBAAgwB,KAAK,OAAO,KAAK,umBAAumB,KAAK,OAAO,KAAK,wrBAAwrB,KAAK,OAAO,KAAK,42BAA42B,KAAK,OAAO,KAAK,6bAA6b,KAAK,OAAO,KAAK,uEAAuE,KAAK,OAAO,KAAK,6TAA6T,KAAK,OAAO,KAAK,ydAAyd,KAAK,OAAO,KAAK,oOAAoO,KAAK,OAAO,KAAK,oOAAoO,KAAK,OAAO,KAAK,ieAAie,KAAK,OAAO,KAAK,uOAAuO,KAAK,OAAO,KAAK;AAAA,EAA0N;AAAC;;;ACAlmmB,EAAE,yBAAwBC,GAAC;;;ACAhF,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,iQAAiQ,KAAK,OAAO,KAAK,mNAAmN,KAAK,OAAO,KAAK,8UAA8U,KAAK,OAAO,KAAK,qNAAqN,KAAK,OAAO,KAAK,+1BAA+1B,KAAK,OAAO,KAAK,6kBAA6kB,KAAK,OAAO,KAAK,oNAAoN,KAAK,OAAO,KAAK,scAAsc,KAAK,OAAO,KAAK,0LAA0L,KAAK,OAAO,KAAK,8dAA8d,KAAK,OAAO,KAAK,sLAAsL,KAAK,OAAO,KAAK,8vBAA8vB,KAAK,OAAO,KAAK,qHAAqH,KAAK,OAAO,KAAK,8dAA8d,KAAK,OAAO,KAAK,oLAAoL,KAAK,OAAO,KAAK;AAAA,EAAoO;AAAC;;;ACA38L,EAAE,kBAAiBC,GAAC;;;ACA3D,IAAMC,KAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,47EAA47E,KAAK,OAAO,KAAK,8JAA8J,KAAK,OAAO,KAAK,8tFAA8tF,KAAK,OAAO,KAAK,iqDAAiqD,KAAK,OAAO,KAAK,6iDAA6iD,KAAK,OAAO,KAAK,gnBAAgnB,KAAK,OAAO,KAAK,g3EAAg3E,KAAK,OAAO,KAAK,kJAAkJ,KAAK,OAAO,KAAK,i6CAAi6C,KAAK,OAAO,KAAK,mdAAmd,KAAK,OAAO,KAAK,8mBAA8mB,KAAK,OAAO,KAAK,idAAid,KAAK,OAAO,KAAK,g5EAAg5E,KAAK,OAAO,KAAK,kzFAAkzF,KAAK,OAAO,KAAK,swDAAswD,KAAK,OAAO,KAAK,0vEAA0vE,KAAK,OAAO,KAAK,q3EAAq3E,KAAK,OAAO,KAAK,8JAA8J,KAAK,OAAO,KAAK,mrDAAmrD,KAAK,OAAO,KAAK,kKAAkK,KAAK,OAAO,KAAK;AAAA,EAAqvN;AAAC;;;ACAhvmC,EAAE,qBAAoBC,EAAC;;;ACApE,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAG;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,gaAAga,KAAK,OAAO,KAAK,mRAAmR,KAAK,OAAO,KAAK,2XAA2X,KAAK,OAAO,KAAK,2WAA2W,KAAK,OAAO,KAAK,kiBAAkiB,KAAK,OAAO,KAAK,ogBAAogB,KAAK,OAAO,KAAK,wtBAAwtB,KAAK,OAAO,KAAK,8KAA8K,KAAK,OAAO,KAAK,6eAA6e,KAAK,OAAO,KAAK,mWAAmW,KAAK,OAAO,KAAK,glBAAglB,KAAK,OAAO,KAAK,mYAAmY,KAAK,OAAO,KAAK,4eAA4e,KAAK,OAAO,KAAK,giBAAgiB,KAAK,OAAO,KAAK,0NAA0N,KAAK,OAAO,KAAK,yVAAyV,KAAK,OAAO,KAAK,oeAAoe,KAAK,OAAO,KAAK,sHAAsH,KAAK,OAAO,KAAK;AAAA,EAA0iB;AAAC;;;ACA9qQ,EAAE,sBAAqBC,GAAC;;;ACAvE,IAAMC,MAAN,cAAgBA,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAG;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,oxCAAoxC,KAAK,OAAO,KAAK,+9BAA+9B,KAAK,OAAO,KAAK,4iBAA4iB,KAAK,OAAO,KAAK,kgBAAkgB,KAAK,OAAO,KAAK,8yBAA8yB,KAAK,OAAO,KAAK,+jCAA+jC,KAAK,OAAO,KAAK,m9BAAm9B,KAAK,OAAO,KAAK,ywCAAywC,KAAK,OAAO,KAAK,2wCAA2wC,KAAK,OAAO,KAAK,snCAAsnC,KAAK,OAAO,KAAK,ghCAAghC,KAAK,OAAO,KAAK,4lBAA4lB,KAAK,OAAO,KAAK,8gCAA8gC,KAAK,OAAO,KAAK,2wDAA2wD,KAAK,OAAO,KAAK;AAAA,EAAg4D;AAAC;;;ACAnzgB,EAAE,oBAAmBC,GAAC;;;ACAjE,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAG;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,qfAAqf,KAAK,OAAO,KAAK,mfAAmf,KAAK,OAAO,KAAK,kmBAAkmB,KAAK,OAAO,KAAK,kKAAkK,KAAK,OAAO,KAAK,ikDAAikD,KAAK,OAAO,KAAK,69BAA69B,KAAK,OAAO,KAAK,iwBAAiwB,KAAK,OAAO,KAAK,o+DAAo+D,KAAK,OAAO,KAAK,orBAAorB,KAAK,OAAO,KAAK,41BAA41B,KAAK,OAAO,KAAK,wuBAAwuB,KAAK,OAAO,KAAK,kfAAkf,KAAK,OAAO,KAAK,24DAA24D,KAAK,OAAO,KAAK,m5BAAm5B,KAAK,OAAO,KAAK,6yBAA6yB,KAAK,OAAO,KAAK,2vBAA2vB,KAAK,OAAO,KAAK,0fAA0f,KAAK,OAAO,KAAK,ivBAAivB,KAAK,OAAO,KAAK,s1BAAs1B,KAAK,OAAO,KAAK,ufAAuf,KAAK,OAAO,KAAK,2fAA2f,KAAK,OAAO,KAAK,6SAA6S,KAAK,OAAO,KAAK,snCAAsnC,KAAK,OAAO,KAAK,w2BAAw2B,KAAK,OAAO,KAAK,0JAA0J,KAAK,OAAO,KAAK;AAAA,EAAs7B;AAAC;;;ACA75pB,EAAE,2BAA0BC,GAAC;;;ACAtF,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,2uBAA2uB,KAAK,OAAO,KAAK,4iBAA4iB,KAAK,OAAO,KAAK,4pCAA4pC,KAAK,OAAO,KAAK,sNAAsN,KAAK,OAAO,KAAK,sdAAsd,KAAK,OAAO,KAAK,uiBAAuiB,KAAK,OAAO,KAAK,kVAAkV,KAAK,OAAO,KAAK,y4BAAy4B,KAAK,OAAO,KAAK,ogBAAogB,KAAK,OAAO,KAAK,gxBAAgxB,KAAK,OAAO,KAAK,kUAAkU,KAAK,OAAO,KAAK,8yBAA8yB,KAAK,OAAO,KAAK,0iBAA0iB,KAAK,OAAO,KAAK,qvBAAqvB,KAAK,OAAO,KAAK,45GAA45G,KAAK,OAAO,KAAK,sRAAsR,KAAK,OAAO,KAAK,sRAAsR,KAAK,OAAO,KAAK,iRAAiR,KAAK,OAAO,KAAK,kRAAkR,KAAK,OAAO,KAAK,sRAAsR,KAAK,OAAO,KAAK,oRAAoR,KAAK,OAAO,KAAK,oRAAoR,KAAK,OAAO,KAAK,sHAAsH,KAAK,OAAO,KAAK,oJAAoJ,KAAK,OAAO,KAAK,qJAAqJ,KAAK,OAAO,KAAK,sJAAsJ,KAAK,OAAO,KAAK,qJAAqJ,KAAK,OAAO,KAAK,qJAAqJ,KAAK,OAAO,KAAK;AAAA,EAA0I;AAAC;;;ACAp0e,EAAE,qBAAoBC,GAAC;;;ACApE,IAAMC,KAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAG;AAAA,EAAC,aAAY;AAAC,WAAO,0RAAwR,KAAK,OAAO,KAAK,6oBAA6oB,KAAK,OAAO,KAAK,gYAAgY,KAAK,OAAO,KAAK,wiCAAwiC,KAAK,OAAO,KAAK,kuBAAkuB,KAAK,OAAO,KAAK,udAAud,KAAK,OAAO,KAAK,6MAA6M,KAAK,OAAO,KAAK,kiBAAkiB,KAAK,OAAO,KAAK,8kBAA8kB,KAAK,OAAO,KAAK,qmCAAqmC,KAAK,OAAO,KAAK,mRAAmR,KAAK,OAAO,KAAK,2QAA2Q,KAAK,OAAO,KAAK,08BAA08B,KAAK,OAAO,KAAK,0gBAA0gB,KAAK,OAAO,KAAK,iiBAAiiB,KAAK,OAAO,KAAK,yzDAAyzD,KAAK,OAAO,KAAK,geAAge,KAAK,OAAO,KAAK,6dAA6d,KAAK,OAAO,KAAK,6nBAA6nB,KAAK,OAAO,KAAK,ioBAAioB,KAAK,OAAO,KAAK,i4BAAi4B,KAAK,OAAO,KAAK,qHAAqH,KAAK,OAAO,KAAK;AAAA,EAA0Q;AAAC;;;ACA/kc,EAAE,yBAAwBC,EAAC;;;ACAhF,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAG;AAAA,EAAC,aAAY;AAAC,WAAO,sRAAoR,KAAK,OAAO,KAAK,2MAA2M,KAAK,OAAO,KAAK,oNAAoN,KAAK,OAAO,KAAK,qrBAAqrB,KAAK,OAAO,KAAK,6dAA6d,KAAK,OAAO,KAAK,0qBAA0qB,KAAK,OAAO,KAAK,kaAAka,KAAK,OAAO,KAAK,q4BAAq4B,KAAK,OAAO,KAAK,ymBAAymB,KAAK,OAAO,KAAK,qRAAqR,KAAK,OAAO,KAAK,mmBAAmmB,KAAK,OAAO,KAAK,qRAAqR,KAAK,OAAO,KAAK,goBAAgoB,KAAK,OAAO,KAAK,mZAAmZ,KAAK,OAAO,KAAK,qmBAAqmB,KAAK,OAAO,KAAK,oXAAoX,KAAK,OAAO,KAAK,wmBAAwmB,KAAK,OAAO,KAAK,oeAAoe,KAAK,OAAO,KAAK,qdAAqd,KAAK,OAAO,KAAK,+qBAA+qB,KAAK,OAAO,KAAK,04BAA04B,KAAK,OAAO,KAAK,qjBAAqjB,KAAK,OAAO,KAAK,soBAAsoB,KAAK,OAAO,KAAK,mTAAmT,KAAK,OAAO,KAAK,0dAA0d,KAAK,OAAO,KAAK,keAAke,KAAK,OAAO,KAAK,+iBAA+iB,KAAK,OAAO,KAAK,meAAme,KAAK,OAAO,KAAK,6dAA6d,KAAK,OAAO,KAAK,qRAAqR,KAAK,OAAO,KAAK;AAAA,EAAsQ;AAAC;;;ACAzif,EAAE,4BAA2BC,GAAC;;;ACAxF,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,kSAAkS,KAAK,OAAO,KAAK,+NAA+N,KAAK,OAAO,KAAK,8OAA8O,KAAK,OAAO,KAAK,wYAAwY,KAAK,OAAO,KAAK,wxBAAwxB,KAAK,OAAO,KAAK,srDAAsrD,KAAK,OAAO,aAAa,KAAK,QAAQ,kPAAkP,KAAK,OAAO,KAAK,uKAAuK,KAAK,OAAO,KAAK,u1BAAu1B,KAAK,OAAO,KAAK,yVAAyV,KAAK,OAAO,KAAK,4KAA4K,KAAK,OAAO,KAAK,49BAA49B,KAAK,OAAO,KAAK,6kCAA6kC,KAAK,OAAO,KAAK,6WAA6W,KAAK,OAAO,KAAK,mjBAAmjB,KAAK,OAAO,KAAK,22BAA22B,KAAK,OAAO,KAAK,2YAA2Y,KAAK,OAAO,KAAK,sTAAsT,KAAK,OAAO,KAAK,o3BAAo3B,KAAK,OAAO,KAAK,0YAA0Y,KAAK,OAAO,KAAK;AAAA,EAA2sB;AAAC;;;ACA7qY,EAAE,wBAAuBC,GAAC;;;ACAqxB,EAAE,mBAAkBC,GAAC;;;A7CKv8B,IAAM,gBAAgB,gBAAgB;AAAA,EAClC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;A8CTD,IAAAC,UAAuB;;;ACAG,IAAIC,MAAE;;;ACAuI,IAAMC,MAAN,cAAgB,WAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAG,SAAS,GAAE,KAAK,WAAS;AAAA,EAAE;AAAA,EAAC,aAAaC,KAAE;AAAC,UAAM,aAAaA,GAAC,GAAE,KAAK,iBAAiB,UAAU,EAAE,QAAS,CAAAA,QAAG;AAAC,MAAAA,IAAE,aAAa,SAAQ,8BAA8B,GAAEA,IAAE,aAAa,cAAa,oCAAoC;AAAA,IAAC,CAAE;AAAA,EAAC;AAAA,EAAC,SAAQ;AAAC,WAAO,4EAAyE,KAAK,QAAQ;AAAA,EAA2B;AAAC;AAACD,IAAE,SAAO,CAACC,GAAC,GAAE,WAAE,CAAC,SAAE,EAAC,MAAK,OAAM,CAAC,CAAC,GAAED,IAAE,WAAU,YAAW,MAAM;;;ACA5f,EAAE,wBAAuBE,GAAC;;;AHK7J,IAAM,qBAAqB,gBAAgB;AAAA,EACvC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AITD,IAAAC,UAAuB;AAKvB,IAAM,cAAc,gBAAgB;AAAA,EAChC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,UAAuB;AAKvB,IAAM,eAAe,gBAAgB;AAAA,EACjC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK;AAAA,EAAid;AAAC;;;ACAziB,EAAE,kBAAiBC,GAAC;;;AFK3I,IAAM,eAAe,gBAAgB;AAAA,EACjC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;AAKvB,IAAM,mBAAmB,gBAAgB;AAAA,EACrC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,UAAuB;AAKvB,IAAM,kBAAkB,gBAAgB;AAAA,EACpC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,0eAA0e,KAAK,OAAO,KAAK;AAAA,EAA4N;AAAC;;;ACA1yB,EAAE,qBAAoBC,GAAC;;;AFKpJ,IAAM,kBAAkB,gBAAgB;AAAA,EACpC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,kWAAkW,KAAK,OAAO,KAAK,6DAA6D,KAAK,OAAO,KAAK,+DAA+D,KAAK,OAAO,KAAK,+DAA+D,KAAK,OAAO,KAAK,+DAA+D,KAAK,OAAO,KAAK,+DAA+D,KAAK,OAAO,KAAK,+DAA+D,KAAK,OAAO,KAAK,+DAA+D,KAAK,OAAO,KAAK,+DAA+D,KAAK,OAAO,KAAK,+DAA+D,KAAK,OAAO,KAAK,+DAA+D,KAAK,OAAO,KAAK,+DAA+D,KAAK,OAAO,KAAK,+DAA+D,KAAK,OAAO,KAAK,+DAA+D,KAAK,OAAO,KAAK,8DAA8D,KAAK,OAAO,KAAK,+DAA+D,KAAK,OAAO,KAAK,+DAA+D,KAAK,OAAO,KAAK,+DAA+D,KAAK,OAAO,KAAK,+DAA+D,KAAK,OAAO,KAAK,6DAA6D,KAAK,OAAO,KAAK,+DAA+D,KAAK,OAAO,KAAK,+DAA+D,KAAK,OAAO,KAAK,+DAA+D,KAAK,OAAO,KAAK,+DAA+D,KAAK,OAAO,KAAK,8DAA8D,KAAK,OAAO,KAAK,+DAA+D,KAAK,OAAO,KAAK,+DAA+D,KAAK,OAAO,KAAK,+DAA+D,KAAK,OAAO,KAAK,+DAA+D,KAAK,OAAO,KAAK,6DAA6D,KAAK,OAAO,KAAK,+DAA+D,KAAK,OAAO,KAAK,+DAA+D,KAAK,OAAO,KAAK;AAAA,EAAkD;AAAC;;;ACAh6F,EAAE,qBAAoBC,GAAC;;;AFKpJ,IAAM,kBAAkB,gBAAgB;AAAA,EACpC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,m6CAAm6C,KAAK,OAAO,KAAK,4QAA4Q,KAAK,OAAO,KAAK;AAAA,EAA4P;AAAC;;;ACAxiE,EAAE,iBAAgBC,GAAC;;;AFKxI,IAAM,cAAc,gBAAgB;AAAA,EAChC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBA,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,k6CAAk6C,KAAK,OAAO,KAAK,8QAA8Q,KAAK,OAAO,KAAK,0QAA0Q,KAAK,OAAO,KAAK,6TAA6T,KAAK,OAAO,KAAK,yUAAyU,KAAK,OAAO,KAAK;AAAA,EAA+T;AAAC;;;ACAliG,EAAE,wBAAuBC,GAAC;;;AFK5J,IAAM,oBAAoB,gBAAgB;AAAA,EACtC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,iqBAAiqB,KAAK,OAAO,MAAM,4MAA4M,KAAK,OAAO,MAAM,8TAA8T,KAAK,OAAO,KAAK,kWAAkW,KAAK,OAAO,KAAK;AAAA,EAAyS;AAAC;;;ACA58D,EAAE,uBAAsBC,GAAC;;;AFKzJ,IAAM,mBAAmB,gBAAgB;AAAA,EACrC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBA,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,g5BAAg5B,KAAK,OAAO,KAAK;AAAA,EAAic;AAAC;;;ACAp7C,EAAE,sBAAqBC,GAAC;;;AFKtJ,IAAM,kBAAkB,gBAAgB;AAAA,EACpC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,g5BAAg5B,KAAK,OAAO,KAAK,woBAAwoB,KAAK,OAAO,KAAK;AAAA,EAAwoB;AAAC;;;ACA5wE,EAAE,0BAAyBC,GAAC;;;AFKlK,IAAM,sBAAsB,gBAAgB;AAAA,EACxC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBA,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,gQAAgQ,KAAK,OAAO,KAAK,uNAAuN,KAAK,OAAO,KAAK,mNAAmN,KAAK,OAAO,KAAK;AAAA,EAA0M;AAAC;;;ACAz/B,EAAE,sBAAqBC,GAAC;;;AFKtJ,IAAM,kBAAkB,gBAAgB;AAAA,EACpC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,gQAAgQ,KAAK,OAAO,KAAK;AAAA,EAAqiB;AAAC;;;ACAt4B,EAAE,uBAAsBC,GAAC;;;AFKzJ,IAAM,mBAAmB,gBAAgB;AAAA,EACrC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;AAKvB,IAAM,eAAe,gBAAgB;AAAA,EACjC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,UAAuB;AAKvB,IAAM,iBAAiB,gBAAgB;AAAA,EACnC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,UAAuB;AAKvB,IAAM,qBAAqB,gBAAgB;AAAA,EACvC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,uXAAuX,KAAK,OAAO,MAAM;AAAA,EAAoQ;AAAC;;;ACA7tB,EAAE,sBAAqBC,GAAC;;;AFKvJ,IAAM,mBAAmB,gBAAgB;AAAA,EACrC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,2XAA2X,KAAK,OAAO,KAAK,uXAAuX,KAAK,OAAO,MAAM;AAAA,EAAoQ;AAAC;;;ACA9lC,EAAE,4BAA2BC,GAAC;;;AFKxK,IAAM,wBAAwB,gBAAgB;AAAA,EAC1C,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,0JAA0J,KAAK,OAAO,KAAK,0JAA0J,KAAK,OAAO,KAAK,0JAA0J,KAAK,OAAO,KAAK,uXAAuX,KAAK,OAAO,MAAM;AAAA,EAAoQ;AAAC;;;ACArtC,EAAE,2BAA0BC,GAAC;;;AFKrK,IAAM,uBAAuB,gBAAgB;AAAA,EACzC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;AAKvB,IAAM,eAAe,gBAAgB;AAAA,EACjC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,UAAuB;AAKvB,IAAM,eAAe,gBAAgB;AAAA,EACjC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,UAAuB;AAKvB,IAAM,mBAAmB,gBAAgB;AAAA,EACrC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,mTAAmT,KAAK,OAAO,MAAM;AAAA,EAAqnF;AAAC;;;ACAthG,EAAE,gBAAeC,GAAC;;;AFKrI,IAAM,aAAa,gBAAgB;AAAA,EAC/B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBA,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,oMAAoM,KAAK,OAAO,MAAM,oJAAoJ,KAAK,OAAO,MAAM;AAAA,EAAmf;AAAC;;;ACAj8B,EAAE,qBAAoBC,GAAC;;;AFKpJ,IAAM,kBAAkB,gBAAgB;AAAA,EACpC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,wDAAsD,KAAK,OAAO,KAAK,qbAAqb,KAAK,OAAO,KAAK,ieAAie,KAAK,OAAO,MAAM,sEAAsE,KAAK,OAAO,MAAM,0FAA0F,KAAK,OAAO,MAAM,8FAA8F,KAAK,OAAO,MAAM;AAAA,EAAiK;AAAC;;;ACA3/C,EAAE,2BAA0BC,GAAC;;;AFKrK,IAAM,uBAAuB,gBAAgB;AAAA,EACzC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,2dAA2d,KAAK,OAAO,KAAK;AAAA,EAA+Z;AAAC;;;ACA59B,EAAE,sBAAqBC,GAAC;;;AFKtJ,IAAM,kBAAkB,gBAAgB;AAAA,EACpC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,0kBAA0kB,KAAK,OAAO,KAAK;AAAA,EAA2jB;AAAC;;;ACAvuC,EAAE,sBAAqBC,GAAC;;;AFKtJ,IAAM,kBAAkB,gBAAgB;AAAA,EACpC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;AAKvB,IAAM,iBAAiB,gBAAgB;AAAA,EACnC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,+JAA+J,KAAK,OAAO,MAAM,4TAA4T,KAAK,OAAO,KAAK;AAAA,EAA8W;AAAC;;;ACAz7B,EAAE,wBAAuBC,GAAC;;;AFK5J,IAAM,oBAAoB,gBAAgB;AAAA,EACtC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,oOAAoO,KAAK,OAAO,KAAK,oOAAoO,KAAK,OAAO,MAAM,mWAAmW,KAAK,OAAO,MAAM;AAAA,EAAiV;AAAC;;;ACA/vC,EAAE,wBAAuBC,GAAC;;;AFK3J,IAAM,mBAAmB,gBAAgB;AAAA,EACrC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,69EAA69E,KAAK,OAAO,MAAM,g5CAAg5C,KAAK,OAAO,MAAM,yUAAyU,KAAK,OAAO,MAAM,kUAAkU,KAAK,OAAO,MAAM;AAAA,EAA6T;AAAC;;;ACA18J,EAAE,wBAAuBC,GAAC;;;AFK5J,IAAM,oBAAoB,gBAAgB;AAAA,EACtC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBA,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,8GAA8G,KAAK,OAAO,KAAK,6GAA6G,KAAK,OAAO,KAAK,6GAA6G,KAAK,OAAO,MAAM;AAAA,EAAyb;AAAC;;;ACA/4B,EAAE,iBAAgBC,GAAC;;;AFKxI,IAAM,cAAc,gBAAgB;AAAA,EAChC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,6YAA6Y,KAAK,OAAO,KAAK,2WAA2W,KAAK,OAAO,MAAM;AAAA,EAA2iB;AAAC;;;ACA/5C,EAAE,kBAAiBC,GAAC;;;AFK3I,IAAM,eAAe,gBAAgB;AAAA,EACjC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,UAAQ,IAAG,KAAK,WAAS;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK;AAAA,EAAwhC;AAAC;;;ACA9mC,EAAE,mBAAkBC,GAAC;;;AFK9I,IAAM,gBAAgB,gBAAgB;AAAA,EAClC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,gbAAgb,KAAK,OAAO,KAAK;AAAA,EAAmZ;AAAC;;;ACAt6B,EAAE,qBAAoBC,GAAC;;;AFKpJ,IAAM,kBAAkB,gBAAgB;AAAA,EACpC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK;AAAA,EAAkmB;AAAC;;;ACAprB,EAAE,qBAAoBC,GAAC;;;AFKpJ,IAAM,kBAAkB,gBAAgB;AAAA,EACpC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,KAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,wpBAAwpB,KAAK,OAAO,KAAK;AAAA,EAAm/B;AAAC;;;ACA5uD,EAAE,uBAAsBC,EAAC;;;AFKzJ,IAAM,mBAAmB,gBAAgB;AAAA,EACrC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,2jBAA2jB,KAAK,OAAO,KAAK;AAAA,EAA0N;AAAC;;;ACAt3B,EAAE,uBAAsBC,GAAC;;;AFKzJ,IAAM,mBAAmB,gBAAgB;AAAA,EACrC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBA,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,idAAid,KAAK,OAAO,KAAK;AAAA,EAA8zB;AAAC;;;ACAp3C,EAAE,qBAAoBC,GAAC;;;AFKnJ,IAAM,iBAAiB,gBAAgB;AAAA,EACnC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,8eAA8e,KAAK,OAAO,KAAK;AAAA,EAAunB;AAAC;;;ACAlsC,EAAE,yBAAwBC,GAAC;;;AFK/J,IAAM,qBAAqB,gBAAgB;AAAA,EACvC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBA,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,uZAAuZ,KAAK,OAAO,KAAK;AAAA,EAA0yB;AAAC;;;ACAxxC,EAAE,4BAA2BC,GAAC;;;AFKxK,IAAM,wBAAwB,gBAAgB;AAAA,EAC1C,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBA,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,uZAAuZ,KAAK,OAAO,KAAK;AAAA,EAAusC;AAAC;;;ACAjsD,EAAE,sBAAqBC,GAAC;;;AFKtJ,IAAM,kBAAkB,gBAAgB;AAAA,EACpC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBA,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,y2BAAy2B,KAAK,OAAO,MAAM,8oCAA8oC,KAAK,OAAO,KAAK;AAAA,EAAw1B;AAAC;;;ACAp8F,EAAE,sBAAqBC,GAAC;;;AFKtJ,IAAM,kBAAkB,gBAAgB;AAAA,EACpC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBA,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,y2BAAy2B,KAAK,OAAO,MAAM,8oCAA8oC,KAAK,OAAO,KAAK;AAAA,EAA6X;AAAC;;;ACAr+E,EAAE,wBAAuBC,GAAC;;;AFK5J,IAAM,oBAAoB,gBAAgB;AAAA,EACtC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;AAKvB,IAAM,mBAAmB,gBAAgB;AAAA,EACrC,SAAS;AAAA,EACT,cAAc;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,UAAuB;AAKvB,IAAM,iBAAiB,gBAAgB;AAAA,EACnC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,UAAuB;AAKvB,IAAM,iBAAiB,gBAAgB;AAAA,EACnC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,smCAAsmC,KAAK,OAAO,KAAK;AAAA,EAAkZ;AAAC;;;ACAlmD,EAAE,kBAAiBC,GAAC;;;AFK3I,IAAM,eAAe,gBAAgB;AAAA,EACjC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,qTAAqT,KAAK,OAAO,KAAK,maAAma,KAAK,OAAO,MAAM,opBAAopB,KAAK,OAAO,MAAM,+4BAA+4B,KAAK,OAAO,KAAK,8EAA8E,KAAK,OAAO,KAAK,4CAA4C,KAAK,OAAO,KAAK,yEAAyE,KAAK,OAAO,KAAK,wDAAwD,KAAK,OAAO,KAAK,6EAA6E,KAAK,OAAO,KAAK,0DAA0D,KAAK,OAAO,KAAK;AAAA,EAAqE;AAAC;;;ACAp8F,EAAE,oBAAmBC,GAAC;;;AFKhJ,IAAM,gBAAgB,gBAAgB;AAAA,EAClC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,UAAuB;;;ACAyD,IAAMC,KAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,0gBAA0gB,KAAK,OAAO,MAAM,2pBAA2pB,KAAK,OAAO,MAAM,m5BAAm5B,KAAK,OAAO,MAAM,+yBAA+yB,KAAK,OAAO,KAAK,qHAAqH,KAAK,OAAO,KAAK,8EAA8E,KAAK,OAAO,KAAK,sHAAsH,KAAK,OAAO,KAAK,8EAA8E,KAAK,OAAO,KAAK,qHAAqH,KAAK,OAAO,KAAK,8EAA8E,KAAK,OAAO,KAAK,oHAAoH,KAAK,OAAO,KAAK,6ZAA6Z,KAAK,OAAO,KAAK;AAAA,EAA8O;AAAC;;;ACAx8I,EAAE,2BAA0BC,EAAC;;;AFKpK,IAAM,sBAAsB,gBAAgB;AAAA,EACxC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,yTAAyT,KAAK,OAAO,KAAK;AAAA,EAAwY;AAAC;;;ACA3yB,EAAE,kBAAiBC,GAAC;;;AFK3I,IAAM,eAAe,gBAAgB;AAAA,EACjC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;AAKvB,IAAM,eAAe,gBAAgB;AAAA,EACjC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,WAAuB;AAKvB,IAAM,qBAAqB,gBAAgB;AAAA,EACvC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,WAAuB;AAKvB,IAAM,qBAAqB,gBAAgB;AAAA,EACvC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,WAAuB;AAKvB,IAAM,4BAA4B,gBAAgB;AAAA,EAC9C,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,WAAuB;AAKvB,IAAM,mBAAmB,gBAAgB;AAAA,EACrC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,WAAuB;AAKvB,IAAM,gBAAgB,gBAAgB;AAAA,EAClC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,WAAuB;AAKvB,IAAM,mBAAmB,gBAAgB;AAAA,EACrC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBA,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,o0BAAo0B,KAAK,OAAO,KAAK,4UAA4U,KAAK,OAAO,KAAK,8PAA8P,KAAK,OAAO,KAAK,qPAAqP,KAAK,OAAO,KAAK;AAAA,EAAiP;AAAC;;;ACAzgE,EAAE,sBAAqBC,GAAC;;;AFKvJ,IAAM,mBAAmB,gBAAgB;AAAA,EACrC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK;AAAA,EAAu0B;AAAC;;;ACAz5B,EAAE,qBAAoBC,GAAC;;;AFKpJ,IAAM,kBAAkB,gBAAgB;AAAA,EACpC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,mTAAmT,KAAK,OAAO,KAAK,0MAA0M,KAAK,OAAO,KAAK,4NAA4N,KAAK,OAAO,KAAK,4NAA4N,KAAK,OAAO,KAAK,4NAA4N,KAAK,OAAO,KAAK,yPAAyP,KAAK,OAAO,KAAK,4PAA4P,KAAK,OAAO,KAAK,8PAA8P,KAAK,OAAO,KAAK;AAAA,EAA+O;AAAC;;;ACAt1E,EAAE,iBAAgBC,GAAC;;;AFKxI,IAAM,cAAc,gBAAgB;AAAA,EAChC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,6bAA6b,KAAK,OAAO,MAAM,2eAA2e,KAAK,OAAO,KAAK;AAAA,EAAsD;AAAC;;;ACA3lC,EAAE,iBAAgBC,GAAC;;;AFKxI,IAAM,cAAc,gBAAgB;AAAA,EAChC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,2ZAA2Z,KAAK,OAAO,MAAM,2eAA2e,KAAK,OAAO,KAAK;AAAA,EAAsD;AAAC;;;ACAhjC,EAAE,sBAAqBC,GAAC;;;AFKtJ,IAAM,kBAAkB,gBAAgB;AAAA,EACpC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,ylBAAylB,KAAK,OAAO,KAAK,mTAAmT,KAAK,OAAO,MAAM;AAAA,EAAowB;AAAC;;;ACA/wD,EAAE,gBAAeC,GAAC;;;AFKrI,IAAM,aAAa,gBAAgB;AAAA,EAC/B,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,+mBAA+mB,KAAK,OAAO,MAAM,qYAAqY,KAAK,OAAO,MAAM,obAAob,KAAK,OAAO,KAAK,6QAA6Q,KAAK,OAAO,KAAK,oLAAoL,KAAK,OAAO,KAAK;AAAA,EAAuO;AAAC;;;ACAvvE,EAAE,uBAAsBC,GAAC;;;AFKzJ,IAAM,mBAAmB,gBAAgB;AAAA,EACrC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,yJAAyJ,KAAK,OAAO,KAAK,kKAAkK,KAAK,OAAO,KAAK;AAAA,EAAqJ;AAAC;;;ACA5kB,EAAE,iBAAgBC,GAAC;;;AFKxI,IAAM,cAAc,gBAAgB;AAAA,EAChC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;AAKvB,IAAM,eAAe,gBAAgB;AAAA,EACjC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,WAAuB;AAKvB,IAAM,oBAAoB,gBAAgB;AAAA,EACtC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,WAAuB;;;ACAyD,IAAMC,KAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,iKAAiK,KAAK,OAAO,KAAK,uKAAuK,KAAK,OAAO,KAAK,uKAAuK,KAAK,OAAO,KAAK,uKAAuK,KAAK,OAAO,KAAK,4KAA4K,KAAK,OAAO,KAAK,kLAAkL,KAAK,OAAO,KAAK,kLAAkL,KAAK,OAAO,KAAK,kLAAkL,KAAK,OAAO,MAAM,qYAAqY,KAAK,OAAO,KAAK;AAAA,EAAkT;AAAC;;;ACA9uE,EAAE,4BAA2BC,EAAC;;;AFKxK,IAAM,wBAAwB,gBAAgB;AAAA,EAC1C,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;AAKvB,IAAM,gBAAgB,gBAAgB;AAAA,EAClC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,oSAAoS,KAAK,OAAO,KAAK,mTAAmT,KAAK,OAAO,KAAK,oSAAoS,KAAK,OAAO,KAAK,mTAAmT,KAAK,OAAO,MAAM;AAAA,EAAkY;AAAC;;;ACA/rD,EAAE,yBAAwBC,GAAC;;;AFKhK,IAAM,sBAAsB,gBAAgB;AAAA,EACxC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;AAKvB,IAAM,sBAAsB,gBAAgB;AAAA,EACxC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,WAAuB;AAKvB,IAAM,cAAc,gBAAgB;AAAA,EAChC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBA,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,sPAAsP,KAAK,OAAO,KAAK,uQAAuQ,KAAK,OAAO,KAAK,mOAAmO,KAAK,OAAO,MAAM,iOAAiO,KAAK,OAAO,MAAM,mQAAmQ,KAAK,OAAO,MAAM,iNAAiN,KAAK,OAAO,MAAM;AAAA,EAAoM;AAAC;;;ACA3xD,EAAE,kBAAiBC,GAAC;;;AFK3I,IAAM,eAAe,gBAAgB;AAAA,EACjC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,wYAAwY,KAAK,OAAO,KAAK,otBAAotB,KAAK,OAAO,KAAK;AAAA,EAA+N;AAAC;;;ACAh7C,EAAE,qBAAoBC,GAAC;;;AFKpJ,IAAM,kBAAkB,gBAAgB;AAAA,EACpC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,qgBAAqgB,KAAK,OAAO,KAAK;AAAA,EAA+f;AAAC;;;ACA3mC,EAAE,mBAAkBC,GAAC;;;AFK9I,IAAM,gBAAgB,gBAAgB;AAAA,EAClC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK;AAAA,EAAmiC;AAAC;;;ACA3nC,EAAE,kBAAiBC,GAAC;;;AFK3I,IAAM,eAAe,gBAAgB;AAAA,EACjC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,oBAAkB,KAAK,OAAO,MAAM,mNAAmN,KAAK,OAAO,MAAM,iGAAiG,KAAK,OAAO,KAAK;AAAA,EAA+b;AAAC;;;ACAp2B,EAAE,yBAAwBC,GAAC;;;AFK/J,IAAM,qBAAqB,gBAAgB;AAAA,EACvC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;AAKvB,IAAM,gBAAgB,gBAAgB;AAAA,EAClC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK;AAAA,EAA8jC;AAAC;;;ACAxnC,EAAE,kCAAiCC,GAAC;;;AFKzL,IAAM,6BAA6B,gBAAgB;AAAA,EAC/C,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,2qBAA2qB,KAAK,OAAO,MAAM,iNAAiN,KAAK,OAAO,KAAK;AAAA,EAAupB;AAAC;;;ACAhoD,EAAE,0BAAyBC,GAAC;;;AFKlK,IAAM,sBAAsB,gBAAgB;AAAA,EACxC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;AAKvB,IAAM,eAAe,gBAAgB;AAAA,EACjC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,WAAuB;AAKvB,IAAM,kBAAkB,gBAAgB;AAAA,EACpC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK;AAAA,EAAqqB;AAAC;;;ACAlvB,EAAE,wBAAuBC,GAAC;;;AFK5J,IAAM,oBAAoB,gBAAgB;AAAA,EACtC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK;AAAA,EAAk2D;AAAC;;;ACA57D,EAAE,iBAAgBC,GAAC;;;AFKxI,IAAM,cAAc,gBAAgB;AAAA,EAChC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;AAKvB,IAAM,mBAAmB,gBAAgB;AAAA,EACrC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,WAAuB;AAKvB,IAAM,iBAAiB,gBAAgB;AAAA,EACnC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,waAAwa,KAAK,OAAO,KAAK;AAAA,EAAsY;AAAC;;;ACAz5B,EAAE,iBAAgBC,GAAC;;;AFKxI,IAAM,cAAc,gBAAgB;AAAA,EAChC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBA,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,6DAA6D,KAAK,OAAO,KAAK,6DAA6D,KAAK,OAAO,KAAK,8LAA8L,KAAK,OAAO,MAAM;AAAA,EAAsS;AAAC;;;ACAluB,EAAE,sBAAqBC,GAAC;;;AFKvJ,IAAM,mBAAmB,gBAAgB;AAAA,EACrC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBA,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,6wBAA6wB,KAAK,OAAO,MAAM,26BAA26B,KAAK,OAAO,KAAK;AAAA,EAA+6B;AAAC;;;ACA7sF,EAAE,8BAA6BC,GAAC;;;AFK7K,IAAM,yBAAyB,gBAAgB;AAAA,EAC3C,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBA,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,kgBAAkgB,KAAK,OAAO,KAAK,8PAA8P,KAAK,OAAO,KAAK,8PAA8P,KAAK,OAAO,KAAK;AAAA,EAAiP;AAAC;;;ACAz2C,EAAE,4BAA2BC,GAAC;;;AFKvK,IAAM,uBAAuB,gBAAgB;AAAA,EACzC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,w7BAAw7B,KAAK,OAAO,KAAK,0MAA0M,KAAK,OAAO,KAAK;AAAA,EAAozB;AAAC;;;ACA1iE,EAAE,sBAAqBC,GAAC;;;AFKtJ,IAAM,kBAAkB,gBAAgB;AAAA,EACpC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK;AAAA,EAA42B;AAAC;;;ACAz7B,EAAE,wBAAuBC,GAAC;;;AFK5J,IAAM,oBAAoB,gBAAgB;AAAA,EACtC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,0RAA0R,KAAK,OAAO,KAAK,2RAA2R,KAAK,OAAO,KAAK,2RAA2R,KAAK,OAAO,KAAK,4RAA4R,KAAK,OAAO,KAAK,qQAAqQ,KAAK,OAAO,KAAK;AAAA,EAAyP;AAAC;;;ACA5wD,EAAE,wBAAuBC,GAAC;;;AFK5J,IAAM,oBAAoB,gBAAgB;AAAA,EACtC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,w1BAAw1B,KAAK,OAAO,KAAK,8PAA8P,KAAK,OAAO,KAAK,4PAA4P,KAAK,OAAO,KAAK,8PAA8P,KAAK,OAAO,KAAK;AAAA,EAAiP;AAAC;;;ACA99D,EAAE,kBAAiBC,GAAC;;;AFK3I,IAAM,eAAe,gBAAgB;AAAA,EACjC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK;AAAA,EAA0a;AAAC;;;ACA9f,EAAE,oBAAmBC,GAAC;;;AFKjJ,IAAM,iBAAiB,gBAAgB;AAAA,EACnC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;AAKvB,IAAM,iBAAiB,gBAAgB;AAAA,EACnC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,WAAuB;AAKvB,IAAM,cAAc,gBAAgB;AAAA,EAChC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,WAAuB;AAKvB,IAAM,kBAAkB,gBAAgB;AAAA,EACpC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,WAAuB;AAKvB,IAAM,sBAAsB,gBAAgB;AAAA,EACxC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,WAAuB;AAKvB,IAAM,wBAAwB,gBAAgB;AAAA,EAC1C,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,WAAuB;AAKvB,IAAM,qBAAqB,gBAAgB;AAAA,EACvC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,WAAuB;AAKvB,IAAM,wBAAwB,gBAAgB;AAAA,EAC1C,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;ACTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBA,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,6MAA6M,KAAK,OAAO,MAAM,2dAA2d,KAAK,OAAO,KAAK;AAAA,EAAyT;AAAC;;;ACAtlC,EAAE,sBAAqBC,GAAC;;;AFKtJ,IAAM,kBAAkB,gBAAgB;AAAA,EACpC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK;AAAA,EAA0yB;AAAC;;;ACA73B,EAAE,qBAAoBC,GAAC;;;AFKnJ,IAAM,iBAAiB,gBAAgB;AAAA,EACnC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,MAAM,2lBAA2lB,KAAK,OAAO,KAAK,ynBAAynB,KAAK,OAAO,KAAK;AAAA,EAAuoB;AAAC;;;ACAz8D,EAAE,yBAAwBC,GAAC;;;AFK/J,IAAM,qBAAqB,gBAAgB;AAAA,EACvC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;;;ACAyD,IAAMC,KAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,yDAAuD,KAAK,OAAO,KAAK,4RAA4R,KAAK,OAAO,KAAK,4RAA4R,KAAK,OAAO,MAAM,+WAA+W,KAAK,OAAO,MAAM,iXAAiX,KAAK,OAAO,KAAK;AAAA,EAA2a;AAAC;;;ACAv3D,EAAE,2BAA0BC,EAAC;;;AFKrK,IAAM,uBAAuB,gBAAgB;AAAA,EACzC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;;;ACAyD,IAAMC,MAAN,cAAgBC,GAAC;AAAA,EAAC,cAAa;AAAC,UAAM,GAAE,KAAK,WAAS,IAAG,KAAK,UAAQ;AAAA,EAAE;AAAA,EAAC,aAAY;AAAC,WAAO,kBAAgB,KAAK,OAAO,KAAK,uSAAuS,KAAK,OAAO,MAAM;AAAA,EAA0d;AAAC;;;ACAj2B,EAAE,uBAAsBC,GAAC;;;AFK1J,IAAM,oBAAoB,gBAAgB;AAAA,EACtC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;;;AGTD,IAAAC,WAAuB;AAKvB,IAAM,iBAAiB,gBAAgB;AAAA,EACnC,SAAS;AAAA,EACT,cAAcC;AAAA,EACd,OAAOC;AACX,CAAC;",
  "names": ["React", "tag", "p", "_a", "k", "v", "c", "r", "d", "i", "NODE_MODE", "v", "s", "NODE_MODE", "global", "DEV_MODE", "e", "_a", "v", "p", "s", "i", "_b", "c", "k", "DEV_MODE", "NODE_MODE", "global", "debugLogEvent", "issueWarning", "_a", "_b", "_c", "trustedTypes", "s", "l", "html", "i", "tag", "m", "strings", "el", "_d", "n", "v", "emptyStringForBooleanAttribute", "polyfillSupport", "DEV_MODE", "global", "_d", "issueWarning", "_a", "debugLogEvent", "_b", "DEV_MODE", "issueWarning", "_a", "_b", "polyfillSupport", "finalized", "_c", "DEV_MODE", "issueWarning", "NODE_MODE", "global", "_a", "r", "s", "e", "_a", "t", "_a", "e", "e", "t", "_a", "_b", "_c", "i", "t", "s", "_a", "e", "t", "_a", "u", "e", "t", "_a", "r", "u", "_a", "e", "_b", "_c", "_d", "_e", "r", "l", "t", "r", "l", "r", "import_react", "e", "t", "_a", "_b", "e", "i", "e", "l", "l", "i", "r", "e", "t", "r", "s", "e", "s", "s", "React__default", "React", "e", "o", "u", "_a", "_b", "e", "l", "l", "o", "l", "o", "o", "o", "React", "React", "i", "o", "u", "i", "t", "t", "o", "o", "React", "React", "React", "t", "React", "a", "l", "u", "e", "_a", "_b", "a", "l", "l", "React", "React", "e", "r", "u", "t", "i", "e", "r", "r", "React", "React", "e", "o", "u", "e", "o", "l", "o", "o", "o", "React", "React", "r", "o", "h", "u", "e", "_a", "_b", "t", "o", "r", "h", "h", "React", "React", "i", "React", "React", "e", "o", "u", "e", "e", "l", "e", "o", "o", "React", "React", "e", "o", "e", "o", "o", "React", "React", "l", "o", "e", "d", "i", "r", "t", "h", "n", "a", "p", "s", "u", "l", "o", "e", "d", "i", "r", "t", "h", "n", "a", "p", "s", "u", "l", "n", "_a", "t", "_b", "_c", "_d", "_e", "o", "i", "e", "s", "h", "l", "n", "n", "React", "React", "s", "n", "t", "o", "e", "i", "s", "n", "n", "React", "React", "css_248z", "i", "t", "i", "i", "React", "React", "o", "s", "o", "s", "s", "s", "t", "s", "i", "o", "t", "i", "o", "s", "React", "o", "import_react", "css_248z", "a", "t", "e", "s", "l", "l", "o", "l", "o", "t", "l", "t", "a", "a", "React__default", "import_react", "css_248z", "n", "t", "n", "n", "React__default", "React", "t", "o", "n", "i", "r", "a", "p", "u", "e", "o", "t", "n", "i", "a", "r", "p", "t", "a", "r", "i", "o", "h", "t", "e", "o", "a", "r", "i", "t", "i", "n", "o", "r", "a", "s", "m", "t", "e", "_a", "o", "i", "n", "r", "a", "s", "r", "n", "t", "_a", "e", "o", "r", "t", "a", "n", "o", "i", "r", "u", "t", "_a", "e", "o", "a", "n", "i", "r", "e", "l", "t", "_a", "_b", "o", "e", "t", "o", "n", "r", "a", "e", "_a", "_b", "o", "t", "n", "r", "r", "o", "t", "r", "l", "l", "l", "l", "o", "l", "o", "r", "l", "r", "css_248z", "s", "t", "_a", "i", "r", "e", "_a", "_b", "i", "s", "r", "o", "u", "h", "m", "n", "l", "a", "o", "u", "React", "React", "m", "React", "React", "h", "React", "React", "n", "React", "React", "u", "React", "React", "l", "React", "React", "a", "React", "React", "o", "React", "React", "r", "React", "React", "s", "React", "React", "o", "css_248z", "l", "_a", "t", "e", "o", "_b", "l", "l", "React", "React", "o", "css_248z", "n", "e", "_a", "_b", "o", "n", "n", "React", "React", "i", "s", "i", "s", "s", "React", "React", "o", "o", "e", "_a", "t", "s", "i", "n", "a", "t", "n", "t", "t", "i", "t", "o", "n", "i", "o", "React", "n", "i", "React", "r", "e", "r", "i", "a", "_a", "t", "_b", "e", "i", "t", "r", "t", "css_248z", "h", "t", "h", "e", "a", "r", "e", "React", "React", "a", "React", "React", "r", "React", "React", "h", "React", "React", "css_248z", "e", "d", "t", "e", "d", "e", "React", "d", "React", "t", "_a", "_b", "_c", "e", "css_248z", "d", "t", "s", "i", "_a", "o", "l", "o", "d", "d", "React", "React", "css_248z", "s", "t", "s", "s", "React", "import_react", "t", "s", "t", "e", "o", "l", "o", "s", "s", "React__default", "React", "css_248z", "r", "i", "o", "r", "l", "r", "r", "l", "r", "r", "r", "React", "React", "r", "l", "t", "_a", "o", "r", "r", "h", "t", "s", "o", "i", "r", "l", "h", "l", "React", "h", "React", "css_248z", "o", "o", "o", "React", "React", "css_248z", "o", "o", "o", "React", "React", "p", "o", "t", "e", "i", "_a", "_b", "p", "o", "o", "React", "React", "o", "r", "t", "o", "r", "r", "React", "React", "t", "h", "t", "_a", "_b", "i", "s", "_c", "_d", "e", "r", "t", "_a", "e", "r", "l", "r", "h", "r", "h", "React", "r", "React", "css_248z", "c", "t", "e", "c", "c", "React", "React", "r", "t", "e", "t", "d", "t", "o", "r", "d", "r", "React", "d", "React", "t", "c", "u", "_a", "_b", "s", "t", "c", "c", "React", "React", "l", "n", "i", "t", "l", "o", "l", "o", "e", "l", "e", "o", "l", "o", "o", "l", "o", "l", "t", "l", "t", "o", "l", "o", "o", "l", "o", "C", "l", "C", "e", "l", "e", "o", "l", "o", "o", "l", "o", "o", "l", "o", "L", "l", "L", "o", "l", "o", "l", "l", "e", "l", "e", "e", "l", "e", "C", "l", "C", "e", "l", "e", "e", "l", "e", "n", "n", "React", "React", "t", "l", "t", "l", "l", "React", "React", "l", "React", "React", "o", "React", "React", "r", "l", "r", "r", "React", "React", "l", "React", "React", "o", "React", "React", "o", "l", "o", "o", "React", "React", "t", "l", "t", "t", "React", "React", "t", "l", "t", "t", "React", "React", "l", "l", "l", "React", "React", "t", "l", "t", "t", "React", "React", "l", "l", "l", "React", "React", "t", "l", "t", "t", "React", "React", "l", "l", "l", "React", "React", "o", "l", "o", "o", "React", "React", "r", "React", "React", "r", "React", "React", "o", "React", "React", "e", "l", "e", "e", "React", "React", "e", "l", "e", "e", "React", "React", "t", "l", "t", "t", "React", "React", "e", "React", "React", "o", "React", "React", "o", "React", "React", "e", "l", "e", "e", "React", "React", "l", "l", "l", "React", "React", "o", "l", "o", "o", "React", "React", "o", "l", "o", "o", "React", "React", "o", "l", "o", "o", "React", "React", "o", "React", "React", "e", "l", "e", "e", "React", "React", "r", "l", "r", "r", "React", "React", "o", "l", "o", "o", "React", "React", "l", "l", "l", "React", "React", "e", "l", "e", "e", "React", "React", "r", "l", "r", "r", "React", "React", "r", "l", "r", "r", "React", "React", "r", "l", "r", "r", "React", "React", "C", "l", "C", "C", "React", "React", "t", "l", "t", "t", "React", "React", "l", "l", "l", "React", "React", "t", "l", "t", "t", "React", "React", "l", "l", "l", "React", "React", "l", "l", "l", "React", "React", "l", "l", "l", "React", "React", "l", "l", "l", "React", "React", "React", "React", "e", "React", "React", "o", "React", "React", "o", "l", "o", "o", "React", "React", "t", "l", "t", "t", "React", "React", "C", "l", "C", "C", "React", "React", "o", "l", "o", "o", "React", "React", "o", "React", "React", "r", "React", "React", "t", "React", "React", "t", "React", "React", "o", "React", "React", "o", "React", "React", "C", "React", "React", "l", "l", "l", "React", "React", "i", "l", "i", "i", "React", "React", "t", "l", "t", "t", "React", "React", "r", "l", "r", "r", "React", "React", "r", "l", "r", "r", "React", "React", "o", "l", "o", "o", "React", "React", "t", "l", "t", "t", "React", "React", "r", "l", "r", "r", "React", "React", "r", "React", "React", "e", "React", "React", "C", "l", "C", "C", "React", "React", "o", "React", "React", "o", "l", "o", "o", "React", "React", "o", "React", "React", "r", "React", "React", "l", "l", "l", "React", "React", "t", "l", "t", "t", "React", "React", "r", "l", "r", "r", "React", "React", "r", "l", "r", "r", "React", "React", "e", "l", "e", "e", "React", "React", "l", "React", "React", "e", "l", "e", "e", "React", "React", "o", "l", "o", "o", "React", "React", "o", "React", "React", "L", "React", "React", "o", "l", "o", "o", "React", "React", "e", "l", "e", "e", "React", "React", "o", "React", "React", "o", "React", "React", "r", "l", "r", "r", "React", "React", "l", "l", "l", "React", "React", "l", "l", "l", "React", "React", "l", "l", "l", "React", "React", "o", "l", "o", "o", "React", "React", "t", "l", "t", "t", "React", "React", "o", "l", "o", "o", "React", "React", "t", "l", "t", "t", "React", "React", "r", "l", "r", "r", "React", "React", "l", "React", "React", "l", "React", "React", "e", "React", "React", "C", "React", "React", "e", "React", "React", "e", "React", "React", "e", "React", "React", "l", "l", "l", "React", "React", "r", "l", "r", "r", "React", "React", "t", "l", "t", "t", "React", "React", "C", "l", "C", "C", "React", "React", "o", "l", "o", "o", "React", "React", "l", "React"]
}
