import{__decorate as t}from"tslib";import{LitElement as e,html as o}from"lit";import{property as s,state as i}from"lit/decorators.js";import r from"../styles/global-styles.js";import p from"./popover-styles.js";class l extends e{constructor(){super(...arguments),this.position="bottom",this.cathegory="",this.srclosetext="",this.isVisible=!1,this.visibilityChanged=()=>{let t=new CustomEvent("changedVisibility",{detail:{isVisible:this.isVisible}});this.dispatchEvent(t)},this.closePopover=()=>{this.hidePopover(),this.shadowRoot?.querySelector("#trigger").focus()}}get popover(){return this.shadowRoot?.querySelector(".popover")}get popoverContent(){return this.querySelector("ids-popover-content")}firstUpdated(t){super.firstUpdated(t),this.popoverContent&&(this.popoverContent.setAttribute("position",this.position),this.popoverContent.addEventListener("closed",this.closePopover))}disconnectedCallback(){super.disconnectedCallback(),this.popoverContent?.removeEventListener("closed",this.closePopover)}hidePopover(){this.isVisible=!1,this.popoverContent?.removeAttribute("visible"),this.visibilityChanged()}closeCathegory(){if(this.cathegory){document.querySelectorAll(`ids-popover[cathegory="${this.cathegory}"]`).forEach((t=>{t.hidePopover()}))}}showPopover(){this.closeCathegory(),this.isVisible=!0,this.popoverContent?.setAttribute("visible","true"),this.visibilityChanged()}triggerPopover(t){t.preventDefault(),this.isVisible?this.closePopover():this.showPopover()}render(){return o`<span class="popover"><button id="trigger" tabindex="0" aria-label="${this.srclosetext}" class="popover-trigger btn-no-styles focusable" @click="${this.triggerPopover}"><slot></slot></button> <span class="popover-caret ${this.position} ${this.isVisible?"":"hide"}"></span> <span class="popover-caret-border ${this.position} ${this.isVisible?"":"hide"}"></span> <span class="popover-caret-shadow ${this.position} ${this.isVisible?"":"hide"}"></span><slot name="popover-content"></slot></span>`}}l.styles=[r,p],t([s({type:String})],l.prototype,"position",void 0),t([s({type:String,reflect:!0})],l.prototype,"cathegory",void 0),t([s({type:String})],l.prototype,"srclosetext",void 0),t([i()],l.prototype,"isVisible",void 0);export{l as IDSPopover};
