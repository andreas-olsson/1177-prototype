import{__decorate as t}from"tslib";import{LitElement as s,html as i}from"lit";import{property as e}from"lit/decorators.js";import o from"../../../styles/global-styles.js";import r from"./mobile-item-styles.js";class l extends s{constructor(){super(...arguments),this.unresponsive=!1}get link(){return this.querySelector("a")}get icon(){return this.querySelector(".ids-icon")}firstUpdated(t){super.firstUpdated(t),this.setupIcon()}setupIcon(){this.icon&&(this.icon.setAttribute("slot","icon"),this.icon.setAttribute("width","30"),this.icon.setAttribute("height","30"),this.icon.setAttribute("colorpreset","2"))}click(){this.link?.click()}render(){return i`<button @click="${this.click}" aria-label="${this.link?.innerText||""}" class="btn-no-styles"><ids-col class="ids-mr-1" cols="auto"><slot name="icon"></slot></ids-col><ids-col class="mobile-item-text" cols="auto">${this.link?.innerText} <span class="hide"><slot></slot></span></ids-col></button>`}}l.styles=[o,r],t([e({type:Boolean,reflect:!0})],l.prototype,"unresponsive",void 0);export{l as IDSHeaderMobileItem};
