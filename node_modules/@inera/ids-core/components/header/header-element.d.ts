import { LitElement } from 'lit';
export declare class IDSHeader extends LitElement {
    static styles: import("lit").CSSResult[];
    type: '1177' | '1177-pro' | 'inera' | 'inera-admin' | 'inera-legacy' | 'inera-admin-legacy' | '';
    brandtext: string;
    brandtexttop: string;
    brandtextbottom: string;
    pickregiontext: string;
    hidebrand: boolean;
    fluid: boolean;
    hideregionpicker: boolean;
    srlogolabel: string;
    unresponsive: boolean;
    logohref: string;
    isRegionExpanded: boolean;
    regionIcon: Element | null;
    hasViewPortResizeEvent: boolean;
    lastKnownRegionId: string;
    protected firstUpdated(_changedProperties: Map<string | number | symbol, unknown>): void;
    protected updated(_changedProperties: Map<string | number | symbol, unknown>): void;
    setRegionIconAttributes(): void;
    setup1177RegionIcon(): void;
    addEventListenerForRegionIcon(): void;
    handleVPResize: () => void;
    renderLogo(): import("lit-html").TemplateResult<1>;
    renderLogoLink(): import("lit-html").TemplateResult<1>;
    renderLogoIcon(): import("lit-html").TemplateResult<1>;
    renderRegionPickerMobile(): import("lit-html").TemplateResult<1>;
    renderRegionPicker(): import("lit-html").TemplateResult<1>;
    renderRegionPickerDesktop(): import("lit-html").TemplateResult<1>;
    toggleRegion(event: any): void;
    isValidKey(event: any): boolean;
    renderItems(): import("lit-html").TemplateResult<1>;
    renderServiceName(): import("lit-html").TemplateResult<1>;
    renderBrandText(): import("lit-html").TemplateResult<1>;
    renderHeader(): import("lit-html").TemplateResult<1>;
    renderSkipToContent(): import("lit-html").TemplateResult<1>;
    render(): import("lit-html").TemplateResult<1>;
}
