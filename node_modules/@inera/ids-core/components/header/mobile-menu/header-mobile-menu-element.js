import{__decorate as e}from"tslib";import{LitElement as t,html as s}from"lit";import{property as i,state as o}from"lit/decorators.js";import l from"../../styles/global-styles.js";import{stylesBase as n,styles1177 as d,stylesInera as r,stylesIneraLegacy as p}from"./header-mobile-menu-styles.js";class a extends t{constructor(){super(...arguments),this.expanded=!1,this.persistent=!1,this.unresponsive=!1,this.fluid=!1,this.type=void 0,this.isExpanded=!1,this.label="Meny",this.closeMenu=()=>{this.isExpanded&&this.toggleExpanded()}}firstUpdated(e){super.firstUpdated(e),this.querySelector("ids-mobile-menu-avatar")?.setAttribute("slot","menu-link"),this.querySelectorAll("ids-mobile-menu-item")?.forEach((e=>{e.setAttribute("slot","menu-link")})),this.isExpanded=this.expanded,this.persistent||this.setupLinkClicks(),this.setupProperties()}setupProperties(){const e=this.closest("ids-header");this.setAttribute("type",e.getAttribute("type")),null!==e.getAttribute("unresponsive")&&(this.unresponsive=!0),null!==e.getAttribute("fluid")&&(this.fluid=!0)}setupLinkClicks(){this.querySelectorAll("a")?.forEach((e=>e.addEventListener("click",this.closeMenu)))}toggleExpanded(){this.isExpanded=!this.isExpanded;let e=new CustomEvent("didToggleExpansion",{detail:{isExpanded:this.expanded}});this.dispatchEvent(e)}renderItems(){return this.isExpanded?s`<ids-row class="mobile-menu-items"><slot name="menu-link"></slot></ids-row>`:s``}render(){return s`<button aria-label="${this.label}" aria-expanded="${this.isExpanded}" @click="${this.toggleExpanded}" class="btn-no-styles clickable menu-btn" justify="center" align="center"><ids-col cols="auto"><div class="lines-button x ${this.isExpanded?"close":""}"><span class="lines"></span></div></ids-col><ids-col class="menu-txt" cols="auto"><slot></slot></ids-col></button> ${this.renderItems()}`}}a.styles=[l,n,d,r,p],e([i({type:Boolean})],a.prototype,"expanded",void 0),e([i({type:Boolean})],a.prototype,"persistent",void 0),e([i({type:Boolean,reflect:!0})],a.prototype,"unresponsive",void 0),e([i({type:Boolean,reflect:!0})],a.prototype,"fluid",void 0),e([i({type:String,reflect:!0})],a.prototype,"type",void 0),e([o()],a.prototype,"isExpanded",void 0),e([i()],a.prototype,"label",void 0);export{a as IDSHeaderMobileMenu};
