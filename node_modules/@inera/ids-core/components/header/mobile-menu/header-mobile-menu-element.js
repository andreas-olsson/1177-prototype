import{__decorate as e}from"tslib";import{LitElement as t,html as s}from"lit";import{property as i}from"lit/decorators.js";import o from"../../styles/global-styles.js";import{stylesBase as l,styles1177 as n,stylesInera as r,stylesIneraLegacy as d}from"./header-mobile-menu-styles.js";class p extends t{constructor(){super(...arguments),this.expanded=!1,this.persistent=!1,this.unresponsive=!1,this.fluid=!1,this.type=void 0,this.label="Meny",this.closeMenu=()=>{this.expanded&&this.toggleExpanded()}}firstUpdated(e){super.firstUpdated(e),this.querySelector("ids-mobile-menu-avatar")?.setAttribute("slot","menu-link"),this.querySelectorAll("ids-mobile-menu-item")?.forEach((e=>{e.setAttribute("slot","menu-link")})),this.persistent||this.setupLinkClicks(),this.setupProperties()}setupProperties(){const e=this.closest("ids-header");this.setAttribute("type",e.getAttribute("type")),null!==e.getAttribute("unresponsive")&&(this.unresponsive=!0),null!==e.getAttribute("fluid")&&(this.fluid=!0)}setupLinkClicks(){this.querySelectorAll("a")?.forEach((e=>e.addEventListener("click",this.closeMenu)))}toggleExpanded(){let e;this.expanded=!this.expanded,e=this.expanded?new CustomEvent("expanded"):new CustomEvent("closed"),this.dispatchEvent(e)}renderItems(){return this.expanded?s`<ids-row class="mobile-menu-items"><slot name="menu-link"></slot></ids-row>`:s``}render(){return s`<button aria-label="${this.label}" aria-expanded="${this.expanded}" @click="${this.toggleExpanded}" class="btn-no-styles clickable menu-btn" justify="center" align="center"><ids-col cols="auto"><div class="lines-button x ${this.expanded?"close":""}"><span class="lines"></span></div></ids-col><ids-col class="menu-txt" cols="auto"><slot></slot></ids-col></button> ${this.renderItems()}`}}p.styles=[o,l,n,r,d],e([i({type:Boolean,reflect:!0})],p.prototype,"expanded",void 0),e([i({type:Boolean})],p.prototype,"persistent",void 0),e([i({type:Boolean,reflect:!0})],p.prototype,"unresponsive",void 0),e([i({type:Boolean,reflect:!0})],p.prototype,"fluid",void 0),e([i({type:String,reflect:!0})],p.prototype,"type",void 0),e([i()],p.prototype,"label",void 0);export{p as IDSHeaderMobileMenu};
