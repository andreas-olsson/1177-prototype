import{__decorate as t}from"tslib";import{LitElement as o,html as i}from"lit";import{property as e,state as s}from"lit/decorators.js";import*as r from"./icons/icons.js";import{generateId as h,logWarning as l}from"../../utilities/utils.js";import c from"./icon-styles.js";class n extends o{constructor(){super(...arguments),this.name="",this.title="",this.colorpreset=-1,this.color="",this.color2="",this.size="m",this.width="",this.height="",this.rotate="",this.inline=!1,this.isDisabled=!1,this.medium={height:"40",width:"40"},this.small={height:"20",width:"20"},this.xsmall={height:"12",width:"12"}}get iconSvg(){return this.shadowRoot?.querySelector("svg")}connectedCallback(){super.connectedCallback(),this.classList.add("ids-icon")}firstUpdated(t){super.firstUpdated(t);try{this.title?this.setTitle():this.shadowRoot?.querySelector("svg")?.setAttribute("aria-hidden","true")}catch(t){}this.setupRotation()}updated(t){super.updated(t),this.setupRotation()}setupRotation(){this.iconSvg&&(this.iconSvg.style.transform=`rotate(${this.rotate}deg)`)}setTitle(){const t=h(),o=document.createElement("title");o.setAttribute("id",t),o.innerText=this.title,this.shadowRoot?.querySelector("svg")?.setAttribute("role","img"),this.shadowRoot?.querySelector("svg")?.prepend(o),this.shadowRoot?.querySelector("svg")?.setAttribute("aria-labelledby",t)}getDimensions(){if(this.width&&this.height)return{width:this.width,height:this.height};switch(this.size){case"xs":return this.xsmall;case"s":default:return this.small;case"m":return this.medium}}getIconColors(t){if(this.isDisabled)return{color:"var(--input-icon-disabled_fill)",color2:"var(--input-icon-disabled_fill)"};const o={color:t.color,color2:t.color2};return o.color=this.color?this.color:t.color,o.color2=this.color2?this.color2:t.color2,!isNaN(this.colorpreset)&&this.colorpreset>0&&(o.color=`var(--icon-color-preset${this.colorpreset})`,o.color2=`var(--icon-color2-preset${this.colorpreset})`),o}getIcon(){const t=this.name?.replaceAll("-","");if(t in r){const o=r[t](),i=o.getDefaultIconProps(),{width:e,height:s}=this.getDimensions();i.width=e||i.width,i.height=s||i.height;const{color:h,color2:l}=this.getIconColors(i);return i.title=this.title,i.color=h,i.color2=l,o.render(i)}l(this,this.name+" is not a registered icon.")}render(){return i`${this.getIcon()}`}}n.styles=[c],t([e({type:String})],n.prototype,"name",void 0),t([e({type:String})],n.prototype,"title",void 0),t([e({type:Number})],n.prototype,"colorpreset",void 0),t([e({type:String})],n.prototype,"color",void 0),t([e({type:String})],n.prototype,"color2",void 0),t([e({type:String})],n.prototype,"size",void 0),t([e({type:String})],n.prototype,"width",void 0),t([e({type:String})],n.prototype,"height",void 0),t([e({type:String})],n.prototype,"rotate",void 0),t([e({type:Boolean})],n.prototype,"inline",void 0),t([s()],n.prototype,"isDisabled",void 0);export{n as IDSIcon};
