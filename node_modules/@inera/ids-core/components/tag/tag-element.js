import{__decorate as t}from"tslib";import{css as e,LitElement as s,html as i}from"lit";import{property as l}from"lit/decorators.js";import o from"@inera/ids-design/components/tag/tag-lit";class a extends s{constructor(){super(...arguments),this.clickable=!1,this.closeable=!1,this.srcloselabel="",this.hasClickableSetup=!1}firstUpdated(t){super.firstUpdated(t),this.setupClickable()}update(t){super.update(t),t.has("clickable")&&this.setupClickable()}setupClickable(){this.clickable&&!this.hasClickableSetup?(this.setAttribute("tabindex","0"),this.addEventListener("click",this.clicked),this.hasClickableSetup=!0):!this.clickable&&this.hasClickableSetup&&(this.removeAttribute("tabindex"),this.removeEventListener("click",this.clicked),this.hasClickableSetup=!1)}clicked(){let t=new CustomEvent("clicked",{detail:{isClicked:!0}});this.dispatchEvent(t)}close(t){t.stopPropagation();let e=new CustomEvent("closed",{detail:{isClosed:!0}});this.dispatchEvent(e)}renderCloseButton(){return this.closeable?i`<button @click="${this.close}" aria-label="${this.srcloselabel}" class="ids-tag__close-btn"><ids-icon-close-bold color="var(--IDS-TAG__ICON__COLOR)" width="14" height="14"></ids-icon-close-bold></button>`:i``}render(){return i`<span class="ids-tag ${this.clickable?"ids-tag--interactive":""}"><slot></slot>${this.renderCloseButton()}</span>`}}a.styles=[o,e`:host{display:inline-block;border-radius:var(--IDS-TAG__BORDER-RADIUS)}`],t([l({type:Boolean})],a.prototype,"clickable",void 0),t([l({type:Boolean})],a.prototype,"closeable",void 0),t([l({type:String})],a.prototype,"srcloselabel",void 0);export{a as IDSTag};
