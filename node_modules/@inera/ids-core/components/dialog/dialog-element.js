import{__decorate as t}from"tslib";import{LitElement as s,html as i}from"lit";import{property as e,state as o}from"lit/decorators.js";import{FocusTrapController as l}from"../../controllers/FocusTrapController.js";import r from"@inera/ids-design/components/dialog/dialog-lit";import{generateId as h}from"../../utilities/utils.js";class d extends s{constructor(){super(...arguments),this.focusTrapController=null,this.show="false",this.srclosetext="StÃ¤ng",this.dismissible=!1,this.autofocus=!1,this.nooverlay=!1,this.nofocustrap=!1,this.keepscrollbar=!1,this.persistent=!1,this.width="",this.height="",this.hasScrollbar=!1,this.headingId=h(),this.contentId=h(),this.detectEsc=t=>{27!==t.keyCode||"true"!==this.show||this.persistent||this.setShowFalse()},this.visibilityChanged=()=>{let t=new CustomEvent("changedVisibility",{detail:{isVisible:this.show}});this.dispatchEvent(t)}}firstUpdated(t){super.firstUpdated(t),this.setupTrigger(),this.addEventListener("keydown",this.detectEsc),this.setupCustomWidth(),this.setupCustomHeight()}setupTrigger(){const t=this.querySelector("[trigger]")||this.querySelector('[slot="trigger"]');t?.setAttribute("slot","trigger"),t?.classList.add("ids-dialog-trigger")}attributeChangedCallback(t,s,i){"show"===t&&("true"===i?this.showDialog():"true"===s&&"false"===i&&this.hideDialog()),super.attributeChangedCallback(t,s,i)}setupCustomWidth(){this.width&&(this.shadowRoot.querySelector(".ids-dialog").style.width=this.width,this.shadowRoot.querySelector(".ids-dialog").style.maxWidth=this.width)}setupCustomHeight(){this.height&&(this.shadowRoot.querySelector(".ids-dialog").style.height=this.height,this.shadowRoot.querySelector(".ids-dialog").style.maxHeight=this.height)}disconnectedCallback(){super.disconnectedCallback(),this.removeEventListener("keydown",this.detectEsc),this.hideDialog()}hideDialog(){this.nofocustrap||(this.focusTrapController?.hostDisconnected(),this.focusTrapController=null),this.showBodyScrollbar();let t=new CustomEvent("closed");this.dispatchEvent(t),this.visibilityChanged()}applyFocusTrap(){this.nofocustrap||(this.focusTrapController=new l(this))}async showDialog(){this.hideBodyScrollbar(),this.applyFocusTrap(),await this.updateComplete,this.visibilityChanged(),this.checkForScrollbar();let t=new CustomEvent("open");this.dispatchEvent(t)}hideBodyScrollbar(){this.keepscrollbar||(document.body.style.overflow="hidden")}showBodyScrollbar(){this.keepscrollbar||(document.body.style.overflow="")}checkForScrollbar(){const t=this.shadowRoot.querySelector(".ids-dialog__body");this.hasScrollbar=t.clientHeight<t.scrollHeight}renderCloseButton(){return this.dismissible?i`<div class="ids-dialog__header"><button aria-label="${this.srclosetext}" class="ids-dialog__header__button" @click="${this.setShowFalse}"><ids-icon-close height="20" width="20"></ids-icon-close></button></div>`:null}overlayClick(){this.persistent||this.setShowFalse()}setShowTrue(){"false"===this.show&&(this.show="true")}setShowFalse(){"true"===this.show&&(this.show="false",this.querySelector("[trigger]")?.focus())}render(){return i`<span @click="${this.setShowTrue}"><slot name="trigger"></slot></span><div @click="${this.overlayClick}" class="ids-dialog-overlay ${"false"===this.show?"ids-dialog-overlay--hidden":""} ${this.nooverlay?"ids-dialog-overlay--hidden":""}"></div><div class="ids-dialog ${"false"===this.show?"ids-dialog--hidden":""}" role="dialog" aria-labelledby="${this.headingId}" aria-describedby="${this.contentId}">${this.renderCloseButton()}<div class="ids-dialog__body ${this.hasScrollbar?"ids-dialog__body--has-scrollbar ":""}"><div id="${this.headingId}" class="ids-dialog__body__headline"><slot name="headline"></slot></div><div id="${this.contentId}" class="ids-dialog__body__content"><slot></slot></div><div class="ids-dialog__footer"><slot name="action"></slot></div></div></div>`}}d.styles=[r],t([e({type:String,reflect:!0})],d.prototype,"show",void 0),t([e({type:String,reflect:!0})],d.prototype,"srclosetext",void 0),t([e({type:Boolean})],d.prototype,"dismissible",void 0),t([e({type:Boolean,reflect:!0})],d.prototype,"autofocus",void 0),t([e({type:Boolean})],d.prototype,"nooverlay",void 0),t([e({type:Boolean})],d.prototype,"nofocustrap",void 0),t([e({type:Boolean})],d.prototype,"keepscrollbar",void 0),t([e({type:Boolean})],d.prototype,"persistent",void 0),t([e({type:String})],d.prototype,"width",void 0),t([e({type:String})],d.prototype,"height",void 0),t([o()],d.prototype,"hasScrollbar",void 0);export{d as IDSDialog};
