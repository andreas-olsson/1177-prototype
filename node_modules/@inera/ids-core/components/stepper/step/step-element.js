import{__decorate as t}from"tslib";import{LitElement as e,html as s}from"lit";import{property as i}from"lit/decorators.js";import o from"../../styles/global-styles.js";import r from"./step-styles.js";class d extends e{constructor(){super(...arguments),this.state="",this.headline="",this.label="",this.step="",this.srindicatortext="",this.expanded=!1,this.disabled=!1,this.onKeyPress=t=>{32==t.keyCode&&(t.preventDefault(),this.toggleExpansion())}}toggleExpansion(){this.disabled||(this.expanded=!this.expanded)}getStepIndicator(){switch(this.state){case"":case"selected":return this.step;case"valid":return s`<ids-icon-check color="var(--stepper-step-indicator-valid-icon_color)" width="20" height="16"></ids-icon-check>`;case"invalid":return s`<ids-icon-attention color2="none" color="var(--stepper-step-indicator-invalid-icon_color)"></ids-icon-attention>`}}renderExpansionButton(){return this.disabled?s``:s`<ids-col cols="auto" class="button-col chevron"><ids-icon-chevron color="var(--stepper-step-chevron_color)" height="20" width="11" rotate="${this.expanded?"-90":"90"}"></ids-icon-chevron></ids-col>`}renderLabel(){return this.label?s`<ids-col class="label">${this.label}</ids-col>`:s``}render(){return s`<div class="step"><div id="step-btn" role="button" tabindex="${this.disabled?"-1":"0"}" class="focusable ${this.disabled?"disabled":""}" aria-expanded="${this.expanded}" @click="${this.toggleExpansion}" @keypress="${this.onKeyPress}"><ids-row align="center"><ids-col cols="auto"><span aria-label="${this.srindicatortext}" role="img" class="step-indicator ${this.state}">${this.getStepIndicator()}</span></ids-col><ids-col><ids-row class="step-text-row" align="start">${this.renderLabel()}<ids-col><slot name="headline"></slot><h2 class="headline">${this.headline}</h2></ids-col></ids-row></ids-col>${this.renderExpansionButton()}</ids-row></div><div class="step-content ${this.expanded?"":"hide"}"><slot></slot></div></div>`}}d.styles=[o,r],t([i({type:String,reflect:!0})],d.prototype,"state",void 0),t([i({type:String,reflect:!0})],d.prototype,"headline",void 0),t([i({type:String,reflect:!0})],d.prototype,"label",void 0),t([i({type:String})],d.prototype,"step",void 0),t([i({type:String})],d.prototype,"srindicatortext",void 0),t([i({type:Boolean,reflect:!0})],d.prototype,"expanded",void 0),t([i({type:Boolean,reflect:!0})],d.prototype,"disabled",void 0);export{d as IDSStep};
