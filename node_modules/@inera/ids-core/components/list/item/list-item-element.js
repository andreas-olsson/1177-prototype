import{__decorate as t}from"tslib";import{LitElement as e,html as i}from"lit";import{property as s,state as o}from"lit/decorators.js";import r from"./list-item-styles.js";import{getMonthAsText as l,getDayAsText as n}from"../../../utilities/utils.js";class a extends e{constructor(){super(...arguments),this.headline="",this.interactive=!1,this.date=null,this.year="",this.month=-1,this.monthlabel="",this.day=-1,this.showdatelabel=!1,this.presentedDate=null}get dateLabel(){return this.querySelector("ids-date-label")}get info(){return this.querySelector("ids-list-item-info")}hasDate(){return this.date||this.year||this.month||this.day}getYear(){return this.presentedDate?.getFullYear()||this.year}getMonth(){return this.presentedDate?this.presentedDate.getMonth()+1:this.month}getMonthText(){return this.monthlabel?this.monthlabel:l(this.getMonth()-1,3)}getDay(){let t=this.presentedDate?.getDate()||this.day;return n(t)}firstUpdated(t){if(super.firstUpdated(t),this.dateLabel?.setAttribute("slot","date-label"),this.date&&(this.presentedDate=new Date(this.date)),this.info&&this.info.setAttribute("slot","list-info"),this.interactive){const t=this.querySelector('[slot="interactive"]')?.innerText;this.headline=t||this.headline}}renderHeadline(){return this.interactive?i`<div class="ids-list-interactive-header"><ids-icon-chevron height="12px" width="12px" inline></ids-icon-chevron><h2>${this.headline} ${this.renderLink()}</h2></div>`:this.headline?.length>0?i`<div class="ids-list-header"><h2>${this.headline}</h2></div>`:i``}renderListItem(){return this.hasDate()?i`<ids-row>${this.showdatelabel?i`<ids-col class="date-label-col" cols="auto"><ids-date-label year="${this.getYear()}" month="${this.getMonth()}" day="${this.getDay()}" monthLabel="${this.monthlabel}"></ids-date-label></ids-col>`:""}<ids-col class="list-item-content"><div class="date-text">${`${this.getDay()} ${this.getMonthText()} ${this.getYear()}`}</div>${this.renderHeadline()}<div class="list-item-content"><slot></slot></div><slot name="list-info"></slot></ids-col></ids-row>`:i`<ids-row><ids-col>${this.renderHeadline()}<div class="list-item-content"><slot></slot></div><slot name="list-info"></slot></ids-col></ids-row>`}onHover(){this.colorizeIcon(!0)}onBlur(){this.colorizeIcon(!1)}colorizeIcon(t){const e=t?"var(--link-colorpreset-1-hover_color)":"var(--link-colorpreset-1_color)";if(this.interactive){const t=this.shadowRoot.querySelector("ids-icon-chevron");t.setAttribute("color",e),t.setAttribute("color2",e)}}renderLink(){return i`<slot name="interactive"></slot>`}render(){return i`<div @mouseenter="${this.onHover}" @mouseleave="${this.onBlur}" class="ids-list-item">${this.renderListItem()}</div>`}}a.styles=[r],t([s({type:String,reflect:!0})],a.prototype,"headline",void 0),t([s({type:Boolean,reflect:!0})],a.prototype,"interactive",void 0),t([s({type:Date})],a.prototype,"date",void 0),t([s({type:String})],a.prototype,"year",void 0),t([s({type:Number})],a.prototype,"month",void 0),t([s({type:String})],a.prototype,"monthlabel",void 0),t([s({type:Number})],a.prototype,"day",void 0),t([s({type:Boolean})],a.prototype,"showdatelabel",void 0),t([o()],a.prototype,"presentedDate",void 0);export{a as IDSListItem};
