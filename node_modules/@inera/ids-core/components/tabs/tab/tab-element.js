import{__decorate as t}from"tslib";import{LitElement as i,html as e}from"lit";import{property as s}from"lit/decorators.js";import o from"./tab-styles.js";class n extends i{constructor(){super(...arguments),this.notifications=0,this.notices=0,this.label="",this.index="",this.selected=!1,this.select=()=>{this.selected=!0;let t=new CustomEvent("select",{detail:{index:this.index}});this.dispatchEvent(t),this.icon&&this.setIconColors()}}get icon(){return this.querySelector(".ids-icon")||this.querySelector('[slot="icon"]')}firstUpdated(t){super.firstUpdated(t),this.setAttribute("role","tab"),this.addEventListener("click",this.select),this.icon&&(this.setupIcon(),this.emitHasIcon())}setupIcon(){this.classList.add("ids-tab-icon"),this.icon.setAttribute("height","20"),this.icon.setAttribute("width","20"),this.icon.setAttribute("slot","icon"),this.setIconColors()}emitHasIcon(){let t=new CustomEvent("hasIcon",{detail:{hasIcon:!0}});this.dispatchEvent(t)}setIconColors(){this.icon.setAttribute("color",this.selected?"var(--tab-icon-selected_color)":"var(--icon-color)"),this.icon.setAttribute("color2",this.selected?"var(--tab-icon-selected_color2)":"var(--icon-color2)")}renderNotices(){return this.notices>0?e`<ids-notification-badge outlined>${this.notices}</ids-notification-badge>`:e``}renderNotifications(){return this.notifications>0?e`<ids-notification-badge>${this.notifications}</ids-notification-badge>`:e``}render(){return e`<slot name="icon"></slot><div class="tab-label">${this.label} ${this.renderNotices()} ${this.renderNotifications()}</div>`}}n.styles=[o],t([s({type:Number})],n.prototype,"notifications",void 0),t([s({type:Number})],n.prototype,"notices",void 0),t([s({type:String,reflect:!0})],n.prototype,"label",void 0),t([s({type:String,reflect:!0})],n.prototype,"index",void 0),t([s({type:Boolean,reflect:!0})],n.prototype,"selected",void 0);export{n as IDSTab};
