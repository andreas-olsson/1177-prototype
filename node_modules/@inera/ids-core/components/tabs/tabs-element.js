import{__decorate as e}from"tslib";import{LitElement as t,html as s}from"lit";import{property as i,state as n}from"lit/decorators.js";import a from"./tabs-styles.js";import{generateId as r}from"../../utilities/utils.js";class o extends t{constructor(){super(...arguments),this.unresponsive=!1,this.responsive="m",this.selectlabel="",this.activeTab=0,this.hasIcons=!1,this.setHasIcon=()=>{this.hasIcons=!0},this.handleKeydown=e=>{const t=32===e.keyCode,s=13==e.keyCode,i=37==e.keyCode,n=39==e.keyCode;(t||s)&&(e.preventDefault(),e.target.click());const a=parseInt(document.activeElement?.getAttribute("index")||"0");i&&a>0?(e.preventDefault(),this.querySelector(`ids-tab[index="${a-1}"]`).focus()):n&&a<this.tabs.length-1&&(e.preventDefault(),this.querySelector(`ids-tab[index="${a+1}"]`).focus())},this.tabChangedFromSelect=()=>{const e=this.select.value;this.activeTab=Number(e),this.emitTabChange(e),this.updateSelection()},this.setSelected=e=>{this.emitTabChange(e.detail.index),this.activeTab=e.detail.index,this.select.value=e.detail.index,this.updateSelection()}}get tabs(){return this.querySelectorAll("ids-tab")}get tabPanels(){return this.querySelectorAll("ids-tab-panel")}get select(){return this.shadowRoot.querySelector("#mobile-tab-select")}get responsiveOnM(){return"m"===this.responsive&&!this.unresponsive}get responsiveOnS(){return"s"===this.responsive&&!this.unresponsive}firstUpdated(e){super.firstUpdated(e),this.setAttribute("role","tablist"),this.setupTabs(),this.setupSelect(),this.setupTabPanels(),this.updateSelection()}setupSelect(){this.querySelectorAll("ids-tab").forEach(((e,t)=>{const s=document.createElement("option");s.innerHTML=e.label,s.value=e.index,s.selected=e.selected,e.selected&&(this.activeTab=t),this.select.appendChild(s)}))}disconnectedCallback(){this.tabs.forEach((e=>{e.removeEventListener("select",this.setSelected),e.removeEventListener("keydown",this.handleKeydown),e.removeEventListener("hasIcon",this.setHasIcon)})),super.disconnectedCallback()}setupTabs(){this.tabs.forEach(((e,t)=>{e.getAttribute("id")||e.setAttribute("id",r()),e.setAttribute("index",""+t),e.setAttribute("slot","tab"),e.addEventListener("select",this.setSelected),e.addEventListener("keydown",this.handleKeydown),e.addEventListener("hasIcon",this.setHasIcon),e.setAttribute("tabindex","0")}))}emitTabChange(e){let t=new CustomEvent("tabChange",{detail:{index:e}});this.dispatchEvent(t)}setupTabPanels(){this.tabPanels.forEach(((e,t)=>{e.setAttribute("val",""+t);const s=this.tabs[t],i=s.getAttribute("id");if(s&&i&&e.setAttribute("aria-labelledby",i),!e.getAttribute("id")){const s=r();e.setAttribute("id",s),this.tabs[t]?.setAttribute("aria-controls",s)}}))}updateSelection(){this.tabs.forEach(((e,t)=>{this.activeTab!=t?(e.removeAttribute("selected"),e.setAttribute("tabindex","-1"),e.setAttribute("aria-selected","false")):(e.setAttribute("selected","true"),e.setAttribute("tabindex","0"),e.setAttribute("aria-selected","true"))})),this.tabPanels.forEach(((e,t)=>{this.activeTab!=t?(e.setAttribute("aria-hidden","true"),e.setAttribute("hidden","true")):(e.removeAttribute("aria-hidden"),e.removeAttribute("hidden"))}))}render(){return s`<ids-select id="mobile-select" class="${this.unresponsive?"unresponsive":""} ${this.responsiveOnM?"show-on-m":""} ${this.responsiveOnS?"show-on-s":""}"><label>${this.selectlabel}</label> <select @change="${this.tabChangedFromSelect}" id="mobile-tab-select"></select></ids-select><div class="tabs ${this.hasIcons?"tabs-including-icons":""} ${this.unresponsive?"unresponsive":""} ${this.responsiveOnM?"hide-on-m":""} ${this.responsiveOnS?"hide-on-s":""}"><slot name="tab"></slot></div><div class="panels"><slot name="tab-panel"></slot></div>`}}o.styles=[a],e([i({type:Boolean})],o.prototype,"unresponsive",void 0),e([i({type:String})],o.prototype,"responsive",void 0),e([i({type:String})],o.prototype,"selectlabel",void 0),e([n()],o.prototype,"activeTab",void 0),e([n()],o.prototype,"hasIcons",void 0);export{o as IDSTabs};
