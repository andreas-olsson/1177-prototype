import { LitElement } from 'lit';
export declare class IDSLink extends LitElement {
    static styles: any[];
    padding: string;
    color: string;
    hovercolor: string;
    colorpreset: 0 | 1 | 2;
    light: boolean;
    outline: string;
    active: boolean;
    activeicon: boolean;
    block: boolean;
    size: string;
    bold: boolean;
    underlined: boolean;
    isHovered: boolean;
    isFocused: boolean;
    get notificationBadge(): import("../notification/badge/notification-badge-element").IDSNotificationBadge;
    get link(): HTMLAnchorElement | null;
    get linkText(): string;
    get prependIcon(): Element;
    get appendIcon(): Element;
    activeIconBackgroundColor: string;
    protected firstUpdated(_changedProperties: Map<string | number | symbol, unknown>): void;
    setupColors(): void;
    protected updated(_changedProperties: Map<string | number | symbol, unknown>): void;
    disconnectedCallback(): void;
    setActiveTriggers(): void;
    setupIcons(): void;
    setIconSlot(icon: Element, slot: string): void;
    setIconWidthAndHeight(icon: Element, width: string, height: string): void;
    setIconColor(icon: Element): void;
    renderNotificationBadge(): import("lit-html").TemplateResult<1>;
    setHoverTrue(): void;
    colorizeIcon(): void;
    setHoverFalse(): void;
    setFocusTrue(): void;
    setFocusFalse(): void;
    renderPrependIcon(): import("lit-html").TemplateResult<1>;
    renderAppendIcon(): import("lit-html").TemplateResult<1>;
    render(): import("lit-html").TemplateResult<1>;
}
