import{__decorate as e}from"tslib";import{LitElement as i,html as t}from"lit";import{property as s,state as d}from"lit/decorators.js";import n from"../styles/global-styles.js";import{generateId as o}from"../../utilities/utils.js";import a from"@inera/ids-design/components/expandable/expandable-lit";class l extends i{constructor(){super(...arguments),this.headline="",this.level=1,this.variation=1,this.borderless=!1,this.expanded=!1,this.rotation=90,this.isInsideCard=!1,this.hasChildren=!1,this.contentId=o(),this.onKeyPress=e=>{32!=e.keyCode&&13!=e.keyCode||(e.preventDefault(),this.toggleExpansion())}}firstUpdated(e){super.firstUpdated(e),this.handleChildren(),this.isInsideCard=Boolean(this.closest("ids-card")),this.setRotation()}handleChildren(){this.querySelectorAll("ids-expandable").length>0&&(this.hasChildren=!0,this.querySelectorAll("ids-expandable").forEach((e=>{e.setAttribute("level","2")})))}toggleExpansion(){if(this.expanded=!this.expanded,this.setRotation(),this.expanded){let e=new CustomEvent("expanded");this.dispatchEvent(e)}else{let e=new CustomEvent("closed");this.dispatchEvent(e)}}setRotation(){this.rotation=this.expanded?-90:90}renderIcon(){return 1===this.level?t`<ids-icon-chevron-bold width="16" height="16" rotate="${this.rotation}"></ids-icon-chevron-bold>`:2===this.level?t`<div class="ids-expandable__icon">${this.expanded?t`<ids-icon-minus color="white" width="16" height="16"></ids-icon-minus>`:t`<ids-icon-plus color="white" width="16" height="16"></ids-icon-plus>`}</div>`:t``}render(){return t`<div class="ids-expandable ${this.expanded?"ids-expandable--expanded":""} ${this.isInsideCard?"ids-expandable--inside-card":""} ${this.hasChildren?"ids-expandable--has-children":""} ${2===this.level?"ids-expandable--child":""} ${2===this.variation?"ids-expandable--variation-2":""}"><div class="ids-expandable__button" role="button" tabindex="0" @click="${this.toggleExpansion}" @keydown="${this.onKeyPress}" aria-expanded="${this.expanded}" aria-controls="${this.contentId}"><div class="ids-expandable__inner ${this.borderless?"borderless":""}">${this.headline?t`<h2 class="ids-expandable__headline">${this.headline}</h2>`:t`<div style="flex-grow:1"><slot name="headline"></slot></div>`} ${this.renderIcon()}</div></div><div aria-hidden="${!this.expanded}" id="${this.contentId}" class="ids-expandable__content"><slot></slot></div></div>`}}l.styles=[n,a],e([s({type:String})],l.prototype,"headline",void 0),e([s({type:Number})],l.prototype,"level",void 0),e([s({type:Number})],l.prototype,"variation",void 0),e([s({type:Boolean})],l.prototype,"borderless",void 0),e([s({type:Boolean,reflect:!0})],l.prototype,"expanded",void 0),e([d()],l.prototype,"rotation",void 0),e([d()],l.prototype,"isInsideCard",void 0);export{l as IDSExpandable};
