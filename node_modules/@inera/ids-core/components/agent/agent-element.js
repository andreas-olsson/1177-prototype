import{__decorate as t}from"tslib";import{LitElement as e,html as i}from"lit";import{property as o}from"lit/decorators.js";import d from"./agent-styles.js";class s extends e{constructor(){super(...arguments),this.headline="",this.showtext="Visa meddelande",this.hidetext="DÃ¶lj meddelande",this.expanded=!0}firstUpdated(t){super.firstUpdated(t),this.shadowRoot.querySelector("ids-alert-global").removeAttribute("role"),this.setAttribute("role","alert")}toggleExpanded(t){this.expanded=t.detail.isExpanded;let e=new CustomEvent("didToggleExpansion",{detail:{isExpanded:this.expanded}});this.dispatchEvent(e)}render(){return i`<ids-alert-global agent="true" headline="${this.headline}" hidemobileicon="true" @didToggleExpansion="${this.toggleExpanded}" showtext="${this.showtext}" hidetext="${this.hidetext}" ?expanded="${this.expanded}"><ids-icon-agent slot="icon" width="40" height="40"></ids-icon-agent><slot></slot><slot slot="actions" name="actions"></slot></ids-alert-global>`}}s.styles=[d],t([o({type:String})],s.prototype,"headline",void 0),t([o({type:String})],s.prototype,"showtext",void 0),t([o({type:String})],s.prototype,"hidetext",void 0),t([o({type:Boolean,reflect:!0})],s.prototype,"expanded",void 0);export{s as IDSAgent};
