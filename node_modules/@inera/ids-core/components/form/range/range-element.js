import{__decorate as t}from"tslib";import{html as i}from"lit";import s from"./range-styles.js";import{property as e,state as n}from"lit/decorators.js";import{FormBaseElement as a}from"../base/form-base-element.js";import{logError as h,logWarning as p}from"../../../utilities/utils.js";class r extends a{constructor(){super(...arguments),this.showticks=!1,this.min=0,this.max=0,this.step=0,this.handleInputChange=()=>{if(this.input){const t=+this.input.value;this.input.style.backgroundSize=100*(t-this.min)/(this.max-this.min)+"% 100%",this.input.setAttribute("aria-valuenow",this.input.value)}}}firstUpdated(t){super.firstUpdated(t),this.setupValues(),this.validateProps(),this.handleInputChange()}disconnectedCallback(){this.input&&this.input.addEventListener("input",this.handleInputChange),super.disconnectedCallback()}setupValues(){this.input&&(this.min=+this.input.min,this.max=+this.input.max,this.step=+this.input.step,this.input.setAttribute("aria-valuemin",""+this.min),this.input.setAttribute("aria-valuemax",""+this.max),this.input.addEventListener("input",this.handleInputChange))}validateProps(){this.min>this.max&&h(this,"Max has to be larger than Min"),this.max%this.step>0&&p(this,"Step cant reach max")}getRangeStep(t){return i`<div class="ids-range-tick">${t}</div>`}getRangeSteps(){if(this.step>0){const t=[];for(let i=this.min;i<=this.max;i+=this.step)t.push(this.getRangeStep(Math.floor(i)));return t}return""}render(){return i`<div class="ids-range"><slot></slot>${this.showticks?i`<div class="ids-range-ticks">${this.getRangeSteps()}</div>`:""}</div>`}}r.styles=[...a.styles,s],t([e({type:Boolean})],r.prototype,"showticks",void 0),t([n()],r.prototype,"min",void 0),t([n()],r.prototype,"max",void 0),t([n()],r.prototype,"step",void 0);export{r as IDSRange};
