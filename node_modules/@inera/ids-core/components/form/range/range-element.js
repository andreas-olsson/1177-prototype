import{__decorate as t}from"tslib";import{html as i}from"lit";import{property as e}from"lit/decorators.js";import{FormBaseElement as s}from"../base/form-base-element.js";import{logError as n,logWarning as a}from"../../../utilities/utils.js";import r from"@inera/ids-design/components/form/range/range-lit";class h extends s{constructor(){super(...arguments),this.showticks=!1,this.interval=0,this.handleInputChange=()=>{if(this.input){const t=+this.input.value;this.input.style.backgroundSize=100*(t-this.min)/(this.max-this.min)+"% 100%",this.input.setAttribute("aria-valuenow",this.input.value)}}}get min(){return Number(this.input.min)}get max(){return Number(this.input.max)}get step(){return Number(this.input.step)}firstUpdated(t){super.firstUpdated(t),this.inputField?.classList.add("ids-range"),this.setupValues(),this.validateProps(),this.handleInputChange()}disconnectedCallback(){this.input&&this.input.addEventListener("input",this.handleInputChange),super.disconnectedCallback()}setupValues(){this.input&&(this.input.setAttribute("aria-valuemin",""+this.min),this.input.setAttribute("aria-valuemax",""+this.max),this.input.addEventListener("input",this.handleInputChange))}validateProps(){this.min>this.max&&n(this,"Max has to be larger than Min"),this.max%this.step>0&&a(this,"Step cant reach max")}getRangeStep(t){return i`<div class="ids-range-tick">${t}</div>`}getRangeSteps(){if(this.step>0){const t=[];if(this.interval>0)for(let i=this.min;i<=this.max;i+=this.interval)t.push(this.getRangeStep(Math.floor(i)));else for(let i=this.min;i<=this.max;i+=this.step)t.push(this.getRangeStep(Math.floor(i)));return t}return""}render(){return i`<div class="ids-range-wrapper">${this.renderLabel()}<slot></slot>${this.showticks?i`<div class="ids-range-ticks">${this.getRangeSteps()}</div>`:""}</div>`}}h.styles=[r],t([e({type:Boolean})],h.prototype,"showticks",void 0),t([e({type:Number})],h.prototype,"interval",void 0);export{h as IDSRange};
