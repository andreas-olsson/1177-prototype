import{__decorate as s}from"tslib";import{FormBaseElement as i}from"../base/form-base-element.js";import{html as e}from"lit";import t from"./toggle-styles.js";import{state as o}from"lit/decorators.js";class c extends i{constructor(){super(...arguments),this.isChecked=!1,this.isFocused=!1,this.handleFocus=()=>{this.isFocused=!0},this.handleBlur=()=>{this.isFocused=!1},this.updateIsChecked=()=>{this.isChecked=this.input?.checked||!1},this.clickOnCheckbox=()=>{this.input?.click(),this.input?.focus(),this.updateIsChecked()}}firstUpdated(s){super.firstUpdated(s),this.updateIsChecked(),this.input?.addEventListener("focus",this.handleFocus),this.input?.addEventListener("blur",this.handleBlur)}disconnectedCallback(){this.input?.removeEventListener("focus",this.handleFocus),this.input?.removeEventListener("blur",this.handleBlur),super.disconnectedCallback()}renderIcon(){return this.isChecked?e`<ids-icon-check color="${this.isDisabled?"var(--toggle-icon-disabled_color)":"var(--toggle-icon-active_color)"}" width="12px" height="100%"></ids-icon-check>`:e`<ids-icon-close-bold color="${this.isDisabled?"var(--toggle-icon-disabled_color)":"var(--toggle-icon_color)"}" width="10px" height="100%"></ids-icon-close-bold>`}render(){return e`<ids-row align="center"><ids-col cols="auto" class="label-col"><slot name="label"></slot></ids-col><ids-col class="toggle-col"><span @click="${this.clickOnCheckbox}" class="toggle ${this.isDisabled?"disabled":""} ${this.isFocused?"is-focused":""} ${this.isChecked?"is-checked":""}"><slot name="input"></slot><span class="slider ${this.isDisabled?"disabled":""}"><div class="knob ${this.isDisabled?"disabled":""}">${this.renderIcon()}</div></span></span></ids-col></ids-row>`}}c.styles=[...i.styles,t],s([o()],c.prototype,"isChecked",void 0),s([o()],c.prototype,"isFocused",void 0);export{c as IDSToggle};
