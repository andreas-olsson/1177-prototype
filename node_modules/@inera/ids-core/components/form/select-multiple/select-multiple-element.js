import{__decorate as e}from"tslib";import{html as t}from"lit";import{FormBaseElement as s}from"../base/form-base-element.js";import{property as i,state as l}from"lit/decorators.js";import{GroupErrorController as r}from"../controller/GroupErrorController.js";import d from"@inera/ids-design/components/form/select-multiple/select-multiple-lit";class o extends s{constructor(){super(...arguments),this.groupErrorController=new r(this),this.placeholder="",this.disabled=!1,this.maxheight="",this.labeltext="",this.selectedlabel="vald",this.multiselectedlabel="valda",this.selectedValues=[],this.isDropdownVisible=!1,this.handleValueChange=e=>{e.currentTarget.querySelector("input").setAttribute("aria-selected",e.target.checked),e.currentTarget.querySelector("input").setAttribute("aria-checked",e.target.checked),this.setSelectedValues()},this.setSelectedValues=()=>{this.selectedValues=[],this.checkboxes.forEach((e=>{if(e.querySelector("input")?.checked){const t=e.querySelector("label")?.innerText;t&&this.selectedValues.push(t)}}));const e={composed:!0,bubbles:!0,detail:this.selectedValues};this.dispatchEvent(new CustomEvent("change",e))},this.handleTab=e=>{"Tab"!==e.key||e.shiftKey||this.hideDropdown()},this.handleEscape=e=>{this.isDropdownVisible&&"Escape"===e.key&&this.hideDropdown()},this.toggleVisibility=()=>{this.isDropdownVisible?this.hideDropdown():this.showDropdown()},this.hideDropdown=()=>{this.isDropdownVisible=!1,this.dropdownArea?.classList.add("ids-select-multiple__dropdown--hide")},this.showDropdown=()=>{this.isDropdownVisible=!0,this.dropdownArea?.classList.remove("ids-select-multiple__dropdown--hide")},this.detectClickOutside=e=>{this.contains(e.target)||this.hideDropdown()}}get checkboxes(){return this.querySelectorAll("ids-checkbox")}get dropdownArea(){return this.shadowRoot?.querySelector(".ids-select-multiple__dropdown")}get checkboxInputs(){return this.querySelectorAll("input")}firstUpdated(e){super.firstUpdated(e),this.setSelectedValues(),this.setupEventListeners()}disconnectedCallback(){this.removeEventListeners(),super.disconnectedCallback()}setupEventListeners(){document.addEventListener("click",this.detectClickOutside),this.checkboxes.forEach((e=>{e.addEventListener("keydown",this.handleEscape),e.addEventListener("change",this.handleValueChange)})),this.checkboxes[this.checkboxes.length-1].addEventListener("keydown",this.handleTab)}removeEventListeners(){document.removeEventListener("click",this.detectClickOutside),this.checkboxes.forEach((e=>{e.removeEventListener("keydown",this.handleEscape),e.removeEventListener("change",this.handleValueChange)}))}renderSelectMultipleLabel(){return this.labeltext&&this.labeltext.length>0?t`<div @click="${this.hideDropdown}" id="ids-label-wrapper"><label id="ids-select-label">${this.labeltext}</label><slot name="tooltip"></slot></div>`:""}getValue(){if(Array.from(this.querySelectorAll("input")).filter((e=>!e.checked&&e.required)).length>0)return this.placeholder;const e=this.selectedValues.length>1?this.multiselectedlabel:this.selectedlabel;return this.selectedValues.length>0?`${this.selectedValues.length} ${e}`:this.placeholder}render(){return t`${this.renderSelectMultipleLabel()}<div class="ids-select-wrapper"><input @click="${this.toggleVisibility}" ?disabled="${this.disabled}" aria-expanded="${this.isDropdownVisible}" aria-labelledby="ids-select-label" class="ids-select ${this.invalid?"ids-input--invalid":""}" type="button" .value="${this.getValue()}"></div><div class="ids-select-multiple__dropdown__wrapper"><div class="ids-select-multiple__dropdown ids-select-multiple__dropdown--hide"><div class="ids-select-multiple__dropdown__inner" style="max-height:${this.maxheight}" class="ids-scrollbar"><slot></slot></div></div></div><slot name="error-msg"></slot>`}}o.styles=[d],e([i({type:String})],o.prototype,"placeholder",void 0),e([i({type:Boolean})],o.prototype,"disabled",void 0),e([i({type:String})],o.prototype,"maxheight",void 0),e([i({type:String})],o.prototype,"labeltext",void 0),e([i({type:String,reflect:!0})],o.prototype,"selectedlabel",void 0),e([i({type:String,reflect:!0})],o.prototype,"multiselectedlabel",void 0),e([l()],o.prototype,"selectedValues",void 0),e([l()],o.prototype,"isDropdownVisible",void 0);export{o as IDSSelectMultiple};
