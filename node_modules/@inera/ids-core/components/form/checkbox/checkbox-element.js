import{__decorate as e}from"tslib";import{html as t}from"lit";import{FormBaseElement as i}from"../base/form-base-element.js";import s from"./checkbox-styles.js";import{property as c,state as o}from"lit/decorators.js";class h extends i{constructor(){super(...arguments),this.compact=!1,this.valid="true",this.isChecked=!1,this.isFocused=!1,this.updateIsChecked=()=>{this.isChecked=this.input?.checked},this.clickOnCheckbox=()=>{this.input?.click(),this.updateIsChecked()},this.focusCheckbox=()=>{this.isFocused=!0},this.blurCheckbox=()=>{this.isFocused=!1},this.handleKeyDown=e=>{this.dispatchEvent(new Event("keydown",e))}}connectedCallback(){super.connectedCallback()}disconnectedCallback(){this.input?.removeEventListener("blur",this.focusCheckbox),this.input?.removeEventListener("focus",this.focusCheckbox),this.input?.removeEventListener("keydown",this.handleKeyDown),this.input?.removeEventListener("change",this.updateIsChecked),super.disconnectedCallback()}firstUpdated(e){super.firstUpdated(e),this.isChecked=this.input?.checked||!1,this.input?.addEventListener("blur",this.blurCheckbox),this.input?.addEventListener("focus",this.focusCheckbox),this.input?.addEventListener("keydown",this.handleKeyDown),this.input?.addEventListener("change",this.updateIsChecked),null!==this.input?.getAttribute("disabled")&&this.shadowRoot.querySelector(".ids-checkbox__input")?.classList.add("ids-checkbox__input--disabled")}renderCheckbox(){return this.isChecked&&"false"===this.valid?t`<ids-icon-check color="var(--checkbox-invalid-icon_color)" height="11" width="16"></ids-icon-check>`:this.isChecked?t`<ids-icon-check height="11" width="16"></ids-icon-check>`:t``}render(){return t`<div class="ids-checkbox"><div @click="${this.clickOnCheckbox}" class="ids-checkbox__input${this.isFocused?" ids-checbbox__input-focused":""}">${this.renderCheckbox()}</div><slot></slot></div><slot name="error-msg"></slot>`}}h.styles=[...i.styles,s],e([c({type:Boolean})],h.prototype,"compact",void 0),e([c({type:String,reflect:!0})],h.prototype,"valid",void 0),e([o()],h.prototype,"isChecked",void 0),e([o()],h.prototype,"isFocused",void 0);export{h as IDSCheckbox};
