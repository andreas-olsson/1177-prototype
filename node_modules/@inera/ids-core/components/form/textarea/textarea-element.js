import{__decorate as e}from"tslib";import{html as s}from"lit";import{property as t,state as i}from"lit/decorators.js";import{FormBaseElement as d}from"../base/form-base-element.js";import a from"./textarea-styles.js";class l extends d{constructor(){super(...arguments),this.nofade=!1,this.focused=!1,this.isFaded=!1,this.isResizing=!1,this.resizedCallback=null,this.handleResize=()=>{this.isResizing||(this.isResizing=!0,this.handleFocus()),clearTimeout(this.resizedCallback),this.resizedCallback=setTimeout((()=>{this.isResizing=!1,this.handleBlur()}),100)},this.handleBlur=()=>{this.focused=!1,this.nofade||this.addFadeClass()},this.handleFocus=()=>{this.focused=!0,this.nofade||(this.isFaded=!1)},this.addFadeClass=()=>{if(this.inputField){const e=this.inputField.clientHeight<this.inputField.scrollHeight;if(this.inputField.value.length>0&&!this.focused&&e){this.isFaded=!0;this.shadowRoot.querySelector(".ids-textarea-wrap").style.width=this.inputField.offsetWidth-20+"px"}}}}firstUpdated(e){super.firstUpdated(e),this.setupListeners(),new ResizeObserver(this.handleResize).observe(this.inputField)}setupListeners(){this.inputField?.addEventListener("blur",this.handleBlur),this.inputField?.addEventListener("focus",this.handleFocus)}disconnectedCallback(){this.nofade||(this.inputField?.removeEventListener("blur",this.handleBlur),this.inputField?.removeEventListener("focus",this.handleFocus)),super.disconnectedCallback()}render(){return s`<slot name="label"></slot><span class="ids-textarea-wrap ${this.isFaded?"ids-textarea-fade":""}"><slot></slot><span class="fade-bottom"></span> </span>${this.renderHint()}<slot name="error-msg"></slot>`}}l.styles=[...d.styles,a],e([t({type:Boolean})],l.prototype,"nofade",void 0),e([i()],l.prototype,"focused",void 0),e([i()],l.prototype,"isFaded",void 0);export{l as IDSTextarea};
