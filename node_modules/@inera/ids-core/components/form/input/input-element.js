import{__decorate as e}from"tslib";import{html as t}from"lit";import s from"./input-styles.js";import{FormBaseElement as r}from"../base/form-base-element.js";import{state as i}from"lit/decorators.js";class o extends r{constructor(){super(...arguments),this.renderCloseIcon=!1,this.hasIcon=!1,this.checkLetters=()=>{this.renderCloseIcon=!this.inputField?.disabled&&Boolean(this.inputField?.value.length)}}firstUpdated(e){if(super.firstUpdated(e),"search"===this.inputField?.getAttribute("type"))this.querySelector("ids-button")?.setAttribute("search","true"),this.inputField.addEventListener("input",this.checkLetters),this.checkLetters();else{const e=this.querySelector(".ids-icon");e&&(this.hasIcon=!0,e.setAttribute("slot","append-icon"))}}renderSearchIcon(){return"search"===this.inputField?.getAttribute("type")?t`<ids-icon-search width="30" height="30" class="search-icon" prepend></ids-icon-search>`:null}renderClearIcon(){return this.renderCloseIcon?t`<span class="close-btn-wrapper"><ids-icon-close-bold class="close-btn" size="s" prepend></ids-icon-close-bold></span>`:null}render(){return t`<slot name="label"></slot><div class="ids-input-wrapper ${this.hasIcon?"icon-padding":""}"><slot></slot><slot name="append-icon"></slot>${this.renderClearIcon()} ${this.renderSearchIcon()}<slot name="button"></slot></div>${this.renderHint()}<slot name="error-msg"></slot>`}}o.styles=[...r.styles,s],e([i()],o.prototype,"renderCloseIcon",void 0),e([i()],o.prototype,"hasIcon",void 0);export{o as IDSInput};
