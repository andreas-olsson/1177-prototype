import{__decorate as t}from"tslib";import{html as e}from"lit";import{FormBaseElement as i}from"../base/form-base-element.js";import{state as s}from"lit/decorators.js";class r extends i{constructor(){super(...arguments),this.hasIcon=!1}firstUpdated(t){if(super.firstUpdated(t),this.inputField?.classList.add("ids-input"),"search"===this.inputField?.getAttribute("type")){const t=this.querySelector("ids-button");t?.setAttribute("search","true"),t?.classList.add("ids-input-button")}else this.setupIcon();this.createSelectWrapper()}createSelectWrapper(){var t=document.createElement("div");if(t.classList.add("ids-input-wrapper"),this.inputField.parentNode.insertBefore(t,this.inputField),t.appendChild(this.inputField),this.button&&t.appendChild(this.button),this.iconAppended&&t.appendChild(this.iconAppended),"search"===this.input.getAttribute("type")){let e=document.createElement("ids-icon-search");e.setAttribute("width","30"),e.setAttribute("height","30"),e.classList.add("ids-input__prepend-icon"),t.appendChild(e)}}setupIcon(){this.iconDirectChild&&(this.hasIcon=!0,this.iconDirectChild.setAttribute("slot","append-icon"),this.iconDirectChild.classList.add("ids-input__icon"))}renderSearchIcon(){return"search"===this.inputField?.getAttribute("type")?e``:null}render(){return e`${this.renderLabel()}<slot></slot><slot name="append-icon"></slot>${this.renderSearchIcon()}<slot name="button"></slot>${this.renderHint()}<slot name="error-msg"></slot>`}}t([s()],r.prototype,"hasIcon",void 0);export{r as IDSInput};
