import{__decorate as t}from"tslib";import{LitElement as e,html as r}from"lit";import{state as s,property as o}from"lit/decorators.js";import{AriaController as i}from"../controller/AriaController.js";import{DisabledController as l}from"../controller/DisabledController.js";import n from"./form-base-styles.js";import{ErrorController as a}from"../controller/ErrorController.js";class u extends e{constructor(){super(...arguments),this.isDisabled=!1,this.autofocus=!1,this.light=!1,this.novalidation=!1,this.ariaController=new i(this),this.disabledController=new l(this),this.errorController=new a(this)}get input(){return this.querySelector("input")}get textarea(){return this.querySelector("textarea")}get select(){return this.querySelector("select")}get errorMessage(){return this.querySelector("ids-error-message")}get icon(){return this.querySelector(".ids-icon")}get button(){return this.querySelector("ids-button")}get inputField(){return this.input||this.textarea||this.select}firstUpdated(t){super.firstUpdated(t),this.autofocus&&this.inputField?.focus(),this.icon&&this.icon.setAttribute("size","s"),this.setupSlots()}setupSlots(){this.assignSlot(this.querySelector("label"),"label"),this.inputField&&this.assignSlot(this.inputField,this.inputField.tagName.toLowerCase()),this.assignSlot(this.errorMessage,"error-msg"),this.assignSlot(this.icon,"icon"),this.assignSlot(this.button,"button")}assignSlot(t,e){t&&this.shadowRoot?.querySelector(`slot[name="${e}"]`)&&t.setAttribute("slot",e)}renderHint(){if(this.querySelector('[slot="hint"]'))return r`<div class="ids-input__hint"><slot name="hint"></slot></div>`}render(){return r`<slot></slot>`}}u.styles=[n],t([s()],u.prototype,"isDisabled",void 0),t([o({type:Boolean})],u.prototype,"autofocus",void 0),t([o({type:Boolean,reflect:!0})],u.prototype,"light",void 0),t([o({type:Boolean})],u.prototype,"novalidation",void 0);export{u as FormBaseElement};
