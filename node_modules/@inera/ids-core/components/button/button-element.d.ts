import { LitElement } from "lit";
export declare class IDSButton extends LitElement {
    static styles: any[];
    active: boolean;
    block: boolean;
    disabled: boolean;
    fab: boolean;
    icon: boolean;
    mblock: boolean;
    sblock: boolean;
    loading: boolean;
    tertiary: boolean;
    search: boolean;
    secondary: boolean;
    size: "s" | "m" | "l";
    submit: boolean;
    toggle: boolean;
    type: string;
    color: string;
    coloractive: string;
    colordisabled: string;
    colorhover: string;
    backgroundcolor: string;
    backgroundcoloractive: string;
    backgroundcolordisabled: string;
    backgroundcolorhover: string;
    bordercoloractive: string;
    bordercolordisabled: string;
    bordercolorhover: string;
    bordercolor: string;
    isHovered: boolean;
    get iconComponent(): HTMLElement | null;
    protected firstUpdated(_changedProperties: Map<string | number | symbol, unknown>): void;
    setupIcon(): void;
    handleKeypress: (e: any) => void;
    clicked: () => void;
    submitForm: () => void;
    protected updated(_changedProperties: Map<string | number | symbol, unknown>): void;
    setIconAttributes: () => void;
    setIconHoveredAttributes: () => void;
    setIconColors(color: string, color2: string): void;
    getCustomBackgroundColor(): string | undefined;
    getCustomColor(): string | undefined;
    getCustomBorderColor(): string | undefined;
    getStyles(): string | undefined;
    onMouseEnter(): void;
    onMouseLeave(): void;
    setFocusTrue(): void;
    setFocusFalse(): void;
    getButtonClasses(): string;
    renderButton(): import("lit-html").TemplateResult<1>;
    render(): import("lit-html").TemplateResult<1>;
}
